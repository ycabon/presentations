//>>built
define(["dojo/_base/declare","dojo/_base/lang","dojo/when","dijit/_WidgetBase","dojo/regexp"],function(e,f,g,h,k){return e("dojox.mvc._Container",h,{stopParser:!0,exprchar:"$",templateString:"",inlineTemplateString:"",_containedWidgets:[],_parser:null,_createBody:function(){if(!this._parser)try{this._parser=require("dojo/parser")}catch(a){try{this._parser=require("dojox/mobile/parser")}catch(d){console.error("Add explicit require(['dojo/parser']) or explicit require(['dojox/mobile/parser']), one of the parsers is required!")}}var b=
this;if(this._parser)return g(this._parser.parse(this.srcNodeRef,{template:!0,inherited:{dir:this.dir,lang:this.lang},propsThis:this,scope:"dojo"}),function(a){b._containedWidgets=a})},_destroyBody:function(){if(this._containedWidgets&&0<this._containedWidgets.length)for(var b=this._containedWidgets.length-1;-1<b;b--){var a=this._containedWidgets[b];a&&!a._destroyed&&a.destroy&&a.destroy()}},_exprRepl:function(b){var a=this,d=function(c,b){if(!c)return"";c=c.substr(2);c=c.substr(0,c.length-1);with(a)return eval(c)},
d=f.hitch(this,d);return b.replace(new RegExp(k.escapeString(this.exprchar)+"({.*?})","g"),function(a,b,e){return d(a,b).toString()})}})});