// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/assignHelper ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/tsSupport/paramHelper ../core/tsSupport/generatorHelper ../core/tsSupport/awaiterHelper ../PopupTemplate ../renderers ../request ../symbols ../core/Collection ../core/Error ../core/Handles ../core/jsonMap ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/object ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators ../geometry/Extent ../geometry/HeightModelInfo ../geometry/SpatialReference ./Layer ./graphics/sources/MemorySource ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./support/arcgisLayerUrl ./support/commonProperties ./support/FeatureIndex ./support/FeatureReduction ./support/FeatureReductionCluster ./support/FeatureReductionSelection ./support/featureReductionUtils ./support/FeatureTemplate ./support/FeatureType ./support/fieldProperties ./support/FieldsIndex ./support/fieldUtils ./support/LabelClass ./support/labelingInfo ./support/layerSourceUtils ./support/Relationship ./support/TimeInfo ../renderers/support/jsonUtils ../renderers/support/styleUtils ../support/popupUtils ../symbols/support/jsonUtils ../tasks/support/AttachmentQuery ../tasks/support/FeatureSet ../tasks/support/Query ../tasks/support/RelationshipQuery @dojo/framework/shim/Promise".split(" "),
function(A,ua,B,N,e,va,r,t,O,m,P,w,n,g,Q,R,S,T,U,V,k,C,d,W,X,D,Y,E,Z,aa,ba,ca,da,ea,p,h,F,fa,ga,ha,x,G,H,ia,ja,u,ka,I,la,ma,na,y,oa,pa,z,qa,ra,q,sa){function f(d,c,a){return!(d&&d.hasOwnProperty(c)?!d[c]:!a)}function v(d,c,a){return d&&d.hasOwnProperty(c)?d[c]:a}var K=new R.default({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryMultiPatch:"multipatch"}),ta={name:"supportsName",size:"supportsSize",contentType:"supportsContentType",
keywords:"supportsKeywords",exifInfo:"supportsExifInfo"},L=S.getLogger("esri.layers.FeatureLayer"),M=ia.defineFieldProperties();return function(J){function c(a){a=J.call(this,a)||this;a._handles=new Q;a.capabilities=null;a.copyright=null;a.displayField=null;a.definitionExpression=null;a.dynamicDataSource=null;a.editFieldsInfo=null;a.editingEnabled=!0;a.editingInfo=null;a.elevationInfo=null;a.featureReduction=null;a.fields=null;a.fullExtent=null;a.gdbVersion=null;a.geometryProperties=null;a.geometryType=
null;a.hasM=void 0;a.hasZ=void 0;a.heightModelInfo=null;a.historicMoment=null;a.isTable=!1;a.labelsVisible=!0;a.labelingInfo=null;a.layerId=void 0;a.legendEnabled=!0;a.minScale=0;a.maxScale=0;a.globalIdField=null;a.objectIdField=null;a.outFields=null;a.path=null;a.popupEnabled=!0;a.popupTemplate=null;a.relationships=null;a.sourceJSON=null;a.returnM=void 0;a.returnZ=void 0;a.screenSizePerspectiveEnabled=!0;a.serviceDefinitionExpression=null;a.spatialReference=D.WGS84;a.templates=null;a.timeInfo=null;
a.title=null;a.sublayerTitleMode="item-title";a.trackIdField=null;a.type="feature";a.typeIdField=null;a.types=null;a.indexes=new (n.ofType(F.FeatureIndex));a.userIsAdmin=!1;a.version=void 0;a.visible=!0;return a}N(c,J);c.prototype.destroy=function(){this._handles&&(this._handles.destroy(),this._handles=null)};c.prototype.normalizeCtorArgs=function(a,b){return"string"===typeof a?B({url:a},b):a};c.prototype.load=function(a){var b=this,c=T.isSome(a)?a.signal:null;if(this.portalItem&&this.portalItem.loaded&&
this.source)this.addResolvingPromise(this.createGraphicsSource(c).then(function(a){return b._initLayerProperties(a)}));else return a=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection"]},a).catch(function(a){return a}).then(function(){return t(b,void 0,void 0,function(){var a,b;return r(this,function(d){switch(d.label){case 0:return this.url&&null==this.layerId&&/FeatureServer|MapServer\/*$/i.test(this.url)?[4,this._fetchFirstLayerId(c)]:[3,2];case 1:a=d.sent(),null!=a&&(this.layerId=
a),d.label=2;case 2:if(!this.url&&!this._hasMemorySource())throw new g("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");b=this._initLayerProperties;return[4,this.createGraphicsSource(c)];case 3:return[2,b.apply(this,[d.sent()])]}})})}),this.addResolvingPromise(a),k.resolve(this)};c.prototype.readCapabilities=function(a,b){b=b.layerDefinition||b;return{attachment:this._readAttachmentCapabilities(b.attachmentProperties),data:this._readDataCapabilities(b),
metadata:this._readMetadataCapabilities(b),operations:this._readOperationsCapabilities(b.capabilities||a,b),query:this._readQueryCapabilities(b),queryRelated:this._readQueryRelatedCapabilities(b),editing:this._readEditingCapabilities(b)}};c.prototype.readEditingEnabled=function(a,b){return b.layerDefinition&&"Query"===b.layerDefinition.capabilities?!1:!0};c.prototype.writeEditingEnabled=function(a,b){a||V.setDeepValue("layerDefinition.capabilities","Query",b)};c.prototype.readEditingInfo=function(a,
b){return(a=b.editingInfo)?{lastEditDate:null!=a.lastEditDate?new Date(a.lastEditDate):null}:null};c.prototype.readFeatureReduction=function(a,b){return x.read(a,b)};c.prototype.writeWebSceneFeatureReduction=function(a,b,c,d){x.writeTarget(a,b,"layerDefinition.featureReduction",d)};Object.defineProperty(c.prototype,"fieldsIndex",{get:function(){return new ja(this.fields||[])},enumerable:!0,configurable:!0});c.prototype.readIsTable=function(a,b){b=b&&b.layerDefinition||b;return"Table"===b.type};Object.defineProperty(c.prototype,
"hasService",{get:function(){return!this._hasMemorySource()},enumerable:!0,configurable:!0});c.prototype.readMinScale=function(a,b){return b.effectiveMinScale||a||0};c.prototype.readMaxScale=function(a,b){return b.effectiveMaxScale||a||0};c.prototype.readGlobalIdFieldFromService=function(a,b){b=b.layerDefinition||b;if(b.globalIdField)return b.globalIdField;if(b.fields)for(a=0,b=b.fields;a<b.length;a++){var c=b[a];if("esriFieldTypeGlobalID"===c.type)return c.name}};c.prototype.readObjectIdFieldFromService=
function(a,b){b=b.layerDefinition||b;if(b.objectIdField)return b.objectIdField;if(b.fields)for(a=0,b=b.fields;a<b.length;a++){var c=b[a];if("esriFieldTypeOID"===c.type)return c.name}};Object.defineProperty(c.prototype,"parsedUrl",{get:function(){var a=this.url?C.urlToObject(this.url):null;if(null!=a)if(null!=this.layerId)a.path=C.join(a.path,this.layerId.toString());else if(null!=this.dynamicDataSource){var b={source:la.sourceToJSON(this.dynamicDataSource)};a.query={layer:JSON.stringify(b)}}return a},
enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"defaultPopupTemplate",{get:function(){return this.createPopupTemplate()},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"renderer",{set:function(a){u.fixRendererFields(a,this.fields);this._set("renderer",a)},enumerable:!0,configurable:!0});c.prototype.readRenderer=function(a,b,c){b=b.layerDefinition||b;var d=b.drawingInfo&&b.drawingInfo.renderer||void 0,l,e;if(d)(l=y.read(d,b,c)||void 0)||L.error("Failed to create renderer",
{rendererDefinition:b.drawingInfo.renderer,layer:this,context:c});else if(b.defaultSymbol)z.read(b.defaultSymbol,b,c),b.types&&b.types.length?(l=new m.UniqueValueRenderer({defaultSymbol:e,field:b.typeIdField}),b.types.forEach(function(a){d.addUniqueValueInfo(a.id,z.read(a.symbol,a,c))})):l=new m.SimpleRenderer({symbol:e});else if("Table"!==b.type){switch(b.geometryType){case "esriGeometryPoint":case "esriGeometryMultipoint":e=new w.SimpleMarkerSymbol;break;case "esriGeometryPolyline":e=new w.SimpleLineSymbol;
break;case "esriGeometryPolygon":e=new w.SimpleFillSymbol}l=e&&new m.SimpleRenderer({symbol:e})}return l};c.prototype.writeRenderer=function(a,b,c,d){y.writeTarget(a,b,c,d)};c.prototype.writeWebSceneRenderer=function(a,b,c,d){y.writeTarget(a,b,"layerDefinition.drawingInfo.renderer",d)};Object.defineProperty(c.prototype,"source",{set:function(a){var b=this._get("source");b!==a&&(b&&b instanceof n&&this._resetMemorySource(b),a&&a instanceof n&&this._initMemorySource(a),this._set("source",a))},enumerable:!0,
configurable:!0});c.prototype.castSource=function(a){return a?Array.isArray(a)||a instanceof n?new E.default({layer:this,items:a}):a:null};c.prototype.readSource=function(a,b){a=ra.fromJSON(b.featureSet);return new E.default({layer:this,items:a&&a.features||[]})};c.prototype.readTemplates=function(a,b){var c=b.editFieldsInfo;b=c&&c.creatorField;c=c&&c.editorField;a=a&&a.map(function(a){return G.fromJSON(a)});this._fixTemplates(a,b);this._fixTemplates(a,c);return a};c.prototype.readTitle=function(a,
b){a=b.layerDefinition&&b.layerDefinition.name||b.name;b=b.title||b.layerDefinition&&b.layerDefinition.title;if(a){b=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return this.url?p.titleFromUrlAndName(this.url,a):a;a=a||this.url&&p.parse(this.url).title;if(!a)return;"item-title-and-service-name"===this.sublayerTitleMode&&b&&(a=b+" - "+a);return p.cleanTitle(a)}if("item-title"===this.sublayerTitleMode&&b)return b};c.prototype.readTitleFromWebMap=function(a,b){return b.title||
b.layerDefinition&&b.layerDefinition.name};c.prototype.readTypeIdField=function(a,b){b=b.layerDefinition||b;if(a=b.typeIdField)if(b=u.getField(b.fields,a))a=b.name;return a};c.prototype.readTypes=function(a,b){var c=this;b=b.layerDefinition||b;a=b.types;var d=(b=b.editFieldsInfo)&&b.creatorField,e=b&&b.editorField;return a&&a.map(function(a){a=H.fromJSON(a);c._fixTemplates(a.templates,d);c._fixTemplates(a.templates,e);return a})};Object.defineProperty(c.prototype,"url",{set:function(a){a=p.sanitizeUrlWithLayerId(this,
a,L);this._set("url",a.url);null!=a.layerId&&this._set("layerId",a.layerId)},enumerable:!0,configurable:!0});c.prototype.writeUrl=function(a,b,c,d){p.writeUrlWithLayerId(this,a,null,b,d)};c.prototype.readVersion=function(a,b){return b.currentVersion?b.currentVersion:b.hasOwnProperty("capabilities")||b.hasOwnProperty("drawingInfo")||b.hasOwnProperty("hasAttachments")||b.hasOwnProperty("htmlPopupType")||b.hasOwnProperty("relationships")||b.hasOwnProperty("timeInfo")||b.hasOwnProperty("typeIdField")||
b.hasOwnProperty("types")?10:9.3};c.prototype.readVisible=function(a,b){if(b.layerDefinition&&null!=b.layerDefinition.defaultVisibility)return!!b.layerDefinition.defaultVisibility;if(null!=b.visibility)return!!b.visibility};c.prototype.addAttachment=function(a,b){var c=this;return this.load().then(function(){return c._checkAttachmentSupport(a)}).then(function(){if(!("addAttachment"in c.source))throw new g("FeatureLayer","Layer source does not support addAttachment capability");return c.source.addAttachment(a,
b)})};c.prototype.updateAttachment=function(a,b,c){var d=this;return this.load().then(function(){return d._checkAttachmentSupport(a)}).then(function(){if(!("updateAttachment"in d.source))throw new g("FeatureLayer","Layer source does not support updateAttachment capability");return d.source.updateAttachment(a,b,c)})};c.prototype.applyEdits=function(a,b){return t(this,void 0,void 0,function(){var c;return r(this,function(d){switch(d.label){case 0:return[4,new Promise(function(a,b){A(["./graphics/editingSupport"],
a,b)})];case 1:return c=d.sent(),[2,c.applyEdits(this,a,b)]}})})};c.prototype.on=function(a,b){return this.inherited(arguments,[a,b])};c.prototype.createPopupTemplate=function(a){return pa.createPopupTemplate(this,a)};c.prototype.createGraphicsSource=function(a){return t(this,void 0,void 0,function(){var b,c;return r(this,function(d){switch(d.label){case 0:return this._hasMemorySource()?(this.emit("graphics-source-create",{graphicsSource:this.source}),[2,this.source.load({signal:a})]):[4,k.create(function(a){return A(["./graphics/sources/FeatureLayerSource"],
a)})];case 1:return b=d.sent(),k.throwIfAborted(a),[4,(new b.default({layer:this})).load({signal:a})];case 2:return c=d.sent(),this.emit("graphics-source-create",{graphicsSource:c}),[2,c]}})})};c.prototype.createQuery=function(){var a=new q,b=this.get("capabilities.data");a.gdbVersion=this.gdbVersion;a.historicMoment=this.historicMoment;a.returnGeometry=!0;b&&(b.supportsZ&&null!=this.returnZ&&(a.returnZ=this.returnZ),b.supportsM&&null!=this.returnM&&(a.returnM=this.returnM));a.outFields=["*"];a.where=
this.definitionExpression||"1\x3d1";a.multipatchOption="multipatch"===this.geometryType?"xyFootprint":null;return a};c.prototype.deleteAttachments=function(a,b){var c=this;return this.load().then(function(){return c._checkAttachmentSupport(a)}).then(function(){if(!("deleteAttachments"in c.source))throw new g("FeatureLayer","Layer source does not support deleteAttachments capability");return c.source.deleteAttachments(a,b)})};c.prototype.getFeatureType=function(a){var b=this.typeIdField;if(!b||!a)return null;
var c=a.attributes?a.attributes[b]:void 0;if(null==c)return null;var d=null;this.types.some(function(a){var b=a.id;if(null==b)return!1;b.toString()===c.toString()&&(d=a);return!!d});return d};c.prototype.getFieldDomain=function(a,b){return(b=this.getFeatureType(b&&b.feature))&&(b=b.domains&&b.domains[a])&&"inherited"!==b.type?b:this._getLayerDomain(a)};c.prototype.getField=function(a){return this.fieldsIndex.get(a)};c.prototype.queryAttachments=function(a,b){var c=this;a=qa.from(a);return this.load().then(function(){if(!c.get("capabilities.data.supportsAttachment"))throw new g("FeatureLayer",
"this layer doesn't support attachments");var b=a.attachmentTypes,d=a.objectIds,e=a.globalIds,l=a.num,f=a.size,k=a.start,h=a.where;if(!c.get("capabilities.operations.supportsQueryAttachments")&&(b=b&&b.length,e=e&&e.length,f=f&&f.length,d&&1<d.length||b||e||f||l||k||h))throw new g("FeatureLayer","when 'supportsQueryAttachments' is false, only objectIds of length 1 are supported",a);if(!(d&&d.length||h))throw new g("FeatureLayer","'objectIds' or 'where' are required to perform attachment query",a);
if(!("queryAttachments"in c.source))throw new g("FeatureLayer","Layer source does not support queryAttachments capability",a);return c.source.queryAttachments(a)})};c.prototype.queryFeatures=function(a,b){var c=this;return this.load().then(function(){return c.source.queryFeatures(q.from(a)||c.createQuery(),b)}).then(function(a){if(a&&a.features)for(var b=0,d=a.features;b<d.length;b++){var e=d[b];e.layer=e.sourceLayer=c}return a})};c.prototype.queryObjectIds=function(a,b){var c=this;return this.load().then(function(){if(c.source.queryObjectIds)return c.source.queryObjectIds(q.from(a)||
c.createQuery(),b);throw new g("FeatureLayer","Layer source does not support queryObjectIds capability");})};c.prototype.queryFeatureCount=function(a,b){var c=this;return this.load().then(function(){if(c.source.queryFeatureCount)return c.source.queryFeatureCount(q.from(a)||c.createQuery(),b);throw new g("FeatureLayer","Layer source does not support queryFeatureCount capability");})};c.prototype.queryExtent=function(a,b){var c=this;return this.load().then(function(){if(c.source.queryExtent)return c.source.queryExtent(q.from(a)||
c.createQuery(),b);throw new g("FeatureLayer","Layer source does not support queryExtent capability");})};c.prototype.queryRelatedFeatures=function(a,b){var c=this;return this.load().then(function(){if("queryRelatedFeatures"in c.source)return c.source.queryRelatedFeatures(sa.from(a),b);throw new g("FeatureLayer","Layer source does not support queryRelatedFeatures capability");})};c.prototype.read=function(a,b){var c=a.featureCollection;if(c){var d=c.layers;d&&1===d.length&&(this.inherited(arguments,
[d[0],b]),null!=c.showLegend&&this.inherited(arguments,[{showLegend:c.showLegend},b]))}this.inherited(arguments,[a,b]);b&&"service"===b.origin&&this.revert(["objectIdField","fields","timeInfo"],"service")};c.prototype.write=function(a,b){return b&&("web-scene"===b.origin||"web-map"===b.origin)&&b.messages&&this.isTable?(b.messages.push(new g("layer:unsupported","Layers ("+this.title+", "+this.id+") of type '"+this.declaredClass+"' using a Table source cannot written to web scenes and web maps",{layer:this})),
null):this.inherited(arguments)};c.prototype._checkAttachmentSupport=function(a){var b=a.attributes,c=this.objectIdField;if(!this.get("capabilities.data.supportsAttachment"))return k.reject(new g("FeatureLayer","this layer doesn't support attachments"));if(!a)return k.reject(new g("FeatureLayer","A feature is required to add/delete/update attachments"));if(!b)return k.reject(new g("FeatureLayer","'attributes' are required on a feature to query attachments"));if(!b[c])return k.reject(new g("FeatureLayer",
"feature is missing the identifying attribute "+c))};c.prototype._getLayerDomain=function(a){return(a=this.fieldsIndex.get(a))?a.domain:null};c.prototype._fetchFirstLayerId=function(a){return P(this.url,{query:{f:"json"},responseType:"json",signal:a}).then(function(a){if(a=a.data){if(Array.isArray(a.layers)&&0<a.layers.length)return a.layers[0].id;if(Array.isArray(a.tables)&&0<a.tables.length)return a.tables[0].id}})};c.prototype._initLayerProperties=function(a){return t(this,void 0,void 0,function(){return r(this,
function(b){this._set("source",a);a.sourceJSON&&(this.sourceJSON=a.sourceJSON,this.read(a.sourceJSON,{origin:"service",url:this.parsedUrl}));this._verifySource();this._verifyFields();u.fixRendererFields(this.renderer,this.fields);u.fixTimeInfoFields(this.timeInfo,this.fields);return[2,oa.loadStyleRenderer(this,{origin:"service"})]})})};c.prototype._verifyFields=function(){var a=this.parsedUrl&&this.parsedUrl.path||"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+
a+")");this.isTable||this._hasMemorySource()||-1!==a.search(/\/FeatureServer\//i)||this.fields&&this.fields.some(function(a){return"geometry"===a.type})||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+a+")")};c.prototype._fixTemplates=function(a,b){a&&a.forEach(function(a){(a=a.prototype&&a.prototype.attributes)&&b&&delete a[b]})};c.prototype._verifySource=function(){if(this._hasMemorySource()){if(this.url)throw new g("feature-layer:mixed-source-and-url",
"FeatureLayer cannot be created with both an in-memory source and a url");}else if(!this.url)throw new g("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source");};c.prototype._initMemorySource=function(a){var b=this;a.forEach(function(a){a.layer=b;a.sourceLayer=b});this._handles.add([a.on("after-add",function(a){a.item.layer=b;a.item.sourceLayer=b}),a.on("after-remove",function(a){a.item.layer=null;a.item.sourceLayer=null})],"fl-source")};c.prototype._resetMemorySource=
function(a){a.forEach(function(a){a.layer=null;a.sourceLayer=null});this._handles.remove("fl-source")};c.prototype._hasMemorySource=function(){return!(this.url||!this.source)};c.prototype._readAttachmentCapabilities=function(a){var b={supportsName:!1,supportsSize:!1,supportsContentType:!1,supportsKeywords:!1,supportsExifInfo:!1};a&&Array.isArray(a)&&a.forEach(function(a){var c=ta[a.name];c&&(b[c]=!!a.isEnabled)});return b};c.prototype._readDataCapabilities=function(a){return{isVersioned:f(a,"isDataVersioned",
!1),supportsAttachment:f(a,"hasAttachments",!1),supportsM:f(a,"hasM",!1),supportsZ:f(a,"hasZ",!1)}};c.prototype._readMetadataCapabilities=function(a){return{supportsAdvancedFieldProperties:f(a,"supportsFieldDescriptionProperty",!1)}};c.prototype._readOperationsCapabilities=function(a,b){a=a?a.toLowerCase().split(",").map(function(a){return a.trim()}):[];var c=-1!==a.indexOf("editing"),d=c&&-1!==a.indexOf("create"),e=c&&-1!==a.indexOf("delete"),g=c&&-1!==a.indexOf("update");!c||d||e||g||(d=e=g=!0);
return{supportsCalculate:f(b,"supportsCalculate",!1),supportsTruncate:f(b,"supportsTruncate",!1),supportsValidateSql:f(b,"supportsValidateSql",!1),supportsAdd:d,supportsDelete:e,supportsEditing:c,supportsQuery:-1!==a.indexOf("query"),supportsQueryAttachments:f(b.advancedQueryCapabilities,"supportsQueryAttachments",!1),supportsResizeAttachments:f(b,"supportsAttachmentsResizing",!1),supportsSync:-1!==a.indexOf("sync"),supportsUpdate:g,supportsExceedsLimitStatistics:f(b,"supportsExceedsLimitStatistics",
!1)}};c.prototype._readQueryCapabilities=function(a){var b=a.advancedQueryCapabilities,c=a.ownershipBasedAccessControlForFeatures,d=a.archivingInfo,e=(a.supportedQueryFormats||"").split(",").reduce(function(a,b){(b=b.toLowerCase().trim())&&a.add(b);return a},new Set);return{supportsStatistics:f(b,"supportsStatistics",a.supportsStatistics),supportsPercentileStatistics:f(b,"supportsPercentileStatistics",!1),supportsCentroid:f(b,"supportsReturningGeometryCentroid",!1),supportsDistance:f(b,"supportsQueryWithDistance",
!1),supportsDistinct:f(b,"supportsDistinct",a.supportsAdvancedQueries),supportsExtent:f(b,"supportsReturningQueryExtent",!1),supportsGeometryProperties:f(b,"supportsReturningGeometryProperties",!1),supportsHavingClause:f(b,"supportsHavingClause",!1),supportsOrderBy:f(b,"supportsOrderBy",a.supportsAdvancedQueries),supportsPagination:f(b,"supportsPagination",!1),supportsQuantization:f(a,"supportsCoordinatesQuantization",!1),supportsQuantizationEditMode:f(a,"supportsQuantizationEditMode",!1),supportsQueryGeometry:f(a,
"supportsReturningQueryGeometry",!1),supportsResultType:f(b,"supportsQueryWithResultType",!1),supportsMaxRecordCountFactor:f(b,"supportsMaxRecordCountFactor",!1),supportsSqlExpression:f(b,"supportsSqlExpression",!1),supportsStandardizedQueriesOnly:f(a,"useStandardizedQueries",!1),supportsQueryByOthers:f(c,"allowOthersToQuery",!0),supportsHistoricMoment:f(d,"supportsQueryWithHistoricMoment",!1),supportsFormatPBF:e.has("pbf"),supportsDisjointSpatialRelationship:f(b,"supportsDisjointSpatialRel",!1),
supportsCacheHint:f(b,"supportsQueryWithCacheHint",!1),maxRecordCountFactor:v(a,"maxRecordCountFactor",void 0),maxRecordCount:v(a,"maxRecordCount",void 0),standardMaxRecordCount:v(a,"standardMaxRecordCount",void 0),tileMaxRecordCount:v(a,"tileMaxRecordCount",void 0)}};c.prototype._readQueryRelatedCapabilities=function(a){a=a.advancedQueryCapabilities;var b=f(a,"supportsAdvancedQueryRelated",!1);return{supportsPagination:f(a,"supportsQueryRelatedPagination",!1),supportsCount:b,supportsOrderBy:b}};
c.prototype._readEditingCapabilities=function(a){var b=a.ownershipBasedAccessControlForFeatures;return{supportsGeometryUpdate:f(a,"allowGeometryUpdates",!0),supportsGlobalId:f(a,"supportsApplyEditsWithGlobalIds",!1),supportsRollbackOnFailure:f(a,"supportsRollbackOnFailureParameter",!1),supportsUpdateWithoutM:f(a,"allowUpdateWithoutMValues",!1),supportsUploadWithItemId:f(a,"supportsAttachmentsByUploadId",!1),supportsDeleteByAnonymous:f(b,"allowAnonymousToDelete",!0),supportsDeleteByOthers:f(b,"allowOthersToDelete",
!0),supportsUpdateByAnonymous:f(b,"allowAnonymousToUpdate",!0),supportsUpdateByOthers:f(b,"allowOthersToUpdate",!0)}};e([d.property({readOnly:!0,json:{read:!1}})],c.prototype,"capabilities",void 0);e([d.reader("service","capabilities","advancedQueryCapabilities allowGeometryUpdates allowUpdateWithoutMValues archivingInfo capabilities hasAttachments hasM hasZ maxRecordCount maxRecordCountFactor ownershipBasedAccessControlForFeatures standardMaxRecordCount supportedQueryFormats supportsAdvancedQueries supportsApplyEditsWithGlobalIds supportsAttachmentsByUploadId supportsAttachmentsResizing supportsCalculate supportsCoordinatesQuantization supportsExceedsLimitStatistics supportsFieldDescriptionProperty supportsQuantizationEditMode supportsRollbackOnFailureParameter supportsStatistics supportsTruncate supportsValidateSql tileMaxRecordCount useStandardizedQueries".split(" "))],
c.prototype,"readCapabilities",null);e([d.property({type:String,json:{read:{source:"layerDefinition.copyrightText"},origins:{service:{read:{source:"copyrightText"}}}}})],c.prototype,"copyright",void 0);e([d.property({type:String,json:{read:{source:"layerDefinition.displayField"},origins:{service:{read:{source:"displayField"}}}}})],c.prototype,"displayField",void 0);e([d.property({type:String,json:{origins:{service:{read:!1,write:!1}},read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],
c.prototype,"definitionExpression",void 0);e([d.property({readOnly:!0,json:{read:z.read}})],c.prototype,"defaultSymbol",void 0);e([d.property()],c.prototype,"dynamicDataSource",void 0);e([d.property({readOnly:!0})],c.prototype,"editFieldsInfo",void 0);e([d.property({type:Boolean})],c.prototype,"editingEnabled",void 0);e([d.reader(["portal-item","web-map","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],c.prototype,"readEditingEnabled",null);e([d.writer(["portal-item","web-map","web-scene"],
"editingEnabled",{"layerDefinition.capabilities":{type:String}})],c.prototype,"writeEditingEnabled",null);e([d.property({readOnly:!0})],c.prototype,"editingInfo",void 0);e([d.reader("editingInfo")],c.prototype,"readEditingInfo",null);e([d.property(h.elevationInfo)],c.prototype,"elevationInfo",void 0);e([d.property({types:{key:"type",base:fa.default,typeMap:{selection:ha.default,cluster:ga.default}},json:{write:{target:"layerDefinition.featureReduction"}}})],c.prototype,"featureReduction",void 0);
e([d.reader("featureReduction",["layerDefinition.featureReduction"])],c.prototype,"readFeatureReduction",null);e([d.writer("web-scene","featureReduction",{"layerDefinition.featureReduction":{types:x.webSceneFeatureReductionTypes}})],c.prototype,"writeWebSceneFeatureReduction",null);e([d.property(B({},M.fields,{json:{origins:{service:{read:!0}},read:{source:"layerDefinition.fields"}}}))],c.prototype,"fields",void 0);e([d.property({readOnly:!0,dependsOn:["fields"]})],c.prototype,"fieldsIndex",null);
e([d.property({type:W,json:{origins:{service:{read:{source:"extent"}}},read:{source:"layerDefinition.extent"}}})],c.prototype,"fullExtent",void 0);e([d.property()],c.prototype,"gdbVersion",void 0);e([d.property({readOnly:!0})],c.prototype,"geometryProperties",void 0);e([d.property({type:"point polygon polyline multipoint multipatch mesh".split(" "),json:{origins:{service:{read:K.read}},read:{source:"layerDefinition.geometryType",reader:K.read}}})],c.prototype,"geometryType",void 0);e([d.property({type:Boolean,
json:{origins:{service:{read:!0}},read:{source:"layerDefinition.hasM"}}})],c.prototype,"hasM",void 0);e([d.property({type:Boolean,json:{origins:{service:{read:!0}},read:{source:"layerDefinition.hasZ"}}})],c.prototype,"hasZ",void 0);e([d.property({readOnly:!0,type:X})],c.prototype,"heightModelInfo",void 0);e([d.property({type:Date})],c.prototype,"historicMoment",void 0);e([d.property({json:{origins:{service:{read:!1},"portal-item":{read:!1}}}})],c.prototype,"id",void 0);e([d.property({readOnly:!0})],
c.prototype,"isTable",void 0);e([d.reader("service","isTable",["type"]),d.reader("isTable",["layerDefinition.type"])],c.prototype,"readIsTable",null);e([d.property({dependsOn:["loaded","url","source"],readOnly:!0})],c.prototype,"hasService",null);e([d.property(h.labelsVisible)],c.prototype,"labelsVisible",void 0);e([d.property({type:[ka],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:I.reader},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",
reader:I.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],c.prototype,"labelingInfo",void 0);e([d.property(h.opacityDrawingInfo)],c.prototype,"opacity",void 0);e([d.property({type:Number,json:{origins:{service:{read:{source:"id"}}},read:!1}})],c.prototype,"layerId",void 0);e([d.property(h.legendEnabled)],c.prototype,"legendEnabled",void 0);e([d.property({type:["show","hide"]})],c.prototype,"listMode",void 0);e([d.property({type:Number,json:{origins:{service:{write:{enabled:!1}}},
read:{source:"layerDefinition.minScale"},write:{target:"layerDefinition.minScale"}}})],c.prototype,"minScale",void 0);e([d.reader("service","minScale",["minScale","effectiveMinScale"])],c.prototype,"readMinScale",null);e([d.property({type:Number,json:{origins:{service:{write:{enabled:!1}}},read:{source:"layerDefinition.maxScale"},write:{target:"layerDefinition.maxScale"}}})],c.prototype,"maxScale",void 0);e([d.reader("service","maxScale",["maxScale","effectiveMaxScale"])],c.prototype,"readMaxScale",
null);e([d.property({type:String})],c.prototype,"globalIdField",void 0);e([d.reader("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"]),d.reader("service","globalIdField",["globalIdField","fields"])],c.prototype,"readGlobalIdFieldFromService",null);e([d.property({type:String})],c.prototype,"objectIdField",void 0);e([d.reader("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"]),d.reader("service","objectIdField",["objectIdField","fields"])],c.prototype,
"readObjectIdFieldFromService",null);e([d.property({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],c.prototype,"operationalLayerType",void 0);e([d.property(M.outFields)],c.prototype,"outFields",void 0);e([d.property({readOnly:!0,dependsOn:["layerId"]})],c.prototype,"parsedUrl",null);e([d.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],c.prototype,"path",void 0);e([d.property(h.popupEnabled)],c.prototype,"popupEnabled",void 0);e([d.property({type:O,json:{read:{source:"popupInfo"},
write:{target:"popupInfo"}}})],c.prototype,"popupTemplate",void 0);e([d.property({readOnly:!0,dependsOn:["fields","title"]})],c.prototype,"defaultPopupTemplate",null);e([d.property({type:[ma],readOnly:!0})],c.prototype,"relationships",void 0);e([d.property({types:m.rendererTypes,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],c.prototype,"renderer",null);e([d.reader("service","renderer",["drawingInfo.renderer","defaultSymbol",
"type"]),d.reader("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol","layerDefinition.type"])],c.prototype,"readRenderer",null);e([d.writer("renderer")],c.prototype,"writeRenderer",null);e([d.writer("web-scene","renderer",{"layerDefinition.drawingInfo.renderer":{types:m.webSceneRendererTypes}})],c.prototype,"writeWebSceneRenderer",null);e([d.property()],c.prototype,"sourceJSON",void 0);e([d.property({type:Boolean})],c.prototype,"returnM",void 0);e([d.property({type:Boolean})],
c.prototype,"returnZ",void 0);e([d.property(h.screenSizePerspectiveEnabled)],c.prototype,"screenSizePerspectiveEnabled",void 0);e([d.property()],c.prototype,"source",null);e([d.cast("source")],c.prototype,"castSource",null);e([d.reader("portal-item","source",["featureSet"]),d.reader("web-map","source",["featureSet"])],c.prototype,"readSource",null);e([d.property({readOnly:!0,json:{origins:{service:{read:{source:"definitionExpression"}}}}})],c.prototype,"serviceDefinitionExpression",void 0);e([d.property({type:D,
json:{origins:{service:{read:{source:"extent.spatialReference"}}},read:{source:"layerDefinition.extent.spatialReference"}}})],c.prototype,"spatialReference",void 0);e([d.property({type:[G]})],c.prototype,"templates",void 0);e([d.reader("templates",["editFieldsInfo","creatorField","editorField","templates"])],c.prototype,"readTemplates",null);e([d.property({type:na})],c.prototype,"timeInfo",void 0);e([d.property()],c.prototype,"title",void 0);e([d.reader("service","title",["name"]),d.reader("portal-item",
"title",["layerDefinition.title","layerDefinition.name","title"])],c.prototype,"readTitle",null);e([d.reader("web-map","title",["layerDefinition.name","title"])],c.prototype,"readTitleFromWebMap",null);e([d.property({type:String})],c.prototype,"sublayerTitleMode",void 0);e([d.property({type:String,json:{read:{source:"timeInfo.trackIdField"}}})],c.prototype,"trackIdField",void 0);e([d.property({json:{read:!1}})],c.prototype,"type",void 0);e([d.property({type:String})],c.prototype,"typeIdField",void 0);
e([d.reader("service","typeIdField"),d.reader("typeIdField",["layerDefinition.typeIdField"])],c.prototype,"readTypeIdField",null);e([d.property({type:[H]})],c.prototype,"types",void 0);e([d.reader("service","types",["types"]),d.reader("types",["layerDefinition.types"])],c.prototype,"readTypes",null);e([d.property({type:n.ofType(F.FeatureIndex),readOnly:!0})],c.prototype,"indexes",void 0);e([d.property(h.url)],c.prototype,"url",null);e([d.writer("url")],c.prototype,"writeUrl",null);e([d.property({readOnly:!0})],
c.prototype,"userIsAdmin",void 0);e([d.property({json:{origins:{service:{read:!0}},read:!1}})],c.prototype,"version",void 0);e([d.reader("service","version","currentVersion capabilities drawingInfo hasAttachments htmlPopupType relationships timeInfo typeIdField types".split(" "))],c.prototype,"readVersion",null);e([d.property({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],c.prototype,"visible",void 0);e([d.reader("portal-item","visible",["visibility",
"layerDefinition.defaultVisibility"])],c.prototype,"readVisible",null);return c=e([d.subclass("esri.layers.FeatureLayer")],c)}(d.declared(ea.TemporalLayer(da.ScaleRangeLayer(ca.RefreshableLayer(Z.ArcGISService(aa.OperationalLayer(ba.PortalLayer(U.MultiOriginJSONMixin(Y)))))))))});