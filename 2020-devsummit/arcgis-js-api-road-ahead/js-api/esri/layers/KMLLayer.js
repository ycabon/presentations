// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/assignHelper ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/tsSupport/generatorHelper ../core/tsSupport/awaiterHelper ../geometry ../core/Collection ../core/CollectionFlattener ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/accessorSupport/decorators ../geometry/SpatialReference ./Layer ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./support/KMLSublayer ./support/kmlUtils".split(" "),
function(D,E,n,p,d,q,r,t,u,v,w,x,h,c,k,y,z,A,B,C,l,g){return function(m){function b(a,b){a=m.call(this,a,b)||this;a._visibleFolders=[];a.allSublayers=new v({root:a,rootCollectionNames:["sublayers"],getChildrenFunction:function(a){return a.sublayers}});a.outSpatialReference=k.WGS84;a.path=null;a.operationalLayerType="KML";a.sublayers=null;a.type="kml";a.url=null;return a}p(b,m);b.prototype.initialize=function(){var a=this;this.watch("sublayers",function(b,e){e&&e.forEach(function(a){a.parent=null;
a.layer=null});b&&b.forEach(function(b){b.parent=a;b.layer=a})},!0);this.on("sublayer-update",function(){return a.notifyChange("fullExtent")})};b.prototype.normalizeCtorArgs=function(a,b){return"string"===typeof a?n({url:a},b):a};b.prototype.readSublayersFromItemOrWebMap=function(a,b){this._visibleFolders=b.visibleFolders};b.prototype.readSublayers=function(a,b,e){return g.sublayersFromJSON(l,b,e,this._visibleFolders)};b.prototype.writeSublayers=function(a,b){var e=[];for(a=a.toArray();a.length;){var f=
a[0];f.networkLink||(f.visible&&e.push(f.id),f.sublayers&&a.push.apply(a,f.sublayers.toArray()));a.shift()}b.visibleFolders=e};Object.defineProperty(b.prototype,"title",{get:function(){if(this._get("title")&&"defaults"!==this.originOf("title"))return this._get("title");if(this.url){var a=this.url.substring(this.url.lastIndexOf("/")+1,this.parsedUrl.path.lastIndexOf("."));0===a.length&&(a="KML");return a}return this._get("title")||""},set:function(a){this._set("title",a)},enumerable:!0,configurable:!0});
Object.defineProperty(b.prototype,"visibleSublayers",{get:function(){var a=this.sublayers,b=[],e=function(a){a.visible&&(b.push(a),a.sublayers&&a.sublayers.forEach(e))};a&&a.forEach(e);return b},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"fullExtent",{get:function(){return this._recomputeFullExtent()},enumerable:!0,configurable:!0});b.prototype.load=function(a){var b=this,e=w.isSome(a)?a.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"]},a).then(function(){return b._fetchService(e)}));
return h.resolve(this)};b.prototype._fetchService=function(a){return r(this,void 0,void 0,function(){var b,e,c=this;return q(this,function(d){switch(d.label){case 0:return[4,h.resolve().then(function(){return c.resourceInfo?{ssl:!1,data:c.resourceInfo}:g.fetchService(c.url,c.outSpatialReference,c.refreshInterval,a)})];case 1:return b=d.sent(),(e=g.parseKML(b.data))&&this.read(e,{origin:"service"}),[2]}})})};b.prototype._recomputeFullExtent=function(){var a=null;this.extent&&(a=this.extent.clone());
var b=function(c){if(c.sublayers){var d=0;for(c=c.sublayers.items;d<c.length;d++){var e=c[d];b(e);e.visible&&e.fullExtent&&(a?a.union(e.fullExtent):a=e.fullExtent.clone())}}};b(this);return a};d([c.property({readOnly:!0})],b.prototype,"allSublayers",void 0);d([c.property({type:k})],b.prototype,"outSpatialReference",void 0);d([c.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],b.prototype,"path",void 0);d([c.property({type:["show","hide","hide-children"]})],b.prototype,
"listMode",void 0);d([c.property({type:["KML"]})],b.prototype,"operationalLayerType",void 0);d([c.property({type:u.ofType(l),json:{write:{ignoreOrigin:!0}}})],b.prototype,"sublayers",void 0);d([c.reader(["web-map","portal-item"],"sublayers",["visibleFolders"])],b.prototype,"readSublayersFromItemOrWebMap",null);d([c.reader("service","sublayers",["sublayers"])],b.prototype,"readSublayers",null);d([c.writer("sublayers")],b.prototype,"writeSublayers",null);d([c.property({readOnly:!0,json:{read:!1}})],
b.prototype,"type",void 0);d([c.property({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}},dependsOn:["url","parsedUrl"]})],b.prototype,"title",null);d([c.property()],b.prototype,"url",void 0);d([c.property({readOnly:!0,dependsOn:["sublayers"]})],b.prototype,"visibleSublayers",null);d([c.property({type:t.Extent})],b.prototype,"extent",void 0);d([c.property({dependsOn:["extent"]})],b.prototype,"fullExtent",null);return b=d([c.subclass("esri.layers.KMLLayer")],b)}(c.declared(B.RefreshableLayer(C.ScaleRangeLayer(z.OperationalLayer(A.PortalLayer(x.MultiOriginJSONMixin(y)))))))});