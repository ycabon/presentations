// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../core/tsSupport/assignHelper ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/tsSupport/generatorHelper ../core/tsSupport/awaiterHelper ../PopupTemplate ../renderers ../request ../core/Error ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/watchUtils ../core/accessorSupport/decorators ../core/accessorSupport/utils ./Layer ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./mixins/SceneService ./support/commonProperties ./support/commonProperties ./support/FeatureReduction ./support/FeatureReductionSelection ./support/FetchAssociatedFeatureLayer ./support/fieldProperties ./support/FieldsIndex ./support/fieldUtils ./support/I3SLayerDefinitions ./support/LabelClass ./support/labelingInfo ./support/RangeInfo ../renderers/support/jsonUtils ../renderers/support/styleUtils ../support/popupUtils ../tasks/support/Query".split(" "),
function(ca,da,m,y,d,n,p,z,A,B,g,C,D,E,h,F,G,c,H,I,J,K,L,M,N,k,O,P,Q,R,S,T,q,l,U,r,V,W,X,Y,Z){function t(c,a,b){c&&((c=W.read(c,a,b)||void 0)||f.error("Failed to create renderer",{rendererDefinition:c,layer:this,context:b}));return c}var aa=["3DObject","Point"],f=C.getLogger("esri.layers.SceneLayer"),v=S.defineFieldProperties(),w={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",
polygons:"polygons","features-polygons":"polygons"},ba={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};return function(u){function a(b,a){b=u.call(this,b)||this;b.featureReduction=null;b.rangeInfos=null;b.operationalLayerType="ArcGISSceneServiceLayer";b.type="scene";b.fields=null;b.outFields=null;b.nodePages=null;b.materialDefinitions=null;b.textureSetDefinitions=null;b.geometryDefinitions=null;b.serviceUpdateTimeStamp=null;b.definitionExpression=null;b.path=null;b.labelsVisible=
!0;b.labelingInfo=null;b.legendEnabled=!0;b.cachedDrawingInfo={color:!1};b.popupEnabled=!0;b.popupTemplate=null;b.objectIdField=null;b.objectIdFilter=null;b._fieldUsageInfo={};b.screenSizePerspectiveEnabled=!0;return b}y(a,u);a.prototype.normalizeCtorArgs=function(b,a){return"string"===typeof b?m({url:b},a):b};a.prototype.getField=function(b){return this.fieldsIndex.get(b)};a.prototype.getFieldDomain=function(b){return(b=this.getField(b))&&b.domain?b.domain:null};Object.defineProperty(a.prototype,
"fieldsIndex",{get:function(){return new T(this.fields)},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"elevationInfo",{set:function(b){this._set("elevationInfo",b);this.loaded&&this._validateElevationInfo()},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"geometryType",{get:function(){return ba[this.profile]||"mesh"},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"renderer",{set:function(b){q.fixRendererFields(b,this.fields);this._set("renderer",
b)},enumerable:!0,configurable:!0});a.prototype.readCachedDrawingInfo=function(b){if(null==b||"object"!==typeof b)b={};null==b.color&&(b.color=!1);return b};Object.defineProperty(a.prototype,"defaultPopupTemplate",{get:function(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null},enumerable:!0,configurable:!0});a.prototype.readObjectIdField=function(b,a){!b&&a.fields&&a.fields.some(function(a){"esriFieldTypeOID"===a.type&&(b=a.name);return!!b});return b||void 0};
a.prototype.readProfile=function(b,a){b=a.store.profile;if(null!=b&&w[b])return w[b];f.error("Unknown or missing profile",{profile:b,layer:this});return"mesh-pyramids"};a.prototype.load=function(b){var a=this,c=D.isSome(b)?b.signal:null;b=this.loadFromPortal({supportedTypes:["Scene Service"]},b).then(function(){return a._fetchService(c)},function(){return a._fetchService(c)}).then(function(){return h.all([a._verifyRootNodeAndUpdateExtent(a.nodePages,c),a._setAssociatedFeatureLayer(c)])}).then(function(){return a._validateElevationInfo()}).then(function(){return a._applyAssociatedLayerOverrides()}).then(function(){return a._populateFieldUsageInfo()}).then(function(){return X.loadStyleRenderer(a,
{origin:"service"},c)}).then(function(){return q.fixRendererFields(a.renderer,a.fields)});this.addResolvingPromise(b);return h.resolve(this)};a.prototype.createQuery=function(){var b=new Z;"mesh"!==this.geometryType&&(b.returnGeometry=!0,b.returnZ=!0);b.where=this.definitionExpression||"1\x3d1";b.sqlFormat="standard";return b};a.prototype.queryExtent=function(b,a){var c=this;return this._getAssociatedLayerForQuery().then(function(e){return e.queryExtent(b||c.createQuery(),a)})};a.prototype.queryFeatureCount=
function(b,a){var c=this;return this._getAssociatedLayerForQuery().then(function(e){return e.queryFeatureCount(b||c.createQuery(),a)})};a.prototype.queryFeatures=function(b,a){var c=this;return this._getAssociatedLayerForQuery().then(function(e){return e.queryFeatures(b||c.createQuery(),a)}).then(function(b){if(b&&b.features)for(var a=0,e=b.features;a<e.length;a++){var d=e[a];d.layer=c;d.sourceLayer=c}return b})};a.prototype.queryObjectIds=function(b,a){var c=this;return this._getAssociatedLayerForQuery().then(function(e){return e.queryObjectIds(b||
c.createQuery(),a)})};a.prototype.getFieldUsageInfo=function(b){var a={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[b]||a:(f.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),a)};a.prototype.createPopupTemplate=function(b){return Y.createPopupTemplate(this,b)};a.prototype._getAssociatedLayerForQuery=function(){var b=this;if(!this.loaded)return this.load().then(function(){return b._getAssociatedLayerForQuery()});
var a=this.associatedLayer;return null!=a?h.resolve(a):h.reject(new g("scenelayer:query-not-available","SceneLayer queries are not available without associated feature layer"))};a.prototype.hasCachedStatistics=function(b){return null!=this.statisticsInfo&&this.statisticsInfo.some(function(a){return a.name===b})};a.prototype.queryCachedStatistics=function(b,a){return p(this,void 0,void 0,function(){var c,e,d,f,h;return n(this,function(x){switch(x.label){case 0:return[4,this.load(a)];case 1:x.sent();
if(!this.statisticsInfo)throw new g("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");c=this.fieldsIndex.get(b);if(!c)throw new g("scenelayer:field-unexisting","Field '"+b+"' does not exist on the layer");e=0;for(d=this.statisticsInfo;e<d.length;e++)if(f=d[e],f.name===c.name)return h=F.join(this.parsedUrl.path,f.href),[2,B(h,{query:{f:"json"},responseType:"json",signal:a?a.signal:null}).then(function(b){return b.data})];throw new g("scenelayer:no-cached-statistics",
"Cached statistics for this attribute are not available");}})})};a.prototype.validateLayer=function(b){if(b.layerType&&-1===aa.indexOf(b.layerType))throw new g("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:b.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new g("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(1<this.version.major)throw new g("layer:service-version-too-new",
"Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});b=this.normalReferenceFrame;var a=this.spatialReference,c=!1,d=!1;if(null==b)d=c=!0;else switch(a=a&&a.isGeographic,b){case "east-north-up":case "earth-centered":c=!0;d=a;break;case "vertex-reference-frame":c=!0;d=!a;break;default:c=!1}if(!c)throw new g("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!d)throw new g("scenelayer:incompatible-normal-reference-frame",
"Normal reference frame is incompatible with layer spatial reference.");};a.prototype._populateFieldUsageInfo=function(){this._fieldUsageInfo={};if(this.fields)for(var b=function(b){var c=!(!a.attributeStorageInfo||!a.attributeStorageInfo.some(function(a){return a.name===b.name})),d=!!(a.associatedLayer&&a.associatedLayer.fields&&a.associatedLayer.fields.some(function(a){return a&&b.name===a.name}));a._fieldUsageInfo[b.name]={supportsLabelingInfo:c,supportsRenderer:c,supportsPopupTemplate:c||d,supportsLayerQuery:d}},
a=this,c=0,d=this.fields;c<d.length;c++)b(d[c])};a.prototype._applyAssociatedLayerOverrides=function(){if(this.associatedLayer){if(this.associatedLayer.fields){for(var b=null,a=0,c=this.associatedLayer.fields;a<c.length;a++){var d=c[a];this.getField(d.name)||(b||(b=this.fields?this.fields.slice():[]),b.push(d.clone()))}b&&this._set("fields",b)}b=["popupTemplate","popupEnabled"];a=H.getProperties(this);for(c=0;c<b.length;c++)d=b[c],this._buddyIsMoreImportant(d)&&(a.setDefaultOrigin(this.associatedLayer.originOf(d)),
a.set(d,this.associatedLayer[d]),a.setDefaultOrigin("user"))}};a.prototype._setAssociatedFeatureLayer=function(a){return p(this,void 0,void 0,function(){var b,c,d;return n(this,function(e){switch(e.label){case 0:b=new R.FetchAssociatedFeatureLayer(this,a),e.label=1;case 1:return e.trys.push([1,3,,4]),c=this,[4,b.fetch()];case 2:return c.associatedLayer=e.sent(),[3,4];case 3:return d=e.sent(),h.isAbortError(d)||this._logWarningOnPopupEnabled(),[3,4];case 4:return[2]}})})};a.prototype._logWarningOnPopupEnabled=
function(){var a=this;G.whenValidOnce(this,["popupTemplate","popupEnabled"],function(){return a.popupEnabled&&null!=a.popupTemplate}).then(function(){return function(){var b="this SceneLayer: "+a.title;null==a.attributeStorageInfo?f.warn("Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on "+b):f.info("Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on "+b)}})};a.prototype._buddyIsMoreImportant=function(a){if(!this.associatedLayer)return!1;
var b=this.originIdOf(a);a=this.associatedLayer.originIdOf(a);return null!=a&&2>=a?null==b||2>b:null!=a&&3>=a?null==b||3>b:!1};a.prototype._validateElevationInfo=function(){var a=this.elevationInfo;a&&("mesh-pyramids"===this.profile&&"absolute-height"!==a.mode&&f.warn(".elevationInfo\x3d","Mesh scene layers only support absolute-height elevation mode"),a.featureExpressionInfo&&"0"!==a.featureExpressionInfo.expression&&f.warn(".elevationInfo\x3d","Scene layers do not support featureExpressionInfo"))};
d([c.property({types:{key:"type",base:P.default,typeMap:{selection:Q.default}},json:{origins:{"web-scene":{read:{source:"layerDefinition.featureReduction"},write:{target:"layerDefinition.featureReduction"}}}}})],a.prototype,"featureReduction",void 0);d([c.property({type:[V.default],json:{read:!1,origins:{"web-scene":{read:{source:"layerDefinition.rangeInfos"},write:{target:"layerDefinition.rangeInfos"}}}}})],a.prototype,"rangeInfos",void 0);d([c.property({json:{read:!1}})],a.prototype,"associatedLayer",
void 0);d([c.property({type:["show","hide"]})],a.prototype,"listMode",void 0);d([c.property({type:["ArcGISSceneServiceLayer"]})],a.prototype,"operationalLayerType",void 0);d([c.property({json:{read:!1},readOnly:!0})],a.prototype,"type",void 0);d([c.property(m({},v.fields,{readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}}))],a.prototype,"fields",void 0);d([c.property({readOnly:!0,dependsOn:["fields"]})],a.prototype,"fieldsIndex",null);d([c.property(v.outFields)],a.prototype,"outFields",void 0);
d([c.property({type:l.I3SNodePageDefinition,readOnly:!0})],a.prototype,"nodePages",void 0);d([c.property({type:[l.I3SMaterialDefinition],readOnly:!0})],a.prototype,"materialDefinitions",void 0);d([c.property({type:[l.I3STextureSetDefinition],readOnly:!0})],a.prototype,"textureSetDefinitions",void 0);d([c.property({type:[l.I3SGeometryDefinition],readOnly:!0})],a.prototype,"geometryDefinitions",void 0);d([c.property({readOnly:!0})],a.prototype,"serviceUpdateTimeStamp",void 0);d([c.property({readOnly:!0})],
a.prototype,"attributeStorageInfo",void 0);d([c.property({readOnly:!0})],a.prototype,"statisticsInfo",void 0);d([c.property({type:String,json:{origins:{service:{read:!1,write:!1}},read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],a.prototype,"definitionExpression",void 0);d([c.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0);d([c.property(k.elevationInfo)],a.prototype,"elevationInfo",
null);d([c.property({type:String,dependsOn:["profile"]})],a.prototype,"geometryType",null);d([c.property(k.labelsVisible)],a.prototype,"labelsVisible",void 0);d([c.property({type:[U],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:r.reader},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:r.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],a.prototype,"labelingInfo",void 0);d([c.property(k.legendEnabled)],
a.prototype,"legendEnabled",void 0);d([c.property(k.opacityDrawingInfo)],a.prototype,"opacity",void 0);d([c.property({types:A.webSceneRendererTypes,json:{origins:{service:{read:{source:"drawingInfo.renderer",reader:t}}},read:{source:"layerDefinition.drawingInfo.renderer",reader:t},write:{target:"layerDefinition.drawingInfo.renderer"}},value:null})],a.prototype,"renderer",null);d([c.property({json:{read:!1}})],a.prototype,"cachedDrawingInfo",void 0);d([c.reader("service","cachedDrawingInfo")],a.prototype,
"readCachedDrawingInfo",null);d([c.property(k.popupEnabled)],a.prototype,"popupEnabled",void 0);d([c.property({type:z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],a.prototype,"popupTemplate",void 0);d([c.property({readOnly:!0,json:{read:!1},dependsOn:["fields","title","attributeStorageInfo","associatedLayer"]})],a.prototype,"defaultPopupTemplate",null);d([c.property({type:String,json:{read:!1}})],a.prototype,"objectIdField",void 0);d([c.reader("service","objectIdField",["objectIdField",
"fields"])],a.prototype,"readObjectIdField",null);d([c.property({json:{read:!1}})],a.prototype,"objectIdFilter",void 0);d([c.property({type:String,json:{read:!1}})],a.prototype,"profile",void 0);d([c.reader("service","profile",["store.profile"])],a.prototype,"readProfile",null);d([c.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],a.prototype,"normalReferenceFrame",void 0);d([c.property(O.screenSizePerspectiveEnabled)],a.prototype,
"screenSizePerspectiveEnabled",void 0);return a=d([c.subclass("esri.layers.SceneLayer")],a)}(c.declared(M.ScaleRangeLayer(N.SceneService(J.ArcGISService(K.OperationalLayer(L.PortalLayer(E.MultiOriginJSONMixin(I))))))))});