// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/tsSupport/assignHelper ../../../core/tsSupport/generatorHelper ../../../core/tsSupport/awaiterHelper ../.. ../../../core/Error ../../../core/maybe ../../../core/promiseUtils ./support/utils ../heuristics/outline ../heuristics/sizeRange ../support/utils ../symbology/location".split(" "),function(F,w,y,u,h,z,p,l,A,r,B,C,x,v){function D(f){return h(this,void 0,void 0,function(){var a,e,b,d,c;return u(this,function(g){switch(g.label){case 0:if(!f||!f.layer)throw new p("location-renderer:missing-parameters",
"'layer' parameter is required");a=y({},f);a.symbolType=a.symbolType||"2d";e=[0,2,1,3];b=x.createLayerAdapter(a.layer,e);a.layer=b;if(!b)throw new p("location-renderer:invalid-parameters","'layer' must be one of these types: "+x.getLayerTypeLabels(e).join(", "));d=l.isSome(a.signal)?{signal:a.signal}:null;return[4,b.load(d)];case 1:g.sent();c=b.geometryType;a.outlineOptimizationEnabled="polygon"===c?a.outlineOptimizationEnabled:!1;a.sizeOptimizationEnabled="point"===c||"multipoint"===c||"polyline"===
c?a.sizeOptimizationEnabled:!1;if("mesh"===c)a.symbolType="3d-volumetric",a.colorMixMode=a.colorMixMode||"replace",a.edgesType=a.edgesType||"none";else{if("3d-volumetric-uniform"===a.symbolType&&"point"!==c)throw new p("location-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(-1<a.symbolType.indexOf("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new p("location-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'");
}return[2,a]}})})}function E(f,a){return h(this,void 0,void 0,function(){var e,b,d,c,g;return u(this,function(m){switch(m.label){case 0:return e=f.locationScheme,d=b=null,[4,r.getBasemapInfo(f.basemap,f.view)];case 1:c=m.sent();b=l.isSome(c.basemapId)?c.basemapId:null;d=l.isSome(c.basemapTheme)?c.basemapTheme:null;if(e)return[2,{scheme:v.cloneScheme(e),basemapId:b,basemapTheme:d}];if(g=v.getSchemes({basemap:b,basemapTheme:d,geometryType:a,worldScale:-1<f.symbolType.indexOf("3d-volumetric"),view:f.view}))e=
g.primaryScheme,b=g.basemapId,d=g.basemapTheme;return[2,{scheme:e,basemapId:b,basemapTheme:d}]}})})}Object.defineProperty(w,"__esModule",{value:!0});w.createRenderer=function(f){return h(this,void 0,void 0,function(){var a,e,b,d,c,g,m,h,k,q,l,n;return u(this,function(t){switch(t.label){case 0:return[4,D(f)];case 1:return a=t.sent(),e=a.layer.geometryType,[4,E(a,e)];case 2:b=t.sent();d=b.scheme;if(!d)throw new p("location-renderer:insufficient-info","Unable to find location scheme");c=a.view;g=a.layer;
m=a.signal;return[4,A.all([a.outlineOptimizationEnabled?B({view:c,layer:g,signal:m}):null,a.sizeOptimizationEnabled?C({view:c,layer:g,signal:m}):null])];case 3:return h=t.sent(),k=h[0],q=h[1],l=k&&k.opacity,n=new z.SimpleRenderer({symbol:r.createSymbol(e,{type:a.symbolType,color:d.color,size:r.getSymbolSizeFromScheme(d,e),outline:r.getSymbolOutlineFromScheme(d,e,l),meshInfo:{colorMixMode:a.colorMixMode,edgesType:a.edgesType}})}),k&&k.visualVariables&&k.visualVariables.length&&(n.visualVariables=k.visualVariables.map(function(a){return a.clone()})),
q&&q.minSize&&(n.visualVariables?n.visualVariables.push(q.minSize):n.visualVariables=[q.minSize]),[2,{renderer:n,locationScheme:v.cloneScheme(d),basemapId:b.basemapId,basemapTheme:b.basemapTheme}]}})})}});