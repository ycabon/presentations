// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define(["require","exports","../../support/utils"],function(q,c,h){function k(a){return"("+a.map(function(a){return a+" \x3e\x3d 0"}).join(" OR ")+")"}function l(a,b){var d=b.returnFieldName,g=b.defaultValue,c=b.layer,e=[];d&&g&&(b=a.map(function(a){return a+" \x3c\x3d 0"}).join(" AND "),e.push("WHEN "+b+" THEN "+g));b=function(b){var g=a.reduce(function(a,d){b!==d&&a.push(b+" \x3e "+d);return a},[]).join(" AND "),f=c&&h.isIntegerField(c,b),f=d&&"'"+b+"'"?"'"+b+"'":f?h.castIntegerFieldToFloat(b):
b;e.push("WHEN "+g+" THEN "+f)};for(var f=0;f<a.length;f++)b(a[f]);return"CASE "+e.join(" ")+" ELSE "+(g||"0")+" END"}function e(a){return a&&a.map(function(a){return'$feature["'+a+'"];'}).join("\n")+"\n"||""}function f(a,b){void 0===b&&(b=!1);a=a.map(function(a){return'"'+a+'"'});return"\n  var fieldNames \x3d [ "+a.join(", ")+" ];\n  var numFields \x3d "+a.length+";\n  var maxValueField \x3d null;\n  var maxValue \x3d -Infinity;\n  var value, i, totalValue \x3d null;\n\n  for(i \x3d 0; i \x3c numFields; i++) {\n    value \x3d $feature[fieldNames[i]];\n\n    if(value \x3e 0) {\n      if(value \x3e maxValue) {\n        maxValue \x3d value;\n        maxValueField \x3d fieldNames[i];\n      }\n      else if (value \x3d\x3d maxValue) {\n        maxValueField \x3d null;\n      }\n    }\n    "+
(b?"\n  if(value !\x3d null \x26\x26 value \x3e\x3d 0) {\n    if (totalValue \x3d\x3d null) { totalValue \x3d 0; }\n    totalValue \x3d totalValue + value;\n  }\n  ":"")+"\n  }\n  "}function m(a){var b=f(a);return"\n  "+e(a)+"\n  "+b+"\n  return maxValueField;\n  "}function n(a){var b=e(a);a=a.map(function(a){return'"'+a+'"'});return"\n  "+b+"\n  var fieldNames \x3d [ "+a.join(", ")+" ];\n  var numFields \x3d "+a.length+";\n  var value, i, totalValue \x3d null;\n\n  for(i \x3d 0; i \x3c numFields; i++) {\n    value \x3d $feature[fieldNames[i]];\n\n    if(value !\x3d null \x26\x26 value \x3e\x3d 0) {\n      if (totalValue \x3d\x3d null) { totalValue \x3d 0; }\n      totalValue \x3d totalValue + value;\n    }\n  }\n\n  return totalValue;\n  "}
function p(a){var b=f(a,!0);return"\n  "+e(a)+"\n  "+b+"\n\n  var strength \x3d null;\n\n  if (maxValueField !\x3d null \x26\x26 totalValue \x3e 0) {\n    strength \x3d (maxValue / totalValue) * 100;\n  }\n\n  return strength;\n  "}Object.defineProperty(c,"__esModule",{value:!0});c.noDominantCategoryField="no_dominant_category";c.getSQLForPredominantCategoryName=function(a){return{expression:l(a,{returnFieldName:!0,defaultValue:"'"+c.noDominantCategoryField+"'"})}};c.getPredominanceExpressions=function(a,
b){var d=b.join(" + "),g={sqlExpression:"("+d+")",sqlWhere:k(b)};a={sqlExpression:"(( ("+l(b,{layer:a})+") / ("+d+") ) * 100)",sqlWhere:k(b)+" AND (("+d+") \x3e 0)"};return{predominantCategory:{valueExpression:m(b)},size:{valueExpression:n(b),statisticsQuery:g,histogramQuery:g},opacity:{valueExpression:p(b),statisticsQuery:a,histogramQuery:a}}};c.getArcadeForPredominantCategory=m;c.getArcadeForPredominantCategoryValue=function(a){var b=f(a);return"\n  "+e(a)+"\n  "+b+"\n  return maxValue;\n  "};c.getArcadeForPredominantCategoryAlias=
function(a){var b=a.map(function(a){return a.fieldName}),d=e(b),b=b.map(function(a){return'"'+a+'"'});a=a.map(function(a){return a.label?'"'+a.label+'"':'"'+a.fieldName+'"'});return"\n  "+d+"\n  var fieldNames \x3d [ "+b.join(", ")+" ];\n  var fieldAliases \x3d [ "+a.join(", ")+" ];\n  var numFields \x3d "+b.length+';\n  var maxFieldAlias \x3d null;\n  var maxValue \x3d -Infinity;\n  var value, i, totalValue \x3d null;\n\n  for(i \x3d 0; i \x3c numFields; i++) {\n    value \x3d $feature[fieldNames[i]];\n\n    if(value \x3e 0) {\n      if(value \x3e maxValue) {\n        maxValue \x3d value;\n        maxFieldAlias \x3d fieldAliases[i];\n      }\n      else if (value \x3d\x3d maxValue) {\n        maxFieldAlias \x3d "Tie";\n      }\n    }\n  }\n  return maxFieldAlias;\n  '};
c.getArcadeForPredominanceMargin=function(a){var b=e(a);a=a.map(function(a){return'$feature["'+a+'"]'});return"\n  "+b+"\n  var fieldValues \x3d [ "+a.join(", ")+" ];\n  var totalValue \x3d Sum(fieldValues);\n  var order \x3d Reverse(Sort(fieldValues));\n  return IIF(totalValue \x3e 0, Round(((order[0] - order[1]) / totalValue) * 100, 2), null);\n  "};c.getArcadeForSumOfFields=n;c.getArcadeForStrengthOfPredominance=p;c.getArcadeForOrderedFields=function(a){var b=a.map(function(a){return a.fieldName}),
b=e(b);a=a.map(function(a){return'{\n    value: $feature["'+a.fieldName+'"],\n    alias: "'+(a.label||a.fieldName)+'"\n    }'});return"\n  "+b+"\n  var groups \x3d [ "+a.join(", ")+' ];\n  var numTopValues \x3d Count(groups);\n\n  function getValuesArray(arr){\n    var valuesArray \x3d []\n    for(var i in arr){\n      valuesArray[i] \x3d arr[i].value;\n    }\n    return valuesArray;\n  }\n\n  function findAliases(top5Array, fullArray){\n    var aliases \x3d [];\n    var found \x3d "";\n    for(var i in top5Array){\n      for(var k in fullArray){\n        if(top5Array[i] \x3d\x3d fullArray[k].value \x26\x26 Find(fullArray[k].alias, found) \x3d\x3d -1){\n          found +\x3d fullArray[k].alias;\n          aliases[Count(aliases)] \x3d {\n            alias: fullArray[k].alias,\n            value: top5Array[i]\n          };\n        }\n      }\n    }\n    return aliases;\n  }\n\n  function getTopGroups(groupsArray){\n    var values \x3d getValuesArray(groupsArray);\n    var top5Values \x3d IIF(Max(values) \x3e 0, Top(Reverse(Sort(values)),numTopValues), "no data");\n    var top5Aliases \x3d findAliases(top5Values,groupsArray);\n\n    if(TypeOf(top5Values) \x3d\x3d "String"){\n      return top5Values;\n    } else {\n      var content \x3d "";\n      for(var i in top5Aliases){\n        if(top5Aliases[i].value \x3e 0){\n          content +\x3d (i+1) + ". " + top5Aliases[i].alias + " (" + Text(top5Aliases[i].value, "#,###") + ")";\n          content +\x3d IIF(i \x3c numTopValues-1, TextFormatting.NewLine, "");\n        }\n      }\n    }\n\n    return content;\n  }\n\n  getTopGroups(groups);\n  '}});