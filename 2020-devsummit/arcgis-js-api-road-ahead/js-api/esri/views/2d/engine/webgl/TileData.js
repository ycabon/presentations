// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ./MemoryRequirements ./TileBufferData ./TileDisplayData ./Utils ./Utils ./WGLDisplayObject ./WGLDisplayRecord ./mesh/VertexBuffer ./util/Reader ./util/serializationUtils ./util/Writer".split(" "),function(p,v,w,t,u,z,x,A,B,C,D,E,F){Object.defineProperty(v,"__esModule",{value:!0});var r=new w.default,n=new w.default;p=function(){function g(){this.tileBufferData=this.tileDisplayData=null}g.prototype.reshuffle=function(){r.reset();for(var a=u.groupRecordsByGeometryType(this.tileDisplayData.displayObjects),
b=0;b<a.length;b++)for(var c=a[b],e=0,d=c;e<d.length;e++){var f=d[e];f&&r.needMore(f.geometryType,f.meshData?f.meshData.vertexCount:f.vertexCount,f.meshData?f.meshData.indexData.length:f.indexCount)}e=a.length;b=new t;for(d=0;d<e;++d){b.geometries[d].indexBuffer=new Uint32Array(Math.round(1.15*r.indicesFor(d)));var f=[],h;for(h in this.tileBufferData.geometries[d].vertexBuffer)f.push(this.tileBufferData.geometries[d].vertexBuffer[h].stride);var f=g._computeVertexAlignment(f),c=Math.round(1.15*r.verticesFor(d)),
f=g._align(c,f),k;for(k in this.tileBufferData.geometries[d].vertexBuffer)c=this.tileBufferData.geometries[d].vertexBuffer[k].stride,b.geometries[d].vertexBuffer[k]={stride:c,data:x.allocateTypedArrayBuffer(f,c)}}n.reset();this.tileDisplayData.displayList.clear();for(d=0;d<e;++d){c=a[d];h=0;for(k=c;h<k.length;h++){f=k[h];if(f.meshData)f.writeMeshDataToBuffers(n.verticesFor(d),b.geometries[d].vertexBuffer,n.indicesFor(d),b.geometries[d].indexBuffer),f.meshData=null;else{var m=this.tileBufferData.geometries[d].vertexBuffer,
l=this.tileBufferData.geometries[d].indexBuffer,G=b.geometries[d].vertexBuffer,q=b.geometries[d].indexBuffer,y=n.verticesFor(d),p=n.indicesFor(d);z.copyMeshData(y,p,G,q,f,m,l);f.vertexFrom=y;f.indexFrom=p}n.needMore(d,f.vertexCount,f.indexCount)}this.tileDisplayData.displayList.unified||this.tileDisplayData.displayList.addToList(c)}if(this.tileDisplayData.displayList.unified)for(a=0,e=this.tileDisplayData.displayObjects;a<e.length;a++)this.tileDisplayData.displayList.addToList(e[a].displayRecords);
this.tileBufferData=b};g.prototype.getStrides=function(){for(var a=[],b=0;b<this.tileBufferData.geometries.length;++b){var c=this.tileBufferData.geometries[b];a[b]={};for(var e in c.vertexBuffer)a[b][e]=c.vertexBuffer[e].stride}return a};g.prototype.clone=function(){var a=new g;a.tileBufferData=this.tileBufferData.clone();a.tileDisplayData=this.tileDisplayData.clone();return a};g.prototype._guessSize=function(){for(var a=this.tileDisplayData.displayObjects,b=Math.min(a.length,4),c=0,e=0;e<b;e++)c=
Math.max(c,a[e].displayRecords.length);return 2*(12*a.length+a.length*c*40)};g.prototype.serialize=function(){var a=this.tileBufferData.serialize(),b=this.tileBufferData.getBuffers(),c=this.tileDisplayData.serialize(new F.default(Int32Array,this._guessSize())).buffer();b.push(c);return{result:{displayData:c,bufferData:a},transferList:b}};g.decode=function(a){var b=E.deserializeList(new D.default(a.displayObjects),A),c={},e;for(e in a.vertexBuffersMap)c[e]=C.VertexBuffers.decode(a.vertexBuffersMap[e]);
return g.fromMeshData({displayObjects:b,vertexBuffersMap:c})};g.fromMeshData=function(a){var b=new g,c=new u.default,e=new t;c.displayObjects=a.displayObjects;for(var d in a.vertexBuffersMap){var f=a.vertexBuffersMap[d];e.geometries[d].indexBuffer=f.indexBuffer;e.geometries[d].vertexBuffer=f.namedBuffers}b.tileDisplayData=c;b.tileBufferData=e;return b};g.bind=function(a,b){var c=new g;c.tileDisplayData=a;c.tileBufferData=b;return c};g.create=function(a,b){var c=new g;c.tileDisplayData=new u.default;
c.tileDisplayData.displayObjects=a;for(var e=[0,0,0,0,0],d=[0,0,0,0,0],f=[[],[],[],[],[]],h=0;h<a.length;h++)for(var k=0,m=a[h].displayRecords;k<m.length;k++){var l=m[k];f[l.geometryType].push(l);e[l.geometryType]+=l.meshData.vertexCount;d[l.geometryType]+=l.meshData.indexData.length}a=new t;b=[b.fill||{},b.line||{},b.icon||{},b.text||{},b.label||{}];for(h=0;5>h;h++){var k=new Uint32Array(d[h]),m=b[h],l=e[h],n={},q=void 0;for(q in m){var p={data:x.allocateTypedArrayBuffer(l,m[q]),stride:m[q]};n[q]=
p}m=n;B.writeAllMeshDataToBuffers(f[h],m,k);a.geometries[h]={indexBuffer:k,vertexBuffer:m}}c.tileBufferData=a;return c};g._align=function(a,b){var c=a%b;return 0===c?a:a+(b-c)};g._computeVertexAlignment=function(a){for(var b=!1,c=!1,e=0;e<a.length;e++){var d=a[e];2===d%4?b=!0:0!==d%4&&(c=!0)}return c?4:b?2:1};return g}();v.TileData=p});