// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../../../../../core/tsSupport/declareExtendsHelper ../../../../../core/tsSupport/decorateHelper ../../../../../core/Handles ../../../../../core/maybe ../../../../../core/screenUtils ../../../../../geometry/Point ../../../../../layers/graphics/dehydratedFeatures ./AreaMeasurement3DView".split(" "),function(n,p,q,r,h,e,g,k,l,m){return function(){function b(a,c,b){this._manipulators=b;this._handles=new h;this._tempPickRequest=new m.PickRequest;this.model=a;this.view=c;this.model.reset();
this._setupManipulators()}b.prototype.destroy=function(){this._handles.destroy();this._handles=null};b.prototype.handleInputEvent=function(a){switch(a.type){case "immediate-click":this._handleImmediateClick(a);break;case "pointer-move":this._handlePointerMove(a);break;case "drag":this._handleDrag(a);break;case "key-down":this._handleKeyDown(a)}};b.prototype._setupManipulators=function(){var a=this,b=0,d=function(f,c){a._handles.add(c.watch("dragging",function(c){c?(b++,a.model.lastDraggedVertex=e.expect(a.view.manipulatorIdToVertexId(f)),
"measured"===a.model.state&&(a.model.state="editing")):(b--,0===b&&"editing"===a.model.state&&(a.model.state="measured"))},!0),"manipulator-"+f);c.events.on("drag",function(){var b=e.expect(a.view.manipulatorIdToVertexId(f));a.model.path.update(b,l.clonePoint(c.mapPoint,new k))});c.events.on("double-click",function(b){if("mouse"!==b.pointerType||0===b.button)"drawing"===a.model.state&&a.model.finishMeasurement(),b.stopPropagation()})};this._manipulators.forEach(function(a){d(a.id,a.manipulator)});
this._handles.add([this._manipulators.on("after-add",function(a){a=a.item;d(a.id,a.manipulator)}),this._manipulators.on("after-remove",function(b){a._handles.remove("manipulator-"+b.item.id)})])};b.prototype._handleDrag=function(a){"editing"===this.model.state&&a.stopPropagation()};b.prototype._handleImmediateClick=function(a){if("mouse"!==a.pointerType||0===a.button){var b=g.createScreenPointFromEvent(a);if(this.model.active)switch(this.model.state){case "initial":this._addVertexAt(b)&&(this.model.state=
"drawing",a.stopPropagation());break;case "drawing":var d=this.view.vertexHandleAt(b,a.pointerType);if(e.isNone(d)){if(this._addVertexAt(b))return}else 0===d&&(this.model.finishMeasurement(),a.stopPropagation())}"mouse"===a.pointerType&&this._hoverAt(b)}};b.prototype._handlePointerMove=function(a){"mouse"===a.pointerType&&(a=g.createScreenPointFromEvent(a),this._hoverAt(a))};b.prototype._handleKeyDown=function(a){"Enter"===a.key&&"drawing"===this.model.state&&(this.model.finishMeasurement(),a.stopPropagation())};
b.prototype._hoverAt=function(a){this.view.requiresCursorPoint?(a=this._pick(a),a.mapPoint&&(this.model.cursorPoint=a.mapPoint)):this.model.cursorPoint=null};b.prototype._addVertexAt=function(a){a=this._pick(a);return a.mapPoint?(this.model.path.add(a.mapPoint),!0):!1};b.prototype._pick=function(a){var b=this._tempPickRequest;b.screenPoint=a;return this.view.pick(b)};return b}()});