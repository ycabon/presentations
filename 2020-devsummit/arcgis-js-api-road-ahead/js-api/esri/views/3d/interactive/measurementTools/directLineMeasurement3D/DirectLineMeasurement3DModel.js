// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../../../../../core/tsSupport/declareExtendsHelper ../../../../../core/tsSupport/decorateHelper ../../../../../core/Accessor ../../../../../core/Handles ../../../../../core/mathUtils ../../../../../core/Quantity ../../../../../core/quantityUtils ../../../../../core/unitUtils ../../../../../core/watchUtils ../../../../../core/accessorSupport/decorators ../../../../../core/libs/gl-matrix-2/vec3 ../../../../../core/libs/gl-matrix-2/vec3f64 ../../../../../geometry/Point ../../../../../geometry/support/geodesicUtils ../support/UnitNormalizer ../../../support/earthUtils ../../../support/projectionUtils ../../../support/PropertiesPool".split(" "),
function(r,F,x,d,y,z,k,l,h,t,A,c,u,m,v,B,C,D,f,E){var w=D.earthRadius*Math.PI/180;r=function(q){function a(){var b=null!==q&&q.apply(this,arguments)||this;b._tempStartPosition=m.vec3f64.create();b._tempEndPosition=m.vec3f64.create();b._tempCornerPosition=m.vec3f64.create();b._unitNormalizer=new C;b._handles=new z;b._propertiesPool=new E.default({startPoint:v,endPoint:v},b);b.cursorPoint=null;b.state="initial";b.mode="auto";b.unit="metric";b.active=!1;b.directDistance=null;b.horizontalDistance=null;
b.verticalDistance=null;b.geodesicDistance=null;b.geodesicAngle=null;b.triangleCollapseRatioThreshold=.03;b.geodesicMeasurementDistanceThreshold=1E5;return b}x(a,q);a.prototype.initialize=function(){var b=this;this._handles.add(A.init(this.sceneView,"spatialReference",function(a){b._unitNormalizer.spatialReference=a}),"scene-view");this.reset()};a.prototype.destroy=function(){this._handles.destroy();this._handles=null;this._propertiesPool.destroy();this._propertiesPool=null};Object.defineProperty(a.prototype,
"startPoint",{set:function(b){if(b){var a=this._propertiesPool.get("startPoint");a.copy(b);this._set("startPoint",a);this._updateMeasurement()}else this._set("startPoint",null)},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"startPointSurfaceLocation",{set:function(b){this._set("startPointSurfaceLocation",b);this._updateMeasurement()},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"endPoint",{set:function(b){if(b){var a=this._propertiesPool.get("endPoint");a.copy(b);
this._set("endPoint",a);this._updateMeasurement()}else this._set("endPoint",null)},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"endPointSurfaceLocation",{set:function(b){this._set("endPointSurfaceLocation",b);this._updateMeasurement()},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"measurementSurfaceLocation",{get:function(){var b=this.startPointSurfaceLocation,a=this.endPointSurfaceLocation;return null==b||null==a||"above-the-surface"===b&&"below-the-surface"===
a||"below-the-surface"===b&&"above-the-surface"===a||"on-the-surface"===b&&"on-the-surface"===a?"camera-dependent":"above-the-surface"===b||"above-the-surface"===a?"above-the-surface":"below-the-surface"},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"validMeasurement",{get:function(){return!!this.startPoint&&!!this.endPoint},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"isMeasuring",{get:function(){return!!this.startPoint},enumerable:!0,configurable:!0});
Object.defineProperty(a.prototype,"geodesicDistanceExceeded",{get:function(){return this.horizontalDistance&&this.horizontalDistance.value>this.geodesicMeasurementDistanceThreshold},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,"measurementMode",{get:function(){var b=this.mode;if("auto"===b){b="euclidean";if("degrees"===this.unit||"degrees-minutes-seconds"===this.unit)b="geodesic";this.geodesicDistanceExceeded&&(b="geodesic")}return b},enumerable:!0,configurable:!0});Object.defineProperty(a.prototype,
"triangleView",{get:function(){var b=this._collapseTriangle(),a=null,c=null,d=null,e=this.directDistance,c="geodesic"===this.measurementMode?this.geodesicDistance:this.horizontalDistance,f=this.verticalDistance,g=null;switch(this.unit){case "metric":a=e&&h.formatMetricLength(e);c=c&&h.formatMetricLength(c);d=f&&h.formatMetricVerticalLength(f);g=e&&e.toUnit("meters");break;case "imperial":a=e&&h.formatImperialLength(e);c=c&&h.formatImperialLength(c);d=f&&h.formatImperialVerticalLength(f);g=e&&e.toUnit(t.preferredImperialLengthUnit(e.value,
e.unit));break;case "degrees":c=this.geodesicAngle&&h.formatDecimal(this.geodesicAngle,"degrees");g=this.geodesicAngle&&this.geodesicAngle.toUnit("degrees");break;case "degrees-minutes-seconds":c=this.geodesicAngle&&h.formatDMS(this.geodesicAngle);g=this.geodesicAngle&&this.geodesicAngle.toUnit("degrees");break;default:a=e&&h.formatDecimal(e,this.unit),c=c&&h.formatDecimal(c,this.unit),d=f&&h.formatDecimal(f,this.unit),g=e&&e.toUnit(this.unit)}e=1;g&&(e=k.nextHighestPowerOfTen(g.value/30),e*="degrees"===
g.unit?w:t.convertUnit(1,g.unit,"meters"),e/=this._unitNormalizer.normalizeDistance(1));return{visible:this.validMeasurement&&!this.startPoint.equals(this.endPoint),mode:this.measurementMode,collapsed:b,directLabel:a,horizontalLabel:c,verticalLabel:d,stripeLength:e}},enumerable:!0,configurable:!0});a.prototype.reset=function(){this.clearMeasurement()};a.prototype.clearMeasurement=function(){this.state="initial";this.cursorPoint=this.endPoint=this.startPoint=null;this._clearOverride("measurementSurfaceLocation");
this._updateMeasurement()};a.prototype.finishMeasurement=function(){if(!this._isOverridden("measurementSurfaceLocation")){var b=this.measurementSurfaceLocation;this._override("measurementSurfaceLocation","camera-dependent"===b?this.sceneView.state.camera.aboveGround?"above-the-surface":"below-the-surface":b)}this.state="measured"};a.prototype._collapseTriangle=function(){return!this.validMeasurement||this.startPoint.equals(this.endPoint)||"geodesic"===this.measurementMode?!0:Math.min(this.verticalDistance.value/
this.horizontalDistance.value,this.horizontalDistance.value/this.verticalDistance.value)<this.triangleCollapseRatioThreshold};a.prototype._exactGeodesicDistanceAndAngle=function(b,a){f.pointToWGS84ComparableLonLat(b,n);f.pointToWGS84ComparableLonLat(a,p);b=k.deg2rad(n[0]);a=k.deg2rad(n[1]);var c=k.deg2rad(p[0]),d=k.deg2rad(p[1]);b=k.acosClamped(Math.sin(a)*Math.sin(d)+Math.cos(a)*Math.cos(d)*Math.cos(Math.abs(c-b)));b=k.rad2deg(b);a={distance:0};B.inverseGeodeticSolver(a,[n[0],n[1]],[p[0],p[1]]);
return{distance:new l(a.distance,"meters"),angle:new l(b,"degrees")}};a.prototype._approximateGeodesicDistanceAndAngle=function(b){return{distance:new l(b,"meters"),angle:new l(b/w,"degrees")}};a.prototype._euclideanDistances=function(b,a){b.z>a.z&&(b=[b,b=a][0]);var c=b.clone();c.z=a.z;var d=this._tempStartPosition,e=this._tempEndPosition,h=this._tempCornerPosition,g=this.sceneView.spatialReference,g=f.canProject(g,f.WGS84ECEFSpatialReference)?f.WGS84ECEFSpatialReference:g;f.pointToVector(b,d,g);
f.pointToVector(a,e,g);f.pointToVector(c,h,g);c=u.vec3.distance(d,e);e=u.vec3.distance(h,e);b=Math.abs(a.z-b.z);c=this._unitNormalizer.normalizeDistance(c);e=this._unitNormalizer.normalizeDistance(e);b=this._unitNormalizer.normalizeElevation(b);return{direct:new l(c,"meters"),horizontal:new l(e,"meters"),vertical:new l(b,"meters")}};a.prototype._updateMeasurement=function(){if(this.startPoint&&this.endPoint){var a=this._euclideanDistances(this.startPoint,this.endPoint),c=f.canProjectToWGS84ComparableLonLat(this.sceneView.spatialReference)?
this._exactGeodesicDistanceAndAngle(this.startPoint,this.endPoint):this._approximateGeodesicDistanceAndAngle(a.horizontal.value);this._set("directDistance",a.direct);this._set("horizontalDistance",a.horizontal);this._set("verticalDistance",a.vertical);this._set("geodesicDistance",c.distance);this._set("geodesicAngle",c.angle)}else this._set("directDistance",null),this._set("horizontalDistance",null),this._set("verticalDistance",null),this._set("geodesicDistance",null),this._set("geodesicAngle",null)};
d([c.property({constructOnly:!0})],a.prototype,"sceneView",void 0);d([c.property({value:null})],a.prototype,"startPoint",null);d([c.property({value:null})],a.prototype,"startPointSurfaceLocation",null);d([c.property({value:null})],a.prototype,"endPoint",null);d([c.property({value:null})],a.prototype,"endPointSurfaceLocation",null);d([c.property({dependsOn:["startPointSurfaceLocation","endPointSurfaceLocation"]})],a.prototype,"measurementSurfaceLocation",null);d([c.property()],a.prototype,"cursorPoint",
void 0);d([c.property()],a.prototype,"state",void 0);d([c.property()],a.prototype,"mode",void 0);d([c.property()],a.prototype,"unit",void 0);d([c.property()],a.prototype,"active",void 0);d([c.property({readOnly:!0,dependsOn:["startPoint","endPoint"]})],a.prototype,"validMeasurement",null);d([c.property({readOnly:!0,dependsOn:["startPoint"]})],a.prototype,"isMeasuring",null);d([c.property({readOnly:!0})],a.prototype,"directDistance",void 0);d([c.property({readOnly:!0})],a.prototype,"horizontalDistance",
void 0);d([c.property({readOnly:!0})],a.prototype,"verticalDistance",void 0);d([c.property({readOnly:!0})],a.prototype,"geodesicDistance",void 0);d([c.property({readOnly:!0})],a.prototype,"geodesicAngle",void 0);d([c.property({readOnly:!0,dependsOn:["horizontalDistance","geodesicMeasurementDistanceThreshold"]})],a.prototype,"geodesicDistanceExceeded",null);d([c.property({readOnly:!0,dependsOn:["horizontalDistance","unit","geodesicDistanceExceeded"]})],a.prototype,"measurementMode",null);d([c.property({readOnly:!0,
dependsOn:["unit","measurementMode","startPoint","endPoint","triangleCollapseRatioThreshold"]})],a.prototype,"triangleView",null);d([c.property()],a.prototype,"triangleCollapseRatioThreshold",void 0);d([c.property()],a.prototype,"geodesicMeasurementDistanceThreshold",void 0);return a=d([c.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DModel")],a)}(c.declared(y));var n=m.vec3f64.create(),p=m.vec3f64.create();return r});