// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/mathUtils ../../../core/wgs84Constants ../../../core/libs/gl-matrix-2/vec3 ../../../core/libs/gl-matrix-2/vec3f64 ../../../geometry/Point ./projectionUtils".split(" "),function(v,c,d,q,r,l,g,m){function k(a,b,e,h){var f,n;a instanceof g&&b instanceof g&&(e=b.longitude,h=b.latitude,n=a.latitude,f=a.longitude);a=d.deg2rad(n);h=d.deg2rad(h);f=d.deg2rad(f);b=d.deg2rad(e);e=Math.sin((a-h)/2);f=Math.sin((f-b)/2);e=2*d.asinClamped(Math.sqrt(e*e+Math.cos(a)*Math.cos(h)*
f*f))*c.earthRadius;return Math.round(1E4*e)/1E4}function p(a,b){a/=15;b||(a=Math.round(a));return a}Object.defineProperty(c,"__esModule",{value:!0});c.earthRadius=q.wgs84Radius;c.halfEarthRadius=c.earthRadius/2;c.halfEarthCircumference=Math.PI*c.earthRadius;c.earthCircumference=2*c.halfEarthCircumference;c.metersPerDegree=c.halfEarthCircumference/180;c.getGreatCircleDistance=k;c.getGreatCircleSpanAt=function(a,b,c){var d=b.spatialReference,f=new g(b.x,a.y,d),e=new g(c.x,a.y,d);b=new g(a.x,b.y,d);
a=new g(a.x,c.y,d);return{lon:k(f,e),lat:k(b,a)}};c.getLonDeltaForDistance=function(a,b){b/=c.earthRadius;a=d.deg2rad(a);b=Math.sin(b/2);a=Math.cos(a);a=2*d.asinClamped(Math.sqrt(b*b/(a*a)));return d.rad2deg(a)};c.getLatDeltaForDistance=function(a){return d.rad2deg(a/c.earthRadius)};c.getMaxCameraAltitude=function(a){a=d.deg2rad(a/2);return(1-Math.sin(a))*c.earthRadius/Math.sin(a)};c.getViewExtentDistance=function(a,b){b=d.deg2rad(b/2);return 2*d.acosClamped((Math.pow(a+c.earthRadius,2)+Math.pow(c.earthRadius,
2)-Math.pow((a+c.earthRadius)*Math.cos(b)-Math.sqrt(Math.pow(Math.cos(b)*(a+c.earthRadius),2)-a*a-2*a*c.earthRadius),2))/(2*(a+c.earthRadius)*c.earthRadius))*c.earthRadius};c.computeCartesianDistance=function(a,b){a=m.wgs84ComparableLonLatToECEF(t,a.longitude,a.latitude,a.z||0);b=m.wgs84ComparableLonLatToECEF(u,b.longitude,b.latitude,b.z||0);b=[b[0]-a[0],b[1]-a[1],b[2]-a[2]];return Math.sqrt(b[0]*b[0]+b[1]*b[1]+b[2]*b[2])};c.longitudeToTimezone=p;c.positionToTimezone=function(a,b){b||(b={hours:0,
minutes:0,seconds:0});b.hours=p(a[0],!0);a=b.hours%1;b.hours-=a;b.minutes=60*a;a=b.minutes%1;b.minutes-=a;b.seconds=Math.round(60*a);return b};c.distanceToIdealHorizon=function(a,b){b=b||c.earthRadius;a=r.vec3.dot(a,a);return Math.sqrt(Math.abs(a-b*b))};var t=l.vec3f64.create(),u=l.vec3f64.create()});