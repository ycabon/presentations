// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../../../../core/tsSupport/makeTemplateObjectHelper","./DecodeSymbolColor.glsl","../../../../core/shaderModules/interfaces"],function(l,b,c,k,d){Object.defineProperty(b,"__esModule",{value:!0});b.ComponentData=function(a,b){1===b.componentData&&(a.vertex.uniforms.add("uComponentColorTex","sampler2D"),a.vertex.uniforms.add("uComponentColorTexInvDim","vec2"),a.attributes.add("componentIndex","float"),a.varyings.add("vExternalColorMixMode","mediump float"),a.varyings.add("vExternalColor",
"vec4"),a.include(k.DecodeSymbolColor),a.vertex.code.add(d.glsl(e||(e=c(["\n      vec4 _readComponentColor() {\n        float normalizedIndex \x3d (componentIndex + 0.5) * uComponentColorTexInvDim.x;\n        vec2 indexCoord \x3d vec2(\n          mod(normalizedIndex, 1.0),\n          (floor(normalizedIndex) + 0.5) * uComponentColorTexInvDim.y\n        );\n        return texture2D(uComponentColorTex, indexCoord);\n       }\n\n      vec4 forwardExternalColor(out bool castShadows) {\n        vec4 componentColor \x3d _readComponentColor() * 255.0;\n\n        float shadowFlag \x3d mod(componentColor.b * 255.0, 2.0);\n        componentColor.b -\x3d shadowFlag;\n        castShadows \x3d shadowFlag \x3e\x3d 1.0;\n\n        int decodedColorMixMode;\n        vExternalColor \x3d decodeSymbolColor(componentColor, decodedColorMixMode) * 0.003921568627451; // \x3d 1/255;\n        vExternalColorMixMode \x3d float(decodedColorMixMode) + 0.5; // add 0.5 to avoid interpolation artifacts\n\n        return vExternalColor;\n      }\n    "],
["\n      vec4 _readComponentColor() {\n        float normalizedIndex \x3d (componentIndex + 0.5) * uComponentColorTexInvDim.x;\n        vec2 indexCoord \x3d vec2(\n          mod(normalizedIndex, 1.0),\n          (floor(normalizedIndex) + 0.5) * uComponentColorTexInvDim.y\n        );\n        return texture2D(uComponentColorTex, indexCoord);\n       }\n\n      vec4 forwardExternalColor(out bool castShadows) {\n        vec4 componentColor \x3d _readComponentColor() * 255.0;\n\n        float shadowFlag \x3d mod(componentColor.b * 255.0, 2.0);\n        componentColor.b -\x3d shadowFlag;\n        castShadows \x3d shadowFlag \x3e\x3d 1.0;\n\n        int decodedColorMixMode;\n        vExternalColor \x3d decodeSymbolColor(componentColor, decodedColorMixMode) * 0.003921568627451; // \x3d 1/255;\n        vExternalColorMixMode \x3d float(decodedColorMixMode) + 0.5; // add 0.5 to avoid interpolation artifacts\n\n        return vExternalColor;\n      }\n    "])))),
a.fragment.code.add(d.glsl(f||(f=c(["\n      void readExternalColor(out vec4 externalColor, out int externalColorMixMode) {\n        externalColor \x3d vExternalColor;\n        externalColorMixMode \x3d int(vExternalColorMixMode);\n      }\n    "],["\n      void readExternalColor(out vec4 externalColor, out int externalColorMixMode) {\n        externalColor \x3d vExternalColor;\n        externalColorMixMode \x3d int(vExternalColorMixMode);\n      }\n    "])))));0===b.componentData&&(a.vertex.uniforms.add("uExternalColor",
"vec4"),a.fragment.uniforms.add("uExternalColorMixMode","int"),a.varyings.add("vExternalColor","vec4"),a.vertex.code.add(d.glsl(g||(g=c(["\n      vec4 forwardExternalColor(out bool castShadows) {\n        vExternalColor \x3d uExternalColor;\n        castShadows \x3d true;\n        return uExternalColor;\n      }\n    "],["\n      vec4 forwardExternalColor(out bool castShadows) {\n        vExternalColor \x3d uExternalColor;\n        castShadows \x3d true;\n        return uExternalColor;\n      }\n    "])))),
a.fragment.code.add(d.glsl(h||(h=c(["\n      void readExternalColor(out vec4 externalColor, out int externalColorMixMode) {\n        externalColor \x3d vExternalColor;\n        externalColorMixMode \x3d uExternalColorMixMode;\n      }\n    "],["\n      void readExternalColor(out vec4 externalColor, out int externalColorMixMode) {\n        externalColor \x3d vExternalColor;\n        externalColorMixMode \x3d uExternalColorMixMode;\n      }\n    "])))))};var e,f,g,h});