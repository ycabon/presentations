// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define(["require","exports","../../../../../../core/tsSupport/makeTemplateObjectHelper","../../shaderModules/interfaces","../../shaderModules/ShaderBuilder"],function(h,b,c,d,g){Object.defineProperty(b,"__esModule",{value:!0});b.build=function(){var a=new g.ShaderBuilder;a.attributes.add("position","vec2");a.attributes.add("uv0","vec2");a.vertex.uniforms.add("scale","float");a.vertex.uniforms.add("offset","vec2");a.varyings.add("uv","vec2");a.vertex.code.add(d.glsl(e||(e=c(["\n    void main(void) {\n      gl_Position \x3d vec4(position, 0.0, 1.0);\n      uv \x3d uv0 * scale + offset;\n    }\n  "],
["\n    void main(void) {\n      gl_Position \x3d vec4(position, 0.0, 1.0);\n      uv \x3d uv0 * scale + offset;\n    }\n  "]))));a.fragment.uniforms.add("tex","sampler2D");a.fragment.uniforms.add("opacity","float");a.fragment.code.add(d.glsl(f||(f=c(["\n    void main() {\n      vec4 color \x3d texture2D(tex, uv);\n\n      // Note: output in pre-multiplied alpha for correct alpha compositing\n      gl_FragColor \x3d vec4(color.xyz, 1.0) * color.a * opacity;\n    }\n  "],["\n    void main() {\n      vec4 color \x3d texture2D(tex, uv);\n\n      // Note: output in pre-multiplied alpha for correct alpha compositing\n      gl_FragColor \x3d vec4(color.xyz, 1.0) * color.a * opacity;\n    }\n  "]))));
return a};var e,f});