// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../../../../../../core/tsSupport/makeTemplateObjectHelper ../../../../../../core/has ../../shaderModules/interfaces ../../../lib/WebGLDriverTest".split(" "),function(k,a,b,g,c,h){Object.defineProperty(a,"__esModule",{value:!0});a.DoublePrecision=function(d,a){a.doublePrecisionRequiresObfuscation?d.vertex.code.add(c.glsl(e||(e=b(["\n      vec3 dpPlusFrc(vec3 a, vec3 b) {\n        return mix(a, a + b, vec3(notEqual(b, vec3(0))));\n      }\n\n      vec3 dpMinusFrc(vec3 a, vec3 b) {\n        return mix(vec3(0), a - b, vec3(notEqual(a, b)));\n      }\n\n      // based on https://www.thasler.com/blog/blog/glsl-part2-emu\n      vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n        vec3 t1 \x3d dpPlusFrc(hiA, hiB);\n        vec3 e \x3d dpMinusFrc(t1, hiA);\n        vec3 t2 \x3d dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\n        return t1 + t2;\n      }\n    "],
["\n      vec3 dpPlusFrc(vec3 a, vec3 b) {\n        return mix(a, a + b, vec3(notEqual(b, vec3(0))));\n      }\n\n      vec3 dpMinusFrc(vec3 a, vec3 b) {\n        return mix(vec3(0), a - b, vec3(notEqual(a, b)));\n      }\n\n      // based on https://www.thasler.com/blog/blog/glsl-part2-emu\n      vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n        vec3 t1 \x3d dpPlusFrc(hiA, hiB);\n        vec3 e \x3d dpMinusFrc(t1, hiA);\n        vec3 t2 \x3d dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\n        return t1 + t2;\n      }\n    "])))):
d.vertex.code.add(c.glsl(f||(f=b(["\n      vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n        vec3 t1 \x3d hiA + hiB;\n        vec3 e \x3d t1 - hiA;\n        vec3 t2 \x3d ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\n        return t1 + t2;\n      }\n    "],["\n      vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n        vec3 t1 \x3d hiA + hiB;\n        vec3 e \x3d t1 - hiA;\n        vec3 t2 \x3d ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\n        return t1 + t2;\n      }\n    "]))))};
a.doublePrecisionRequiresObfuscation=function(a){return g("force-double-precision-obfuscation")?!0:h.testWebGLDriver(a).doublePrecisionRequiresObfuscation};var e,f});