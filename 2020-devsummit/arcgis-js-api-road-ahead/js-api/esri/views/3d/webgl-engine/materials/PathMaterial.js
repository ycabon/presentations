// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/assignHelper ../../../../core/tsSupport/extendsHelper ../../../../core/mathUtils ../../../../geometry/support/aaBoundingBox ../../support/buffer/BufferView ../../support/buffer/InterleavedLayout ../lib/geometryDataUtils ../lib/GLMaterial ../lib/Material ../lib/Util ./PathTechnique ./VisualVariableMaterialParameters ./internal/bufferWriterUtils ./internal/MaterialUtil ./internal/MaterialUtil ./renderers/MergedRenderer".split(" "),function(h,I,r,k,
n,t,u,v,w,x,y,z,c,A,p,B,q,C){var D=z.assert;h=function(f){function b(a,e){e=f.call(this,e)||this;e.supportsEdges=!0;e.techniqueConfig=new c.PathTechniqueConfiguration;e.params=q.copyParameters(a,E);e.vertexBufferLayout=b.getVertexBufferLayout(e.params);return e}k(b,f);b.prototype.getTechniqueConfig=function(a){this.techniqueConfig.output=a;this.techniqueConfig.vvSize=this.params.vvSizeEnabled;this.techniqueConfig.vvColor=this.params.vvColorEnabled;this.techniqueConfig.vvOpacity=this.params.vvOpacityEnabled;
this.techniqueConfig.slicePlaneEnabled=this.params.slicePlaneEnabled;this.techniqueConfig.transparent=this.params.transparent;this.techniqueConfig.sceneHasOcludees=this.params.sceneHasOcludees;0===a&&(this.techniqueConfig.doubleSidedMode=this.params.doubleSided&&"normal"===this.params.doubleSidedType?1:this.params.doubleSided&&"winding-order"===this.params.doubleSidedType?2:0,this.techniqueConfig.receiveShadows=this.params.receiveShadows,this.techniqueConfig.receiveSSAO=this.params.receiveSSAO);return this.techniqueConfig};
b.prototype.getPassParameters=function(){return this.params};b.prototype.isVisibleInPass=function(a){return 3===a?this.params.castShadows:!0};b.prototype.isVisible=function(){var a=this.params;return f.prototype.isVisible.call(this)?0<a.opacity:!1};b.prototype.setParameterValues=function(a){B.updateParameters(this.params,a)&&this.parametersChanged()};b.prototype.getParameters=function(){return this.params};b.prototype.intersect=function(a,b,c,f,l,m,F){if(a.metadata){b=a.metadata.pathGeometry;c=[this.params.size[0],
this.params.size[1]];if(this.params.vvSizeEnabled){var d=this.params.vvSizeOffset,e=this.params.vvSizeFactor,g=this.params.vvSizeMinSize,h=this.params.vvSizeMaxSize,k=b.sizeAttributeValue;c[0]*=n.clamp(d[0]+k*e[0],g[0],h[0]);c[1]*=n.clamp(d[1]+k*e[1],g[1],h[1])}d=Math.max(c[0],c[1]);a=t.fromValues(a.boundingInfo.bbMin[0]-d,a.boundingInfo.bbMin[1]-d,a.boundingInfo.bbMin[2]-d,a.boundingInfo.bbMax[0]+d,a.boundingInfo.bbMax[1]+d,a.boundingInfo.bbMax[2]+d);d=[m[0]-l[0],m[1]-l[1],m[2]-l[2]];e=Math.sqrt(d[0]*
d[0]+d[1]*d[1]+d[2]*d[2]);q.intersectAabbInvDir(a,l,[e/d[0],e/d[1],e/d[2]],f.tolerance)&&(b.baked.size&&b.baked.size[0]===c[0]&&b.baked.size[1]===c[1]||b.baked.bake(c),b.baked.intersect(l,m,F))}};b.prototype.computeAttachmentOrigin=function(a,b){a=a.data;return(a="getVertexAttr"in a?a.getVertexAttr():"vertexAttr"in a?a.vertexAttr:null)?w.computeAttachmentOriginLines(a[c.PathVertexAttrConstants.POSITION],null,b):null};b.prototype.createBufferWriter=function(){return new G(this.vertexBufferLayout)};
b.prototype.createRenderer=function(a,b){return new C(a,b,this,c.pathVertexAttributeLocations)};b.prototype.getGLMaterial=function(a){if(0===a.output||1===a.output||2===a.output||4===a.output||3===a.output&&this.params.castShadows)return new H(a)};b.getVertexBufferLayout=function(a){var b=v.newLayout().vec3f(c.PathVertexAttrConstants.POSITION).vec4f(c.PathVertexAttrConstants.PROFILERIGHT).vec4f(c.PathVertexAttrConstants.PROFILEUP).vec4f(c.PathVertexAttrConstants.PROFILEVERTEXANDNORMAL);if(a.vvColorEnabled||
a.vvSizeEnabled||a.vvOpacityEnabled)b=b.vec4f(c.PathVertexAttrConstants.FEATUREVALUE);return b};return b}(y.Material);var H=function(f){function b(a){a=f.call(this,a)||this;a.updateParameters();return a}k(b,f);b.prototype.updateParameters=function(){this.technique=this.techniqueRep.acquireAndReleaseExisting(c.PathTechnique,this.material.getTechniqueConfig(this.output),this.technique)};b.prototype.beginSlot=function(a){return a===(this.technique.configuration.transparent?5:3)};b.prototype._updateOccludeeState=
function(a){a.hasOccludees!==this.material.getParameters().sceneHasOcludees&&(this.material.setParameterValues({sceneHasOcludees:a.hasOccludees}),this.updateParameters())};b.prototype._updateShadowState=function(a){a.shadowMappingEnabled!==this.technique.configuration.receiveShadows&&(this.material.setParameterValues({receiveShadows:a.shadowMappingEnabled}),this.updateParameters())};b.prototype.ensureParameters=function(a){0===this.output&&(this._updateShadowState(a),this._updateOccludeeState(a))};
b.prototype.bind=function(a,b){a.bindProgram(this.technique.program);this.technique.bindPass(a,this.material.getPassParameters(),b)};return b}(x.GLMaterial),E=r({size:[1,1,1],ambient:[.2,.2,.2],diffuse:[.8,.8,.8],specular:[0,0,0],opacity:1,doubleSided:!1,doubleSidedType:"normal",receiveSSAO:!0,receiveShadows:!1,castShadows:!0,slicePlaneEnabled:!1,transparent:!1,sceneHasOcludees:!1},A.Default),G=function(){function f(b){this.vertexBufferLayout=b}f.prototype.allocate=function(b){return this.vertexBufferLayout.createBuffer(b)};
f.prototype.elementCount=function(b){return b.indices[c.PathVertexAttrConstants.POSITION].length};f.prototype.write=function(b,a,e,f){var g=function(b){if(b in a.vertexAttr){var c=a.vertexAttr[b],g=a.indices[b];D(4===c.size);var d=e.getField(b,u.BufferViewVec4f);if(d)p.writeBufferVec4(g,c.data,d,f);else throw Error("unable to acquire view for "+b);}};g(c.PathVertexAttrConstants.PROFILERIGHT);g(c.PathVertexAttrConstants.PROFILEUP);g(c.PathVertexAttrConstants.PROFILEVERTEXANDNORMAL);this.vertexBufferLayout.hasField(c.PathVertexAttrConstants.FEATUREVALUE)&&
g(c.PathVertexAttrConstants.FEATUREVALUE);p.writeDefaultAttributes(a,this.vertexBufferLayout,b.transformation,b.invTranspTransformation,e,f)};return f}();return h});