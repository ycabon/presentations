// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/tsSupport/extendsHelper ../../../../core/tsSupport/decorateHelper ../../../../core/tsSupport/assignHelper ../../../../core/mathUtils ../../../../core/libs/gl-matrix-2/factories/vec4f32 ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/DefaultVertexAttributeLocations ./Laserlines.glsl ../../../webgl/Program ../../../webgl/renderState ../../../webgl/renderState".split(" "),
function(l,f,g,e,d,m,n,p,q,c,r,h,t,u,k){Object.defineProperty(f,"__esModule",{value:!0});d=function(c){function b(){return null!==c&&c.apply(this,arguments)||this}g(b,c);b.prototype.initializeProgram=function(a){var c=b.shader.get().build(this.configuration);return new t(a.rctx,c.generateSource("vertex"),c.generateSource("fragment"),r.Default3D)};b.prototype.bind=function(a,b){this.program.setUniform3fv("innerColor",a.innerColor);this.program.setUniform1f("innerWidth",a.innerWidth*b.pixelRatio);this.program.setUniform3fv("glowColor",
a.glowColor);this.program.setUniform1f("glowWidth",a.glowWidth*b.pixelRatio);this.program.setUniform1f("glowFalloff",a.glowFalloff);this.program.setUniform1f("globalAlpha",a.globalAlpha);this.configuration.contrastControlEnabled&&this.program.setUniform1f("globalAlphaContrastBoost",null!=a.globalAlphaContrastBoost?a.globalAlphaContrastBoost:1);var c=null!=a.angleCutoff?a.angleCutoff:h.defaultAngleCutoff;this.program.setUniform2f("angleCutoff",Math.cos(c),Math.cos(Math.max(0,c-m.deg2rad(2))));this.configuration.intersectsLineEnabled&&
this.program.setUniform1f("perScreenPixelRatio",b.perScreenPixelRatio);this.configuration.heightPlaneHeightEnabled&&this.program.setUniform4fv("heightPlaneFillColor",a.heightPlaneFillColor||n.ONES)};b.prototype.initializePipeline=function(){return k.makePipelineState({blending:u.simpleBlendingParams(1,771),colorWrite:k.defaultColorWriteParams})};b.shader=new p.ReloadableShaderModule(h,"./Laserlines.glsl",l);return b}(q.ShaderTechnique);f.LaserlineTechnique=d;d=function(d){function b(){var a=null!==
d&&d.apply(this,arguments)||this;a.heightPlaneEnabled=!1;a.heightPlaneHeightEnabled=!1;a.pointDistanceEnabled=!1;a.lineVerticalPlaneEnabled=!1;a.intersectsLineEnabled=!1;a.contrastControlEnabled=!1;return a}g(b,d);e([c.parameter()],b.prototype,"heightPlaneEnabled",void 0);e([c.parameter()],b.prototype,"heightPlaneHeightEnabled",void 0);e([c.parameter()],b.prototype,"pointDistanceEnabled",void 0);e([c.parameter()],b.prototype,"lineVerticalPlaneEnabled",void 0);e([c.parameter()],b.prototype,"intersectsLineEnabled",
void 0);e([c.parameter()],b.prototype,"contrastControlEnabled",void 0);return b}(c.ShaderTechniqueConfiguration);f.LaserlineTechniqueConfiguration=d});