import { y as e, z as y, A as i, cI as c$1, C as u, U, d8 as g, c6 as z, en as w, G as t, d6 as e$1, h6 as c$2, h7 as m, gL as qe, a_ as y$1, dn as R } from './_virtual:index-98fd932b.js';
import { t as t$1 } from './QueryEngineCapabilities-18b4173a.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
let a=class extends c$1{constructor(t){super(t),this.type="csv";}load(t){const e=u(t)?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),U(this)}destroy(){var t;null==(t=this._connection)||t.close(),this._connection=null;}openPorts(){return this.load().then((()=>this._connection.openPorts()))}queryFeatures(t,e={}){return this.load(e).then((()=>this._connection.invoke("queryFeatures",t?t.toJSON():null,e))).then((t=>g.fromJSON(t)))}queryFeaturesJSON(t,e={}){return this.load(e).then((()=>this._connection.invoke("queryFeatures",t?t.toJSON():null,e)))}queryFeatureCount(t,e={}){return this.load(e).then((()=>this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)))}queryObjectIds(t,e={}){return this.load(e).then((()=>this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)))}queryExtent(t,e={}){return this.load(e).then((()=>this._connection.invoke("queryExtent",t?t.toJSON():null,e))).then((t=>({count:t.count,extent:z.fromJSON(t.extent)})))}async _startWorker(t$1){this._connection=await w("CSVSourceWorker",{strategy:t("feature-layers-workers")?"dedicated":"local",signal:t$1});const o=await this._connection.invoke("load",{url:this.url,parsing:{columnDelimiter:this.delimiter,fields:this.fields&&this.fields.map((t=>t.toJSON())),latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference&&this.spatialReference.toJSON(),timeInfo:this.timeInfo&&this.timeInfo.toJSON()}},{signal:t$1});this.locationInfo=o.locationInfo,this.sourceJSON=o.layerDefinition,this.columnDelimiter=o.columnDelimiter;}};e([y()],a.prototype,"type",void 0),e([y()],a.prototype,"url",void 0),e([y()],a.prototype,"delimiter",void 0),e([y()],a.prototype,"fields",void 0),e([y()],a.prototype,"latitudeField",void 0),e([y()],a.prototype,"longitudeField",void 0),e([y()],a.prototype,"spatialReference",void 0),e([y()],a.prototype,"timeInfo",void 0),e([y()],a.prototype,"locationInfo",void 0),e([y()],a.prototype,"sourceJSON",void 0),e([y()],a.prototype,"columnDelimiter",void 0),a=e([i("esri.layers.graphics.sources.CSVSource")],a);var p=a;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
let d=class extends qe{constructor(...e){super(...e),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.portalItem=null,this.spatialReference=y$1.WGS84,this.source=null,this.type="csv";}normalizeCtorArgs(e,t){return "string"==typeof e?{url:e,...t}:e}get capabilities(){return {data:{supportsAttachment:!1,supportsM:!1,supportsZ:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsQuery:!0,supportsResizeAttachments:!1,supportsUpdate:!1},query:t$1,queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1},editing:{supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsRollbackOnFailure:!1,supportsUpdateWithoutM:!1,supportsUploadWithItemId:!1,supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1}}}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(e,t){return null!=t.showLabels?t.showLabels:!!(t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.labelingInfo)}set url(e){this._set("url",e);}async createGraphicsSource(e){const t=new p({delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,timeInfo:this.timeInfo,url:this.url});return this._set("source",t),await t.load({signal:e}),this.read({locationInfo:t.locationInfo,columnDelimiter:t.columnDelimiter},{origin:"service",url:this.parsedUrl}),t}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(R.from(e)||this.createQuery()))).then((e=>{if(e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(R.from(e)||this.createQuery())))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(R.from(e)||this.createQuery())))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(R.from(e)||this.createQuery())))}write(e,t){return super.write(e,{...t,writeLayerSchema:!0})}_verifyFields(){}_verifySource(){}_hasMemorySource(){return !1}};e([y({readOnly:!0,dependsOn:["loaded"],autoTracked:!1,json:{read:!1,write:!1}})],d.prototype,"capabilities",null),e([y({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],d.prototype,"delimiter",void 0),e([y({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],d.prototype,"editingEnabled",void 0),e([y({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],d.prototype,"fields",void 0),e([y({type:Boolean,readOnly:!0,dependsOn:["loaded"]})],d.prototype,"isTable",null),e([e$1("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],d.prototype,"readWebMapLabelsVisible",null),e([y({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],d.prototype,"latitudeField",void 0),e([y({type:["show","hide"]})],d.prototype,"listMode",void 0),e([y({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],d.prototype,"locationType",void 0),e([y({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],d.prototype,"longitudeField",void 0),e([y({type:["CSV"]})],d.prototype,"operationalLayerType",void 0),e([y()],d.prototype,"outFields",void 0),e([y({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],d.prototype,"path",void 0),e([y({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],d.prototype,"portalItem",void 0),e([y({json:{read:!1},cast:null,type:p,readOnly:!0})],d.prototype,"source",void 0),e([y({json:{read:!1},value:"csv",readOnly:!0})],d.prototype,"type",void 0),e([y({json:{read:c$2,write:{isRequired:!0,ignoreOrigin:!0,writer:m}}})],d.prototype,"url",null),d=e([i("esri.layers.CSVLayer")],d);var c=d;

export default c;
