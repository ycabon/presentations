import { w as a, B as p, eO as n, y as e, z as y$1, e9 as m, eP as U, A as i } from './_virtual:index-98fd932b.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const o={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let y=class extends(a(p)){constructor(){super(...arguments),this._scale=null,this.view=null;}destroy(){this.layer=this.view=null;}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map((e=>e.toExportImageJSON()));return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&n(this.visibleSublayers,this.layer.serviceSublayers,this.layer)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.allSublayers.on("change",(()=>this.notifyChange("visibleSublayers"))),e.on("sublayer-update",(e=>this.notifyChange(o[e.propertyName])))],"layer"));}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map((e=>e.id)).join(","):"show:-1":null}get layerDefs(){const e=this.visibleSublayers.filter((e=>null!=e.definitionExpression));return e.length?JSON.stringify(e.reduce(((e,s)=>(e[s.id]=s.definitionExpression,e)),{})):null}get scale(){return null!=this._scale?this._scale:this.view&&this.view.scale||0}set scale(e){this.view||(this._scale=e,this.notifyChange("scale"));}get version(){const e=this;e.layers,e.layerDefs,e.dynamicLayers,e.timeExtent;const s=e.layer;return s&&(s.dpi,s.imageFormat,s.imageTransparency,s.gdbVersion),(this._get("version")||0)+1}set version(e){this._set("version",e);}get visibleSublayers(){const e=[];if(!this.layer)return e;const s=this.layer.sublayers,r=s=>{const i=this.scale,a=0===i,t=0===s.minScale||i<=s.minScale,l=0===s.maxScale||i>=s.maxScale;s.visible&&(a||t&&l)&&(s.sublayers?s.sublayers.forEach(r):e.unshift(s));};s&&s.forEach(r);const i=this._get("visibleSublayers");return !i||i.length!==e.length||i.some(((s,r)=>e[r]!==s))?e:i}toJSON(){const e=this.layer;let s={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?s.dynamicLayers=this.dynamicLayers:s={...s,layers:this.layers,layerDefs:this.layerDefs},s}};e([y$1({readOnly:!0,dependsOn:["hasDynamicLayers","visibleSublayers"]})],y.prototype,"dynamicLayers",null),e([y$1({readOnly:!0,dependsOn:["visibleSublayers","layer.serviceSublayers","layer.capabilities"]})],y.prototype,"hasDynamicLayers",null),e([y$1()],y.prototype,"layer",null),e([y$1({readOnly:!0,dependsOn:["visibleSublayers"]})],y.prototype,"layers",null),e([y$1({readOnly:!0,dependsOn:["visibleSublayers"]})],y.prototype,"layerDefs",null),e([y$1({type:Number,dependsOn:["view.scale"]})],y.prototype,"scale",null),e([y$1(m)],y.prototype,"timeExtent",void 0),e([y$1({dependsOn:["layers","layerDefs","dynamicLayers","layer.dpi","layer.imageFormat","layer.imageTransparency","layer.gdbVersion","timeExtent"]})],y.prototype,"version",null),e([y$1({type:U})],y.prototype,"view",void 0),e([y$1({readOnly:!0,dependsOn:["layer.sublayers","scale"]})],y.prototype,"visibleSublayers",null),y=e([i("esri.layers.mixins.ExportImageParameters")],y);

export { y };
