import { cd as Q, cD as p, aN as t$1 } from './_virtual:index-a8a6346c.js';
import { t } from './centroid-6105d00e.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
let s=0;class n{constructor(t){this.type="FeatureSetReader",this.seen=!1,this.instance=0,this._tx=0,this._ty=0,this._xmin=-1,this._xmax=0,this._ymin=0,this._ymax=0,this._joined=[],this.instance=t;}static createInstance(){return s++,s=s>65535?0:s,s}get _hasFilter(){return -1!==this._xmin}getQuantizationTransform(){throw new Error("Unable to find transform for featureSet")}getStorage(){return this._storage}getComputedNumeric(t){return this.getComputedNumericAtIndex(0)}setComputedNumeric(t,e){return this.setComputedNumericAtIndex(e,0)}getComputedString(t){return this.getComputedStringAtIndex(0)}setComputedString(t,e){return this.setComputedStringAtIndex(0,e)}getComputedNumericAtIndex(t){return this._storage.getComputedNumericAtIndex(this.getDisplayId(),t)}setComputedNumericAtIndex(t,e){this._storage.setComputedNumericAtIndex(this.getDisplayId(),t,e);}getComputedStringAtIndex(t){return this._storage.getComputedStringAtIndex(this.getDisplayId(),t)}setComputedStringAtIndex(t,e){return this._storage.setComputedStringAtIndex(this.getDisplayId(),t,e)}transform(t,e){const r=this.copy();return r._tx=t,r._ty=e,r}extent(t,e,r,i){const s=this.copy();return s._xmin=t,s._xmax=r,s._ymin=e,s._ymax=i,s}hasFilter(){return this._hasFilter}readAttribute(t,e=!1){const r=this._readAttribute(t,e);if(void 0!==r)return r;for(const r of this._joined){r.setIndex(this.getIndex());const i=r._readAttribute(t,e);if(void 0!==i)return i}}readAttributes(){return this._readAttributes()}joinAttributes(t){this._joined.push(t);}readArcadeFeature(){return this}geometry(){const e=this.readHydratedGeometry(),i=Q(e,this.geometryType,this.hasZ,this.hasM),s=p(i);return s.spatialReference=this._arcadeSpatialReference,s}field(t){return this.readAttribute(t,!0)}hasField(t){return !0}setField(t,e){}keys(){return []}castToText(){return ""}_computeCentroid(){if("esriGeometryPolygon"!==this.geometryType)return null;const t$2=this.readUnquantizedGeometry();if(!t$2||t$2.hasIndeterminateRingOrder)return null;const r=this.getQuantizationTransform();return t(new t$1,t$2,this.hasM,this.hasZ,r)}copyInto(t){t.seen=this.seen,t._storage=this._storage,t._arcadeSpatialReference=this._arcadeSpatialReference,t._joined=this._joined,t._tx=this._tx,t._ty=this._ty,t._xmin=this._xmin,t._xmax=this._xmax,t._ymin=this._ymin,t._ymax=this._ymax;}}

export { n };
