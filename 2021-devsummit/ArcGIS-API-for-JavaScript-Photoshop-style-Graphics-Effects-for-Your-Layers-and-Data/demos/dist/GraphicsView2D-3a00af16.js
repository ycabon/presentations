import { aD as d$1, aE as H, aF as t$1, aG as y, f as t$2, aH as e, aI as f$1, aJ as A, aK as re, aL as oe, aM as _, aN as t$3, G as t$4, aO as L$1, aP as U, aQ as f$2, aR as e$1, aS as i$1, aT as b$1, n as t$5, aU as E$2, aV as r, y as e$2, z as y$1, A as i$2, aW as r$1, w as a$1, U as U$1, aX as r$2, ai as e$3, aY as m$1, aZ as h, E as f$3, a_ as y$2, C as u, a$ as u$1, b0 as x$1, b1 as u$2, b2 as S, b3 as a$2, T, b4 as l$1, P, b5 as O$1, b6 as j$1, b7 as N, B as p$1 } from './_virtual:index-a8a6346c.js';
import { L, d as d$2, i, f as f$4, g } from './quantizationUtils-edd05277.js';
import { j, v, n as n$2 } from './shapingUtils-5ac9a0a4.js';
import { s as s$1, L as L$3, m, n as n$1 } from './WGLMeshFactory-a89becb5.js';
import { l, m as m$2, a as m$3 } from './FeatureContainer-e2d97937.js';
import { a, i as i$3, L as L$2, k } from './ComputedAttributeStorage-b46a79ef.js';
import { n } from './FeatureSetReader-430f5a63.js';
import { I } from './Utils-69892482.js';
import { z as z$1, X, D, F, E as E$1, G as G$1, O, K as K$1 } from './graphicsUtils-e8bda91b.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
class s extends a{constructor(e,r){super(e,r,null);}static from(o){const n$1=n.createInstance(),c=[],i=o.filter((e=>!!e.geometry));for(const t of i){const o=d$1(t.geometry);H(c,[t],o,!1,!1,"uid");}return new s(n$1,c)}get geometryType(){const e=this._current;return e?e.geometryType:null}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new s(this.instance,this._features);return this.copyInto(e),e}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
class B extends l{get hasLabels(){return !1}get labelsVisible(){return !1}renderChildren(r){this.attributeView.bindTextures(r.context),this.children.some((e=>e.hasData))&&(super.renderChildren(r),r.drawPhase===I.MAP&&this._renderChildren(r),r.drawPhase===I.HIGHLIGHT&&this._renderHighlight(r));}_renderChildren(e,r){for(const i of this.children)i.isReady&&i.hasData&&(i.commitChanges(e),e.context.setStencilFunction(514,i.stencilRef,255),i._displayList.replay(e,i,r));}_renderHighlight(e){const{painter:r}=e,i=r.effects.highlight;i.bind(e),this._renderChildren(e,i.defines),i.draw(e),i.unbind();}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const p=new t$3,c=new t$3;function d(e){e.coords.length=0,e.lengths.length=0;}class f{constructor(){this.bounds=t$1(),this.graphic=null,this.size=[0,0,0,0];}static acquire(e=null,t,s,r,o,i){let h;return 0===f._pool.length?h=new f:(h=f._pool.pop(),this._set.delete(h)),h.acquire(e,t,s,r,o,i),h}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e));}static getCentroidQuantized(r,o){if(y(r.geometry)){const s=r.symbol;if(t$2(s))return null;if(z$1(s.type)){const e$1=e(r.geometry);return L(o,{},{x:e$1[0],y:e$1[1]},!1,!1)}}return null}acquire(e=null,t,s,r,o,i){e&&this.set(e,t,s,r,o,i);}release(){this.graphic=null,this.symbolResource=null,this.geometry=null;}get symbol(){return this.symbolResource.symbol}set(e,t,s,r,o,i){this.graphic=e,this.geometry=s,this.symbolResource=t,this.updateBounds(r,o,i);}updateBounds(e,t,s){X(this.bounds,this.size,this.symbolResource,this.geometry,e,t,s);}getGeometryQuantized(e){if(y(this.geometry)){const t=this.geometry.rings;if(1===t.length&&2===t[0].length)return d$2(e,{paths:[[t[0][0],t[0][1]]]})}else if(f$1(this.geometry))return d(p),d(c),A(p,this.geometry),re(c,p,this.geometry.hasZ,this.geometry.hasM,"esriGeometryPolyline",e.scale[0]),oe(p,c,this.geometry.hasZ,this.geometry.hasM,"esriGeometryPolyline",e),_(p,this.geometry.hasZ,this.geometry.hasM);return d$2(e,this.geometry)}}f._pool=[],f._set=new Set;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const b={minX:0,minY:0,maxX:0,maxY:0},x=t$1(),G=[];function z(e,t,i,r,s){return b.minX=t,b.minY=i,b.maxX=r,b.maxY=s,e.search(b)}class E{constructor(t,i$1,r,s,n,a){this._graphics=s,this._onAdd=n,this._onRemove=a,this._index=i(9,t$4("csp-restrictions")?e=>({minX:e.bounds[0],minY:e.bounds[1],maxX:e.bounds[2],maxY:e.bounds[3]}):[".bounds[0]",".bounds[1]",".bounds[2]",".bounds[3]"]),this._itemByGraphic=new Map,this._currentLevel=-1/0,this._tileInfoView=t,this._uidFieldName=r;const u=t.getClosestInfoForScale(i$1);u&&(this._currentLevel=u.level,this._resolution=this._tileInfoView.getTileResolution(u.level)),this._metersPerUnit=L$1(t.spatialReference);}hitTest(e,o,u,h,l){e=U(e,this._tileInfoView.spatialReference);const m=.5*h*u;x[0]=e-m,x[1]=o-m,x[2]=e+m,x[3]=o+m;const f=.5*h*(u+50),b=z(this._index,e-f,o-f,e+f,o+f);if(!b||0===b.length)return [];const G={x:e,y:o},I=[];let B;for(const u of b)if(u.graphic.visible)switch(d$1(u.geometry)){case"esriGeometryPoint":{const e=u.symbol;if(!e)continue;const i=u.geometry,{x:r,y:s}=i,o=h*this._metersPerUnit;let n;switch(e.type){case"esriTS":n=D(r,s,e,u.size,h,l);break;case"expanded-cim":n=G$1(r,s,e,h,o,l);break;case"esriSMS":case"esriPMS":n=F(r,s,e,h,o,l);}f$2(n,G)&&I.push(u);}break;case"esriGeometryPolyline":{const t=u.symbol;if(!t||!t.layers.length)continue;const i=t.layers[0];B=1.5*h*window.devicePixelRatio*t$5(i.width),E$1(u.geometry,e,o,B)&&I.push(u);}break;case"esriGeometryEnvelope":{const e=u.geometry,t=i$1(e.xmin,e.ymin,e.xmax,e.ymax);b$1(t,x)&&I.push(u);break}case"esriGeometryPolygon":{if(f$2(u.geometry,G)){I.push(u);break}const e=e$1(u.geometry);if(Math.abs(e.ymax-e.ymin)<5*h||Math.abs(e.xmax-e.xmin)<5*h){const t=i$1(e.xmin,e.ymin,e.xmax,e.ymax);b$1(t,x)&&I.push(u);}break}case"esriGeometryMultipoint":{const e=u.symbol;if(!e)continue;const i=u.geometry.points;let r;for(let s=0;s<i.length;s++)if(r="esriTS"===e.type?D(i[s][0],i[s][1],e,u.size,h,l):F(i[s][0],i[s][1],e,h,h*this._metersPerUnit,l),f$2(r,G)){I.push(u);break}break}}return I.sort(((e,t)=>{const i=O(e.graphic),r=O(t.graphic);return i===r?t.zorder-e.zorder:i-r})),I.map((e=>e.graphic))}getGraphicsData(e,t,i){const r=z(this._index,t.bounds[0],t.bounds[1],t.bounds[2],t.bounds[3]);if(0===r.length||0===i.length)return [];r.sort(((e,t)=>e.zorder-t.zorder)),r[0].insertAfter=-1;for(let e=1;e<r.length;e++)r[e].insertAfter=r[e-1].graphic.uid;r.sort(((e,t)=>e.graphic.uid-t.graphic.uid)),i.sort(((e,t)=>e.uid-t.uid));let s,o=0,n=0;const a=[],u={originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]};for(const t of i){for(n=-2;o<r.length;)if(s=r[o],o++,t.uid===s.graphic.uid){n=s.insertAfter;break}if(!s.geometry||-2===n)continue;const i=s.getGeometryQuantized(u),h={...s.graphic.attributes};h[this._uidFieldName]=t.uid,null==s.groupId&&(s.groupId=e.createTemplateGroup(s.symbol,null)),a.push({centroid:f.getCentroidQuantized(s,u),geometry:i,attributes:h,symbol:s.symbol,groupId:s.groupId,insertAfter:n,zorder:s.zorder});}return a.sort(((e,t)=>e.zorder-t.zorder)),a}queryTileData(e,t){const i=50*t.resolution,r=E$2(t.bounds,i,t$1()),s=z(this._index,r[0],r[1],r[2],r[3]),o=[];return this._createTileGraphics(o,e,s,{originPosition:"upperLeft",scale:[t.resolution,t.resolution],translate:[t.bounds[0],t.bounds[3]]}),o}has(e){return this._itemByGraphic.has(e)}getBounds(e){return this._itemByGraphic.has(e)?this._itemByGraphic.get(e).bounds:null}addOrModify(e,t,i){if(!e)return;this.has(e)&&this.remove(e),this._onAdd(e);const r=f.acquire(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference);return this._itemByGraphic.set(e,r),i&&this._index.insert(r),r.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);this._index.remove(t),this._itemByGraphic.delete(e);}updateZ(){const e=this._graphics.items;let t,i;for(let r=0;r<e.length;r++)i=e[r],t=this._itemByGraphic.get(i),t&&(t.zorder=r);}update(e,t,i){const r$1=this._itemByGraphic.get(e);r$1.groupId=null;const s=r(r$1.bounds);return r$1.size[0]=r$1.size[1]=0,this._index.remove(r$1),r$1.set(e,t,i,this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),i&&this._index.insert(r$1),{oldBounds:s,newBounds:r$1.bounds}}updateLevel(e){if(this._currentLevel===e)return;this._currentLevel=e;const t=this._tileInfoView.getTileResolution(e);this._resolution=t,this._index.clear(),G.length=0,this._itemByGraphic.forEach((e=>{e.updateBounds(this._resolution,this._resolution*this._metersPerUnit,this._tileInfoView.spatialReference),e.geometry&&G.push(e);})),this._index.load(G);}clear(){this._itemByGraphic.clear(),this._index.clear();}_createTileGraphics(e,t,i,r){const s=this._uidFieldName;let o,n,a,u;i.sort(((e,t)=>e.zorder-t.zorder));for(let h=0;h<i.length;h++){a=i[h],o=a.graphic,n=a.getGeometryQuantized(r),u=0===h?-1:i[h-1].graphic.uid;const l={...a.graphic.attributes};l[s]=o.uid,null==a.groupId&&(a.groupId=t.createTemplateGroup(a.symbol,null)),e.push({centroid:f.getCentroidQuantized(a,r),geometry:n,attributes:l,symbol:a.symbol,groupId:a.groupId,insertAfter:u,zorder:a.zorder});}}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const t=t=>{let p=class extends(r$1(t)){constructor(){super(...arguments),this.graphics=null,this.renderer=null,this.view=null;}};return e$2([y$1()],p.prototype,"graphics",void 0),e$2([y$1()],p.prototype,"renderer",void 0),e$2([y$1()],p.prototype,"updating",void 0),e$2([y$1()],p.prototype,"view",void 0),p=e$2([i$2("esri.views.layers.GraphicsView")],p),p};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
function Z(t,e,i){if(i.has(t))return i.get(t);const s={tile:e,addedOrModified:[],removed:[]};return i.set(t,s),s}let K=class extends(t(a$1(p$1))){constructor(t){super(t),this._storage=new i$3,this._displayIds=new Map,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=U$1(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._highlightIds=new Map,this._updatingGraphicsTimer=null,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this),this._processAnalyzedGraphics=this._processAnalyzedGraphics.bind(this),this._graphicsChangeHandler=this._graphicsChangeHandler.bind(this);}_createMatcher(t,e){if(t){const i=j({indexCount:0,fields:{}},"feature",t);this._matcher=s$1(i,e,null);}}_createDisplayId(t){return this._displayIds.has(t)||this._displayIds.set(t,this._storage.createDisplayId()),this._displayIds.get(t)}initialize(){this._tileStore=new L$2(this.view.featuresTilingScheme),this.container=new B(this.view.featuresTilingScheme),this._attributeStore=new k({type:"local",initialize:t=>U$1(this.container.attributeView.initialize(t)),update:t=>this.container.attributeView.requestUpdate(t),render:()=>this.container.requestRender()},r$2());this._graphicStore=new E(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,(t=>{this._createDisplayId(t.uid),this._setFilterState(t.uid,t.visible);}),(t=>{const e=this._displayIds.get(t.uid);this._displayIds.delete(t.uid),this._storage.releaseDisplayId(e);}));const t=new L$3(this.container.getMaterialItems.bind(this.container),!0);this._createMatcher(this.renderer,t),this._meshFactory=new m(null,this.uid,t),this._templateStore=t,this.watch("renderer",(e=>{this._createMatcher(e,t);for(const t of this.graphics)this._pendingUpdate.updated.add(t);this.requestUpdate();})),this._tileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",(()=>{this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",this._graphicsChangeHandler),"graphics"),this._attached=!0,this.notifyChange("updating");}));}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._tileStore.destroy(),this._attributeStore=null;}get updating(){return !this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(t,e){if(!this.view||!this.view.position)return U$1();const i=this.view.toMap(e$3(t,e));return this.searchFeatures(i).then((t=>t&&t.length?t[0]:null))}async searchFeatures(t,e=2){return this._graphicStore.hitTest(t.x,t.y,e,this.view.state.resolution,this.view.state.rotation)}update(t){const e=t.state,i=this.view.featuresTilingScheme.getClosestInfoForScale(e.scale).level;if(this._graphicStore.updateLevel(i),this._tileStore.setViewState(e),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0;}}viewChange(){this.requestUpdate();}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback());}processUpdate(t){this.updateRequested&&(this.updateRequested=!1,this.update(t));}graphicUpdateHandler(t){const{graphic:e,property:i,newValue:s}=t,r=e;switch(i){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(r),this.requestUpdate();break;case"visible":this._setFilterState(r.uid,s),this._attributeStore.sendUpdates();}}addHighlight(t){for(const e of t)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e);this._highlightIds.set(e,t+1);}else this._highlightIds.set(e,1);this._updateHighlight();}removeHighlight(t){for(const e of t)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e)-1;0===t?this._highlightIds.delete(e):this._highlightIds.set(e,t);}this._updateHighlight();}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),e=t.map((t=>this._displayIds.get(t)));this._attributeStore.setHighlight(t,e);}_getIntersectingTiles(t){const e=this._graphicStore.getBounds(t);return !e||0===m$1(e)||0===h(e)?[]:this._tileStore.boundsIntersections(e)}_updateTile(t){const e=t.tile,i=this._getGraphicsData(this._templateStore,e,t.addedOrModified);return this._processGraphics(i).then((i=>(this._patchTile(e.key,{type:"update",addOrUpdate:i,remove:t.removed,end:!0}),i)))}_patchTile(t,e){if(!this._tiles.has(t))return;const i=this._tiles.get(t);this.container.onTileData(i,e),this.container.requestRender();}_graphicsChangeHandler(t){for(const e of t.added)this._pendingUpdate.added.add(e);for(const e of t.moved)this._pendingUpdate.added.add(e);for(const e of t.removed)this._pendingUpdate.added.has(e)?this._pendingUpdate.added.delete(e):this._pendingUpdate.removed.add(e);this._processing?this._needsProcessing=!0:this._updateGraphics();}_getGraphicsToUpdate(){const t={added:[],removed:[],updated:[]},e=this._pendingUpdate;for(const i of this.graphics.items)e.added.has(i)?t.added.push(i):e.updated.has(i)&&t.updated.push(i);for(const i of e.removed)this._graphicStore.has(i)&&t.removed.push(i);return e.added.clear(),e.removed.clear(),e.updated.clear(),t}async _updateGraphics(){this._processing=!0;const{added:t,removed:e,updated:i}=this._getGraphicsToUpdate(),s=this._tilesToUpdate;let r;try{if(!this._graphicStoreUpdate){const t=this.view.state,e=this.view.featuresTilingScheme.getClosestInfoForScale(t.scale).level;this._graphicStore.updateLevel(e),this._tileStore.setViewState(t);}const a=[],h=new Array(t.length+e.length);for(let t=0;t<i.length;t++){const e=i[t],o=this._getIntersectingTiles(e);for(const t of o){r=t.id;Z(r,t,s).removed.push(this._displayIds.get(e.uid));}a.push(this._updateGraphic(e,null)),h[t]=e;}const n=i.length;for(let e=0;e<t.length;e++){const i=t[e];h[n+e]=i,this._graphicsSet.add(i),a.push(this.addGraphic(i));}for(const t of e){this._abortProcessingGraphic(t.uid);const e=this._getIntersectingTiles(t);for(const i of e){r=i.id;Z(r,i,s).removed.push(this._displayIds.get(t.uid));}this._graphicsSet.delete(t),this._graphicStore.remove(t);}let d;this._flipUpdatingGraphics(),await f$3(a);for(let t=0;t<h.length;t++){d=h[t];const e=this._getIntersectingTiles(d);for(const t of e){r=t.id;Z(r,t,s).addedOrModified.push(d);}}this._graphicStore.updateZ();const p=[];for(const[t,e]of s)p.push(this._updateTile(e));await f$3(p);}catch(t){}s.clear(),this.notifyChange("updating"),this._processing=!1,this._needsProcessing&&(this._needsProcessing=!1,this._updateGraphics());}_getArcadeInfo(t){const i=(t.attributes?Object.keys(t.attributes):[]).map((e=>({name:e,alias:e,type:"string"==typeof t.attributes[e]?"esriFieldTypeString":"esriFieldTypeDouble"})));return t$2(t.geometry)?null:{geometryType:d$1(t.geometry),spatialReference:y$2.fromJSON(t.geometry.spatialReference),fields:i}}async _getSymbolForGraphic(t,e){return u(t.symbol)?t.symbol:u(this.renderer)?this.renderer.getSymbolAsync(t,{scale:this.view.scale,abortOptions:e}):this._getNullSymbol(t)}async _getSymbolResources(t,e){if(!this.container.stage)return U$1(null);const i=this._getArcadeInfo(t),s=await this._getSymbolForGraphic(t,e),r=v(s),o=await n$1(r,i,e);if("esriTS"===o.type){const t=[],[e]=n$2(o.text);for(let i=0;i<e.length;i++)t.push(e.charCodeAt(i));const i={symbol:o,id:0,glyphIds:t},[{mosaicItem:s}]=await this.container.getMaterialItems([i]);return {symbol:o,mosaicItem:s}}return {symbol:o,mosaicItem:null}}async _projectAndNormalizeGeometry(t){if(t$2(t.geometry))return U$1(null);let i=t.geometry;if(y(i)){const t=i.rings;i.rings=t;}else if(f$1(i)){const t=i.paths;i.paths=t;}else u$1(i)&&(i=x$1.fromExtent(i));return f$4(i.spatialReference,this.view.spatialReference).then((()=>{const t=K$1(i),e=g(t,i.spatialReference,this.view.spatialReference);return u$2(e),e}))}_onTileUpdate(t){const e=S(this.view.spatialReference);if(t.added&&t.added.length>0)for(const i of t.added)this._addNewTile(i,e);if(t.removed&&t.removed.length>0)for(const e of t.removed)this._removeTile(e.key);}addGraphic(t){this._abortProcessingGraphic(t.uid);const e=a$2();this._graphicIdToAbortController.set(t.uid,e);const i={signal:e.signal};return this._addOrUpdateGraphic(t,i).then((()=>{this._graphicIdToAbortController.delete(t.uid);})).catch((e=>{if(this._graphicIdToAbortController.delete(t.uid),!T(e))throw e}))}async _updateGraphic(t,e){const i=this._projectAndNormalizeGeometry(t),s=this._getSymbolResources(t,e),[r,a]=await f$3([i,s]);this._graphicStore.addOrModify(t,a,r);}async _addOrUpdateGraphic(t,e){const i=this._projectAndNormalizeGeometry(t),s=this._getSymbolResources(t,e);try{const[e,r]=await f$3([i,s]);this._addProjectedGraphic(t,r,e);}catch(t){if(!T(t))throw t}}_addProjectedGraphic(t,e,i){this._graphicsSet.has(t)&&this._graphicStore.addOrModify(t,e,i);}_addTile(t){const e=t$1();this.view.featuresTilingScheme.getTileBounds(e,t);const i=new m$2(t,e,!0);return this._tiles.set(t,i),this.container.addChild(i),i}_addNewTile(t,e){const i=this._addTile(t.key),s=this._graphicStore.queryTileData(this._templateStore,t);if(e){const i=Math.round((e.valid[1]-e.valid[0])/t.resolution);for(const t of s)t.geometry&&l$1(t.geometry)&&this._wrapPoints(t,i);}const r=t.key;this._tileUpdateSet.add(t.key),this.notifyChange("updating"),this._processGraphics(s).then((t=>{const e={type:"update",clear:!0,addOrUpdate:t,remove:[],end:!0};i.setData(e),this._tileUpdateSet.delete(r),this.notifyChange("updating");})).catch((t=>{if(this._tileUpdateSet.delete(r),this.notifyChange("updating"),!T(t))throw t}));}_removeTile(t){if(!this._tiles.has(t))return;const e=this._tiles.get(t);this.container.removeChild(e),e.destroy(),this._tiles.delete(t);}_setFilterState(t,e){const i=this._displayIds.get(t),s=this._attributeStore.getHighlightFlag(t);this._attributeStore.setData(i,0,0,s|(e?P:0));}_getGraphicsData(t,e,i){const s=S(this.view.spatialReference),r=this._graphicStore.getGraphicsData(t,e,i);if(s){const t=Math.round((s.valid[1]-s.valid[0])/e.resolution);for(const e of r)e.geometry&&l$1(e.geometry)&&this._wrapPoints(e,t);}return r}_wrapPoints(t,e){const i=t.geometry;512===e?i.x<20?t.geometry={points:[[i.x,i.y],[e,0]]}:i.x>492&&(t.geometry={points:[[i.x,i.y],[-e,0]]}):i.x<-20?t.geometry={points:[[i.x,i.y],[e,0]]}:i.x>532&&(t.geometry={points:[[i.x,i.y],[-e,0]]});}async _processGraphics(t,e){if(!(t&&t.length)||!this._meshFactory)return null;const i=s.from(t),s$1=this._meshFactory;return await s$1.analyzeGraphics(i,await this._matcher,null,null,e),this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(i)}_processAnalyzedGraphics(t){const e=this._meshFactory,i=e.createMeshData(t.getApproximateSize()),s=t.getCursor();for(;s.next();){const t=s.readGraphic();t.insertAfter=-1===t.insertAfter?-1:this._displayIds.get(t.insertAfter),t.displayId=this._displayIds.get(t.attributes[this.uid]),e.writeGraphic(i,s);}const r={};return i.encode(r,[]),m$3.decode(r)}_abortProcessingGraphic(t){if(this._graphicIdToAbortController.has(t)){this._graphicIdToAbortController.get(t).abort();}}_getNullSymbol(t){const e=t.geometry;return f$1(e)?O$1:y(e)||u$1(e)?j$1:N}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout((()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating");}),160),this.notifyChange("updating");}};e$2([y$1({constructOnly:!0})],K.prototype,"requestUpdateCallback",void 0),e$2([y$1({constructOnly:!0})],K.prototype,"graphics",void 0),e$2([y$1()],K.prototype,"updating",null),e$2([y$1()],K.prototype,"view",void 0),e$2([y$1()],K.prototype,"updateRequested",void 0),K=e$2([i$2("esri.views.2d.layers.support.GraphicsView2D")],K);var Q=K;

export { Q };
