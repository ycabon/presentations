import { gU as o, cV as k, ay as p$1, p as s, dQ as o$1, k as i, y as e, z as y, a_ as y$1, d6 as e$1, c6 as z, g_ as f$1, g$ as p$2, bv as o$2, A as i$1, eo as F, h0 as d, dS as p$3, C as u, h1 as m, h2 as h, h3 as y$2, db as U$1, h4 as f$2, bS as O$1, L, dU as D, cS as k$1, cW as C, E as f$3, h5 as r } from './_virtual:index-325c676c.js';
import { getSiblingOfSameTypeI as f } from './resourceUtils-c95cdd2b.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
async function a(s$1,a,u){if(!a||!a.resources)return;const h=a.portalItem===s$1.portalItem?new Set(s$1.paths):new Set;s$1.paths.length=0,s$1.portalItem=a.portalItem;const i=new Set(a.resources.toKeep.map((r=>r.resource.path))),f$1=new Set,m=[];i.forEach((r=>{h.delete(r),s$1.paths.push(r);}));for(const r of a.resources.toUpdate)if(h.delete(r.resource.path),i.has(r.resource.path)||f$1.has(r.resource.path)){const{resource:o$1,content:t,finish:a,error:p}=r,h=f(o$1,o());s$1.paths.push(h.path),m.push(n({resource:h,content:t,finish:a,error:p},u));}else s$1.paths.push(r.resource.path),m.push(p(r,u)),f$1.add(r.resource.path);for(const r of a.resources.toAdd)m.push(n(r,u)),s$1.paths.push(r.resource.path);if(h.forEach((r=>{const e=a.portalItem.resourceFromPath(r);m.push(e.portalItem.removeResource(e).catch((()=>{})));})),0===m.length)return;const l=await k(m);p$1(u);const d=l.filter((r=>"error"in r)).map((r=>r.error));if(d.length>0)throw new s("save:resources","Failed to save one or more resources",{errors:d})}async function n(r,e){const o=await o$1(r.resource.portalItem.addResource(r.resource,r.content,e));if(!0!==o.ok)throw r.error&&r.error(o.error),o.error;r.finish&&r.finish(r.resource);}async function p(r,e){const o=await o$1(r.resource.update(r.content,e));if(!0!==o.ok)throw r.error(o.error),o.error;r.finish(r.resource);}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const O=i.getLogger("esri.layers.mixins.SceneService"),T=r$1=>{let T=class extends r$1{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this._debouncedSaveOperations=F((async(e,t,r)=>{switch(e){case 0:return this._save(t);case 1:return this._saveAs(r,t)}}));}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return y$1.fromJSON(e.spatialReference);{const t=e.store,r=t.indexCRS||t.geographicCRS,o=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=o?new y$1(o):null}}readFullExtent(e,t){const r=t.store,o=this._readSpatialReference(t);return null==o||null==r||null==r.extent||!Array.isArray(r.extent)||r.extent.some((e=>e<U))?null:new z({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:o})}readVersion(e,t){const r=t.store,o=null!=r.version?r.version.toString():"",i={major:Number.NaN,minor:Number.NaN,versionString:o},s=o.split(".");return s.length>=2&&(i.major=parseInt(s[0],10),i.minor=parseInt(s[1],10)),i}readTitlePortalItem(e){return "item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,r){const o=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return d(this.url,r.name);let i=r.name;if(!i&&this.url){const e=p$3(this.url);u(e)&&(i=e.title);}return "item-title-and-service-name"===this.sublayerTitleMode&&o&&(i=o+" - "+i),m(i)}set url(e){const t=h(this,e,O);this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId);}writeUrl(e,t,r,o){y$2(this,e,"layers",t,o);}get parsedUrl(){const e=this._get("url");if(!e)return null;const t=U$1(e);return null!=this.layerId&&f$2(t.path)&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _verifyRootNodeAndUpdateExtent(e,t){if(e)try{return this._updateExtentFromRootPage(e,await this._fetchRootPage(e,t))}catch(e){}return this._updateExtentFromRootNode(await this._fetchRootNode(t))}async _fetchRootPage(e,t){if(!e)return O$1();const r=Math.floor(e.rootIndex/e.nodesPerPage),o=`${this.parsedUrl.path}/nodepages/${r}`;return (await L(o,{responseType:"json",signal:t})).data}_updateExtentFromRootPage(e,t){if(null==t||null==t.nodes)throw new s("sceneservice:invalid-node-page","Inavlid node page.");const r=t.nodes[e.rootIndex%e.nodesPerPage];if(null==r||null==r.obb||null==r.obb.center||null==r.obb.halfSize)throw new s("sceneservice:invalid-node-page","Inavlid node page.");if(r.obb.center[0]<U)return;const o=r.obb.halfSize,i=r.obb.center[2],s$1=Math.sqrt(o[0]*o[0]+o[1]*o[1]+o[2]*o[2]);this.fullExtent.zmin=i-s$1,this.fullExtent.zmax=i+s$1;}_updateExtentFromRootNode(e){if(null==e||null==this.fullExtent||this.fullExtent.hasZ)return;if(!Array.isArray(e.mbs)||4!==e.mbs.length||e.mbs[0]<U)return;const t=e.mbs[2],r=e.mbs[3];this.fullExtent.zmin=t-r,this.fullExtent.zmax=t+r;}async _fetchRootNode(e){if(!this.rootNode)return;const t=D(this.parsedUrl.path,this.rootNode);try{return (await L(t,{query:{f:"json"},responseType:"json",signal:e})).data}catch(e){throw new s("sceneservice:root-node-missing","Root node missing.",{error:e,url:t})}}async _fetchService(e){if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t);}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await L(this.url,{query:{f:"json"},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){const t=await L(this.parsedUrl.path,{query:{f:"json"},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const r=t.data;this.read(r,{origin:"service",url:this.parsedUrl}),this.validateLayer(r);}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave();}validateLayer(e){}_updateTypeKeywords(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const o=t.getTypeKeywords();for(const t of o)e.typeKeywords.push(t);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),1===r&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))));}async _saveAs(e,t){const r$1={...A,...t};let o=k$1.from(e);o||(O.error("_saveAs(): requires a portal item parameter"),await O$1(new s("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),o.id&&(o=o.clone(),o.id=null);const i=o.portal||C.getDefault();await this._ensureLoadBeforeSave(),o.type=P,o.portal=i;const s$1={origin:"portal-item",url:null,messages:[],portal:i,portalItem:o,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},a$1={layers:[this.write(null,s$1)]};return await f$3(s$1.resources.pendingOperations),await this._validateAgainstJSONSchema(a$1,s$1,r$1),o.url=this.url,o.title||(o.title=this.title),this._updateTypeKeywords(o,r$1,1),await i._signIn(),await i.user.addItem({item:o,folder:r$1&&r$1.folder,data:a$1}),await a(this.resourceReferences,s$1,null),this.portalItem=o,r(s$1),s$1.portalItem=o,o}async _save(e){const t={...A,...e};this.portalItem||(O.error("_save(): requires the .portalItem property to be set"),await O$1(new s("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService"))),this.portalItem.type!==P&&(O.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+P),await O$1(new s("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${P}"`))),await this._ensureLoadBeforeSave();const r$1={origin:"portal-item",url:this.portalItem.itemUrl&&U$1(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||C.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},o={layers:[this.write(null,r$1)]};return await f$3(r$1.resources.pendingOperations),await this._validateAgainstJSONSchema(o,r$1,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,0),await this.portalItem.update({data:o}),await a(this.resourceReferences,r$1,null),r(r$1),this.portalItem}async _validateAgainstJSONSchema(e,t,r){let o=t.messages.filter((e=>"error"===e.type)).map((e=>new s(e.name,e.message,e.details)));if(r&&r.validationOptions.ignoreUnsupported&&(o=o.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name))),r.validationOptions.enabled||E){const t=(await import('./schemaValidator-1ddef00f.js')).validate(e,r.portalItemLayerType);if(t.length>0){const e=`Layer item did not validate:\n${t.join("\n")}`;if(O.error(`_validateAgainstJSONSchema(): ${e}`),"throw"===r.validationOptions.failPolicy){const e=t.map((e=>new s("sceneservice:schema-validation",e))).concat(o);throw new s("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(o.length>0)throw new s("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:o})}};return e([y({json:{origins:{service:{read:!1},"portal-item":{read:!1}}}})],T.prototype,"id",void 0),e([y({type:y$1})],T.prototype,"spatialReference",void 0),e([e$1("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],T.prototype,"readSpatialReference",null),e([y({type:z})],T.prototype,"fullExtent",void 0),e([e$1("fullExtent",["store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],T.prototype,"readFullExtent",null),e([y({readOnly:!0,type:f$1})],T.prototype,"heightModelInfo",void 0),e([y({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],T.prototype,"minScale",void 0),e([y({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],T.prototype,"maxScale",void 0),e([y({readOnly:!0})],T.prototype,"version",void 0),e([e$1("version",["store.version"])],T.prototype,"readVersion",null),e([y({type:String,json:{read:{source:"copyrightText"}}})],T.prototype,"copyright",void 0),e([y({type:String,json:{read:!1}})],T.prototype,"sublayerTitleMode",void 0),e([y({type:String})],T.prototype,"title",void 0),e([e$1("portal-item","title")],T.prototype,"readTitlePortalItem",null),e([e$1("service","title",["name"])],T.prototype,"readTitleService",null),e([y({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],T.prototype,"layerId",void 0),e([y(p$2)],T.prototype,"url",null),e([o$2("url")],T.prototype,"writeUrl",null),e([y({dependsOn:["layerId"]})],T.prototype,"parsedUrl",null),e([y({readOnly:!0})],T.prototype,"store",void 0),e([y({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],T.prototype,"rootNode",void 0),T=e([i$1("esri.layers.mixins.SceneService")],T),T},U=-1e38,E=!1,P="Scene Service",A={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};

export { T };
