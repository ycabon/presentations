import { i as i$2, q as e$1, y as y$1, bZ as z$1, g_ as o$1, aS as y$2, de as x$3, eQ as p$2, r as i$3, hh as x$4, aW as S, L as L$1, a as u$3, ah as w$2, cI as a$1, cH as p$3, h as s$1, bI as f$3, B as h$2, w as f$4, U as U$2, aX as a$2, C as d$4, d8 as g$2, cx as k, E as m$1, hi as n$4, dI as U$3, hj as L$2, gg as o$4, ef as t$1, eg as s$2, eh as o$5, ej as l$1, ek as d$5, el as l$2, eS as b$1, eW as y$6, ez as a$3, gh as k$1, dk as r$3, eK as c$2, df as M$2, e5 as e$2 } from './index.js';
import { a as n$2, o as o$2, x as x$5, T as T$1, y as y$3, f as f$2, u as u$6, l as l$3 } from './rasterRendererHelper-d4432a85.js';
import { R as R$1, U as U$1, r, a as n$3, I as I$4, b as r$2, y as y$5, p as p$5, S as S$1, m as m$3, w as w$4 } from './RasterSymbolizer-cadac009.js';
import { c as c$1, U, A, o as o$3, r as r$1, m as m$2, u as u$5 } from './pixelUtils-2340bc73.js';
import { b as u$4, h as h$1, w as w$3, i as i$4, m, x as x$6, p as p$4, y as y$4, M as M$1, c as d$3, e as h$3 } from './RawBlockCache-4d38e143.js';
import './ItemCache-9e98e4e7.js';
import './_commonjsHelpers-34398bae.js';
import './LercCodec-9d0c0e3e.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const I=i$2.getLogger("esri.layers.mixins.ImageryTileMixin"),J=r=>{let J=class extends r{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null;}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e);}set url(e){this._set("url",x$4(e,I));}set renderer(e){this._set("renderer",e),this.updateRenderer();}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON());}async applyRenderer(e,t){const r=e&&e.pixelBlock;if(!(r&&r.pixels&&r.pixels.length>0))return null;let i;this.updateRenderer();const s=this._rasterJobHandler.instance,{bandIds:n}=this;return i=s?await s.symbolize({...e,simpleStretchParams:t,bandIds:n}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:n}),i}getTileUrl(e,t,r){return "RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:""}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const r=S(e);return x$3.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r,i={}){if(i.requestAsImageElement){const s=this.getTileUrl(e,t,r);return L$1(s,{responseType:"image",query:{sliceId:this._sliceId,_ts:i.timestamp},signal:i.signal}).then((e=>e.data))}if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;i={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...i};}return "raster-shaded-relief"===this.renderer.type&&(i={buffer:{cols:1,rows:1},...i}),this.raster.fetchTile(e,t,r,i)}async fetchPixels(e,t,r,i){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;i={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...i};}return this.raster.fetchPixels(e,t,r,i)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++;}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler();}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer();}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new f$2;return this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer();})).catch((()=>null)),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null;}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=x$5(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t);}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(u$3(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],r=[];t.dimensions.forEach((e=>{r.push(new n$2({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}));})),this.multidimensionalDefinition=r;}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition);}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t;(this.bandIds||(this.bandIds=T$1(e)),this.renderer)||(this.renderer=y$3(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)?void 0:t[0].variableName}));this.symbolizer?(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.rasterInfo=e):this.symbolizer=new R$1({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||I.warn("imagery-tile-mixin","The given renderer is not supported by the layer.");}};return e$1([y$1()],J.prototype,"_cachedRendererJson",void 0),e$1([y$1()],J.prototype,"_sliceId",void 0),e$1([y$1()],J.prototype,"_compatibleFullExtent",void 0),e$1([y$1()],J.prototype,"_rasterJobHandler",void 0),e$1([y$1()],J.prototype,"bandIds",void 0),e$1([y$1()],J.prototype,"copyright",void 0),e$1([y$1({type:z$1}),o$1("rasterInfo.extent")],J.prototype,"fullExtent",void 0),e$1([y$1()],J.prototype,"interpolation",void 0),e$1([y$1({type:[n$2]})],J.prototype,"multidimensionalDefinition",null),e$1([y$1()],J.prototype,"raster",void 0),e$1([y$1({readOnly:!0}),o$1("raster.rasterInfo")],J.prototype,"rasterInfo",void 0),e$1([y$1()],J.prototype,"sourceJSON",void 0),e$1([y$1({type:y$2}),o$1("rasterInfo.spatialReference")],J.prototype,"spatialReference",void 0),e$1([y$1({type:x$3,dependsOn:["rasterInfo"]}),o$1("rasterInfo.storageInfo.tileInfo")],J.prototype,"tileInfo",void 0),e$1([y$1(p$2)],J.prototype,"url",null),e$1([y$1({types:o$2})],J.prototype,"renderer",null),e$1([y$1()],J.prototype,"symbolizer",void 0),J=e$1([i$3("esri.layers.ImageryTileMixin")],J),J};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
let s=class extends a$1{constructor(){super(...arguments),this.blockWidth=void 0,this.blockHeight=void 0,this.compression=null,this.origin=null,this.firstPyramidLevel=null,this.maximumPyramidLevel=null,this.pyramidScalingFactor=2,this.pyramidBlockWidth=null,this.pyramidBlockHeight=null,this.isVirtualTileInfo=!1,this.tileInfo=null,this.blockBoundary=null;}};e$1([y$1({type:Number,json:{write:!0}})],s.prototype,"blockWidth",void 0),e$1([y$1({type:Number,json:{write:!0}})],s.prototype,"blockHeight",void 0),e$1([y$1({type:String,json:{write:!0}})],s.prototype,"compression",void 0),e$1([y$1({type:w$2,json:{write:!0}})],s.prototype,"origin",void 0),e$1([y$1({type:Number,json:{write:!0}})],s.prototype,"firstPyramidLevel",void 0),e$1([y$1({type:Number,json:{write:!0}})],s.prototype,"maximumPyramidLevel",void 0),e$1([y$1()],s.prototype,"pyramidScalingFactor",void 0),e$1([y$1({type:Number,json:{write:!0}})],s.prototype,"pyramidBlockWidth",void 0),e$1([y$1({type:Number,json:{write:!0}})],s.prototype,"pyramidBlockHeight",void 0),e$1([y$1({type:Boolean,json:{write:!0}})],s.prototype,"isVirtualTileInfo",void 0),e$1([y$1({json:{write:!0}})],s.prototype,"tileInfo",void 0),e$1([y$1()],s.prototype,"blockBoundary",void 0),s=e$1([i$3("esri.layers.support.RasterStorageInfo")],s);var p=s;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
let H=class extends(p$3(a$1)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"};}async init(){const e=u$4();this.addResolvingPromise(e),await this.when();}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:x$3.create(),...e.ioConfig}}),e}set url(e){this._set("url",x$4(e,i$2.getLogger(this.declaredClass)));}async open(e){throw new s$1("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,r,o,i={}){var n;const{tileInfo:s}=i,a=s.lodAt(e),l=new w$2({x:a.resolution,y:a.resolution,spatialReference:s.spatialReference}),c=this.getTileExtent(l,r,o,s);return null!=(n=i.multidimensionalDefinition)&&n.length&&u$3(this.rasterInfo.multidimensionalInfo)&&null==i.sliceId&&(i={...i,sliceId:this.getSliceIndex(i.multidimensionalDefinition)||0}),this.fetchPixels(c,s.size[0],s.size[1],i)}async identify(e,r={}){const{spatialReference:o,extent:i}=this.rasterInfo,{datumTransformation:n}=r,s=h$1(e,o,n);if(!i.intersects(s))return {location:s,value:null};let a=0;if(r.srcResolution){a=w$3(r.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;}else if(a=await this.computeBestPyramidLevelForLocation(e,r),null==a)return {location:s,value:null};const l=this.identifyPixelLocation(s,a,null);if(null===l)return {location:s,value:null};const{row:c,col:u,rowOffset:m$1,colOffset:f}=l,h=i$4(this.url,r.sliceId),d=`${a}/${c}/${u}`;let p=m(h,null,d);u$3(p)||(p=this.fetchRawTile(a,c,u,r),x$6(h,null,d,p));const x=await p;if(!(x&&x.pixels&&x.pixels.length>0))return {location:s,value:null};const y=m$1*this.rasterInfo.storageInfo.blockHeight+f;return {location:s,value:!x.mask||x.mask[y]?x.pixels.map((e=>e[y])):null,pyramidLevel:a}}async fetchPixels(e,t,o,i={}){const n=e.clone().normalize();e=n[0];const s=this.rasterInfo.spatialReference,a=!e.spatialReference.equals(s),{datumTransformation:l}=i,c=new w$2({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/o,spatialReference:e.spatialReference}),u=i.srcResolution||(a?p$4(c,s,e,l):c);if(!u)return null;const{pyramidLevel:m,pyramidResolution:f,excessiveReading:d}=w$3(u,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const p=this.rasterInfo.storageInfo;let x=a?y$4(e,s,l):e;const y=f$3(this.rasterInfo.transform);if(y&&(x=y.inverseTransform(x)),null==x)return null;const g={x:Math.floor((x.xmin-p.origin.x)/f.x+.1),y:Math.floor((p.origin.y-x.ymax)/f.y+.1)},w=Math.ceil((x.xmax-x.xmin)/f.x-.1),I=Math.ceil((x.ymax-x.ymin)/f.y-.1);if(w/t>8||I/o>8)return null;const v=await this.fetchRawPixels(m,g,{width:w,height:I},i);if(!v)return null;const k=m>0?p.pyramidBlockWidth:p.blockWidth,b=m>0?p.pyramidBlockHeight:p.blockHeight;if(!a&&1===v.pixelBlocks.length&&k===t&&b===o&&u.x===c.x&&u.y===c.y)return {extent:e,srcExtent:x,pixelBlock:v.pixelBlocks[0],transformGrid:null};const T=M$1(e,v.extent,c,l,y);let F;const S=!i.requestRawData,L={rows:T.spacing[0],cols:T.spacing[1]},{pixelBlocks:D,mosaicSize:H,isPartiallyFilled:z}=v;if(this.rasterJobHandler)F=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:D,srcMosaicSize:H,destDimension:S?{width:t,height:o}:null,coefs:S?T.coefficients:null,sampleSpacing:S?L:null,interpolation:i.interpolation},i);else {const e=c$1(D,H);F=S?U(e,{width:t,height:o},T.coefficients,L,i.interpolation):e;}return {srcExtent:x,pixelBlock:F,transformGrid:T,extent:e,isPartiallyFilled:z}}async fetchRawPixels(e,t,r,o){const{origin:i,blockBoundary:n}=this.rasterInfo.storageInfo,s=e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,c=e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight;let{x:u,y:m}=t,{width:f,height:h}=r;o.buffer&&(u-=o.buffer.cols,m-=o.buffer.rows,f+=2*o.buffer.cols,h+=2*o.buffer.rows);const p=Math.floor(u/s),x=Math.floor(m/c),y=Math.floor((u+f-1)/s),g=Math.floor((m+h-1)/c),w=n[e];if(!w)return null;const{minRow:I,minCol:M,maxCol:R,maxRow:v}=w;if(g<I||y<M||x>v||p>R)return null;const k=[];let b,C=!1;for(let t=x;t<=g;t++)for(let r=p;r<=y;r++)t>=I&&r>=M&&v>=t&&R>=r?(b=this._fetchRawTile(e,t,r,o),this.ioConfig.allowPartialFill&&(b=h$2((e=>{b.then((t=>e(t))).catch((()=>{C=!0,e(null);}));}))),k.push(b)):k.push(null);if(0===k.length)return null;const j=await f$4(k),B={height:(g-x+1)*s,width:(y-p+1)*c},{nativePixelSize:P,spatialReference:T}=this.rasterInfo,F=P.x*Math.pow(2,e),S=P.y*Math.pow(2,e);return {extent:new z$1({xmin:i.x+p*s*F,xmax:i.x+(y+1)*s*F,ymin:i.y-(g+1)*c*S,ymax:i.y-x*c*S,spatialReference:T}),pixelBlocks:j,mosaicSize:B,isPartiallyFilled:C}}async fetchRawTile(e,t,r,o){throw new s$1("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return y$4(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return !this.rasterJobHandler||t.useCanvas?U$1(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,r){var o,i;const{customFetchParameters:n}=this.ioConfig,{range:s,query:a,headers:l}=t;r=null!=(o=null!=(i=r)?i:t.retryCount)?o:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await L$1(e,{...t,query:{...a,...n},headers:{...l,...c}})}catch(o){if(r>0)return r--,this.request(e,t,r);throw o}}getSliceIndex(e){const{multidimensionalInfo:r}=this.rasterInfo;if(!u$3(r)||null==e||!e.length)return null;let o=0;const i=e[0].variableName;for(let t=0;t<r.variables.length;t++){const n=r.variables[t],s=n.dimensions;if(n.name!==i){o+=s.map((e=>this._getDimensionValuesCount(e))).reduce(((e,t)=>e+t));break}const a=s.map((e=>this._getDimensionValuesCount(e))),l=s.length;for(let t=0;t<l;t++){const r=e.filter((e=>e.dimensionName===s[t].name))[0];if(null==r)return null;const i=Array.isArray(r.values[0])?r.values[0][0]:r.values[0],n=this._getIndexFromDimensions(i,s[t]);if(-1===n)return null;a.shift(),o+=t===l-1?n:n*a.reduce(((e,t)=>e+t));}}return o}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:r,pixelSize:o}=this.rasterInfo;if(!e.tileInfo){const i=[],n=e.maximumPyramidLevel||0;let s=Math.max(o.x,o.y),a=1/.0254*96*s;for(let e=0;e<=n;e++)i.push({level:n-e,resolution:s,scale:a}),s*=2,a*=2;const l=new w$2({x:r.xmin,y:r.ymax,spatialReference:t});e.tileInfo=new x$3({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:i}),e.isVirtualTileInfo=!0;}}createRemoteDatasetStorageInfo(e,t=512,r=512,o){const{width:i,height:n,nativeExtent:s,pixelSize:a,spatialReference:l}=e,c=new w$2({x:s.xmin,y:s.ymax,spatialReference:l});null==o&&(o=Math.max(0,Math.round(Math.log(Math.max(i,n))/Math.LN2-8)));const u=this._computeBlockBoundary(s,a,o,512,512);e.storageInfo=new p({blockWidth:t,blockHeight:r,pyramidBlockWidth:t,pyramidBlockHeight:r,origin:c,firstPyramidLevel:1,maximumPyramidLevel:o,blockBoundary:u});}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,r){const{spatialReference:o,pixelSize:i,extent:n}=this.rasterInfo,{blockWidth:s,blockHeight:a,maximumPyramidLevel:l,pyramidScalingFactor:c,origin:u}=this.rasterInfo.storageInfo,m=h$1(e,o,r);if(!n.intersects(m))return null;if(t<0||t>l)return null;const f=Math.pow(c,t),h=f*i.x,d=f*i.y,p=(u.y-m.y)/d/a,x=(m.x-u.x)/h/s,y=Math.min(a-1,Math.floor((p-Math.floor(p))*a)),g=Math.min(s-1,Math.floor((x-Math.floor(x))*s));return {pyramidLevel:t,row:Math.floor(p),col:Math.floor(x),rowOffset:y,colOffset:g,srcLocation:m}}getTileExtent(e,t,r,o){const{origin:i,spatialReference:n}=o,s=o.size[0],a=o.size[1],l=i.x+r*s*e.x,c=l+s*e.x,u=i.y-t*a*e.y,m=u-a*e.y;return new z$1({xmin:l,xmax:c,ymin:m,ymax:u,spatialReference:n})}_computeBlockBoundary(e,t,r,o,i){let{x:n,y:s}=t;const a=e.xmin,l=e.ymax,c=[{minCol:Math.floor((e.xmin-a+.1*n)/o/n),maxCol:Math.floor((e.xmax-a-.1*n)/o/n),minRow:Math.floor((l-e.ymax+.1*s)/i/s),maxRow:Math.floor((l-e.ymin-.1*s)/i/s)}];if(r>0)for(let t=0;t<r;t++)n*=2,s*=2,c.push({minCol:Math.floor((e.xmin-a+.1*n)/o/n),maxCol:Math.floor((e.xmax-a-.1*n)/o/n),minRow:Math.floor((l-e.ymax+.1*s)/i/n),maxRow:Math.floor((l-e.ymin-.1*s)/i/n)});return c}_fetchRawTile(e,r,o,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];if(!n)return U$2(null);const{minRow:s,minCol:a,maxCol:l,maxRow:f}=n;if(r<s||o<a||r>f||o>l)return U$2(null);const h=i$4(this.url,i.sliceId),d=`${e}/${r}/${o}`;let p=m(h,i.registryId,d);if(!u$3(p)){const t=a$2();p=this.fetchRawTile(e,r,o,{...i,signal:t.signal}),x$6(h,i.registryId,d,p,t),p.catch((()=>{d$3(h,i.registryId,d);}));}return i.signal&&d$4(i,(()=>{h$3(h,i.registryId,d);})),p}_getIndexFromDimensions(e,t){const{extent:r,interval:o,unit:i,values:n}=t;if(null!=n&&n.length)return Array.isArray(n[0])?n.findIndex((t=>t[0]<=e&&t[1]>=e)):n.indexOf(e);if(e>r[1])return -1;const s=r[0];let a=-1;if("ISO8601"===i){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":a=Math.round((e-s)/1e3/o);break;case"minutes":a=Math.round((e-s)/6e4/o);break;case"hours":a=Math.round((e-s)/36e5/o);break;case"days":a=Math.round((e-s)/864e5/o);break;case"years":a=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/o);break;case"decades":a=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/o);}return a}return Math.round((e-s)/o)}_getDimensionValuesCount(e){const{extent:t,interval:r,unit:o,values:i}=e;let n=(null==i?void 0:i.length)||0;if(n)return n;const s=t[0];if(0===n&&"ISO8601"===o){var a;switch((null==(a=e.intervalUnit)?void 0:a.toLowerCase())||"seconds"){case"seconds":n=Math.round((t[1]-t[0])/1e3/r);break;case"minutes":n=Math.round((t[1]-t[0])/6e4/r);break;case"hours":n=Math.round((t[1]-t[0])/36e5/r);break;case"days":n=Math.round((t[1]-t[0])/864e5/r);break;case"years":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/r);break;case"decades":n=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/r);}return n}return Math.round((t[1]-t[0])/r)}};e$1([y$1(p$2)],H.prototype,"url",null),e$1([y$1({type:String,json:{write:!0}})],H.prototype,"datasetName",void 0),e$1([y$1({type:String,json:{write:!0}})],H.prototype,"datasetFormat",void 0),e$1([y$1()],H.prototype,"rasterInfo",void 0),e$1([y$1()],H.prototype,"ioConfig",void 0),e$1([y$1()],H.prototype,"sourceJSON",void 0),H=e$1([i$3("esri.layers.support.rasterDatasets.BaseRaster")],H);var z=H;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
class d{static get supportedVersions(){return [5]}static parse(t){const r$1=new DataView(t),n=3&r$1.getUint8(0);if(3!==n)return {header:{version:n},recordSet:null};const i=r$1.getUint32(4,!0),s=r$1.getUint16(8,!0),a=r$1.getUint16(10,!0),o={version:n,recordCount:i,headerByteCount:s,recordByteCount:a};let l=32;const p=[],g=[];let u;if(3===n){for(;13!==r$1.getUint8(l);)u=String.fromCharCode(r$1.getUint8(l+11)).trim(),p.push({name:r(new Uint8Array(t,l,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:r$1.getUint8(l+16)}),l+=32;if(l+=1,p.length>0)for(;g.length<i&&t.byteLength-l>a;){const n=[];32===r$1.getUint8(l)?(l+=1,p.forEach((r$1=>{if("C"===r$1.type)n.push(r(new Uint8Array(t,l,r$1.length)).trim());else if("N"===r$1.type)n.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(t,l,r$1.length)).trim(),10));else if("F"===r$1.type)n.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(t,l,r$1.length)).trim()));else if("D"===r$1.type){const e=String.fromCharCode.apply(null,new Uint8Array(t,l,r$1.length)).trim();n.push(new Date(parseInt(e.substring(0,4),10),parseInt(e.substring(4,6),10)-1,parseInt(e.substring(6,8),10)));}l+=r$1.length;})),g.push(n)):l+=a;}}const d=function(e){const t=e.fields,r=e.records,n=t.some((e=>"oid"===e.name.toLowerCase()))?"OBJECTID":"OID",i=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map((e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name})))),s=i.map((e=>e.name)),a=[];let o=0,l=0;return r.forEach((e=>{const t={};for(t[n]=o++,l=1;l<s.length;l++)t[s[l]]=e[l-1];a.push({attributes:t});})),{displayFieldName:"",fields:i,features:a}}({fields:p,records:g});return {header:o,fields:p,records:g,recordSet:d}}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const h=new Map;h.set("int16","esriFieldTypeSmallInteger"),h.set("int32","esriFieldTypeInteger"),h.set("int64","esriFieldTypeInteger"),h.set("float32","esriFieldTypeSingle"),h.set("float64","esriFieldTypeDouble"),h.set("text","esriFieldTypeString");let g=class extends z{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF";}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new s$1("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:r,rasterInfo:o}=this._parseHeader(t);if("thematic"===o.dataType){const e=await this._fetchAuxiliaryInformation();o.attributeTable=e;}this._set("storageInfo",r),this._set("rasterInfo",o),this.ioConfig.retryCount=this.ioConfig.retryCount||0;}async fetchRawTile(e,t,r,o={}){const i=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(i<0)return null;const s=this._buildCacheFilePath(i,t,r,o.multidimensionalDefinition),a=this._getIndexRecordFromBundle(t,r),n=await this.request(s,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:o.signal});if(!n)return null;const l=new Uint8Array(n.data),f=this._getTileEndAndContentType(l,a);if(0===f.recordSize)return null;const m=await this.request(s,{range:{from:f.position,to:f.position+f.recordSize},responseType:"array-buffer",signal:o.signal});return m?this.decodePixelBlock(m.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some((t=>!e[t]))}_parseHeader(e){var t;const r=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:o,histograms:i,colormap:s,blockWidth:f,blockHeight:u,firstPyramidLevel:d,maximumPyramidLevel:h}=e,g=e.statistics&&e.statistics.map((e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode}))),y=new y$2(e.extent.spatialReference||e.geodataXform.spatialReference),x=new z$1({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:y}),I=new w$2({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:y}),S=null!=(t=e.properties)?t:{},v=e.format.toLowerCase().replace("cache/",""),b=new w$2(e.origin.x,e.origin.y,y);let w,j,T,z;if(s&&s.colors)for(w=[],j=0;j<s.colors.length;j++)T=s.colors[j],z=s.values?s.values[j]:j,w.push([z,255&T,T<<16>>>24,T<<8>>>24,T>>>24]);const R=e.LODInfos,k=[];for(j=0;j<R.levels.length;j++)k.push({level:R.levels[j],resolution:R.resolutions[j],scale:96/.0254*R.resolutions[j]});const _=new x$3({dpi:96,lods:k,format:v,origin:b,size:[f,u],spatialReference:y}),C={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},F=Math.round((x.xmax-x.xmin)/I.x),H=Math.round((x.ymax-x.ymin)/I.y),P=[{maxCol:Math.ceil(F/f)-1,maxRow:Math.ceil(H/u)-1,minCol:0,minRow:0}];let L=2;if(h>0)for(j=0;j<h;j++)P.push({maxCol:Math.ceil(F/L/f)-1,maxRow:Math.ceil(H/L/u)-1,minCol:0,minRow:0}),L*=2;const D=e.mdInfo;return {storageInfo:C,rasterInfo:new n$3({width:F,height:H,pixelType:r,bandCount:o,extent:x,spatialReference:y,pixelSize:I,keyProperties:S,statistics:g,histograms:i,multidimensionalInfo:D,colormap:w,storageInfo:new p({blockWidth:f,blockHeight:u,pyramidBlockWidth:f,pyramidBlockHeight:u,origin:b,tileInfo:_,firstPyramidLevel:d,maximumPyramidLevel:h,blockBoundary:P})})}}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then((e=>e.data)).catch((()=>null)),r=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then((e=>e.data)).catch((()=>null)),o=await f$4([t,r]);let i;if(o[0]){let e=o[0].fields;const t=o[0].values;if(e&&t){e=e.map((e=>({type:"OID"===e.name?"esriFieldTypeOID":h.get(e.type),name:e.name,alias:e.alias||e.name})));const r=t.map((e=>({attributes:e})));e&&t&&(i={fields:e,features:r});}}if(!i&&o[1]){i=d.parse(o[1]).recordSet;}return g$2.fromJSON(i)}_buildCacheFilePath(e,r,o,i){const s=this.storageInfo.packetSize,a=Math.floor(r/s)*s,n=Math.floor(o/s)*s,l="R"+this._toHexString4(a)+"C"+this._toHexString4(n);let f="L";f+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:m}=this.rasterInfo,p=null==i?void 0:i[0];if(!u$3(m)||!p)return `${this.url}/_alllayers/${f}/${l}.bundle`;let c=m.variables.filter((e=>e.name===p.variableName))[0].dimensions[0].values.indexOf(p.values[0]).toString(16);const u=4-c.length;for(let e=0;e<u;e++)c="0"+c;return c="S"+c,`${this.url}/_alllayers/${p.variableName}/${c}/${f}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const r=this.storageInfo.packetSize,o=r*(e%r)+t%r;if(o<0)throw "Invalid level / row / col";return 20+o*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const r=e.subarray(t,t+8);let o,i=0;for(o=0;o<5;o++)i|=(255&r[o])<<8*o;const s=0xffffffffff&i;for(i=0,o=5;o<8;o++)i|=(255&r[o])<<8*(o-5);return {position:s,recordSize:0xffffffffff&i}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t;}return t}};e$1([y$1({readOnly:!0})],g.prototype,"storageInfo",void 0),e$1([y$1({type:String,json:{write:!0}})],g.prototype,"datasetFormat",void 0),g=e$1([i$3("esri.layers.support.rasterDatasets.CloudRaster")],g);var y=g;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
let u=class extends z{constructor(){super(...arguments),this.datasetFormat="MEMORY";}async open(t){var e;await this.init();const{pixelBlock:s,statistics:r,histograms:i,name:o,keyProperties:a,nativeExtent:p,transform:c}=this.data,{width:h,height:u,pixelType:d}=s,f=this.data.extent||new z$1({xmin:-.5,ymin:.5,xmax:h-.5,ymax:u-.5,spatialReference:new y$2({wkid:3857})}),y=null!=(e=this.data.isPseudoSpatialReference)?e:!this.data.extent,x={x:f.width/h,y:f.height/u},g=new n$3({width:h,height:u,pixelType:d,extent:f,nativeExtent:p,transform:c,pixelSize:x,spatialReference:f.spatialReference,bandCount:3,keyProperties:a||{},statistics:r,isPseudoSpatialReference:y,histograms:i});this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),await this._buildInMemoryRaster(s,{width:512,height:512},t),this.datasetName=o,this.url="/InMemory/"+o;}fetchRawTile(t,e,s,r={}){const i=this._pixelBlockTiles.get(`${t}/${e}/${s}`);return U$2(i)}async _buildInMemoryRaster(t,s,r){const m=this.rasterInfo.storageInfo.maximumPyramidLevel,n=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:s,maximumPyramidLevel:m},r):U$2(A(t,s,m)),l=u$3(this.rasterInfo.statistics),h=u$3(this.rasterInfo.histograms),u=l&&h?U$2({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):U$2(o$3(t)),d=await k([n,u]);if(!d[0].value&&d[1].value)throw new s$1("inmemory-raster:open","failed to build in memory raster");var f,y;(this._pixelBlockTiles=d[0].value,l)||(this.rasterInfo.statistics=null==(f=d[1].value)?void 0:f.statistics);h&&(this.rasterInfo.histograms=null==(y=d[1].value)?void 0:y.histograms);}};e$1([y$1({type:String,json:{write:!0}})],u.prototype,"datasetFormat",void 0),e$1([y$1()],u.prototype,"data",void 0),u=e$1([i$3("esri.layers.support.rasterDatasets.InMemoryRaster")],u);var d$1=u;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
function n(e,r,t){const{x:o,y:s}=r;if(t<2){return {x:e[0]+o*e[2]+s*e[4],y:e[1]+o*e[3]+s*e[5]}}if(2===t){const r=o*o,t=s*s,i=o*s;return {x:e[0]+o*e[2]+s*e[4]+r*e[6]+i*e[8]+t*e[10],y:e[1]+o*e[3]+s*e[5]+r*e[7]+i*e[9]+t*e[11]}}const i=o*o,n=s*s,p=o*s,a=i*o,f=i*s,c=o*n,l=s*n;return {x:e[0]+o*e[2]+s*e[4]+i*e[6]+p*e[8]+n*e[10]+a*e[12]+f*e[14]+c*e[16]+l*e[18],y:e[1]+o*e[3]+s*e[5]+i*e[7]+p*e[9]+n*e[11]+a*e[13]+f*e[15]+c*e[17]+l*e[19]}}function p$1(e,r,t){const{xmin:o,ymin:s,xmax:p,ymax:a,spatialReference:f}=r;let c=[];if(t<2)c.push({x:o,y:a}),c.push({x:p,y:a}),c.push({x:o,y:s}),c.push({x:p,y:s});else {let e=10;for(let r=0;r<e;r++)c.push({x:o,y:s+(a-s)*r/(e-1)}),c.push({x:p,y:s+(a-s)*r/(e-1)});e=8;for(let r=1;r<=e;r++)c.push({x:o+(p-o)*r/e,y:s}),c.push({x:o+(p-o)*r/e,y:a});}c=c.map((r=>n(e,r,t)));const l=c.map((e=>e.x)),m=c.map((e=>e.y));return new z$1({xmin:Math.min.apply(null,l),xmax:Math.max.apply(null,l),ymin:Math.min.apply(null,m),ymax:Math.max.apply(null,m),spatialReference:f})}let a=class extends a$1{constructor(){super(...arguments),this.polynomialOrder=1;}get inverseCoefficients(){let e=this._get("inverseCoefficients");const r=this._get("forwardCoefficients");return !e&&r&&this.polynomialOrder<2&&(e=function(e){const[r,t,o,s,i,n]=e,p=o*n-i*s,a=i*s-o*n;return [(i*t-r*n)/p,(o*t-r*s)/a,n/p,s/a,-i/p,-o/a]}(r)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e);}forwardTransform(e){if("point"===e.type){const r=n(this.forwardCoefficients,e,this.polynomialOrder);return new w$2({x:r.x,y:r.y,spatialReference:e.spatialReference})}return p$1(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const r=n(this.inverseCoefficients,e,this.polynomialOrder);return new w$2({x:r.x,y:r.y,spatialReference:e.spatialReference})}return p$1(this.inverseCoefficients,e,this.polynomialOrder)}};e$1([y$1({json:{write:!0}})],a.prototype,"polynomialOrder",void 0),e$1([y$1({json:{write:!0}})],a.prototype,"forwardCoefficients",void 0),e$1([y$1({dependsOn:["forwardCoefficients"],json:{write:!0}})],a.prototype,"inverseCoefficients",null),a=e$1([i$3("esri.layers.support.rasterTransforms.PolynomialTransform")],a);var f=a;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
function n$1(e,t){if(!e||!t)return [];let l=t;t.indexOf("/")>-1?(l=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const r=[];if(t){const u=n$1(e,l);for(let e=0;e<u.length;e++){n$1(u[e],t).forEach((n=>r.push(n)));}return r}const u=e.getElementsByTagNameNS("*",l);if(!u||0===u.length)return [];for(let n=0;n<u.length;n++)r.push(u[n]||u.item[n]);return r}function e(t,l){if(!t||!l)return null;let r=l;l.indexOf("/")>-1?(r=l.slice(0,l.indexOf("/")),l=l.slice(l.indexOf("/")+1)):l="";const u=n$1(t,r);return u.length>0?l?e(u[0],l):u[0]:null}function t(n,t=null){const l=t?e(n,t):n;let r;return l?(r=l.textContent||l.nodeValue,r?r.trim():null):null}function l(e,t){const l=n$1(e,t),r=[];let u;for(let n=0;n<l.length;n++)u=l[n].textContent||l[n].nodeValue,u&&(u=u.trim(),""!==u&&r.push(u));return r}function u$1(n,e){return l(n,e).map((n=>Number(n)))}function o(n,e){const l=t(n,e);return Number(l)}function i(n,e){var t;const l=null==n||null==(t=n.nodeName)?void 0:t.toLowerCase(),r=e.toLowerCase();return l.slice(l.lastIndexOf(":")+1)===r}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
function i$1(e,t){if(!e||!t)return null;const n=[];for(let a=0;a<e.length;a++)n.push(e[a]),n.push(t[a]);return n}function u$2(t){if(!t)return null;let n=Number(t);if(!isNaN(n)&&0!==n)return new y$2({wkid:n});const a=t.replace(/\]/g,"[").replace(/\"/g,"").split("[").map((e=>e.trim())).filter((e=>""!==e)),r=a[a.length-1].split(",");return "EPSG"!==r[0]||(n=Number(r[1]),isNaN(n)||0===n)?new y$2({wkt:t}):new y$2({wkid:n})}function f$1(e$1){var f$1;if("pamdataset"!==(null==e$1||null==(f$1=e$1.documentElement.tagName)?void 0:f$1.toLowerCase()))return {};const c={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e$1.documentElement.childNodes.forEach((e$1=>{if(1===e$1.nodeType)if(i(e$1,"SRS")){if(!c.spatialReference){const t$1=t(e$1);c.spatialReference=u$2(t$1);}}else if(i(e$1,"Metadata"))if("xml:ESRI"===e$1.getAttribute("domain")){const{spatialReference:t$1,transform:a}=function(e$1){var t$1;const a=e(e$1,"GeodataXform"),f$1=u$2(o(a,"SpatialReference/WKID")||t(a,"SpatialReference/WKT"));if("typens:PolynomialXform"!==a.getAttribute("xsi:type"))return {spatialReference:f$1,transform:null};const c=null!=(t$1=o(a,"PolynomialOrder"))?t$1:1,m=u$1(a,"CoeffX/Double"),d=u$1(a,"CoeffY/Double"),p=u$1(a,"InverseCoeffX/Double"),I=u$1(a,"InverseCoeffY/Double"),S=i$1(m,d),g=i$1(p,I);return {spatialReference:f$1,transform:new f({polynomialOrder:c,forwardCoefficients:S,inverseCoefficients:g})}}(e$1);c.transform=a,c.spatialReference||(c.spatialReference=t$1);}else {n$1(e$1,"MDI").forEach((e=>c.metadata[e.getAttribute("key")]=t(e)));}else if(i(e$1,"PAMRasterBand")){const t$1=function(e$1){var t$1;const l=o(e$1,"NoDataValue"),o$1=e(e$1,"Histograms/HistItem"),i=o(o$1,"HistMin"),u=o(o$1,"HistMax"),f=o(o$1,"BucketCount"),c=null==(t$1=t(o$1,"HistCounts"))?void 0:t$1.split("|").map((e=>Number(e)));let m,d,p,I;n$1(e$1,"Metadata/MDI").forEach((e=>{var t;const n=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":m=n;break;case"STATISTICS_MAXIMUM":d=n;break;case"STATISTICS_MEAN":p=n;break;case"STATISTICS_STDDEV":I=n;}}));const S=o(e$1,"Metadata/SourceBandIndex");return {noDataValue:l,histogram:null!=c&&c.length&&null!=m&&null!=d?{min:i,max:u,size:f||c.length,counts:c}:null,sourceBandIndex:S,statistics:null!=m&&null!=d?{min:m,max:d,avg:p,stddev:I}:null}}(e$1);null!=t$1.sourceBandIndex&&null==c.rasterBands[t$1.sourceBandIndex]?c.rasterBands[t$1.sourceBandIndex]=t$1:c.rasterBands.push(t$1);}}));const m=c.rasterBands;if(m){const e=!!m[0].statistics;c.statistics=e?m.map((e=>e.statistics)):null;const t=!!m[0].histogram;c.histograms=t?m.map((e=>e.histogram)):null;}return c}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
let d$2=class extends z{async open(t){await this.init();const r=await this._fetchData(t);let{spatialReference:e,statistics:s,histograms:o,transform:a}=await this._fetchAuxiliaryData(t);const i=!e;i&&(e=new y$2({wkid:3857})),null!=o&&o.length&&null==s&&(s=r$1(o));const{width:m,height:c}=r;let u=new z$1({xmin:-.5,ymin:.5-c,xmax:m-.5,ymax:.5,spatialReference:e});const h=a?a.forwardTransform(u):u;let d=!0;if(a){const t=a.forwardCoefficients;d=t&&0===t[1]&&0===t[2],d&&(a=null,u=h);}const x=new d$1({data:{extent:h,nativeExtent:u,transform:a,pixelBlock:r,statistics:s,histograms:o,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:i}});await x.open(),this._set("rasterInfo",x.rasterInfo),this._inMemoryRaster=x;}fetchRawTile(t,r,e,s={}){return this._inMemoryRaster.fetchRawTile(t,r,e,s)}async _fetchData(t){const{data:r}=await this.request(this.url,{responseType:"array-buffer",signal:null==t?void 0:t.signal}),e=I$4(r).toUpperCase();if("JPG"!==e&&"PNG"!==e&&"GIF"!==e&&"BMP"!==e)throw new s$1("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",e);return await this.decodePixelBlock(r,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(t){var e,s;const o=f$3(null==t?void 0:t.signal),n=null!=(e=this.ioConfig.skipExtensions)?e:[],l=n.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:o}),m=this.datasetFormat,p="JPG"===m?"jgw":"PNG"===m?"pgw":"BMP"===m?"bpw":null,c=n.indexOf(p)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+p,{responseType:"text",signal:o}),f$2=await k([l,c]);if(null!=o&&o.aborted)throw m$1();const d=f$1(null==(s=f$2[0].value)?void 0:s.data);if(!d.transform){const t=f$2[1].value?f$2[1].value.data.split("\n").slice(0,6).map((t=>Number(t))):null;d.transform=6===(null==t?void 0:t.length)?new f({forwardCoefficients:[t[4],t[5],t[0],-t[1],t[2],-t[3]]}):null;}return d}};e$1([y$1({type:String,json:{write:!0}})],d$2.prototype,"datasetFormat",void 0),d$2=e$1([i$3("esri.layers.support.rasterDatasets.ImageAuxRaster")],d$2);var x=d$2;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
let g$1=class extends z{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer";}async open(e){await this.init();const i=e&&e.signal,s=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:i});s.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const l=s.data;this.sourceJSON=l;const o=["jpg","jpeg","png","png8","png24","png32","mixed"];if(this.tileType=l.cacheType,null==this.tileType&&(o.indexOf(l.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===l.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),!l)throw new s$1("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!l.tileInfo)throw new s$1("imageserverraster:open","use ImageryLayer to open non-tiled image services");this.datasetName=l.name.slice(l.name.indexOf("/")+1);const n=await this._fetchRasterInfo({signal:i});if(!u$3(n))throw new s$1("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?n$4(l.tileInfo,l):x$3.fromJSON(l.tileInfo),{extent:t,pixelSize:i}=n,s=.5/n.width*i.x;let a,r;const o=e.lodAt(Math.max.apply(null,e.lods.map((e=>e.level))));"Map"!==this.tileType&&0!==l.maxScale&&("Raster"===this.tileType?(a=e.lods.filter((e=>e.resolution===i.x))[0],a||(a=e.lods[e.lods.length-1])):(a=e.lods.filter((e=>Math.abs(e.scale-l.maxScale)<s))[0],a||(a=e.lods.filter((e=>e.scale>l.maxScale)).sort(((e,t)=>e.scale>t.scale?1:-1))[0])),i.x=i.y=a.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),a||(a=o);const m=e.lodAt(Math.min.apply(null,e.lods.map((e=>e.level))));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==l.minScale&&"Elevation"===this.tileType&&(r=e.lods.filter((e=>Math.abs(e.scale-l.minScale)<s))[0],this._levelOffset=r.level-m.level),r||(r=m);const h=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>s||!e.lods.some((e=>Math.abs(e.resolution-h)<s)))&&(i.x=i.y=a.resolution,n.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),n.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const p$1=a.level-r.level,[f,d]=e.size,x=e.origin;let{x:g,y:v}=i;const w=[{minCol:Math.floor((t.xmin-x.x+.1*g)/f/g),maxCol:Math.floor((t.xmax-x.x-.1*g)/f/g),minRow:Math.floor((x.y-t.ymax+.1*v)/d/v),maxRow:Math.floor((x.y-t.ymin-.1*v)/d/v)}];if(p$1>0)for(let e=0;e<p$1;e++)g*=2,v*=2,w.push({minCol:Math.floor((t.xmin-x.x+.1*g)/f/g),maxCol:Math.floor((t.xmax-x.x-.1*g)/f/g),minRow:Math.floor((x.y-t.ymax+.1*v)/d/g),maxRow:Math.floor((x.y-t.ymin-.1*v)/d/g)});n.storageInfo=new p({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:p$1,tileInfo:e,blockBoundary:w}),this._set("rasterInfo",n);}if(l.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:n.storageInfo.tileInfo,parsedUrl:U$3(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new L$2({layer:e});}}async fetchRawTile(e,t,i,s={}){const{storageInfo:a,extent:r,pixelSize:l}=this.rasterInfo,o=a.maximumPyramidLevel-e+this._levelOffset,n=`${this.url}/tile/${o}/${t}/${i}`,m=this._slices?{sliceId:s.sliceId||0}:null,{data:h}=await this.request(n,{query:m,responseType:"array-buffer",signal:s.signal});if(!h)return null;const c=await this.decodePixelBlock(h,{width:a.tileInfo.size[0],height:a.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),u=a.blockBoundary[e];if("jpg"!==a.compression||i>u.minCol&&i<u.maxCol&&t>u.minRow&&t<u.maxRow)return c;const{origin:p,blockWidth:f,blockHeight:y}=a,x=Math.pow(2,e),g=Math.round((r.xmin-p.x)/(l.x*x))%f,v=Math.round((r.xmax-p.x)/(l.x*x))%f,w=Math.round((p.y-r.ymax)/(l.x*x))%y,j=Math.round((p.y-r.ymin)/(l.x*x))%y,S=i===u.minCol?g:0,b=t===u.minRow?w:0,M=i===u.maxCol?v:f,I=t===u.maxRow?j:y;return m$2(c,{x:S,y:b},{width:M-S,height:I-b}),c}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let e=0;e<this._slices.length;e++){const i=this._slices[e].multidimensionalDefinition;if(i.length===t.length&&!i.some((e=>{const i=t.filter((t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName))[0];if(!i)return !0;return (Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])})))return e}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),s=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),a=await f$4([i,s]);return a[0]&&a[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation;})),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let s=0;const{maximumPyramidLevel:a}=this.rasterInfo.storageInfo;let r=a-s+this._levelOffset;const l=i.srcLocation;for(;r>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(r,i.row,i.col,t))break}catch{}if(r--,s++,i=this.identifyPixelLocation(l,s,t.datumTransformation),null===i)return null}return -1===r||null==i?null:s}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=y$2.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new n$3({width:i,height:s,bandCount:3,extent:z$1.fromJSON(t.extent),spatialReference:a,pixelSize:new w$2({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:r,signal:c}=e,u=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:r,f:"json"},signal:c}).then((e=>g$2.fromJSON(e.data))).catch((()=>null)),p=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:r,f:"json"},signal:c}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),d=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:r,f:"json"},signal:c}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),y=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:c}).then((e=>e.data)).catch((()=>{})),x=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),g=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:c}).then((e=>e.data&&e.data.slices)).catch((()=>{}));return f$4([u,p,d,y,x,g]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]});}return this._slices=e[5]||null,new n$3({width:i,height:s,bandCount:t.bandCount,extent:z$1.fromJSON(t.extent),spatialReference:a,pixelSize:new w$2({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=i.variables)&&t.length&&i.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation;}));})),i}};e$1([y$1({type:String,json:{write:!0}})],g$1.prototype,"datasetFormat",void 0),e$1([y$1()],g$1.prototype,"tileType",void 0),g$1=e$1([i$3("esri.layers.support.rasterDatasets.ImageServerRaster")],g$1);var v=g$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const w=new Map;w.set("Int8","s8"),w.set("UInt8","u8"),w.set("Int16","s16"),w.set("UInt16","u16"),w.set("Int32","s32"),w.set("UInt32","u32"),w.set("Float32","f32"),w.set("Float64","f32"),w.set("Double64","f32");const I$1=new Map;I$1.set("lerc",".lrc"),I$1.set("none",".til"),I$1.set("deflate",".pzp"),I$1.set("jpeg",".jzp");let b=class extends z{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF";}async open(t){var s;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const o=t?f$3(t.signal):null,i=await this.request(this.url,{responseType:"xml",signal:o}),{rasterInfo:a,files:n}=this._parseHeader(i.data);if(-1===(null==(s=this.ioConfig.skipExtensions)?void 0:s.indexOf("aux.xml"))){const e=await this._fetchAuxiliaryData(t);var l;if(null!=e)a.statistics=null!=(l=e.statistics)?l:a.statistics,a.histograms=e.histograms,e.histograms&&!u$3(a.statistics)&&(a.statistics=r$1(e.histograms));}this._set("rasterInfo",a),this._files=n;const p=await this.request(n.index,{responseType:"array-buffer",signal:o});this._storageIndex=this._parseIndex(p.data);let c,f,m=0,u=-1;const{blockWidth:g,blockHeight:d,compression:y}=this.rasterInfo.storageInfo,x=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:w,height:I,bandCount:b}=this.rasterInfo,M=[],j="none"===y?1:b;for(;m<this._storageIndex.length;)u++,c=Math.ceil(w/g/Math.pow(x,u)),f=Math.ceil(I/d/Math.pow(x,u)),m+=c*f*j*4,M.push({maxRow:f,maxCol:c,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=M,u>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=u),this.updateTileInfo();}async fetchRawTile(t,e,r,s={}){const{blockWidth:o,blockHeight:i,blockBoundary:n,compression:l}=this.rasterInfo.storageInfo,p=n[t];if(!p||p.maxRow<e||p.maxCol<r||p.minRow>e||p.minCol>r)return null;const{bandCount:f,pixelType:m}=this.rasterInfo,{ranges:h,actualTileWidth:u,actualTileHeight:g}=this._getTileLocation(t,e,r);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const t=new Uint8Array(o*i);return new u$5({width:o,height:i,pixels:null,mask:t,validPixelCount:0})}const{bandIds:d}=this.ioConfig,y="none"===l?1:f,x=[];let w=0;for(w=0;w<y;w++)(!d||d.indexOf[w]>-1)&&x.push(this.request(this._files.data,{range:{from:h[w].from,to:h[w].to},responseType:"array-buffer",signal:s.signal}));const I=await f$4(x),b=I.map((t=>t.data.byteLength)).reduce(((t,e)=>t+e)),M=new Uint8Array(b);let j=0;for(w=0;w<y;w++)M.set(new Uint8Array(I[w].data),j),j+=I[w].data.byteLength;const A="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",R=await this.decodePixelBlock(M.buffer,{width:o,height:i,format:A,pixelType:m});let _=0,F=0;if(u!==o||g!==i){let t=R.mask;if(t)for(w=0;w<i;w++)if(F=w*o,w<g)for(_=u;_<o;_++)t[F+_]=0;else for(_=0;_<o;_++)t[F+_]=0;else for(t=new Uint8Array(o*i),R.mask=t,w=0;w<g;w++)for(F=w*o,_=0;_<u;_++)t[F+_]=1;}return R}_parseIndex(t){if(t.byteLength%16>0)throw "invalid array buffer must be multiples of 16";let e,r,s,o,i,a;if(r$2){for(r=new Uint8Array(t),o=new ArrayBuffer(t.byteLength),s=new Uint8Array(o),i=0;i<t.byteLength/4;i++)for(a=0;a<4;a++)s[4*i+a]=r[4*i+3-a];e=new Uint32Array(o);}else e=new Uint32Array(t);return e}_getTileLocation(t,e,r){const{blockWidth:s,blockHeight:o,pyramidScalingFactor:i,compression:a}=this.rasterInfo.storageInfo,{width:n,height:l,bandCount:p}=this.rasterInfo,c="none"===a?1:p;let f,m,h,u=0,g=0;for(h=0;h<t;h++)g=Math.pow(i,h),f=Math.ceil(n/s/g),m=Math.ceil(l/o/g),u+=f*m;g=Math.pow(i,t),f=Math.ceil(n/s/g),m=Math.ceil(l/o/g),u+=e*f+r,u*=4*c;const d=this._storageIndex.subarray(u,u+4*c);let y=0,x=0;const w=[];for(let t=0;t<c;t++)y=d[4*t+0]*Math.pow(2,32)+d[4*t+1],x=y+d[4*t+2]*Math.pow(2,32)+d[4*t+3],w.push({from:y,to:x});return {ranges:w,actualTileWidth:r<f-1?s:Math.ceil(n/g)-s*(f-1),actualTileHeight:e<m-1?o:Math.ceil(l/g)-o*(m-1)}}_parseHeader(t$1){const e$1=e(t$1,"MRF_META/Raster");if(!e$1)throw new s$1("mrf:open","not a valid MRF format");const r=e(e$1,"Size"),s=parseInt(r.getAttribute("x"),10),o=parseInt(r.getAttribute("y"),10),a=parseInt(r.getAttribute("c"),10),c=(t(e$1,"Compression")||"none").toLowerCase();if(!c||-1===["none","lerc"].indexOf(c))throw new s$1("mrf:open","currently does not support compression "+c);const m=t(e$1,"DataType")||"UInt8",h=w.get(m);if(null==h)throw new s$1("mrf:open","currently does not support pixel type "+m);const g=e(e$1,"PageSize"),x=parseInt(g.getAttribute("x"),10),b=parseInt(g.getAttribute("y"),10),M=e(e$1,"DataValues");let j,A;M&&(A=M.getAttribute("NoData"),null!=A&&(j=A.trim().split(" ").map((t=>parseFloat(t)))));if(e(t$1,"MRF_META/CachedSource"))throw new s$1("mrf:open","currently does not support MRF referencing other data files");const R=e(t$1,"MRF_META/GeoTags"),_=e(R,"BoundingBox");if(null==_)throw new s$1("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const F=parseFloat(_.getAttribute("minx")),T=parseFloat(_.getAttribute("miny")),k=parseFloat(_.getAttribute("maxx")),C=parseFloat(_.getAttribute("maxy")),U=t(R,"Projection"),S=t(t$1,"datafile"),v=t(t$1,"IndexFile");let L;"LOCAL_CS[]"!==U&&(L=new y$2({wkt:U}));const B=new z$1(F,T,k,C);B.spatialReference=L;const E=e(t$1,"MRF_META/Rsets"),H=parseInt(E&&E.getAttribute("scale")||"2",10),P=new p({origin:new w$2({x:B.xmin,y:B.ymax,spatialReference:L}),blockWidth:x,blockHeight:b,pyramidBlockWidth:x,pyramidBlockHeight:b,compression:c,pyramidScalingFactor:H}),D=new w$2({x:(k-F)/s,y:(C-T)/o,spatialReference:L});return {rasterInfo:new n$3({width:s,height:o,extent:B,spatialReference:L,bandCount:a,pixelType:h,pixelSize:D,noDataValue:j,storageInfo:P}),files:{mrf:this.url,index:v||this.url.replace(".mrf",".idx"),data:S||this.url.replace(".mrf",I$1.get(c))}}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==t?void 0:t.signal});return f$1(e)}catch{return null}}};e$1([y$1()],b.prototype,"_files",void 0),e$1([y$1()],b.prototype,"_storageIndex",void 0),e$1([y$1({type:String,json:{write:!0}})],b.prototype,"datasetFormat",void 0),b=e$1([i$3("esri.layers.support.rasterIO.MRFRaster")],b);var M=b;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const I$2=function(t,e){const r=t.get(e);return r&&r.values},T=function(t,e){const r=t.get(e);return r&&r.values[0]};let x$1=class extends z{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF";}async open(t){var i;await this.init();const s=t?f$3(t.signal):null,{data:l}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:s});if(!l)throw new s$1("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:h,firstIFD:m,isBigTiff:y}=y$5(l),g=[];await this.readIFDs(g,l,h,m,0,y?8:4,s);const I=p$5(g),{width:T,height:x,tileWidth:w,tileHeight:F,planes:E,pixelType:S,compression:b,firstPyramidLevel:_,maximumPyramidLevel:v,pyramidBlockWidth:j,pyramidBlockHeight:B,tileBoundary:k,metadata:D}=I,L=z$1.fromJSON(I.extent),R=L.spatialReference,O=new w$2(L?{x:L.xmin,y:L.ymax,spatialReference:R}:{x:0,y:0}),z=new p({blockWidth:w,blockHeight:F,pyramidBlockWidth:j,pyramidBlockHeight:B,compression:b,origin:O,firstPyramidLevel:_,maximumPyramidLevel:v,blockBoundary:k}),H=new w$2({x:(L.xmax-L.xmin)/T,y:(L.ymax-L.ymin)/x,spatialReference:R}),G=D?{BandProperties:D.bandProperties,DataType:D.dataType}:{},P=new n$3({width:T,height:x,bandCount:E,pixelType:S,compression:b,pixelSize:H,storageInfo:z,spatialReference:R,keyProperties:G,extent:L,statistics:D?D.statistics:null});if(-1===(null==(i=this.ioConfig.skipExtensions)?void 0:i.indexOf("aux.xml"))){const e=await this._fetchAuxiliaryData(t);var q;if(null!=e)P.statistics=null!=(q=e.statistics)?q:P.statistics,P.histograms=e.histograms,e.histograms&&!u$3(P.statistics)&&(P.statistics=r$1(e.histograms));}if(this._set("rasterInfo",P),this._headerInfo={littleEndian:h,isBigTiff:y,ifds:g,...I},!this._headerInfo.isSupported)throw new s$1("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo();}async fetchRawTile(t,e,r,i={}){if(!this._headerInfo&&this._headerInfo.isSupported)return null;const{blockBoundary:s}=this.rasterInfo.storageInfo,a=t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,o=t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight,n=s[t];if(!n||n.maxRow<e||n.maxCol<r||n.minRow>e||n.minCol>r)return null;const f=this.getTileLocation(t,e,r);if(!f)return null;const{range:l,actualTileWidth:u,actualTileHeight:p,ifd:h}=f,{data:m}=await this.request(this.url,{range:l,responseType:"array-buffer",signal:i.signal}),c=await this.decodePixelBlock(m,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:h,offset:0,size:0},width:a,height:o,planes:null,pixelType:null});let d,y,g;if(u!==a||p!==o){let t=c.mask;if(t)for(d=0;d<o;d++)if(g=d*a,d<p)for(y=u;y<a;y++)t[g+y]=0;else for(y=0;y<a;y++)t[g+y]=0;else for(t=new Uint8Array(a*o),c.mask=t,d=0;d<p;d++)for(g=d*a,y=0;y<u;y++)t[g+y]=1;}return c}async readIFDs(t,e,r,i,s,a=4,o){if(!i)return null;if(i>=e.byteLength||i<0){e=(await this.request(this.url,{range:{from:i+s,to:i+s+this._bufferSize},responseType:"array-buffer",signal:o})).data,s=i+s,i=0;}const n=await this.readIFD(e,r,i,s,S$1.TIFF_TAGS,a,o);if(t.push(n.ifd),!n.nextIFD)return null;await this.readIFDs(t,e,r,n.nextIFD-s,s,a,o);}async readIFD(t,e,r,i,s=S$1.TIFF_TAGS,a=4,o){if(!t)return null;const n=m$3(t,e,r,i,s,a);if(n.success){const r=[];if(n.ifd.forEach((t=>{t.values||r.push(t);})),r.length>0){const s=r.map((t=>t.offlineOffsetSize)),a=Math.min.apply(null,s.map((t=>t[0])));if(Math.min.apply(null,s.map((t=>t[0]+t[1])))-a<=this._bufferSize){const{data:s}=await this.request(this.url,{range:{from:a,to:a+this._bufferSize},responseType:"array-buffer",signal:o});t=s,i=a,r.forEach((r=>w$4(t,e,r,i)));}}if(n.ifd.has("GEOKEYDIRECTORY")){const r=n.ifd.get("GEOKEYDIRECTORY"),s=r.values;if(s&&s.length>4){const a=s[0]+"."+s[1]+"."+s[2],n=await this.readIFD(t,e,r.valueOffset+6-i,i,S$1.GEO_KEYS,2,o);r.data=n.ifd,r.data&&r.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[a]});}}return n}if(n.requiredBufferSize&&n.requiredBufferSize!==t.byteLength){const r=await this.request(this.url,{range:{from:i,to:i+n.requiredBufferSize+4},responseType:"array-buffer",signal:o});return (t=r.data).byteLength<n.requiredBufferSize?null:this.readIFD(t,e,0,i,S$1.TIFF_TAGS,4,o)}}getTileLocation(t,e,r){const{firstPyramidLevel:i,blockBoundary:s}=this.rasterInfo.storageInfo,a=0===t?0:t-(i-1),o=this._headerInfo.ifds[a];if(!o)return null;const n=I$2(o,"TILEOFFSETS");if(void 0===n)return null;const f=I$2(o,"TILEBYTECOUNTS"),{minRow:l,minCol:u,maxRow:p,maxCol:h}=s[a];if(e>p||r>h||e<l||r<u)return null;const m=T(o,"IMAGEWIDTH"),c=T(o,"IMAGELENGTH"),d=T(o,"TILEWIDTH"),y=T(o,"TILELENGTH"),g=e*(h+1)+r,x=n[g],w=f[g];if(null==x||null==w)return null;return {range:{from:x,to:x+w-1},ifd:o,actualTileWidth:r===h?m%d:d,actualTileHeight:e===p?c%y:y}}async _fetchAuxiliaryData(t){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==t?void 0:t.signal});return f$1(e)}catch{return null}}};e$1([y$1()],x$1.prototype,"_files",void 0),e$1([y$1()],x$1.prototype,"_headerInfo",void 0),e$1([y$1()],x$1.prototype,"_bufferSize",void 0),e$1([y$1({type:String,json:{write:!0}})],x$1.prototype,"datasetFormat",void 0),x$1=e$1([i$3("esri.layers.support.rasterDatasets.TIFFRaster")],x$1);var w$1=x$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const c=new Map;c.set("CRF",{desc:"Cloud Raster Format",constructor:y}),c.set("MRF",{desc:"Meta Raster Format",constructor:M}),c.set("TIFF",{desc:"GeoTIFF",constructor:w$1}),c.set("RasterTileServer",{desc:"Raster Tile Server",constructor:v}),c.set("JPG",{desc:"JPG Raster Format",constructor:x}),c.set("PNG",{desc:"PNG Raster Format",constructor:x}),c.set("GIF",{desc:"GIF Raster Format",constructor:x}),c.set("BMP",{desc:"BMP Raster Format",constructor:x});class R{static get supportedFormats(){const t=new Set;return c.forEach(((r,e)=>t.add(e))),t}static async open(r){const{url:e,ioConfig:s,sourceJSON:o}=r;let a=r.datasetFormat;null==a&&e.lastIndexOf(".")&&(a=e.slice(e.lastIndexOf(".")+1).toUpperCase()),"OVR"===a||"TIF"===a?a="TIFF":"JPG"!==a&&"JPEG"!==a&&"JFIF"!==a||(a="JPG"),e.toLowerCase().indexOf("/imageserver")>-1&&-1===e.toLowerCase().indexOf("/wcsserver")&&(a="RasterTileServer");const n={url:e,sourceJSON:o,datasetFormat:a,ioConfig:s||{bandIds:null,sampling:null}};let i,u;if(this.supportedFormats.has(a))return i=c.get(a).constructor,u=new i(n),await u.open({signal:r.signal}),u;if(a)throw new s$1("rasterfactory:open","not a supported format "+a);const l=Array.from(c.keys());let m=0;const F=function(){return a=l[m++],a?(i=c.get(a).constructor,u=new i(n),u.open({signal:r.signal}).then((()=>u)).catch((()=>F()))):null};return F()}static register(t,r,e){c.has(t.toUpperCase())||c.set(t.toUpperCase(),{desc:r,constructor:e});}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const I$3=o$4()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function O(){return {enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let x$2=class extends(t$1(s$2(o$5(l$1(d$5(J(l$2(b$1)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null;}normalizeCtorArgs(e,r){return "string"==typeof e?{url:e,...r}:e}load(e){const t=u$3(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._openRaster(t)),(()=>this._openRaster(t)))),U$2(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,r;let t=[new y$6({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const o=null==(e=this.rasterInfo)||null==(r=e.attributeTable)?void 0:r.fields;if(o){const e=o.filter((e=>"oid"!==e.type&&"value"!==e.name.toLowerCase())).map((e=>{const r=e.clone();return r.name="Raster."+e.name,r}));t=t.concat(e);}return t}set renderer(e){this._set("renderer",e),this.updateRenderer();}readRenderer(e,r,t){const o=r&&r.layerDefinition&&r.layerDefinition.drawingInfo&&r.layerDefinition.drawingInfo.renderer,i=u$6(o,t)||void 0;if(null!=i)return i}createPopupTemplate(e){return a$3(this,e)}write(e,r){const{raster:t}=this;if(this.loaded?"RasterTileServer"===t.datasetFormat&&("Raster"===t.tileType||"Map"===t.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,r);if(r&&r.messages){const e=`${r.origin}/${r.layerContainerType||"operational-layers"}`;r.messages.push(new s$1("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}));}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await R.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:r}=this.raster;if(!r)throw new s$1("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings();}};e$1([y$1()],x$2.prototype,"ioConfig",void 0),e$1([y$1({type:[k$1],json:{write:{overridePolicy:O}}})],x$2.prototype,"bandIds",void 0),e$1([y$1({json:{write:{overridePolicy:O}}}),r$3(I$3)],x$2.prototype,"interpolation",void 0),e$1([y$1({json:{write:!0}})],x$2.prototype,"multidimensionalDefinition",void 0),e$1([y$1(c$2)],x$2.prototype,"legendEnabled",void 0),e$1([y$1({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],x$2.prototype,"isReference",void 0),e$1([y$1({type:["show","hide"]})],x$2.prototype,"listMode",void 0),e$1([y$1()],x$2.prototype,"sourceJSON",void 0),e$1([y$1({readOnly:!0})],x$2.prototype,"version",void 0),e$1([y$1()],x$2.prototype,"title",void 0),e$1([y$1({readOnly:!0,json:{read:!1}})],x$2.prototype,"type",void 0),e$1([y$1({type:["ArcGISTiledImageServiceLayer"]})],x$2.prototype,"operationalLayerType",void 0),e$1([y$1({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:O,writer(e,r,t){r[t]=!e;}}}})],x$2.prototype,"popupEnabled",void 0),e$1([y$1({type:M$2,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:O}}})],x$2.prototype,"popupTemplate",void 0),e$1([y$1({readOnly:!0,dependsOn:["title"]})],x$2.prototype,"defaultPopupTemplate",null),e$1([y$1({readOnly:!0,type:[y$6],dependsOn:["rasterInfo"]})],x$2.prototype,"fields",null),e$1([y$1({types:o$2,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:O},origins:{"web-scene":{types:l$3,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],x$2.prototype,"renderer",null),e$1([e$2("renderer")],x$2.prototype,"readRenderer",null),x$2=e$1([i$3("esri.layers.ImageryTileLayer")],x$2);var L=x$2;

export default L;
