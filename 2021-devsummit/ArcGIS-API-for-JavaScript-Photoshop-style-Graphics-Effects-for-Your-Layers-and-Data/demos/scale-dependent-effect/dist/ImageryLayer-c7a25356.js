import { n as e, y as y$2, dQ as e$1, ba as o, cY as r, p as i$2, cn as a$2, aW as s$1, bb as j$1, fa as o$1, fb as k, c_ as i$3, a4 as w$1, bf as t$1, fV as o$2, cM as g$1, b$ as P, a as u$4, L, dR as i$4, c5 as m$5, ai as d$3, i as i$5, dL as y$3, bC as z, fW as y$4, aF as y$5, dX as p$4, c3 as O, bN as N, dl as U, t as t$2, h as s$2, bv as O$1, fX as D, r as f$3, z as h$1, cv as R, aH as x, U as U$1, c1 as n$5, fY as v, fZ as u$7, fl as t$3, f_ as f$5, fn as o$4, fm as s$3, dT as l$4, dU as d$4, dS as p$5, dV as l$5, dY as b, fr as a$3, fP as c$4, fu as a$4, cT as M$1 } from './index.js';
import { u as u$6 } from './pixelUtils-98ae2994.js';
import { n, a as n$2, o as o$3, l as l$3, u as u$5, w as w$2, T, y as y$6, f as f$4 } from './rasterRendererHelper-4dd59789.js';
import { f as f$2, n as n$1, a as n$4, R as R$1, U as U$2, I as I$1 } from './RasterSymbolizer-af481b58.js';
import { r as r$1, n as n$3, e as e$2 } from './utils-2b2711fa.js';
import './ItemCache-3dd0dd6d.js';
import './_commonjsHelpers-34398bae.js';
import './LercCodec-9d0c0e3e.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
var c;const a=new Set(["Raster","Raster2","DEM","FillRaster"]),p=new Set(["Rasters"]),m=t=>t&&t.rasterFunction?y.fromJSON(t):t,l=t=>t&&t instanceof y?t.toJSON():t;var f;!function(t){t[t.MOSAIC=0]="MOSAIC",t[t.GROUP=1]="GROUP",t[t.ITEM=2]="ITEM";}(f||(f={}));let y=c=class extends a$2{constructor(t){super(t),this.functionArguments=null,this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.description=null,this.functionDefinition=null,this.thumbnail=null;}readFunctionArguments(t,n){return (t=>{if(null==t)return null;const n={};for(const e of Object.keys(t))a.has(e)?n[e]=m(t[e]):p.has(e)&&Array.isArray(t[e])?n[e]=t[e].map(m):n[e]=t[e];return n})(n.arguments||n.rasterFunctionArguments)}writeFunctionArguments(t,n,e){const r={};for(const n of Object.keys(t))a.has(n)?r[n]=l(t[n]):p.has(n)&&Array.isArray(t[n])?r[n]=t[n].map(l):r[n]=l(t[n]);this.functionDefinition?n.arguments=r:n[e]=r;}readFunctionName(t,n){const e=n.rasterFunctionInfos,r=n.name;return r||(e&&e.length&&"None"!==e[0].name?e[0].name:n.rasterFunction)}writeFunctionName(t,n,e){this.functionDefinition?n.name=t:n[e]=t;}readFunctionType(t){return f[t]}writeFunctionType(t,n,e){n[e]=f[t];}clone(){return new c({functionName:this.functionName,functionArguments:s$1(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})}};e([y$2({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],y.prototype,"functionArguments",void 0),e([e$1("functionArguments",["rasterFunctionArguments","arguments"])],y.prototype,"readFunctionArguments",null),e([o("functionArguments")],y.prototype,"writeFunctionArguments",null),e([y$2({json:{type:String,write:{target:"rasterFunction"}}})],y.prototype,"functionName",void 0),e([e$1("functionName",["rasterFunction","rasterFunctionInfos","name"])],y.prototype,"readFunctionName",null),e([o("functionName")],y.prototype,"writeFunctionName",null),e([r({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),y$2({json:{default:"unknown"}})],y.prototype,"outputPixelType",void 0),e([y$2({type:String,json:{read:!0,write:!0}})],y.prototype,"variableName",void 0),e([y$2({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],y.prototype,"description",void 0),e([y$2({json:{origins:{"web-document":{read:!1,write:!1}}}})],y.prototype,"functionType",void 0),e([e$1("functionType")],y.prototype,"readFunctionType",null),e([o("functionType")],y.prototype,"writeFunctionType",null),e([y$2({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],y.prototype,"functionDefinition",void 0),e([y$2({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],y.prototype,"thumbnail",void 0),y=c=e([i$2("esri.layers.support.RasterFunction")],y);var d=y;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const i={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]},u={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},s=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function l$1(e){return s.has(e.type)}function m$1(t,n){if(!t||!n)return s$1(t||n);const r=s$1(t);if("none"!==n.functionName.toLowerCase()){p$1(r.functionArguments).Raster=n;}return r}function c$1(e,i){switch(i=i||{},e.type){case"raster-stretch":return function(e,t){const i=new d;i.functionName="Stretch";const u=f$1[n.toJSON(e.stretchType)],s="u8",l=function(e){const t=[];return e.forEach((e=>{const n=e;if(Array.isArray(n))t.push(n);else {if(null==n.min||null==n.max)return;const e=[n.min,n.max,n.avg||0,n.stddev||0];t.push(e);}})),t}(e.statistics),m={StretchType:u,Statistics:l,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};null!=e.outputMin&&(m.Min=e.outputMin);null!=e.outputMax&&(m.Max=e.outputMax);u===f$1.standardDeviation?(m.NumberOfStandardDeviations=e.numberOfStandardDeviations,i.outputPixelType=s):u===f$1.percentClip?(m.MinPercent=e.minPercent,m.MaxPercent=e.maxPercent,i.outputPixelType=s):u===f$1.minMax?i.outputPixelType=s:u===f$1.sigmoid&&(m.SigmoidStrengthLevel=e.sigmoidStrengthLevel);if(i.functionArguments=m,i.variableName="Raster",e.colorRamp){const a=e.colorRamp,u=new d,s=n$1(a);return s?u.functionArguments={colorRamp:s}:!t.convertColorRampToColormap||"algorithmic"!==a.type&&"multipart"!==a.type?u.functionArguments={colorRamp:e.colorRamp.toJSON()}:u.functionArguments={Colormap:f$2(a,256)},u.variableName="Raster",u.functionName="Colormap",u.functionArguments.Raster=i,u}return i}(e,i);case"class-breaks":return function(e,t){const n=[],r=[],a=[],i=[],u=1e-6,{pixelType:s,rasterAttributeTable:l}=t,m=l&&l.features,c=g(l);if(m&&Array.isArray(m)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,n)=>{const r=t.symbol.color;let a;r.a&&m.forEach((o=>{a=o.attributes[e.field],(a>=t.minValue&&a<t.maxValue||n===e.classBreakInfos.length-1&&a>=t.minValue)&&i.push([o.attributes[c],r.r,r.g,r.b]);}));}));const t=s?d$1(i,s):i,n=new d;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=t,n.variableName="Raster",n}e.classBreakInfos.forEach(((e,t)=>{const o=e.symbol&&e.symbol.color;o.a?(0===t?n.push(e.minValue,e.maxValue+u):n.push(e.minValue+u,e.maxValue+u),r.push(t),i.push([t,o.r,o.g,o.b])):a.push(e.minValue,e.maxValue);}));const p=s?d$1(i,s):i,f=new d;f.functionName="Remap",f.functionArguments={InputRanges:n,OutputValues:r,NoDataRanges:a},f.variableName="Raster";const h=new d;return h.functionName="Colormap",h.functionArguments={Colormap:p,Raster:f},h}(e,i);case"unique-value":return function(e,t){const n=[],{pixelType:r,rasterAttributeTable:a}=t,i=a&&a.features,u=g(a);let s=!1;e.uniqueValueInfos&&e.uniqueValueInfos.forEach((t=>{const r=t.symbol.color;r.a&&(e.field!==u&&i?i&&i.forEach((a=>{String(a.attributes[e.field])===String(t.value)&&n.push([a.attributes[u],r.r,r.g,r.b]);})):isNaN(+t.value)?s=!0:n.push([+t.value,r.r,r.g,r.b]));}));if(s)return null;const l=r&&n.length>0?d$1(n,r):n,m=new d;return m.functionName="Colormap",m.functionArguments={},m.functionArguments.Colormap=l,m.variableName="Raster",m}(e,i);case"raster-colormap":return function(e,t){const n=e.extractColormap();if(!n||0===n.length)return;const{pixelType:r}=t,a=r?d$1(n,r):n,i=new d;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=a,i}(e,i);case"vector-field":return function(e,n){const r=new d;r.functionName="VectorFieldRenderer";const{dataType:a,bandProperties:i}=n,s="vector-uv"===a;let l,m;i&&2===i.length&&(l=i.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),m=i.map((e=>e.BandName.toLowerCase())).indexOf("direction"));-1!==l&&null!==l||(l=0,m=1);const c="arithmetic"===e.rotationType?1:2,p="flow-from"===e.flowRepresentation?0:1,f=e.visualVariables?e.visualVariables.filter((e=>"Magnitude"===e.field))[0]:new j$1,d$1={magnitudeBandID:l,directionBandID:m,isUVComponents:s,referenceSystem:c,massFlowAngleRepresentation:p,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:u[e.style.toLowerCase().replace("-","_")],minimumMagnitude:f.minDataValue,maximumMagnitude:f.maxDataValue,minimumSymbolSize:f.minSize,maximumSymbolSize:f.maxSize};return r.functionArguments=d$1,r}(e,i);case"raster-shaded-relief":return function(e,t){if("elevation"!==t.dataType)return new d;const r=new d;r.functionName="Hillshade";const a="traditional"===e.hillshadeType?0:1,i="none"===e.scalingType?1:3,u={HillshadeType:a,SlopeType:i,ZFactor:e.zFactor};0===a&&(u.Azimuth=e.azimuth,u.Altitude=e.altitude);3===i&&(u.PSPower=e.pixelSizePower,u.PSZFactor=e.pixelSizeFactor);r.functionArguments=u,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",u.Colormap=f$2(e.colorRamp,256));return r}(e,i)}}function p$1(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?p$1(t.functionArguments):e}const f$1={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function d$1(e,t){const n=i[String(t).toLowerCase()];return n&&e.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),e}function g(e){if(!e)return;const{fields:t}=e,n=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return n&&n.name}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
var u$1;const m$2=o$1()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),h=o$1()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let M=u$1=class extends a$2{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null;}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;case"none":default:t="esriMosaicNone";}return h.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const o=t.mosaicOperation,r=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),i=o||(r?m$2.toJSON(r):null);return m$2.fromJSON(i)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new u$1({ascending:this.ascending,itemRenderingRule:s$1(this.itemRenderingRule),lockRasterIds:s$1(this.lockRasterIds),method:this.method,multidimensionalDefinition:s$1(this.multidimensionalDefinition),objectIds:s$1(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:s$1(this.viewpoint),where:this.where})}};e([y$2({type:Boolean,json:{write:!0}})],M.prototype,"ascending",void 0),e([e$1("ascending",["ascending","sortAscending"])],M.prototype,"readAscending",null),e([y$2({type:d,json:{write:!0}})],M.prototype,"itemRenderingRule",void 0),e([y$2({type:[k],json:{write:{overridePolicy(){return {enabled:"lock-raster"===this.method}}}}})],M.prototype,"lockRasterIds",void 0),e([y$2({type:String,json:{type:h.jsonValues,write:{target:"mosaicMethod",writer:h.write}}})],M.prototype,"method",void 0),e([e$1("method",["mosaicMethod","defaultMosaicMethod"])],M.prototype,"readMethod",null),e([y$2({type:[n$2],json:{write:!0}})],M.prototype,"multidimensionalDefinition",void 0),e([y$2({type:[k],json:{name:"fids",write:!0}})],M.prototype,"objectIds",void 0),e([y$2({json:{type:m$2.jsonValues,read:{reader:m$2.read},write:{target:"mosaicOperation",writer:m$2.write}}})],M.prototype,"operation",void 0),e([e$1("operation",["mosaicOperation","mosaicOperator"])],M.prototype,"readOperation",null),e([y$2({type:String,json:{write:{overridePolicy(){return {enabled:"attribute"===this.method}}}}})],M.prototype,"sortField",void 0),e([y$2({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return {enabled:"attribute"===this.method,allowNull:!0}}}}})],M.prototype,"sortValue",void 0),e([i$3("sortValue")],M.prototype,"castSortValue",null),e([y$2({type:w$1,json:{write:!0}})],M.prototype,"viewpoint",void 0),e([y$2({type:String,json:{write:!0}})],M.prototype,"where",void 0),M=u$1=e([i$2("esri.layers.support.MosaicRule")],M);var w=M;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const d$2=new t$1({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),u$2=new t$1({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"});let m$3=class extends a$2{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2;}writeAdjustAspectRatio(e,r,o){this.layer.version<10.3||(r[o]=e);}writeCompressionQuality(e,r,o){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(r[o]=e);}writeCompressionTolerance(e,r,o){"lerc"===this.format&&null!=e&&(r[o]=e);}writeLercVersion(e,r,o){"lerc"===this.format&&this.layer.version>=10.5&&(r[o]=e);}get version(){const e=this.layer;return e.bandIds,e.format,e.compressionQuality,e.compressionTolerance,e.interpolation,e.noData,e.noDataInterpretation,e.mosaicRule,e.renderingRule,e.adjustAspectRatio,e.pixelFilter,e.renderer,e.definitionExpression,(this._get("version")||0)+1}set version(e){this._set("version",e);}get mosaicRule(){const e=this.layer;let r=e.mosaicRule;const o=e.definitionExpression;return r?o&&o!==r.where&&(r=r.clone(),r.where=o):o&&(r=new w({where:o})),r}get renderingRule(){const e=this.layer;let r=e.renderingRule;const o=e.pixelFilter,t=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return r=this._addResampleRasterFunction(r),t&&!o&&(r=this.combineRendererWithRenderingRule()),r}combineRendererWithRenderingRule(){var e;const r=this.layer,{rasterInfo:o,renderingRule:t,renderer:i}=r;if(!i||!l$1(i))return t;return m$1(c$1(i,{rasterAttributeTable:o.attributeTable,pixelType:o.pixelType,dataType:o.dataType,bandProperties:null==(e=o.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:r.version<10.6}),t)}_addResampleRasterFunction(e){var r;let o=null;if("vector-field"===(null==(r=this.layer.renderer)?void 0:r.type)){const e={},r=this.layer.renderingRule;if(!r||"Resample"!==r.functionName){const r="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;e.rasterFunction="Resample",e.rasterFunctionArguments={ResamplingType:r,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}};}o=d.fromJSON(e);}return m$1(o,e)}};e([y$2()],m$3.prototype,"layer",void 0),e([y$2({json:{write:!0}})],m$3.prototype,"adjustAspectRatio",void 0),e([o("adjustAspectRatio")],m$3.prototype,"writeAdjustAspectRatio",null),e([y$2({json:{write:!0}}),o$2("layer.bandIds")],m$3.prototype,"bandIds",void 0),e([y$2({json:{write:!0}})],m$3.prototype,"compression",void 0),e([y$2({json:{write:!0}}),o$2("layer.compressionQuality")],m$3.prototype,"compressionQuality",void 0),e([o("compressionQuality")],m$3.prototype,"writeCompressionQuality",null),e([y$2({json:{write:!0}}),o$2("layer.compressionTolerance")],m$3.prototype,"compressionTolerance",void 0),e([o("compressionTolerance")],m$3.prototype,"writeCompressionTolerance",null),e([y$2({json:{write:!0}}),o$2("layer.format")],m$3.prototype,"format",void 0),e([y$2({type:String,json:{read:{reader:d$2.read},write:{writer:d$2.write}}}),o$2("layer.interpolation")],m$3.prototype,"interpolation",void 0),e([y$2({json:{write:!0}}),o$2("layer.noData")],m$3.prototype,"noData",void 0),e([y$2({type:String,json:{read:{reader:u$2.read},write:{writer:u$2.write}}}),o$2("layer.noDataInterpretation")],m$3.prototype,"noDataInterpretation",void 0),e([y$2({json:{write:!0}})],m$3.prototype,"pixelType",void 0),e([y$2({json:{write:!0}})],m$3.prototype,"lercVersion",void 0),e([o("lercVersion")],m$3.prototype,"writeLercVersion",null),e([y$2({type:Number,dependsOn:["layer.adjustAspectRatio","layer.bandIds","layer.format","layer.compressionQuality","layer.compressionTolerance","layer.definitionExpression","layer.interpolation","layer.noData","layer.noDataInterpretation","layer.mosaicRule","layer.renderingRule","layer.pixelFilter","layer.renderer","lercVersion","pixelType"]})],m$3.prototype,"version",null),e([y$2({dependsOn:["layer.mosaicRule","layer.definitionExpression"],json:{write:!0}})],m$3.prototype,"mosaicRule",null),e([y$2({dependsOn:["layer.renderingRule","layer.renderer","layer.rasterInfo","layer.format"],json:{write:!0}})],m$3.prototype,"renderingRule",null),m$3=e([i$2("esri.layers.mixins.ExportImageServiceParameters")],m$3);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
let p$2=class extends a$2{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null;}};e([y$2({json:{write:!0}})],p$2.prototype,"catalogItemVisibilities",void 0),e([y$2({type:g$1,json:{write:!0}})],p$2.prototype,"catalogItems",void 0),e([y$2({type:w$1,json:{write:!0}})],p$2.prototype,"location",void 0),e([y$2({json:{write:!0}})],p$2.prototype,"name",void 0),e([y$2({json:{write:!0}})],p$2.prototype,"objectId",void 0),e([y$2({json:{write:!0}})],p$2.prototype,"processedValues",void 0),e([y$2({json:{write:!0}})],p$2.prototype,"properties",void 0),e([y$2({json:{write:!0}})],p$2.prototype,"value",void 0),p$2=e([i$2("esri.tasks.support.ImageIdentifyResult")],p$2);var l$2=p$2;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
async function i$1(s,a,i){const m=e$2(s),u=a.geometry?[a.geometry]:[],c=await P(u),f=a.toJSON();!function(t){const s=null==t?void 0:t.time;if(s&&(null!=s.start||null!=s.end)){const o=[];null!=s.start&&o.push(s.start),null!=s.end&&-1===o.indexOf(s.end)&&o.push(s.end),t.time=o.join(",");}}(f);const g=c&&c[0];u$4(g)&&(f.geometry=g.toJSON());const l=r$1({...m.query,f:"json",...f});return n$3(l,i)}async function m$4(t,o,r){const e=await i$1(t,o,r),a=e$2(t),{data:m}=await L(`${a.path}/computeStatisticsHistograms`,e),{statistics:u}=m;return null!=u&&u.length&&u.forEach((t=>{t.avg=t.mean,t.stddev=t.standardDeviation;})),{statistics:u,histograms:m.histograms}}async function u$3(t,o,r){const e=await i$1(t,o,r),a=e$2(t),{data:m}=await L(`${a.path}/computeHistograms`,e);return {histograms:m.histograms}}async function c$2(i,m,u){const c=e$2(i),f=m.geometry?[m.geometry]:[];return P(f).then((o=>{const n=m.toJSON(),a=o&&o[0];u$4(a)&&(n.geometry=JSON.stringify(a.toJSON()));const i=r$1({...c.query,f:"json",...n}),f=n$3(i,u);return L(c.path+"/identify",f)})).then((t=>l$2.fromJSON(t.data)))}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
let t=class extends i$4{execute(r,s){return c$2(this.url,r,s)}};t=e([i$2("esri.tasks.ImageIdentifyTask")],t);var p$3=t;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
var a$1;let y$1=a$1=class extends a$2{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0;}writeGeometry(e,t,r){null!=e&&(t.geometryType=d$3(e),t[r]=JSON.stringify(e.toJSON()));}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=w.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t);}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()));}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=d.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t);}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()));}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.toJSON()))));}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e));}writeTimeExtent(e,t,r){if(null!=e){const o=e.start?e.start.getTime():null,i=e.end?e.end.getTime():null;t[r]=null!=o?null!=i?`${o},${i}`:`${o}`:null;}}clone(){return new a$1(s$1({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};e([y$2({json:{write:!0}})],y$1.prototype,"geometry",void 0),e([o("geometry")],y$1.prototype,"writeGeometry",null),e([y$2({type:w,json:{write:!0}})],y$1.prototype,"mosaicRule",null),e([o("mosaicRule")],y$1.prototype,"writeMosaicRule",null),e([y$2({type:d,json:{write:!0}})],y$1.prototype,"renderingRule",null),e([o("renderingRule")],y$1.prototype,"writeRenderingRule",null),e([y$2({type:[d],json:{write:!0}})],y$1.prototype,"renderingRules",void 0),e([o("renderingRules")],y$1.prototype,"writeRenderingRules",null),e([y$2({type:w$1,json:{write:!0}})],y$1.prototype,"pixelSize",void 0),e([o("pixelSize")],y$1.prototype,"writePixelSize",null),e([y$2({type:Boolean,json:{write:!0}})],y$1.prototype,"returnGeometry",void 0),e([y$2({type:Boolean,json:{write:!0}})],y$1.prototype,"returnCatalogItems",void 0),e([y$2({type:Boolean,json:{write:!0}})],y$1.prototype,"returnPixelValues",void 0),e([y$2({type:Number,json:{write:!0}})],y$1.prototype,"maxItemCount",void 0),e([y$2({type:m$5,json:{write:{target:"time"}}})],y$1.prototype,"timeExtent",void 0),e([o("timeExtent")],y$1.prototype,"writeTimeExtent",null),e([y$2({json:{write:!0}})],y$1.prototype,"raster",void 0),e([y$2({json:{write:!0}})],y$1.prototype,"viewId",void 0),y$1=a$1=e([i$2("esri.tasks.support.ImageIdentifyParameters")],y$1);var c$3=y$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
const te=i$5.getLogger("esri.layers.mixins.ArcGISImageService"),re=o$1()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),ie=o$1()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),se=o$1()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),ne=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),ae=v(u$7,{min:0,max:255});const oe=s=>{let a=class extends s{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null;}initialize(){this._set("exportImageServiceParameters",new m$3({layer:this}));}readDefaultServiceMosaicRule(e,t){return w.fromJSON(t)}get rasterFunctionNamesIndex(){const e=new Map;return !this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name);})),e}get queryTask(){return new O({url:this.url})}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e);}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e);}get fieldsIndex(){return this.fields?new N(this.fields):null}set format(e){e&&ne.has(e.toLowerCase())&&this._set("format",e.toLowerCase());}readFormat(e,t){return "esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=w.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t);}readMosaicRule(e,t){return w.fromJSON(e||t.mosaicRule||t)}writeMosaicRule(e,t,r){let i=this.mosaicRule;const s=this.definitionExpression;i?s&&s!==i.where&&(i=i.clone(),i.where=s):s&&(i=new w({where:s})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON());}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=ae(e));}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name;}return e}get parsedUrl(){return this.url?U(this.url):null}readRenderer(e,t,r){const i=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,s=u$5(i,r)||void 0;if(null!=s)return l$1(s)||te.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",r=new y$3({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new y$3({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),s=new y$3({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let n=this.fields?s$1(this.fields):[];n.push(i),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(r),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&n.push(s),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{n.push(new y$3({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}));})),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(n.push(new y$3({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new y$3({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const a=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(a&&a.length>0){const r=a.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((r=>{const i=s$1(r);return i.name=e+r.name,i}));n=n.concat(r);}return n}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=d.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t);}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?d.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON());}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?y$5.fromJSON(r):null}readPixelType(e){return se.fromJSON(e)||e}writePixelType(e,t,i){(t$2(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[i]=se.toJSON(e));}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),s=this._rasterJobHandler.instance,{bandIds:n}=this;if(s){i&&(this._symbolizer.bind(),await s.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const a=await s.symbolize({bandIds:n,...e},t);r={extent:e.extent,pixelBlock:a};}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:n,...e})};}return r}destroy(){this._shutdownJobHandler();}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++;}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler();}async computeHistograms(e,t){const r=null==t?void 0:t.signal;if(await this._fetchCapabilities(r),!this.capabilities.operations.supportsComputeHistograms)throw new s$2("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=e.clone();const{raster:i,mosaicRule:s,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),s&&null==e.mosaicRule&&(e.mosaicRule=s),i&&null==e.raster&&(e.raster=i),u$3(this.url,e,{signal:r})}async computeStatisticsHistograms(e,t){const r=null==t?void 0:t.signal;if(await this._fetchCapabilities(r),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new s$2("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=e.clone();const{raster:i,mosaicRule:s,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),s&&null==e.mosaicRule&&(e.mosaicRule=s),i&&null==e.raster&&(e.raster=i),m$4(this.url,e,{signal:r})}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return O$1(new s$2("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const s=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return D(s).then((s=>{s&&(this.rasterInfo=s);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)}))}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return L(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>e.data))}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?O$1(new s$2("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):L(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>g$1.fromJSON(e.data)))}async getCatalogItemRasterInfo(e,t){const r=L(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then((e=>e.data)),i=L(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>{})),s=await f$3([r,i]);if(!s[0])return;const n=z.fromJSON(s[0].extent),a=s[0].statistics?s[0].statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))):null;return new n$4({bandCount:s[0].bandCount,extent:n,spatialReference:n.sr,pixelSize:new w$1({x:s[0].pixelSizeX,y:s[0].pixelSizeY,spatialReference:n.sr}),pixelType:s[0].pixelType.toLowerCase(),statistics:a,histograms:s[0].histograms,keyProperties:s[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await L(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let s=null;try{s=(await L(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent;}catch{}if(!s||!s.spatialReference)return {ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const n=this.version>=10.7?L(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=s.spatialReference,o={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[s]}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},l=L(this.parsedUrl.path+"/project",{query:this._getQueryParams(o),...t}).then((e=>e.data)).catch((()=>({}))),u=(s.xmin+s.xmax)/2,p=(s.ymax-s.ymin)/6,c=s.ymin+p,d=[];for(let e=0;e<5;e++)d.push({x:u,y:c+p*e});const m={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},h=L(this.parsedUrl.path+"/project",{query:this._getQueryParams(m),...t}).then((e=>e.data)).catch((()=>({}))),f=await f$3([n,l,h]);let y=f[0].ipxf;if(null==y){var g,v,x;const e=null==(g=i.geodataXform)?void 0:g.xf_0;"topup"===(null==e||null==(v=e.name)?void 0:v.toLowerCase())&&6===(null==e||null==(x=e.coefficients)?void 0:x.length)&&(y={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}});}const I=z.fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]);I&&(I.spatialReference=new y$5({wkid:0,imageCoordinateSystem:i}));const w=f[2].geometries?f[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],O=w.length;if(O<3)return {ics:i,icsToPixelTransform:y,icsExtent:I,northDirection:null};let N=0,P=0,F=0,D=0;for(let e=0;e<O;e++)N+=w[e].x,P+=w[e].y,F+=w[e].x*w[e].x,D+=w[e].x*w[e].y;const j=(O*D-N*P)/(O*F-N*N);let T=0;const J=w[4].x>w[0].x,C=w[4].y>w[0].y;return j===1/0?T=C?90:270:0===j?T=J?0:180:j>0?T=J?180*Math.atan(j)/Math.PI:180*Math.atan(j)/Math.PI+180:j<0&&(T=C?180+180*Math.atan(j)/Math.PI:360+180*Math.atan(j)/Math.PI),{ics:i,icsToPixelTransform:y,icsExtent:I,northDirection:T}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase())&&u$4(this.serviceRasterInfo))return this.serviceRasterInfo;const r=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return r?r.join("/"):null}(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const s=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=s;try{return await s}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,s){const n=(e=e.clone().shiftCentralMeridian()).spatialReference;let a;if(n.imageCoordinateSystem){const{id:e,referenceServiceName:t}=n.imageCoordinateSystem;a=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:n.imageCoordinateSystem});}else a=n.wkid||JSON.stringify(n.toJSON());u$4(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:u,mosaicRule:p,renderingRule:c}=o;l instanceof Array&&l.length>0&&(o.bandIds=l.join(",")),u instanceof Array&&u.length>0&&(o.noData=u.join(","));const d=this.timeInfo;p&&p.multidimensionalDefinition&&s&&d&&d.startField&&(p.multidimensionalDefinition=p.multidimensionalDefinition.filter((e=>e.dimensionName!==d.startField))),o.mosaicRule=p&&JSON.stringify(p),o.renderingRule=c&&JSON.stringify(c);const m={};if(s){const{start:e,end:t}=s.toJSON();e&&t&&e===t?m.time=""+e:null==e&&null==t||(m.time=`${null==e?"null":e},${null==t?"null":t}`);}return {bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+r,...o,...m}}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new s$2("imagery-layer:query-rasters","query operation is not supported on the input image service");e=e.clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r);return new p$3({url:this.url}).execute(e,t)}async queryRasters(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsQuery)throw new s$2("imagery-layer:query-rasters","query operation is not supported on the input image service");return this.queryTask.execute(e,t)}queryVisibleRasters(e,t){if(!e)return O$1(new s$2("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:s,returnDomainValues:n,returnTopmostRaster:a,showNoDataRecords:o}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let l=!1,u=null,p=null;const c="raster.servicepixelvalue",d$1=this.rasterFunctionNamesIndex;if(u$4(e.outFields)&&(l=e.outFields.some((e=>-1===e.toLowerCase().indexOf(c))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().indexOf(c)>-1&&e.length>c.length)).map((e=>{const t=e.slice(c.length+1);return [this._updateRenderingRulesFunctionName(t,d$1),t]}));u=t.map((e=>new d({functionName:e[0]}))),p=t.map((e=>e[1])),0===u.length?this.renderingRule?(u.push(this.renderingRule),p.push(this.renderingRule.functionName)):u=null:this.renderingRule&&!u.some((e=>e.functionName===this.renderingRule.functionName))&&(u.push(this.renderingRule),p.push(this.renderingRule.functionName));}const m=t$2(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),f=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:u,pixelSize:s,returnCatalogItems:l,returnGeometry:m,maxItemCount:a?1:null});delete f.f;const g=new c$3(f),R$1=new p$3({url:this.url}),x$1=this.generateRasterInfo(this.renderingRule);return h$1((t=>{x$1.then((()=>{R$1.execute(g).then((r=>{const i=e.outFields;if(l&&!m&&r.catalogItems&&r.catalogItems.features&&r.catalogItems.features.length>0){const s=this.objectIdField||"ObjectId",a=r.catalogItems.features,l=a.map((e=>e.attributes&&e.attributes[s])),u=new R({objectIds:l,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[s]});return this.queryRasters(u).then((l=>{l&&l.features&&l.features.length>0&&l.features.forEach((t=>{a.forEach((r=>{r.attributes[s]===t.attributes[s]&&(r.geometry=new x(t.geometry),r.geometry.spatialReference=e.outSpatialReference);}));})),t(this._processVisibleRastersResponse(r,{returnDomainValues:n,templateRRFunctionNames:p,showNoDataRecords:o,templateFields:i}));})).catch((()=>{throw new s$2("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")}))}t(this._processVisibleRastersResponse(r,{returnDomainValues:n,templateRRFunctionNames:p,showNoDataRecords:o,templateFields:i}));})).catch((()=>{throw new s$2("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}));}));}))}async fetchVariableStatisticsHistograms(e,t){const r=L(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=L(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),s=await f$3([r,i]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation;})),{statistics:s[0]||null,histograms:s[1]||null}}async _fetchService(e){await this._fetchServiceInfo(e),u$4(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=u$4(this.serviceRasterInfo)?U$1(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then((e=>(this._set("serviceRasterInfo",e),e))),s=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null;return f$3([r,s]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),this.renderer&&w$2(this.rasterInfo).indexOf(this.renderer.type)<0&&(this.renderer=null,te.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",(()=>this._configDefaultRenderer())),this.watch("renderingRule",(e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e);}));}));const t=u$4(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t);}))}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new f$4;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e;}),(()=>null)),await this._rasterJobHandler.connectionPromise;}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0;}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await L(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"));}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new s$2("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl});}_isPicture(){return !this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=T(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e);}var e,t;if(!this.renderer)this.renderer=y$6(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName});this._symbolizer?(this._symbolizer.rendererJSON=this.renderer.toJSON(),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new R$1({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null);}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return {raster:t,viewId:r,f:"json",...e}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):U$2(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await L(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation;}));})),r}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return O$1(new s$2("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,s=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&L(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>g$1.fromJSON(e.data))).catch((()=>null)),n=!!(t.hasColormap&&this.version>=10.1)&&L(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),a=!!(t.hasHistograms&&this.version>=10.1)&&L(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),o=this.version>=10.3&&L(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then((e=>e.data)).catch((()=>{})),l=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return f$3([s,n,a,o,l]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]});}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),s=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),n=y$5.fromJSON(t.spatialReference||t.extent.spatialReference);return new n$4({width:i,height:s,bandCount:t.bandCount,extent:z.fromJSON(t.extent),spatialReference:n,pixelSize:new w$1({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:n}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return L(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then((e=>({imageElement:e.data,params:t})));const s=this._initJobHandler(),n=L(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return f$3([n,s]).then((e=>{const r=e[0].data,s=t.format||"jpgpng";let n=s;if("bsq"!==n&&"bip"!==n&&(n=I$1(r)),!n){throw new s$2("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)))}const a="gif"===s||"bmp"===s||s.indexOf("png")>-1&&("png"===n||"jpg"===n),o={signal:i};return a?U$2(r,{useCanvas:!0,...t},o).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:s},o).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})))}))}async _generateRasterInfo(e,t){const{data:r}=await L(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r=[];for(const e in t)if(t.hasOwnProperty(e)){const i=t[e],s=i.extent;let n=!0,a=[s[0]];i.hasRanges&&!0===i.hasRanges?(n=!1,a=[i.values[0]]):"stdz"===i.name.toLowerCase()&&Math.abs(s[1])<=Math.abs(s[0])&&(a=[s[1]]),r.push(new n$2({variableName:"",dimensionName:t[e].name,isSlice:n,values:a}));}if(r.length>0){this.mosaicRule=this.mosaicRule||new w;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r);}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),s=i&&i.format;if(s){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,s)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,s)):this._formatNumberFromString(e,s)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some((e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_"))&&(i=e,!0))),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map((e=>this._formatNumberFromString(e,i))).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:s,showNoDataRecords:n,returnDomainValues:a,templateFields:o}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,p=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const c=this.objectIdField||"ObjectId",d="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,m=[];if(r&&!u&&!d){const e={};e[c]=0;p=[r],u=[new n$5(this.fullExtent,null,e)];}if(!u)return [];let h,f,y;this._updateResponseFieldNames(u,o);for(let e=0;e<u.length;e++){if(h=u[e],null!=r&&!d){if(f=p[e],y=this.renderingRule&&l&&l.length>0&&s&&s.length>0&&s.indexOf(this.renderingRule.functionName)>-1?l[s.indexOf(this.renderingRule.functionName)]:r,"nodata"===f.toLowerCase()&&!n)continue;const t="Raster.ItemPixelValue",a="Raster.ServicePixelValue";h.attributes[t]=this._formatAttributeValue(f,t),h.attributes[a]=this._formatAttributeValue(y,a),this._updateFeatureWithMagDirValues(h,f);const o=this.fields&&this.fields.length>0;let u=this.renderingRule&&u$4(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?o?f:r:y;this.renderingRule||(u=o?f:r),this._updateFeatureWithRasterAttributeTableValues(h,u);}if(h.sourceLayer=this,a&&this._updateFeatureWithDomainValues(h),s&&l&&s.length===l.length)for(let e=0;e<s.length;e++){const t="Raster.ServicePixelValue."+s[e];h.attributes[t]=this._formatAttributeValue(l[e],t);}m.push(u[e]);}return m}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||u$4(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,s=r&&r.features;if(!s)return;const n=r.fields,a=n.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),o=a&&a[0];if(!o)return;const l=s.filter((e=>e.attributes[o]===(null!=t?parseInt(t,10):null)));l&&l[0]&&n.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(l[0].attributes[t.name],r);}));}_updateFeatureWithMagDirValues(e,t){if(!this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.replace(" ",",").split(",").map((e=>parseFloat(e))),i=r.map((e=>[e])),s=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new u$6({height:1,width:1,pixelType:"f32",pixels:i,statistics:s});this.pixelFilter({pixelBlock:n,extent:new z(0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=n.pixels[0][0],e.attributes["Raster.Direction"]=n.pixels[1][0];}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter((e=>e.code===r))[0];i&&(e.attributes[t.name]=i.name);}}));}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;r&&e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t]);}}));}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:s}=e,n=t.indexOf("image")>-1,a="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return {operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.indexOf("mensuration")>-1&&o,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&a,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1},query:{supportsStatistics:!(!i||!i.supportsStatistics),supportsOrderBy:!(!i||!i.supportsOrderBy),supportsDistinct:!(!i||!i.supportsDistinct),supportsPagination:!(!i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(!i||!i.useStandardizedQueries),maxRecordCount:s}}}};return e([y$2()],a.prototype,"_functionRasterInfos",void 0),e([y$2()],a.prototype,"_rasterJobHandler",void 0),e([y$2()],a.prototype,"_symbolizer",void 0),e([y$2()],a.prototype,"_defaultServiceMosaicRule",void 0),e([e$1("_defaultServiceMosaicRule",["defaultMosaicMethod"])],a.prototype,"readDefaultServiceMosaicRule",null),e([y$2()],a.prototype,"_cachedRendererJson",void 0),e([y$2()],a.prototype,"rasterAttributeTableFieldPrefix",void 0),e([y$2({readOnly:!0,dependsOn:["rasterFunctionInfos"]})],a.prototype,"rasterFunctionNamesIndex",null),e([y$2({readOnly:!0,dependsOn:["url"]})],a.prototype,"queryTask",null),e([y$2()],a.prototype,"adjustAspectRatio",void 0),e([y$2({readOnly:!0}),o$2("serviceRasterInfo.bandCount")],a.prototype,"bandCount",void 0),e([y$2({type:[k],json:{write:!0}})],a.prototype,"bandIds",void 0),e([e$1("bandIds")],a.prototype,"readBandIds",null),e([y$2({readOnly:!0,json:{read:!1}})],a.prototype,"capabilities",void 0),e([e$1("service","capabilities",["capabilities","currentVersion","serviceDataType"])],a.prototype,"readCapabilities",null),e([y$2({type:Number})],a.prototype,"compressionQuality",void 0),e([o("compressionQuality")],a.prototype,"writeCompressionQuality",null),e([y$2({type:Number})],a.prototype,"compressionTolerance",void 0),e([o("compressionTolerance")],a.prototype,"writeCompressionTolerance",null),e([y$2({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),e([y$2({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],a.prototype,"definitionExpression",void 0),e([y$2({readOnly:!0,constructOnly:!0})],a.prototype,"exportImageServiceParameters",void 0),e([y$2()],a.prototype,"rasterInfo",void 0),e([y$2({readOnly:!0,type:[y$3]})],a.prototype,"fields",void 0),e([y$2({readOnly:!0,dependsOn:["fields"]})],a.prototype,"fieldsIndex",null),e([y$2({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],a.prototype,"format",null),e([e$1("service","format",["serviceDataType"])],a.prototype,"readFormat",null),e([y$2({type:z})],a.prototype,"fullExtent",void 0),e([y$2({readOnly:!0})],a.prototype,"hasMultidimensions",void 0),e([y$2({json:{read:{source:"maxImageHeight"}}})],a.prototype,"imageMaxHeight",void 0),e([y$2({json:{read:{source:"maxImageWidth"}}})],a.prototype,"imageMaxWidth",void 0),e([y$2({type:String,json:{type:re.jsonValues,read:re.read,write:re.write}})],a.prototype,"interpolation",void 0),e([y$2()],a.prototype,"minScale",void 0),e([e$1("service","minScale")],a.prototype,"readMinScale",null),e([y$2()],a.prototype,"maxScale",void 0),e([e$1("service","maxScale")],a.prototype,"readMaxScale",null),e([y$2({type:w})],a.prototype,"mosaicRule",null),e([e$1("mosaicRule",["mosaicRule","defaultMosaicMethod"])],a.prototype,"readMosaicRule",null),e([o("mosaicRule")],a.prototype,"writeMosaicRule",null),e([y$2({readOnly:!0}),o$2("serviceRasterInfo.multidimensionalInfo")],a.prototype,"multidimensionalInfo",void 0),e([y$2({json:{type:k}})],a.prototype,"noData",void 0),e([o("noData")],a.prototype,"writeNoData",null),e([y$2({type:String,json:{type:ie.jsonValues,read:ie.read,write:ie.write}})],a.prototype,"noDataInterpretation",void 0),e([y$2({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],a.prototype,"objectIdField",void 0),e([e$1("objectIdField")],a.prototype,"readObjectIdField",null),e([y$2({readOnly:!0,dependsOn:["url"]})],a.prototype,"parsedUrl",null),e([y$2({readOnly:!0}),o$2("serviceRasterInfo.pixelSize.x")],a.prototype,"pixelSizeX",void 0),e([y$2({readOnly:!0}),o$2("serviceRasterInfo.pixelSize.y")],a.prototype,"pixelSizeY",void 0),e([y$2({type:Function})],a.prototype,"pixelFilter",void 0),e([y$2()],a.prototype,"raster",void 0),e([y$2()],a.prototype,"viewId",void 0),e([y$2({types:o$3,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:l$3,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],a.prototype,"renderer",void 0),e([e$1("renderer")],a.prototype,"readRenderer",null),e([y$2(y$4)],a.prototype,"opacity",void 0),e([y$2({readOnly:!0}),o$2("serviceRasterInfo.attributeTable")],a.prototype,"rasterAttributeTable",void 0),e([y$2({readOnly:!0,dependsOn:["fields","rasterInfo","capabilities"]})],a.prototype,"rasterFields",null),e([y$2({readOnly:!0})],a.prototype,"rasterFunctionInfos",void 0),e([y$2({type:d})],a.prototype,"renderingRule",null),e([e$1("renderingRule",["renderingRule","rasterFunctionInfos"])],a.prototype,"readRenderingRule",null),e([o("renderingRule")],a.prototype,"writeRenderingRule",null),e([y$2()],a.prototype,"serviceDataType",void 0),e([y$2({readOnly:!0,type:y$5})],a.prototype,"spatialReference",void 0),e([e$1("spatialReference",["spatialReference","extent"])],a.prototype,"readSpatialReference",null),e([y$2({json:{type:se.jsonValues}})],a.prototype,"pixelType",void 0),e([e$1("pixelType")],a.prototype,"readPixelType",null),e([o("pixelType")],a.prototype,"writePixelType",null),e([y$2({constructOnly:!0,type:n$4})],a.prototype,"serviceRasterInfo",void 0),e([y$2()],a.prototype,"sourceJSON",void 0),e([y$2(p$4)],a.prototype,"url",void 0),e([y$2({readOnly:!0})],a.prototype,"version",void 0),e([e$1("version",["currentVersion","fields","timeInfo"])],a.prototype,"readVersion",null),a=e([i$2("esri.layers.mixins.ArcGISImageService")],a),a};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.18/esri/copyright.txt for details.
*/
let j=class extends(t$3(f$5(o$4(s$3(l$4(d$4(oe(p$5(l$5(b)))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery";}normalizeCtorArgs(e,r){return "string"==typeof e?{url:e,...r}:e}load(e){const t=u$4(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),U$1(this)}writeOperationalLayerType(e,r,t){var o;const i="vector-field"===(null==(o=this.renderer)?void 0:o.type);r[t]=i?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer";}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const r=this.rasterFields,t=this.title,o=new Set;let i=!1,p=!1;this.capabilities&&(i=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,p=i&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const s=new Set;i&&(s.add("raster.itempixelvalue"),p&&s.add("raster.magnitude").add("raster.direction"));for(const e of r){const r=e.name.toLowerCase();s.has(r)||r.indexOf("raster.servicepixelvalue.")>-1||o.add(e.name);}return a$3({fields:r,title:t},{...e,visibleFieldNames:o})}redraw(){this.emit("redraw");}};e([y$2(c$4)],j.prototype,"legendEnabled",void 0),e([y$2({type:["show","hide"]})],j.prototype,"listMode",void 0),e([y$2({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],j.prototype,"isReference",void 0),e([y$2({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],j.prototype,"operationalLayerType",void 0),e([o("web-map","operationalLayerType")],j.prototype,"writeOperationalLayerType",null),e([y$2(a$4)],j.prototype,"popupEnabled",void 0),e([y$2({type:M$1,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],j.prototype,"popupTemplate",void 0),e([y$2({readOnly:!0,dependsOn:["fields","title"]})],j.prototype,"defaultPopupTemplate",null),e([y$2({readOnly:!0,json:{read:!1}})],j.prototype,"type",void 0),j=e([i$2("esri.layers.ImageryLayer")],j);var I=j;

export default I;
