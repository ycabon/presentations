import { b as e } from './_virtual_index-634cbc09.js';
import { t } from './FeatureSetReader-261c974c.js';
import { o as o$1 } from './definitions-12783a0f.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
const i=16,o=1,h=0,r=1,n=2;class c{constructor(t$1,e){this.width=t$1,this.height=e;const i=Math.ceil(t$1/o),h=Math.ceil(e/o);this._cols=i,this._rows=h,this._cells=t.create(i*h);}insertMetrics(t){return this._hasCollision(t)?255:(this._markMetrics(t),0)}getCellId(t,s){return t+s*this._cols}has(t){return this._cells.has(t)}hasRange(t,s){return this._cells.hasRange(t,s)}set(t){this._cells.set(t);}setRange(t,s){this._cells.setRange(t,s);}_hasCollision(t){const s=t.id;let e=0,o=0;t.save();do{const s=t.boundsCount;e+=s;for(let e=0;e<s;e++){const s=t.boundsComputedAnchorX(e),h=t.boundsComputedAnchorY(e),c=t.boundsWidth(e)+i,l=t.boundsHeight(e)+i;switch(this._collide(s,h,c,l)){case n:return !0;case r:o++;}}}while(t.peekId()===s&&t.next());return t.restore(),e===o}_collide(s,e$1,i,c){const l=s-i/2,_=s+i/2,a=e$1-c/2,u=e$1+c/2;if(_<0||u<0||l>this.width||a>this.height)return r;const d=e(Math.floor(l/o),0,this._cols),g=e(Math.floor(a/o),0,this._rows),f=e(Math.ceil(_/o),0,this._cols),m=e(Math.ceil(u/o),0,this._rows);for(let t=g;t<=m;t++)for(let s=d;s<=f;s++){const e=this.getCellId(s,t);if(this.has(e))return n}return h}_mark(s,e$1,i,h){const r=s-i/2,n=s+i/2,c=e$1-h/2,l=e$1+h/2,_=e(Math.floor(r/o),0,this._cols),a=e(Math.floor(c/o),0,this._rows),u=e(Math.ceil(n/o),0,this._cols),d=e(Math.ceil(l/o),0,this._rows);for(let t=a;t<=d;t++)for(let s=_;s<=u;s++){const e=this.getCellId(s,t);this.set(e);}return !1}_markMetrics(t){const s=t.id;do{const s=t.boundsCount;for(let e=0;e<s;e++){const s=t.boundsComputedAnchorX(e),o=t.boundsComputedAnchorY(e),h=t.boundsWidth(e)+i,r=t.boundsHeight(e)+i;this._mark(s,o,h,r);}}while(t.peekId()===s&&t.next())}}class l{constructor(t,s=2){this._bucketSize=t,this._rowsLength=o$1/t,this._colsLength=o$1/t,this._elementsPerBucket=s,this._grid=this._initGrid();}checkOverlap(t,s){const e=Math.floor(t/this._bucketSize),i=Math.floor(s/this._bucketSize);return e<0||e>=this._rowsLength||i<0||i>=this._colsLength||this._grid[i*this._colsLength+e]>=this._elementsPerBucket}markUsed(t,s){const e=Math.floor(t/this._bucketSize),i=Math.floor(s/this._bucketSize);this._grid[i*this._colsLength+e]+=1;}reset(){this._grid=this._initGrid();}_initGrid(){return new Uint8Array(this._rowsLength*this._colsLength)}}

export { c, l };
