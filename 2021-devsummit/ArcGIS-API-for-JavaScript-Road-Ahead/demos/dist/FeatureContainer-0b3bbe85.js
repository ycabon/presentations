import { o as o$1, K, A as A$1, B, C, D as D$1, r as r$5 } from './definitions-12783a0f.js';
import { r as r$1, i } from './TileContainer-243d7e79.js';
import { n, t, bK as y, r as r$2, F as A, bd as e, s, aZ as z$1, bL as d, bR as v, H as c$1, o as t$1, aM as r$4, c as u, bS as G$1, m, b5 as o$2, bT as t$2 } from './_virtual_index-634cbc09.js';
import { r as r$3, a as h$1 } from './FramebufferObject-553bb493.js';
import { G, Y, N, K as K$1 } from './Utils-3e0360c1.js';
import { n as n$1, l } from './visualVariablesUtils-de638f89.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
class r extends r$1{constructor(o,r){super(o,r,[o$1,o$1]);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
const z=n.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),U=n$1(l,z),j=2147483647,D=t=>t&j;class S{constructor(t,e$1,i){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:s,pixelType:r,textureOnly:h}=t,o=G(r);this.shared=i,this.pixelType=r,this.size=e$1,this.textureOnly=h,h||(this.data=new o(e(s))),this._resetRange();}destroy(){A(this._texture,(t=>t.dispose()));for(const t in this._fbos)A(this._fbos[t],(e=>{"0"===t&&e.detachColorTexture(),e.dispose();})),this._fbos[t]=null;this._texture=null;}get _textureDesc(){return {target:3553,wrapMode:33071,pixelFormat:6408,dataType:this.pixelType,samplingMode:9728,width:this.size,height:this.size}}setData(t,e$1,i){const s=D(t),r=e(this.data),h=s*this.texelSize+e$1;!r||h>=r.length||(r[h]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s));}getData(t$1,i){if(t(this.data))return null;const s=D(t$1)*this.texelSize+i;return !this.data||s>=this.data.length?null:this.data[s]}getTexture(t){return c$1(this._texture,(()=>this._initTexture(t)))}getFBO(t$1,i=0){if(t(this._fbos[i])){const e={colorTarget:0,depthStencilTarget:0},s=0===i?this.getTexture(t$1):this._textureDesc;this._fbos[i]=new h$1(t$1,e,s);}return this._fbos[i]}get locked(){return !(5121!==this.pixelType||!this.shared||this.textureOnly||!t$1("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}updateTexture(t){if(!this.locked)try{const i=this.dirtyStart,s$1=this.dirtyEnd;if(i>s$1)return;this._resetRange();const r=e(this.data).buffer,h=this.getTexture(t),o=4,d=(i-i%this.size)/this.size,n=(s$1-s$1%this.size)/this.size,l=d,p=this.size,x=n,c=d*this.size*o,_=(p+x*this.size)*o-c,f=G(this.pixelType),g=f.BYTES_PER_ELEMENT;try{new f(r,c*g,_);}catch(e){0;}const b=new f(r,c*g,_),m=this.size,y=x-l+1;if(y>this.size)return void z.error(new s("mapview-webgl","Out-of-bounds index when updating AttributeData"));h.updateData(0,0,l,m,y,b);}catch(e){}}update(t){const{data:e,start:i,end:r}=t;if(r$2(e)){const s=this.data,r=i*this.texelSize;for(let i=0;i<e.length;i++){const a=1<<i%this.texelSize;t.layout&a&&(s[r+i]=e[i]);}}this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,r);}resize(t,e$1){const i=this.size;if(this.size=e$1,this.textureOnly)return void(i!==this.size&&(this._lastTexture=this._texture,this._texture=null));const s=G(this.pixelType);this.destroy(),this.data=new s(e(t.buffer));}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0;}_initTexture(t){const e=new r$3(t,this._textureDesc,c$1(this.data,void 0));if(r$2(this._lastTexture)&&this._fbos[0]){const i=this._lastTexture.descriptor.width,s=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,h=this.getFBO(t),o=Y(r),d=new(G(r))(new ArrayBuffer(i*s*o*this.texelSize)),n=t.getBoundFramebufferObject(),{x:u,y:l,width:p,height:x}=t.getViewport();t.bindFramebuffer(h),h.readPixels(0,0,i,s,a,r,d),e.updateData(0,0,0,2*i,s/2,d),t.setViewport(u,l,p,x),t.bindFramebuffer(n);}return this.destroy(),this._texture=e,this._texture}}class k{constructor(t){this._onUpdate=t,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1;}initialize(t$1){const{blocks:r,shared:a,size:h}=t$1;if(this.shared=a,this.size=h,U("Initializing AttributeStoreView",t$1),t(this._data))this._data=y(r,(t=>new S(t,h,a)));else for(let i=0;i<this._data.length;i++){const t$1=this._data[i],o=r[i];r$2(o)&&(t(t$1)?this._data[i]=new S(o,h,a):t$1.resize(o,h));}this._initialized=!0;}destroy(){A(this._data,(t=>y(t,(t=>t.destroy())))),A(this._defaultTexture,(t=>t.dispose()));}getBlock(t$1){if(t(this._data))return null;return this._data[t$1]}setLabelMinZoom(t,e){this.setData(t,0,1,e);}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,K,0,0)}getData(t$1,i,r,h){if(!this._data)return 0;const o=e(this._data)[i];if(t(o))return 0;const d=o.getData(t$1,r);return r$2(d)?d:h}setData(t,e$1,i,s){const r=e(this._data)[e$1];e(r).setData(t,i,s);}lockTextureUpload(){this._locked=!0;}unlockTextureUpload(){this._locked=!1;}forceTextureUpload(){this._forceNextUpload=!0;}async requestUpdate(t){if(this._pendingAttributeUpdate)return void z.error(new s("mapview-webgl","Tried to update attribute data with a pending update"));const e=z$1();return U("AttributeStoreView Update Requested",t),this._pendingAttributeUpdate={data:t,resolver:e},e.promise}update(){if(this._initialized&&(this._onUpdate(),r$2(this._pendingAttributeUpdate))){const{data:t,resolver:e$1}=this._pendingAttributeUpdate,i=e(this._data);for(let s=0;s<t.blocks.length;s++){const e=t.blocks[s],a=i[s];A(a,(t=>A(e,(e=>{U(`Updating block ${s}`,e),t.update(e);}))));}this._pendingAttributeUpdate=null,e$1();}}bindTextures(t){this.update();const e$1=this._getDefaultTexture(t);if(!this._initialized)return t.bindTexture(e$1,A$1),t.bindTexture(e$1,B),t.bindTexture(e$1,C),void t.bindTexture(e$1,D$1);const i=e(this._data);this._locked&&!this._forceNextUpload||(d(i,(e=>e.updateTexture(t))),this._forceNextUpload=!1),t.bindTexture(v(i[0],e$1,(e=>e.getTexture(t))),A$1),t.bindTexture(v(i[1],e$1,(e=>e.getTexture(t))),B),t.bindTexture(v(i[2],e$1,(e=>e.getTexture(t))),C),t.bindTexture(v(i[3],e$1,(e=>e.getTexture(t))),D$1);}_getDefaultTexture(t$1){if(t(this._defaultTexture)){const e={wrapMode:33071,pixelFormat:6408,dataType:5121,samplingMode:9728,width:1,height:1};this._defaultTexture=new r$3(t$1,e,new Uint8Array(4));}return this._defaultTexture}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
function c(e,t){const i=t.length;if(e<t[0].value||1===i)return t[0].size;for(let s=1;s<i;s++)if(e<t[s].value){const i=(e-t[s-1].value)/(t[s].value-t[s-1].value);return t[s-1].size+i*(t[s].size-t[s-1].size)}return t[i-1].size}function h(e,t$1,i=0){if(t(t$1))return e[i+0]=0,e[i+1]=0,e[i+2]=0,void(e[i+3]=0);const{r:a,g:o,b:l,a:r}=t$1;e[i+0]=a*r/255,e[i+1]=o*r/255,e[i+2]=l*r/255,e[i+3]=r;}class p{constructor(){this.symbolLevels=[],this.vvColorValues=new Float32Array(8),this.vvColors=new Float32Array(32),this.vvOpacityValues=new Float32Array(8),this.vvOpacities=new Float32Array(8),this.vvSizeMinMaxValue=new Float32Array(4),this.ddColors=new Float32Array(32),this.ddBackgroundColor=new Float32Array(4),this.ddActiveDots=new Float32Array(8),this._vvMaterialParameters={vvSizeEnabled:!1,vvColorEnabled:!1,vvRotationEnabled:!1,vvRotationType:"geographic",vvOpacityEnabled:!1};}getSizeVVFieldStops(i){const s=this._vvSizeFieldStops;switch(s.type){case"static":return s;case"level-dependent":return c$1(s.levels[i],(()=>{let e$1=1/0,a=0;for(const t in s.levels){const s=parseFloat(t),o=Math.abs(i-s);o<e$1&&(e$1=o,a=s);}if(e$1===1/0)return {sizes:new Float32Array([0,0,0,0,0,0]),values:new Float32Array([0,0,0,0,0,0])};const o=2**((i-a)/2),l=e(s.levels[a]),r=new Float32Array(l.values);return r[2]*=o,r[3]*=o,{sizes:e(l.sizes),values:r}}))}}get vvMaterialParameters(){return this._vvMaterialParameters}update(e){r$2(this._vvInfo)&&this._updateVisualVariables(this._vvInfo.vvRanges,e);}setInfo(e,t,s){switch(r$2(s)&&s.forEach((e=>this._updateEffects(e))),this._vvInfo=t,e.type){case"dot-density":this._updateDotDensityInfo(e);}}getVariation(){return {ddDotBlending:this.ddDotBlending,outsideLabelsVisible:this.outsideLabelsVisible,oesTextureFloat:r$4().supportsTextureFloat}}getVariationHash(){return (this.ddDotBlending?1:0)|(this.outsideLabelsVisible?1:0)<<1}_updateEffects(e){r$2(e)&&e.filter&&e.filter.enabled&&(this.outsideLabelsVisible=e.excludedLabelsVisible);}_updateVisualVariables(e,t){const i=this._vvMaterialParameters;if(i.vvOpacityEnabled=!1,i.vvSizeEnabled=!1,i.vvColorEnabled=!1,i.vvRotationEnabled=!1,!e)return;const s=e.size;if(s){if(i.vvSizeEnabled=!0,s.minMaxValue){const e=s.minMaxValue;let i,a;if(N(e.minSize)&&N(e.maxSize))if(K$1(e.minSize)&&K$1(e.maxSize))i=u(e.minSize),a=u(e.maxSize);else {const s=t.scale;i=u(c(s,e.minSize.stops)),a=u(c(s,e.maxSize.stops));}this.vvSizeMinMaxValue.set([e.minDataValue,e.maxDataValue,i,a]);}if(s.scaleStops&&(this.vvSizeScaleStopsValue=u(c(t.scale,s.scaleStops.stops))),s.unitValue){const e=G$1(t.spatialReference)/m[s.unitValue.unit];this.vvSizeUnitValueToPixelsRatio=e/t.resolution;}s.fieldStops&&(this._vvSizeFieldStops=s.fieldStops);}const a=e.color;a&&(i.vvColorEnabled=!0,this.vvColorValues.set(a.values),this.vvColors.set(a.colors));const n=e.opacity;n&&(i.vvOpacityEnabled=!0,this.vvOpacityValues.set(n.values),this.vvOpacities.set(n.opacities));const v=e.rotation;v&&(i.vvRotationEnabled=!0,i.vvRotationType=v.type);}_updateDotDensityInfo(e){const t=e.attributes;this.ddDotValue=e.dotValue,this.ddDotScale=e.referenceScale,this.ddDotSize=e.dotSize,this.ddDotBlending=e.dotBlendingEnabled,this.ddSeed=e.seed;for(let i=0;i<r$5;i++){const e=i>=t.length?new o$2([0,0,0,0]):t[i].color;h(this.ddColors,e,4*i);}for(let i=0;i<8;i++)this.ddActiveDots[i]=i<e.attributes.length?1:0;h(this.ddBackgroundColor,e.backgroundColor);}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
class o extends i{constructor(e){super(e),this._rendererInfo=new p,this._materialItemsRequestQueue=new t$2,this.attributeView=new k((()=>this.onAttributeStoreUpdate()));}destroy(){this.removeAllChildren(),this.children.forEach((e=>e.destroy())),this.attributeView.destroy(),this._materialItemsRequestQueue.clear();}setRendererInfo(e,t,r){this._rendererInfo.setInfo(e,t,r),this.requestRender();}async getMaterialItems(t,r){if(!t||0===t.length)return null;const s=z$1();return this._materialItemsRequestQueue.push({items:t,abortOptions:r,resolver:s}),this.requestRender(),s.promise}doRender(e){if(e.context.capabilities.enable("textureFloat"),e.context.capabilities.enable("vao"),this._materialItemsRequestQueue.length>0){let t=this._materialItemsRequestQueue.pop();for(;t;)this._processMaterialItemRequest(e,t),t=this._materialItemsRequestQueue.pop();}super.doRender(e);}renderChildren(e){for(const t of this.children)t.commit(e);this._rendererInfo.update(e.state),super.renderChildren(e);}createRenderParams(e){return {...super.createRenderParams(e),rendererInfo:this._rendererInfo,attributeView:this.attributeView}}onAttributeStoreUpdate(){}_processMaterialItemRequest(e,{items:t,abortOptions:r,resolver:s}){const{painter:i,pixelRatio:o}=e,n=t.map((e=>i.textureManager.rasterizeItem(e.symbol,o,e.glyphIds,r)));Promise.all(n).then((e=>{if(!this.stage)return void s.reject();const r=e.map(((e,r)=>({id:t[r].id,mosaicItem:e})));s.resolve(r);}),s.reject);}}

export { o, r };
