import { fK as t, fL as s, cp as b, dE as m, j as e, y, fR as x, h4 as u, k as i, cz as y$1, dT as u$1, gf as d, gh as y$2, h5 as y$3, cj as l, ck as u$2, cl as l$1, b$ as L, fP as ke, b3 as y$4, bz as M$1, aP as k, c8 as n$1, s as s$1, fJ as o, t as t$1, fV as t$2, r, c6 as e$1, bi as o$1 } from './_virtual_index-634cbc09.js';
import { n as n$2 } from './objectIdUtils-8b936aa2.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
let n=class extends(t(s(b))){constructor(r){super(r),this.elevationInfo=null,this.graphics=new m,this.screenSizePerspectiveEnabled=!0,this.type="graphics",this.internal=!1;}destroy(){this.removeAll(),this.graphics.destroy();}add(r){return this.graphics.add(r),this}addMany(r){return this.graphics.addMany(r),this}removeAll(){return this.graphics.removeAll(),this}remove(r){this.graphics.remove(r);}removeMany(r){this.graphics.removeMany(r);}on(r,e){return super.on(r,e)}graphicChanged(r){this.emit("graphic-update",r);}};e([y({type:x})],n.prototype,"elevationInfo",void 0),e([y(u())],n.prototype,"graphics",void 0),e([y({type:["show","hide"]})],n.prototype,"listMode",void 0),e([y()],n.prototype,"screenSizePerspectiveEnabled",void 0),e([y({readOnly:!0})],n.prototype,"type",void 0),e([y({constructOnly:!0})],n.prototype,"internal",void 0),n=e([i("esri.layers.GraphicsLayer")],n);var h=n;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
function C(e){return e.layers.some((e=>null!=e.layerDefinition.visibilityField))}const M=new y$1({name:"OBJECTID",alias:"OBJECTID",type:"oid",nullable:!1,editable:!1}),I=new y$1({name:"title",alias:"Title",type:"string",nullable:!0,editable:!0});let E=class extends h{constructor(){super(...arguments),this.visibilityMode="inherited";}initialize(){for(const e of this.graphics)e.sourceLayer=this.layer;this.graphics.on("after-add",(e=>{e.item.sourceLayer=this.layer;})),this.graphics.on("after-remove",(e=>{e.item.sourceLayer=null;}));}get sublayers(){return this.graphics}};e([y({readOnly:!0})],E.prototype,"sublayers",null),e([y()],E.prototype,"layer",void 0),e([y({readOnly:!0})],E.prototype,"visibilityMode",void 0),E=e([i("esri.layers.MapNotesLayer.MapNotesSublayer")],E);const F=[{geometryType:"polygon",geometryTypeJSON:"esriGeometryPolygon",layerId:"polygonLayer",title:"Polygons",identifyingSymbol:(new u$1).toJSON()},{geometryType:"polyline",geometryTypeJSON:"esriGeometryPolyline",layerId:"polylineLayer",title:"Polylines",identifyingSymbol:(new d).toJSON()},{geometryType:"multipoint",geometryTypeJSON:"esriGeometryMultipoint",layerId:"multipointLayer",title:"Multipoints",identifyingSymbol:(new y$2).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",layerId:"pointLayer",title:"Points",identifyingSymbol:(new y$2).toJSON()},{geometryType:"point",geometryTypeJSON:"esriGeometryPoint",layerId:"textLayer",title:"Text",identifyingSymbol:(new y$3).toJSON()}];let _=class extends(t(s(l(u$2(l$1(b)))))){constructor(e){super(e),this.capabilities={operations:{supportsMapNotesEditing:!0}},this.featureCollections=null,this.featureCollectionJSON=null,this.featureCollectionType="notes",this.legendEnabled=!1,this.minScale=0,this.maxScale=0,this.sublayers=new L(F.map((e=>new E({id:e.layerId,title:e.title,layer:this})))),this.title="Map Notes",this.type="map-notes",this.visibilityMode="inherited";}readCapabilities(e,t,r){return {operations:{supportsMapNotesEditing:!C(t)&&"portal-item"!==(null==r?void 0:r.origin)}}}readFeatureCollections(e,t,r){if(!C(t))return null;const o=t.layers.map((e=>{const t=new ke;return t.read(e,r),t}));return new L({items:o})}readLegacyfeatureCollectionJSON(e,r){return C(r)?y$4(r.featureCollection):null}readFullExtent(e,t){if(!t.layers.length)return new M$1({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:k.WGS84});const r=k.fromJSON(t.layers[0].layerDefinition.spatialReference);return t.layers.reduce(((e,t)=>{const r=t.layerDefinition.extent;return r?M$1.fromJSON(r).union(e):e}),new M$1({spatialReference:r}))}readMinScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.minScale)return r.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const r of t.layers)if(null!=r.layerDefinition.maxScale)return r.layerDefinition.maxScale;return 0}get multipointLayer(){return this._findSublayer("multipointLayer")}get pointLayer(){return this._findSublayer("pointLayer")}get polygonLayer(){return this._findSublayer("polygonLayer")}get polylineLayer(){return this._findSublayer("polylineLayer")}readSublayers(e,t,r){if(C(t))return null;const o=[];for(let l=0;l<t.layers.length;l++){var i;const{layerDefinition:e,featureSet:r}=t.layers[l],a=null!=(i=e.geometryType)?i:r.geometryType,n=F.find((t=>{var r,o,i;return a===t.geometryTypeJSON&&(null==(r=e.drawingInfo)||null==(o=r.renderer)||null==(i=o.symbol)?void 0:i.type)===t.identifyingSymbol.type}));if(n){const t=new E({id:n.layerId,title:e.name,layer:this,graphics:r.features.map((({geometry:e,symbol:t,attributes:r,popupInfo:o})=>n$1.fromJSON({attributes:r,geometry:e,symbol:t,popupTemplate:o})))});o.push(t);}}return new L(o)}writeSublayers(e,t,o$1,i){const{minScale:l,maxScale:a}=this,n=e.some((e=>e.graphics.length>0));if(!this.capabilities.operations.supportsMapNotesEditing){var s;if(n)null==i||null==(s=i.messages)||s.push(new s$1("map-notes-layer:editing-not-supported","New map notes cannot be added to this layer"));return}const p=[];for(const r of F){const t=e.find((e=>r.layerId===e.id));this._writeMapNoteSublayer(p,t,r,l,a,i);}o("featureCollection.layers",p,t);}get textLayer(){return this._findSublayer("textLayer")}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,r){"featureCollection"in e&&(e=y$4(e),Object.assign(e,e.featureCollection)),super.read(e,r);}_findSublayer(e){var t,r;return t$1(this.sublayers)?null:null!=(t=null==(r=this.sublayers)?void 0:r.find((t=>t.id===e)))?t:null}_writeMapNoteSublayer(e,r,i,l,a,n){const s=[];if(!t$1(r)){for(const e of r.graphics)this._writeMapNote(s,e,i.geometryType,n);this._normalizeObjectIds(s,M),e.push({layerDefinition:{name:r.title,drawingInfo:{renderer:{type:"simple",symbol:y$4(i.identifyingSymbol)}},geometryType:i.geometryTypeJSON,minScale:l,maxScale:a,objectIdField:"OBJECTID",fields:[M.toJSON(),I.toJSON()]},featureSet:{features:s,geometryType:i.geometryTypeJSON}});}}_writeMapNote(e,t,r$1,l){if(t$1(t))return;const{geometry:a,symbol:s,popupTemplate:p}=t;if(t$1(a))return;var y,m;if(a.type!==r$1)return void(null==l||null==(y=l.messages)||y.push(new t$2("map-notes-layer:invalid-geometry-type",`Geometry "${a.type}" cannot be saved in "${r$1}" layer`,{graphic:t})));if(t$1(s))return void(null==l||null==(m=l.messages)||m.push(new t$2("map-notes-layer:no-symbol","Skipping map notes with no symbol",{graphic:t})));const u={attributes:{...t.attributes},geometry:a.toJSON(),symbol:s.toJSON()};r(p)&&(u.popupInfo=p.toJSON()),e.push(u);}_normalizeObjectIds(e,t){const r=t.name;let o=n$2(r,e)+1;const i=new Set;for(const l of e){l.attributes||(l.attributes={});const{attributes:e}=l;(null==e[r]||i.has(e[r]))&&(e[r]=o++),i.add(e[r]);}}};e([y({readOnly:!0})],_.prototype,"capabilities",void 0),e([e$1(["portal-item","web-map"],"capabilities",["layers"])],_.prototype,"readCapabilities",null),e([y({readOnly:!0})],_.prototype,"featureCollections",void 0),e([e$1(["web-map","portal-item"],"featureCollections",["layers"])],_.prototype,"readFeatureCollections",null),e([y({readOnly:!0,json:{origins:{"web-map":{write:{enabled:!0,target:"featureCollection"}}}}})],_.prototype,"featureCollectionJSON",void 0),e([e$1(["web-map","portal-item"],"featureCollectionJSON",["featureCollection"])],_.prototype,"readLegacyfeatureCollectionJSON",null),e([y({readOnly:!0,json:{read:!1,write:{enabled:!0,ignoreOrigin:!0}}})],_.prototype,"featureCollectionType",void 0),e([y({json:{write:!1}})],_.prototype,"fullExtent",void 0),e([e$1(["web-map","portal-item"],"fullExtent",["layers"])],_.prototype,"readFullExtent",null),e([y({readOnly:!0,json:{origins:{"web-map":{write:{target:"featureCollection.showLegend",overridePolicy(){return {enabled:null!=this.featureCollectionJSON}}}}}}})],_.prototype,"legendEnabled",void 0),e([y({type:["show","hide"]})],_.prototype,"listMode",void 0),e([y({type:Number,nonNullable:!0,json:{write:!1}})],_.prototype,"minScale",void 0),e([e$1(["web-map","portal-item"],"minScale",["layers"])],_.prototype,"readMinScale",null),e([y({type:Number,nonNullable:!0,json:{write:!1}})],_.prototype,"maxScale",void 0),e([e$1(["web-map","portal-item"],"maxScale",["layers"])],_.prototype,"readMaxScale",null),e([y({readOnly:!0})],_.prototype,"multipointLayer",null),e([y({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],_.prototype,"operationalLayerType",void 0),e([y({readOnly:!0})],_.prototype,"pointLayer",null),e([y({readOnly:!0})],_.prototype,"polygonLayer",null),e([y({readOnly:!0})],_.prototype,"polylineLayer",null),e([y({readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],_.prototype,"sublayers",void 0),e([e$1("web-map","sublayers",["layers"])],_.prototype,"readSublayers",null),e([o$1("web-map","sublayers")],_.prototype,"writeSublayers",null),e([y({readOnly:!0})],_.prototype,"textLayer",null),e([y()],_.prototype,"title",void 0),e([y({readOnly:!0,json:{read:!1}})],_.prototype,"type",void 0),_=e([i("esri.layers.MapNotesLayer")],_);var D=_;

export default D;
