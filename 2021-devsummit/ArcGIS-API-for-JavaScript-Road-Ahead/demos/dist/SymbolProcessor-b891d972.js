import { n, j as e, k as i, bJ as m, dW as a, o as t, z as h, r, aP as k$1, F as A, t as t$1, ec as s$1, w as g, bd as e$1 } from './_virtual_index-634cbc09.js';
import { g as g$1 } from './definitions-12783a0f.js';
import { n as n$1 } from './schemaUtils-35ff841b.js';
import { l } from './CollisionGrid-9a375fdf.js';
import { t as te } from './Utils-3e0360c1.js';
import { b as r$1, s, d as i$1, E, g as t$2, k as k$2 } from './WGLMeshFactory-eed1b518.js';
import { v } from './ComputedAttributeStorage-ba368d24.js';
import { p } from './BaseProcessor-02ef9152.js';
import './MD5-a554c7d9.js';
import './MaterialKey-202e82ff.js';
import './visualVariablesUtils-07a6daab.js';
import './Rect-a3838111.js';
import './BidiEngine-fb789855.js';
import './FeatureSetReader-261c974c.js';
import './centroid-395619b0.js';
import './FramebufferObject-553bb493.js';
import './_commonjsHelpers-3f70742c.js';
import './tileUtils-5cb6bf04.js';
import './visualVariablesUtils-de638f89.js';
import './TurboLine-6581f402.js';
import './GeometryUtils-58fe63b9.js';
import './quantizationUtils-3c89c245.js';
import './quickselect-eae177f3.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.20/esri/copyright.txt for details.
*/
n.getLogger("esri.views.2d.layers.features.processors.SymbolProcessor");function k(e,t){return (!e.minScale||e.minScale>=t)&&(!e.maxScale||e.maxScale<=t)}function x(e){const t=e.message,i={message:{data:{},tileKey:t.tileKey},transferList:new Array};for(const o in t.data){const e=t.data[o];if(i.message.data[o]=null,r(e)){const t=e.stride,r=e.indices.slice(0),a=e.vertices.slice(0),n=e.records.slice(0),c={stride:t,indices:r,vertices:a,records:n,metrics:A(e.metrics,(e=>e.slice(0)))};i.transferList.push(r,a,n),i.message.data[o]=c;}}return i}let C=class extends p{constructor(){super(...arguments),this.type="symbol",this._matchers={feature:null,aggregate:null},this._bufferData=new Map;}initialize(){this.handles.add([this.tileStore.on("update",this.onTileUpdate.bind(this))]);}destroy(){}get supportsTileUpdates(){return !0}async update(e,r){const s=r.schema.processors[0];if("symbol"!==s.type)return;const i=m(this._schema,s);a(i,"mesh")&&(t("esri-2d-update-debug")&&console.debug("Applying Update - Processor:",i),e.mesh=!0,e.why.mesh.push("Symbology changed"),this._schema=s,this._factory=this._createFactory(s),this._factory.update(s,this.tileStore.tileScheme.tileInfo));}onTileMessage(e,t,r,s){return h(s),this._onTileData(e,t,r,s)}onTileClear(e){const t={clear:!0};return this._bufferData.delete(e.key.id),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:t})}onTileError(e,t,r){const s=r.signal,i={tileKey:e.id,error:t};return this.remoteClient.invoke("tileRenderer.onTileError",i,{signal:s})}onTileUpdate(e){for(const t of e.removed){if(!this._bufferData.has(t.key.id))continue;this._bufferData.get(t.key.id).forEach((e=>{const t=new Set;te((s=>{const i=e.message.data[s];if(r(i)){const e=r$1.from(i.records).getCursor();for(;e.next();)t.add(e.id);}}));const s=e.message.tileKey,i={type:"update",addOrUpdate:null};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:s,data:i})})),this._bufferData.delete(t.key.id);}for(const t of e.added)this._bufferData.forEach((e=>{for(const r of e)r.message.tileKey===t.id&&this._updateTileMesh("append",t,x(r),[],!1,!1,null);}));}_addBufferData(e,t){this._bufferData.has(e)||this._bufferData.set(e,[]),this._bufferData.get(e).push(x(t));}_createFactory(e){const{geometryType:t,objectIdField:r,fields:i}=this.service,o=(e,t)=>this.remoteClient.invoke("tileRenderer.getMaterialItems",e,t),a={geometryType:t,fields:i,spatialReference:k$1.fromJSON(this.spatialReference)},n=new k$2(o,!1),{matcher:c,aggregateMatcher:l}=e.mesh;return this._store=n,this._matchers.feature=s(c,n,a),this._matchers.aggregate=A(l,(e=>s(e,n,a))),new i$1(t,r,n)}async _onTileData(e,t,r,s){const{type:o,addOrUpdate:a,remove:n}=t,c=t.end;if(!a){const t={type:o,addOrUpdate:null,remove:n,clear:!1,end:c};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:t},s)}const d=this._processFeatures(e,a,r,s);try{const r=await d;if(t$1(r)){const t={type:o,addOrUpdate:null,remove:n,clear:!1,end:c};return this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:e.id,data:t},s)}for(const t of r)e.key.id!==t.message.tileKey&&this._addBufferData(e.key.id,t);await s$1(r.map((r=>{const i=e.key.id===r.message.tileKey,a=i?t.remove:[],n=i&&t.end;return this._updateTileMesh(o,e,r,a,n,t.clear,s.signal)})));}catch(m){this._handleError(e,m,s);}}async _updateTileMesh(e,t,r,i,a,n,l){const d=e,m=r.message.tileKey;m!==t.key.id&&(a=!1);const h$1=A(r,(e=>e.message)),p=A(r,(e=>e.transferList))||[],f={type:d,addOrUpdate:h$1,remove:i,clear:!1,end:a},u={transferList:e$1(p)||[],signal:l};return h(u),this.remoteClient.invoke("tileRenderer.onTileData",{tileKey:m,data:f},u)}async _processFeatures(e,t,r,s){if(t$1(t)||!t.hasFeatures)return null;const o={transform:e.transform,hasZ:!1,hasM:!1},a=this._factory,n={viewingMode:"",scale:e.scale},l=await this._matchers.feature,d=await this._matchers.aggregate;h(s);const m=this._getLabelInfos(e,t);return await a.analyze(t.getCursor(),l,d,o,n),h(s),this._writeFeatureSet(e,t,o,m,a,r)}_writeFeatureSet(e,t,s,i,o,a){const n=t.getApproximateSize(),c="simple"===this._schema.mesh.matcher.type&&this._schema.mesh.matcher.isDotDensity,l=new E(e.key.id,{features:n,records:n,metrics:0},c,a,!0),d={viewingMode:"",scale:e.scale},m=t.getCursor();for(;m.next();)try{const t=m.getDisplayId(),a=r(i)?i.get(t):null;o.writeCursor(l,m,s,d,e.level,a);}catch(p){}const h=e.tileInfoView.tileInfo.isWrappable;return l.serialize(h)}_handleError(e,t,r){if(!g(t)){const s={tileKey:e.id,error:t.message};return this.remoteClient.invoke("tileRenderer.onTileError",s,{signal:r.signal})}}_getLabelInfos(e,t){const r=this._schema.mesh.labels,o=A(r,(t=>t.filter((t=>k(t,e.scale)))));if(t$1(o)||0===o.length)return null;const a=new Map,n=new l(g$1),c=t.getCursor();for(;c.next();){const e=c.getDisplayId();let t=!1;const r=[],s=v(e),i=s&&1!==c.readAttribute("cluster_count")?"aggregate":"feature";for(const a of o){if(a.target!==i)continue;const o=c.getStorage(),n=s&&"feature"===i?o.getComputedStringAtIndex(c.readAttribute("referenceId"),a.fieldIndex):o.getComputedStringAtIndex(e,a.fieldIndex);if(!n)continue;const l=n$1(n.toString()),d=l[0],m=l[1];this._store.getMosaicItem(a.symbol,t$2(d)).then((e=>{r[a.index]={glyphs:e.glyphMosaicItems,rtl:m,index:a.index};})),t=!0;}a.set(e,r),t&&this._markUsed(n,c);}return a}_shouldDiscard(e,t){switch(this.service.geometryType){case"esriGeometryPoint":{const r=t.readLegacyPointGeometry();return !r||e.checkOverlap(r.x,r.y)}case"esriGeometryPolygon":{const r=t.readLegacyCentroid();return !r||e.checkOverlap(r.x,r.y)}default:return !1}}_markUsed(e,t){switch(this.service.geometryType){case"esriGeometryPoint":{const{x:r,y:s}=t.readLegacyPointGeometry();return e.markUsed(r,s)}case"esriGeometryPolygon":{const{x:r,y:s}=t.readLegacyCentroid();return e.markUsed(r,s)}}}};C=e([i("esri.views.2d.layers.features.processors.SymbolProcessor")],C);var U=C;

export default U;
