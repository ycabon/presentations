self.webpackChunkRemoteClient([162],{435:function(e,t,r){"use strict";r.r(t);var i=r(14),a=(r(4),r(0)),s=r(3),o=(r(6),r(8)),n=r(16),l=r(58),p=r(20),d=r(17),c=r(24),y=(r(37),r(38),r(2)),u=r(75),b=r(147),h=r(55),f=r(88),j=r(85),O=r(42),g=r(74),m=r(101),v=(r(137),r(191),r(202),r(223),r(228),r(229),r(224),r(235)),I=(r(246),r(145)),w=r(167),L=r(97),F=r(110),S=r(290),_=r(280),T=r(349),E=r(350),P=r(391),x=r(517),D=r(274),A=r(237),U=r(83),R=r(518),q=r(399),k=r(323),Q=r(519),N=r(56);let C=class extends N.a{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};Object(i.a)([Object(n.b)({type:String,json:{read:!0,write:!0}})],C.prototype,"name",void 0),Object(i.a)([Object(n.b)({type:String,json:{read:!0,write:!0}})],C.prototype,"field",void 0),Object(i.a)([Object(n.b)({type:[Number],json:{read:!0,write:!0}})],C.prototype,"currentRangeExtent",void 0),Object(i.a)([Object(n.b)({type:[Number],json:{read:!0,write:!0}})],C.prototype,"fullRangeExtent",void 0),Object(i.a)([Object(n.b)({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],C.prototype,"type",void 0),C=Object(i.a)([Object(p.a)("esri.layers.support.RangeInfo")],C);var G=C;const V=["3DObject","Point"],K=s.a.getLogger("esri.layers.SceneLayer"),M=Object(E.a)();let W=class extends(Object(k.a)(Object(w.a)(Object(m.a)(Object(L.a)(Object(F.a)(Object(j.a)(f.a))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.editingEnabled=!0,this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e){const t=this.getField(e);return t&&t.domain?t.domain:null}get fieldsIndex(){return new I.a(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:q.c.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return Z[this.profile]||"mesh"}set renderer(e){Object(u.e)(e,this.fields),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=Object(a.h)(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:R.a,{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:i,supportsUploadWithItemId:s},data:{supportsZ:o,supportsM:n,isVersioned:l},operations:{supportsEditing:p,supportsUpdate:d}}=e,c=e.operations.supportsChangeTracking;return{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:i,supportsGeometryUpdate:!1,supportsUploadWithItemId:s},data:{supportsZ:o,supportsM:n,isVersioned:l},operations:{supportsEditing:p&&c,supportsAdd:!1,supportsDelete:!1,supportsUpdate:d&&c}}}get defaultPopupTemplate(){return Object(a.h)(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e)),e||void 0}get displayField(){return Object(a.h)(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const r=t.store.profile;return null!=r&&z[r]?z[r]:(K.error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const t=Object(a.h)(e)?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(y.s).then(()=>this._fetchService(t)).then(()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t)])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>this._populateFieldUsageInfo()).then(()=>Object(D.a)(this,{origin:"service"},t)).then(()=>Object(u.e)(this.renderer,this.fields));return this.addResolvingPromise(r),Promise.resolve(this)}createQuery(){const e=new U.a;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e})}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(K.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return Object(A.a)(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return Object(a.h)(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),Object(a.g)(this.associatedLayer))throw new d.a("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new d.a("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new d.a("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new d.a("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const e of this.statisticsInfo)if(e.name===r.name){const r=Object(c.y)(this.parsedUrl.path,e.href);return Object(h.default)(r,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then(e=>e.data)}throw new d.a("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const i=await r.e(24).then(r.bind(null,623));if(await this.load(),Object(a.g)(this.associatedLayer))throw new d.a(this.type+"-layer:not-editable","Service is not editable");return await this.associatedLayer.load(),i.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===V.indexOf(e.layerType))throw new d.a("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d.a("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d.a("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,t){let r=!1,i=!1;if(null==e)r=!0,i=!0;else{const a=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,i=a;break;case"vertex-reference-frame":r=!0,i=!a;break;default:r=!1}}if(!r)throw new d.a("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!i)throw new d.a("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new d.a("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(t=>t.name===e.name)),r=!!(Object(a.h)(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some(t=>t&&e.name===t.name)),i={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=i}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if(Object(a.g)(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(Object(a.g)(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=Object(o.a)(this);for(let r=0;r<e.length;r++){const i=e[r];this._buddyIsMoreImportant(i)&&(t.setDefaultOrigin(this.associatedLayer.originOf(i)),t.set(i,this.associatedLayer[i]),t.setDefaultOrigin("user"))}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new Q.a(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await t.fetch()}catch(e){Object(y.l)(e)||this._logWarningOnPopupEnabled()}}_logWarningOnPopupEnabled(){Object(O.g)(this,["popupTemplate","popupEnabled"],()=>this.popupEnabled&&null!=this.popupTemplate).then(()=>()=>{const e="this SceneLayer: "+this.title;null==this.attributeStorageInfo?K.warn("Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on "+e):K.info("Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on "+e)})}_buddyIsMoreImportant(e){if(Object(a.g)(this.associatedLayer))return!1;const t=this.originIdOf(e),r=this.associatedLayer.originIdOf(e);return null!=r&&r<=2?null==t||t<2:null!=r&&r<=3&&(null==t||t<3)}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&K.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&K.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};Object(i.a)([Object(n.b)({types:{key:"type",base:S.a,typeMap:{selection:T.a}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],W.prototype,"featureReduction",void 0),Object(i.a)([Object(n.b)({type:[G],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],W.prototype,"rangeInfos",void 0),Object(i.a)([Object(n.b)({json:{read:!1}})],W.prototype,"associatedLayer",void 0),Object(i.a)([Object(n.b)({type:["show","hide"]})],W.prototype,"listMode",void 0),Object(i.a)([Object(n.b)({type:["ArcGISSceneServiceLayer"]})],W.prototype,"operationalLayerType",void 0),Object(i.a)([Object(n.b)({json:{read:!1},readOnly:!0})],W.prototype,"type",void 0),Object(i.a)([Object(n.b)({...M.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],W.prototype,"fields",void 0),Object(i.a)([Object(n.b)({readOnly:!0})],W.prototype,"fieldsIndex",null),Object(i.a)([Object(n.b)({type:x.a,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],W.prototype,"floorInfo",void 0),Object(i.a)([Object(n.b)(M.outFields)],W.prototype,"outFields",void 0),Object(i.a)([Object(n.b)({type:q.c,readOnly:!0,json:{read:!1}})],W.prototype,"nodePages",void 0),Object(i.a)([Object(l.a)("service","nodePages",["nodePages","pointNodePages"])],W.prototype,"readNodePages",null),Object(i.a)([Object(n.b)({type:[q.b],readOnly:!0})],W.prototype,"materialDefinitions",void 0),Object(i.a)([Object(n.b)({type:[q.d],readOnly:!0})],W.prototype,"textureSetDefinitions",void 0),Object(i.a)([Object(n.b)({type:[q.a],readOnly:!0})],W.prototype,"geometryDefinitions",void 0),Object(i.a)([Object(n.b)({readOnly:!0})],W.prototype,"serviceUpdateTimeStamp",void 0),Object(i.a)([Object(n.b)({readOnly:!0})],W.prototype,"attributeStorageInfo",void 0),Object(i.a)([Object(n.b)({readOnly:!0})],W.prototype,"statisticsInfo",void 0),Object(i.a)([Object(n.b)({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:!0}})],W.prototype,"definitionExpression",void 0),Object(i.a)([Object(n.b)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],W.prototype,"path",void 0),Object(i.a)([Object(n.b)(g.b)],W.prototype,"elevationInfo",null),Object(i.a)([Object(n.b)({type:String})],W.prototype,"geometryType",null),Object(i.a)([Object(n.b)(g.d)],W.prototype,"labelsVisible",void 0),Object(i.a)([Object(n.b)({type:[_.a],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:P.a},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:P.a},write:!0}})],W.prototype,"labelingInfo",void 0),Object(i.a)([Object(n.b)(g.e)],W.prototype,"legendEnabled",void 0),Object(i.a)([Object(n.b)(g.i)],W.prototype,"opacity",void 0),Object(i.a)([Object(n.b)({types:v.b,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],W.prototype,"renderer",null),Object(i.a)([Object(n.b)({json:{read:!1}})],W.prototype,"cachedDrawingInfo",void 0),Object(i.a)([Object(l.a)("service","cachedDrawingInfo")],W.prototype,"readCachedDrawingInfo",null),Object(i.a)([Object(n.b)({readOnly:!0,json:{read:!1}})],W.prototype,"capabilities",null),Object(i.a)([Object(n.b)({type:Boolean,json:{read:!1}})],W.prototype,"editingEnabled",void 0),Object(i.a)([Object(n.b)(g.j)],W.prototype,"popupEnabled",void 0),Object(i.a)([Object(n.b)({type:b.a,json:{name:"popupInfo",write:!0}})],W.prototype,"popupTemplate",void 0),Object(i.a)([Object(n.b)({readOnly:!0,json:{read:!1}})],W.prototype,"defaultPopupTemplate",null),Object(i.a)([Object(n.b)({type:String,json:{read:!1}})],W.prototype,"objectIdField",void 0),Object(i.a)([Object(l.a)("service","objectIdField",["objectIdField","fields"])],W.prototype,"readObjectIdField",null),Object(i.a)([Object(n.b)({type:String,json:{read:!1}})],W.prototype,"globalIdField",void 0),Object(i.a)([Object(l.a)("service","globalIdField",["globalIdField","fields"])],W.prototype,"readGlobalIdField",null),Object(i.a)([Object(n.b)({readOnly:!0,type:String,json:{read:!1}})],W.prototype,"displayField",null),Object(i.a)([Object(n.b)({type:String,json:{read:!1}})],W.prototype,"profile",void 0),Object(i.a)([Object(l.a)("service","profile",["store.profile"])],W.prototype,"readProfile",null),Object(i.a)([Object(n.b)({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],W.prototype,"normalReferenceFrame",void 0),Object(i.a)([Object(n.b)(g.m)],W.prototype,"screenSizePerspectiveEnabled",void 0),W=Object(i.a)([Object(p.a)("esri.layers.SceneLayer")],W);const z={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},Z={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};var B=W;t.default=B}});