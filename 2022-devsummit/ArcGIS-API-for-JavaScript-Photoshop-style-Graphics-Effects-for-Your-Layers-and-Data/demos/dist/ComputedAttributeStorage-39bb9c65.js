import { ca as W, cb as ct, cc as tt, cd as nt, g as t, ce as e, cf as bt, h as r$2, cg as mt, e as s, k as i, ch as N, ci as m, cj as O, ck as K, cl as c$2, bw as z, q as g, s as s$1, J, cm as d$1, cn as v, co as d$2, bI as E$1, bL as e$2, a5 as e$3 } from './_virtual_index-49b2bc11.js';
import { b, t as t$1 } from './FeatureSetReader-c99e2aca.js';
import { c as c$1, u, f, e as e$1, b as i$1, n as n$1, l, r as r$3, s as s$2, d as n$2 } from './visualVariablesUtils-d152fc61.js';
import { Q } from './Utils-8759b086.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
function c({coords:t,lengths:e}){let r=0;for(const s of e){for(let e=1;e<s;e++)t[2*(r+e)]+=t[2*(r+e)-2],t[2*(r+e)+1]+=t[2*(r+e)-1];r+=s;}}class d extends b{constructor(t,e,r){super(t),this._featureIndex=-1,this._dateFields=new Set,this._geometryType=r,this._features=e;}static fromFeatures(t,e,s){const i=W([],t,e,!1,!1,s);for(let r=0;r<i.length;r++)i[r].displayId=t[r].displayId;return d.fromOptimizedFeatures(i,e)}static fromFeatureSet(t,e){const r=ct(t,e);return d.fromOptimizedFeatureSet(r)}static fromOptimizedFeatureSet(t){const{features:e,geometryType:r}=t,s=d.fromOptimizedFeatures(e,r);s._exceededTransferLimit=t.exceededTransferLimit,s._transform=t.transform;for(const i of t.fields)"esriFieldTypeDate"===i.type&&s._dateFields.add(i.name);return s}static fromOptimizedFeatures(t,e,r){const s=b.createInstance(),i=new d(s,t,e);return i._transform=r,i}get _current(){return this._features[this._featureIndex]}get geometryType(){return this._geometryType}get hasFeatures(){return !!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return !1}get hasM(){return !1}removeIds(t){const e=new Set(t);this._features=this._features.filter((t=>!e.has(t.objectId)));}append(t){for(const e of t)this._features.push(e);}getSize(){return this._features.length}getCursor(){return this.copy()}getQuantizationTransform(){return this._transform}getAttributeHash(){let t="";for(const e in this._current.attributes)t+=this._current.attributes[e];return t}getIndex(){return this._featureIndex}setIndex(t){this._featureIndex=t;}getObjectId(){return this._current.objectId}getDisplayId(){return this._current.displayId}setDisplayId(t){this._current.displayId=t;}getGroupId(){return this._current.groupId}setGroupId(t){this._current.groupId=t;}copy(){const t=new d(this.instance,this._features,this.geometryType);return this.copyInto(t),t}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readLegacyFeature(){return tt(this._current,this.geometryType,this.hasZ,this.hasM)}readOptimizedFeature(){return this._current}readLegacyPointGeometry(){return this.readGeometry()?{x:this.getX(),y:this.getY()}:null}readLegacyGeometry(){const t=this.readGeometry();return nt(t,this.geometryType,this.hasZ,this.hasM)}readLegacyCentroid(){const e=this.readCentroid();return t(e)?null:{x:e.coords[0]*this._sx+this._tx,y:e.coords[1]*this._sy+this._ty}}readGeometryArea(){return e(this._current)?bt(this._current.geometry,2):0}readUnquantizedGeometry(){const t=this.readGeometry();if("esriGeometryPoint"===this.geometryType||!t)return t;const e=t.clone();return c(e),e}readHydratedGeometry(){const r=this._current.geometry;if(t(r))return null;const s=r.clone();return r$2(this._transform)&&mt(s,s,this.hasZ,this.hasM,this._transform),s}getXHydrated(){if(!e(this._current))return 0;const e$1=this._current.geometry.coords[0],r=this.getQuantizationTransform();return t(r)?e$1:e$1*r.scale[0]+r.translate[0]}getYHydrated(){if(!e(this._current))return 0;const e$1=this._current.geometry.coords[1],r=this.getQuantizationTransform();return t(r)?e$1:r.translate[1]-e$1*r.scale[1]}getX(){return e(this._current)?this._current.geometry.coords[0]*this._sx+this._tx:0}getY(){return e(this._current)?this._current.geometry.coords[1]*this._sy+this._ty:0}readGeometry(){if(!e(this._current))return null;const t=this._current.geometry.clone();if(t.isPoint)return t.coords[0]=t.coords[0]*this._sx+this._tx,t.coords[1]=t.coords[1]*this._sy+this._ty,t;let e$1=0;for(const r of t.lengths)t.coords[2*e$1]=t.coords[2*e$1]*this._sx+this._tx,t.coords[2*e$1+1]=t.coords[2*e$1+1]*this._sy+this._ty,e$1+=r;return t}readCentroid(){if(!e(this._current))return null;if(!this._current.centroid){const t=this._computeCentroid();if(!t)return null;t.coords[0]=(t.coords[0]-this._tx)/this._sx,t.coords[1]=(t.coords[1]-this._ty)/this._sy,this._current.centroid=t;}const t=this._current.centroid.clone();return t.coords[0]=t.coords[0]*this._sx+this._tx,t.coords[1]=t.coords[1]*this._sx+this._ty,t}_readAttribute(t,e){const r=this._current.attributes[t];if(void 0!==r)return null!=r&&e&&this._dateFields.has(t)?new Date(r):r;const s=this.readAttributes(),i=t.toLocaleLowerCase().trim();for(const n in s)if(n.toLocaleLowerCase().trim()===i){const t=this._current.attributes[n];return null!=t&&e&&this._dateFields.has(n)?new Date(t):t}}copyInto(t){super.copyInto(t),t._featureIndex=this._featureIndex,t._transform=this._transform,t._dateFields=this._dateFields;}_readAttributes(){return this._current.attributes}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
const E=s.getLogger("esri.views.layers.2d.features.support.AttributeStore"),F=n$1(l,E),U={sharedArrayBuffer:i("esri-shared-array-buffer"),atomics:i("esri-atomics")};function C(t,e){return i=>e(t(i))}class R{constructor(t,e,i,s){this.size=0,this.texelSize=4;const{pixelType:r,layout:a,textureOnly:o}=s;this.textureOnly=o||!1,this.pixelType=r,this._ctype=e,this.layout=a,this._resetRange(),this._shared=t,this.size=i,o||(this.data=this._initData(r,i,t,e));}get buffer(){return E$1(this.data,(t=>t.buffer))}unsetComponentAllTexels(t,e){const i=e$2(this.data);for(let s=0;s<this.size*this.size;s++)i[s*this.texelSize+t]&=~e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1;}setComponentAllTexels(t,e){const i=e$2(this.data);for(let s=0;s<this.size*this.size;s++)i[s*this.texelSize+t]|=255&e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1;}setComponent(t,e,i){const s=e$2(this.data);for(const r of i)s[r*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,r),this.dirtyEnd=Math.max(this.dirtyEnd,r);}setComponentTexel(t,e,i){e$2(this.data)[i*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i);}unsetComponentTexel(t,e,i){e$2(this.data)[i*this.texelSize+t]&=~e,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i);}getData(t,e){const i=f(t);return e$2(this.data)[i*this.texelSize+e]}setData(t,e,i){const s=f(t),r=1<<e;0!=(this.layout&r)?(this.data[s*this.texelSize+e]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)):E.error("mapview-attributes-store","Tried to set a value for a texel's readonly component");}lock(){5121===this.pixelType&&this._shared&&U.atomics&&"local"!==this._ctype&&Atomics.store(this.data,0,1);}unlock(){5121===this.pixelType&&this._shared&&U.atomics&&"local"!==this._ctype&&Atomics.store(this.data,0,0);}expand(t){if(this.size=t,!this.textureOnly){const e=this._initData(this.pixelType,t,this._shared,this._ctype),i=e$2(this.data);e.set(i),this.data=e;}}toMessage(){const t=this.dirtyStart,e=this.dirtyEnd,i=this.texelSize;if(t>e)return null;this._resetRange();const s=!(this._shared||"local"===this._ctype),r=this.pixelType,a=this.layout,o=e$2(this.data);return {start:t,end:e,data:s&&o.slice(t*i,(e+1)*i)||null,pixelType:r,layout:a}}_initData(t,e,i,s){const r=i&&"local"!==s?SharedArrayBuffer:ArrayBuffer,a=Q(t),o=new a(new r(e*e*4*a.BYTES_PER_ELEMENT));for(let n=0;n<o.length;n+=4)o[n+1]=255;return o}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0;}}class M{constructor(t,e){this._client=t,this.config=e,this._attributeComputeMap=new Map,this._blocks=new Array,this._filters=new Array(N),this._targetType=0,this._abortController=new AbortController,this._hasScaleExpr=!1,this._size=32,this._idsToHighlight=new Set;const i=e.supportsTextureFloat?5126:5121;F(`Creating AttributeStore ${U.sharedArrayBuffer?"with":"without"} shared memory`),this._blockDescriptors=[{pixelType:5121,layout:1},{pixelType:5121,layout:15,textureOnly:!0},{pixelType:i,layout:15},{pixelType:i,layout:15}],this._blocks=this._blockDescriptors.map((()=>null));}destroy(){this._abortController.abort();}get hasScaleExpr(){return this._hasScaleExpr}get _signal(){return this._abortController.signal}update(t$1,i$1){this.config=i$1;const s=i$1.schema.processors[0].storage,o=m(this._schema,s);if((t$1.targets.feature||t$1.targets.aggregate)&&(t$1.storage.data=!0),o&&(i("esri-2d-update-debug")&&console.debug("Applying Update - AttributeStore:",o),t$1.storage.data=!0,this._schema=s,this._attributeComputeMap.clear(),!t(s))){switch(s.target){case"feature":this._targetType=u;break;case"aggregate":this._targetType=c$1;}if("subtype"===s.type)for(const t in s.mapping){const e=s.mapping[t];if(r$2(e))for(const t of e.mapping)this._bindAttribute(t);}else for(const t of s.mapping)this._bindAttribute(t);}}onTileData(t$1,e){if(t(e.addOrUpdate))return;const i=e.addOrUpdate.getCursor();for(;i.next();){const t=i.getDisplayId();this.setAttributeData(t,i);}}invalidateResources(){this._createResourcesPromise=null,this._abortController.abort(),this._abortController=new AbortController;}async setHighlight(t,e){const i=1,s=this._getBlock(0),r=e.map((t=>f(t)));s.lock(),s.unsetComponentAllTexels(0,i),s.setComponent(0,i,r),s.unlock(),this._idsToHighlight.clear();for(const a of t)this._idsToHighlight.add(a);await this.sendUpdates();}async updateFilters(t,i$1){const{config:s,service:r,spatialReference:a}=i$1,{filters:o}=s,n=o.map(((t,e)=>this._updateFilter(t,e,r,a)));(await Promise.all(n)).some((t=>t))&&(t.storage.filters=!0,i("esri-2d-update-debug")&&console.debug("Applying Update - AttributeStore:","Filters changed"));}setData(t,e,i,s){const r=f(t);this._ensureSizeForTexel(r),this._getBlock(e).setData(t,i,s);}getData(t,e,i){return this._getBlock(e).getData(t,i)}getHighlightFlag(t){return this._idsToHighlight.has(t)?O:0}unsetAttributeData(t){const e=f(t);this._getBlock(0).setData(e,0,0);}setAttributeData(t,e){const i=f(t);if(this._ensureSizeForTexel(i),this._getBlock(0).setData(i,0,this.getFilterFlags(e)),this._targetType!==e$1(t))return;const r=this._attributeComputeMap,a=this.config.supportsTextureFloat?1:2,o=4;r.size&&r.forEach(((t,r)=>{const n=r*a%o,l=Math.floor(r*a/o),h=this._getBlock(l+K),c=t(e);if(this.config.supportsTextureFloat)h.setData(i,n,c);else if(c===c$2)h.setData(i,n,255),h.setData(i,n+1,255);else {const t=e$3(Math.round(c),-32767,32766)+32768,e=255&t,r=(65280&t)>>8;h.setData(i,n,e),h.setData(i,n+1,r);}}));}sendUpdates(){if(this._nextUpdate)return this._nextUpdate.promise;if(this._currUpdate)return this._nextUpdate=z(),this._nextUpdate.promise;const e={blocks:this._blocks.map((t=>r$2(t)?t.toMessage():null))};return this._currUpdate=this._createResources().then((()=>{const t=()=>{if(this._currUpdate=null,this._nextUpdate){const t=this._nextUpdate;this._nextUpdate=null,this.sendUpdates().then((()=>t.resolve()));}},i=this._client.update(e,this._signal).then(t).catch(t);return this._client.render(this._signal),i})).catch((e=>g(e)?(this._createResourcesPromise=null,this._createResources()):(E.error(new s$1("mapview-attribute-store","Encountered an error during client update",e)),Promise.resolve()))),this._currUpdate}_ensureSizeForTexel(t){for(;t>=this._size*this._size;)if(this._expand())return}_bindAttribute(t){function e(){return t.normalizationField?e=>{const i=e.readAttribute(t.normalizationField);if(!i)return null;return e.readAttribute(t.field)/i}:e=>e.readAttribute(t.field)}function i(){return t.normalizationField&&E.warn("mapview-arcade","Ignoring normalizationField specified with an arcade expression which is not supported."),e=>e.getComputedNumericAtIndex(t.fieldIndex)}let s;if(null!=t.fieldIndex)s=i();else {if(!t.field)return;s=e();}if(t.valueRepresentation){s=C(s,(e=>r$3(e,t.valueRepresentation)));}const r=t=>null===t||isNaN(t)||t===1/0?c$2:t;this._attributeComputeMap.set(t.binding,C(s,r));}_createResources(){if(r$2(this._createResourcesPromise))return this._createResourcesPromise;this._getBlock(J),F("Initializing AttributeStore");const e={shared:U.sharedArrayBuffer&&!("local"===this._client.type),size:this._size,blocks:d$1(this._blocks,(t=>({textureOnly:t.textureOnly,buffer:t.buffer,pixelType:t.pixelType})))},i=this._client.initialize(e,this._signal).catch((e=>{g(e)?this._createResourcesPromise=null:E.error(new s$1("mapview-attribute-store","Encountered an error during client initialization",e));}));return this._createResourcesPromise=i,i.then((()=>t(this._createResourcesPromise)?this._createResources():void 0)),i}_getBlock(t){const e=this._blocks[t];if(r$2(e))return e;F(`Initializing AttributeBlock at index ${t}`);const i=U.sharedArrayBuffer,s=this._client.type,r=new R(i,s,this._size,this._blockDescriptors[t]);return this._blocks[t]=r,this._createResourcesPromise=null,r}_expand(){if(this._size<this.config.maxTextureSize){const t=this._size<<=1;return F("Expanding block size to",t,this._blocks),v(this._blocks,(e=>e.expand(t))),this._createResourcesPromise=null,this._size=t,0}return E.error(new s$1("mapview-limitations","Maximum number of onscreen features exceeded.")),-1}async _updateFilter(t$1,e,i,s){const o=this._filters[e],n=r$2(o)&&o.hash;if(!o&&!t$1)return !1;if(n===JSON.stringify(t$1))return !1;if(t(t$1)){if(!o)return !1;const t=1<<e+1,i=this._getBlock(0);return this._filters[e]=null,i.setComponentAllTexels(0,t),this.sendUpdates(),!0}const l=await this._getFilter(e,i);return await l.update(t$1,s),!0}async _getFilter(t,e){const i=this._filters[t];if(r$2(i))return i;const{default:s}=await import('./FeatureFilter-8b1b2c84.js'),r=new s({geometryType:e.geometryType,hasM:!1,hasZ:!1,timeInfo:e.timeInfo,fieldsIndex:new d$2(e.fields)});return this._filters[t]=r,r}isVisible(t){return !!(2&this._getBlock(0).getData(t,0))}getFilterFlags(t$1){let e=0;const i=i$1(t$1.getDisplayId());for(let a=0;a<this._filters.length;a++){const s=!!(i&1<<a),o=this._filters[a];e|=(!s||t(o)||o.check(t$1)?1:0)<<a;}let s=0;if(this._idsToHighlight.size){const e=t$1.getObjectId();s=this.getHighlightFlag(e);}return e<<1|s}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
class r$1{constructor(){this._freeIds=[],this._idCounter=1;}createId(r=!1){return s$2(this._getFreeId(),r)}releaseId(e){this._freeIds.push(e);}_getFreeId(){return this._freeIds.length?this._freeIds.pop():this._idCounter++}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.22/esri/copyright.txt for details.
*/
function n(t,e,s){if(!(t.length>e))for(;t.length<=e;)t.push(s);}class r{constructor(){this._numerics=[],this._strings=[],this._idGenerator=new r$1,this._allocatedSize=256,this._bitsets=[],this._instanceIds=[],this._bounds=[];}createBitset(){const e=this._bitsets.length;return this._bitsets.push(t$1.create(this._allocatedSize,n$2)),e+1}getBitset(t){return this._bitsets[t-1]}_expand(){this._allocatedSize<<=1;for(const t of this._bitsets)t.resize(this._allocatedSize);}_ensureNumeric(t,e){this._numerics[t]||(this._numerics[t]=[]);n(this._numerics[t],e,0);}_ensureInstanceId(t){n(this._instanceIds,t,0);}_ensureString(t,e){this._strings[t]||(this._strings[t]=[]);n(this._strings[t],e,null);}createDisplayId(t=!1){const s=this._idGenerator.createId();return s>this._allocatedSize&&this._expand(),s$2(s,t)}releaseDisplayId(e){for(const t of this._bitsets)t.unset(e);return this._idGenerator.releaseId(e&n$2)}getComputedNumeric(e,s){return this.getComputedNumericAtIndex(e&n$2,0)}setComputedNumeric(e,s,i){return this.setComputedNumericAtIndex(e&n$2,i,0)}getComputedString(e,s){return this.getComputedStringAtIndex(e&n$2,0)}setComputedString(e,s,i){return this.setComputedStringAtIndex(e&n$2,0,i)}getComputedNumericAtIndex(e,s){const i=e&n$2;return this._ensureNumeric(s,i),this._numerics[s][i]}setComputedNumericAtIndex(e,s,i){const n=e&n$2;this._ensureNumeric(s,n),this._numerics[s][n]=i;}getInstanceId(e){const s=e&n$2;return this._ensureInstanceId(s),this._instanceIds[s]}setInstanceId(e,s){const i=e&n$2;this._ensureInstanceId(i),this._instanceIds[i]=s;}getComputedStringAtIndex(e,s){const i=e&n$2;return this._ensureString(s,i),this._strings[s][i]}setComputedStringAtIndex(e,s,i){const n=e&n$2;this._ensureString(s,n),this._strings[s][n]=i;}getXMin(e){return this._bounds[4*(e&n$2)]}getYMin(e){return this._bounds[4*(e&n$2)+1]}getXMax(e){return this._bounds[4*(e&n$2)+2]}getYMax(e){return this._bounds[4*(e&n$2)+3]}setBounds(e,s){const i=s.readHydratedGeometry();if(!i||!i.coords.length)return !1;let r=1/0,u=1/0,o=-1/0,h=-1/0;i.forEachVertex(((t,e)=>{r=Math.min(r,t),u=Math.min(u,e),o=Math.max(o,t),h=Math.max(h,e);}));const d=e&n$2;return n(this._bounds,4*d+4,0),this._bounds[4*d]=r,this._bounds[4*d+1]=u,this._bounds[4*d+2]=o,this._bounds[4*d+3]=h,!0}}

export { M, d, r };
