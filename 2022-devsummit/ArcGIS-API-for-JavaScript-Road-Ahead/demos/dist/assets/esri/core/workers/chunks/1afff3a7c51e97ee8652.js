self.webpackChunkRemoteClient([61],{120:function(e,t,i){"use strict";var n,a=i(14),r=(i(4),i(3),i(6)),s=i(16),o=i(60),l=i(58),c=i(20),u=i(57),h=(i(24),i(37),i(38),i(56)),f=i(84),d=i(61),p=i(144),m=i(69),y=(i(64),i(73)),b=i(107),g=i(160);const x=new o.a({PNG:"png",PNG8:"png8",PNG24:"png24",PNG32:"png32",JPEG:"jpg",JPG:"jpg",DIB:"dib",TIFF:"tiff",EMF:"emf",PS:"ps",PDF:"pdf",GIF:"gif",SVG:"svg",SVGZ:"svgz",Mixed:"mixed",MIXED:"mixed",LERC:"lerc",LERC2D:"lerc2d",RAW:"raw",pbf:"pbf"});let v=n=class extends h.a{constructor(e){super(e),this.dpi=96,this.format=null,this.origin=null,this.minScale=0,this.maxScale=0,this.size=null,this.spatialReference=null}static create(e={size:256,spatialReference:d.a.WebMercator}){const t=e.resolutionFactor||1,i=e.scales,a=e.size||256,r=e.spatialReference||d.a.WebMercator;if(!Object(f.i)(r)){const e=[];if(i)for(let t=0;t<i.length;t++){const n=i[t];e.push({level:t,scale:n,resolution:n})}else{let t=5e-4;for(let i=23;i>=0;i--)e.unshift({level:i,scale:t,resolution:t}),t*=2}return new n({dpi:96,lods:e,origin:new m.a(0,0,r),size:[a,a],spatialReference:r})}const s=Object(f.d)(r),o=e.origin?new m.a({x:e.origin.x,y:e.origin.y,spatialReference:r}):new m.a(s?{x:s.origin[0],y:s.origin[1],spatialReference:r}:{x:0,y:0,spatialReference:r}),l=1/(39.37*Object(y.c)(r)*96),c=[];if(i)for(let e=0;e<i.length;e++){const t=i[e],n=t*l;c.push({level:e,scale:t,resolution:n})}else{let e=Object(f.f)(r)?512/a*591657527.5917094:256/a*591657527.591555;const i=Math.ceil(24/t);c.push({level:0,scale:e,resolution:e*l});for(let n=1;n<i;n++){const i=e/2**t,a=i*l;c.push({level:n,scale:i,resolution:a}),e=i}}return new n({dpi:96,lods:c,origin:o,size:[a,a],spatialReference:r})}get isWrappable(){const{spatialReference:e,origin:t}=this;if(e&&t){const i=Object(f.d)(e);return e.isWrappable&&Math.abs(i.origin[0]-t.x)<=i.dx}return!1}readOrigin(e,t){return m.a.fromJSON({spatialReference:t.spatialReference,...e})}set lods(e){let t=0,i=0;const n=[];this._levelToLOD={},e&&(t=-1/0,i=1/0,e.forEach(e=>{n.push(e.scale),t=e.scale>t?e.scale:t,i=e.scale<i?e.scale:i,this._levelToLOD[e.level]=e})),this._set("scales",n),this._set("minScale",t),this._set("maxScale",i),this._set("lods",e),this._initializeUpsampleLevels()}readSize(e,t){return[t.cols,t.rows]}writeSize(e,t){t.cols=e[0],t.rows=e[0]}zoomToScale(e){const t=this.scales;if(e<=0)return t[0];if(e>=t.length)return t[t.length-1];{const i=Math.round(e-.5),n=Math.round(e);return t[n]+(n-e)*(t[i]-t[n])}}scaleToZoom(e){const t=this.scales,i=t.length-1;let n=0;for(;n<i;n++){const i=t[n],a=t[n+1];if(i<=e)return n;if(a===e)return n+1;if(i>e&&a<e)return n+1-(e-a)/(i-a)}return n}snapScale(e,t=.95){const i=this.scaleToZoom(e);return i%Math.floor(i)>=t?this.zoomToScale(Math.ceil(i)):this.zoomToScale(Math.floor(i))}tileAt(e,t,i,n){const a=this.lodAt(e);if(!a)return null;let r,s;if("number"==typeof t)r=t,s=i;else if(Object(f.c)(t.spatialReference,this.spatialReference))r=t.x,s=t.y,n=i;else{const e=Object(p.d)(t,this.spatialReference);if(!e)return null;r=e.x,s=e.y,n=i}const o=a.resolution*this.size[0],l=a.resolution*this.size[1];return n||(n={id:null,level:0,row:0,col:0,extent:Object(b.d)()}),n.level=e,n.row=Math.floor((this.origin.y-s)/l+.001),n.col=Math.floor((r-this.origin.x)/o+.001),this.updateTileInfo(n),n}updateTileInfo(e,t=0){let i=this.lodAt(e.level);if(!i&&1===t){const t=this.lods[this.lods.length-1];t.level<e.level&&(i=t)}if(!i)return;const n=e.level-i.level,a=i.resolution*this.size[0]/2**n,r=i.resolution*this.size[1]/2**n;e.id=`${e.level}/${e.row}/${e.col}`,e.extent||(e.extent=Object(b.d)()),e.extent[0]=this.origin.x+e.col*a,e.extent[1]=this.origin.y-(e.row+1)*r,e.extent[2]=e.extent[0]+a,e.extent[3]=e.extent[1]+r}upsampleTile(e){const t=this._upsampleLevels[e.level];return!(!t||-1===t.parentLevel||(e.level=t.parentLevel,e.row=Math.floor(e.row/t.factor+.001),e.col=Math.floor(e.col/t.factor+.001),this.updateTileInfo(e),0))}getTileBounds(e,t){const{resolution:i}=this.lodAt(t.level),n=i*this.size[0],a=i*this.size[1];return e[0]=this.origin.x+t.col*n,e[1]=this.origin.y-(t.row+1)*a,e[2]=e[0]+n,e[3]=e[1]+a,e}lodAt(e){return this._levelToLOD&&this._levelToLOD[e]||null}clone(){return n.fromJSON(this.write({}))}_initializeUpsampleLevels(){const e=this.lods;this._upsampleLevels=[];let t=null;for(let i=0;i<e.length;i++){const n=e[i];this._upsampleLevels[n.level]={parentLevel:t?t.level:-1,factor:t?t.resolution/n.resolution:0},t=n}}};Object(a.a)([Object(s.b)({type:Number,json:{write:!0}})],v.prototype,"compressionQuality",void 0),Object(a.a)([Object(s.b)({type:Number,json:{write:!0}})],v.prototype,"dpi",void 0),Object(a.a)([Object(s.b)({type:String,json:{read:x.read,write:x.write,origins:{"web-scene":{read:!1,write:!1}}}})],v.prototype,"format",void 0),Object(a.a)([Object(s.b)({readOnly:!0})],v.prototype,"isWrappable",null),Object(a.a)([Object(s.b)({type:m.a,json:{write:!0}})],v.prototype,"origin",void 0),Object(a.a)([Object(l.a)("origin")],v.prototype,"readOrigin",null),Object(a.a)([Object(s.b)({type:[g.a],value:null,json:{write:!0}})],v.prototype,"lods",null),Object(a.a)([Object(s.b)({readOnly:!0})],v.prototype,"minScale",void 0),Object(a.a)([Object(s.b)({readOnly:!0})],v.prototype,"maxScale",void 0),Object(a.a)([Object(s.b)({readOnly:!0})],v.prototype,"scales",void 0),Object(a.a)([Object(s.b)({cast:e=>Array.isArray(e)?e:"number"==typeof e?[e,e]:[256,256]})],v.prototype,"size",void 0),Object(a.a)([Object(l.a)("size",["rows","cols"])],v.prototype,"readSize",null),Object(a.a)([Object(u.a)("size",{cols:{type:r.a},rows:{type:r.a}})],v.prototype,"writeSize",null),Object(a.a)([Object(s.b)({type:d.a,json:{write:!0}})],v.prototype,"spatialReference",void 0),v=n=Object(a.a)([Object(c.a)("esri.layers.support.TileInfo")],v);var w=v;t.a=w},160:function(e,t,i){"use strict";var n,a=i(14),r=(i(4),i(3),i(6)),s=i(16),o=i(20),l=(i(24),i(37),i(38),i(56));let c=n=class extends l.a{constructor(e){super(e),this.level=0,this.levelValue=null,this.resolution=0,this.scale=0}clone(){return new n({level:this.level,levelValue:this.levelValue,resolution:this.resolution,scale:this.scale})}};Object(a.a)([Object(s.b)({type:r.a,json:{write:!0}})],c.prototype,"level",void 0),Object(a.a)([Object(s.b)({type:String,json:{write:!0}})],c.prototype,"levelValue",void 0),Object(a.a)([Object(s.b)({type:Number,json:{write:!0}})],c.prototype,"resolution",void 0),Object(a.a)([Object(s.b)({type:Number,json:{write:!0}})],c.prototype,"scale",void 0),c=n=Object(a.a)([Object(o.a)("esri.layers.support.LOD")],c);var u=c;t.a=u},201:function(e,t,i){"use strict";var n=i(253);t.a=class{constructor(e,t){this._storage=new n.b,this._storage.maxSize=e,t&&this._storage.registerRemoveFunc("",t)}put(e,t,i){this._storage.put(e,t,i,1)}pop(e){return this._storage.pop(e)}get(e){return this._storage.get(e)}clear(){this._storage.clearAll()}destroy(){this._storage.destroy()}get maxSize(){return this._storage.maxSize}set maxSize(e){this._storage.maxSize=e}}},238:function(e,t,i){"use strict";i.d(t,"a",(function(){return I}));var n=i(14),a=(i(4),i(3)),r=i(16),s=i(78),o=i(20),l=i(17),c=i(24),u=(i(37),i(38),i(22)),h=i(2),f=i(43),d=i(26),p=i(55),m=i(136),y=i(42),b=i(201),g=i(7),x=i(27);class v{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),n=i%8,a=i>>3,r=this._tileAvailabilityBitSet;return a<0||a>r.length?"unknown":r[a]&1<<n?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let n=!0,a=!0;const r=Math.ceil(t*i/8),s=new Uint8Array(r);let o=0;for(let t=0;t<e.length;t++){const i=t%8;e[t]?(a=!1,s[o]|=1<<i):n=!1,7===i&&++o}a?this._allAvailability="unavailable":n?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=s,this.byteSize+=s.length)}static fromDefinition(e,t){const i=e.service.request||p.default,{row:n,col:a,width:r,height:s}=e,o={query:{f:"json"}};return t=t?{...o,...t}:o,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then(e=>e.data).catch(e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:n,left:a,width:r,height:s},valid:!0,data:Object(x.b)(r*s,0)};throw e}).then(e=>{if(e.location&&(e.location.top!==n||e.location.left!==a||e.location.width!==r||e.location.height!==s))throw new l.a("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:n,left:a,width:r,height:s}});return v.fromJSON(e)})}static fromJSON(e){v.validateJSON(e);const t=new v;return t.location=Object.freeze(Object(g.a)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static validateJSON(e){if(!e||!e.location)throw new l.a("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new l.a("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new l.a("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new l.a("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new l.a("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function w(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}var O;const j=a.a.getLogger("esri.layers.support.TilemapCache");let I=O=class extends d.a{constructor(e){super(e),this._handles=new m.a,this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2097152,this.request=p.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new b.a(this.cacheByteSize),this._handles.add([this.watch(["layer.parsedUrl","layer.tileServers?"],()=>this._initializeTilemapDefinition()),Object(y.a)(this,"layer.tileInfo.lods",e=>this._initializeAvailableLevels(e),!0)]),this._initializeTilemapDefinition()}destroy(){this._handles&&(this._handles.destroy(),this._handles=null)}castLevels(e){return e<=2?(j.error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,n){if(!this._availableLevels[e])return Promise.reject(new l.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const a=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,t,i,a);if(r)return Promise.resolve(r);const s=n&&n.signal;return n={...n,signal:null},new Promise((e,t)=>{Object(h.o)(s,()=>t(Object(h.e)()));const i=w(a);let r=this._pendingTilemapRequests[i];if(!r){r=v.fromDefinition(a,n).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)})}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const n=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return n?n.getAvailability(t,i):"unknown"}getAvailabilityUpsample(e,t,i,n){n.level=e,n.row=t,n.col=i;const a=this.layer.tileInfo;for(a.updateTileInfo(n);;){const e=this.getAvailability(n.level,n.row,n.col);if("unavailable"!==e)return e;if(!a.upsampleTile(n))return"unavailable"}}fetchAvailability(e,t,i,n){return this._availableLevels[e]?this.fetchTilemap(e,t,i,n).catch(e=>e).then(n=>{if(n instanceof v){const a=n.getAvailability(t,i);return"unavailable"===a?Promise.reject(new l.a("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):a}if(Object(h.l)(n))throw n;return"unknown"}):Promise.reject(new l.a("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,n,a){n.level=e,n.row=t,n.col=i;const r=this.layer.tileInfo;r.updateTileInfo(n);const s=this.fetchAvailability(e,t,i,a).catch(e=>{if(Object(h.l)(e))throw e;if(r.upsampleTile(n))return this.fetchAvailabilityUpsample(n.level,n.row,n.col,n);throw e});return this._fetchAvailabilityUpsamplePrefetch(n.id,e,t,i,a,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,n,a,r){if(!this._prefetchingEnabled)return;const s="prefetch-"+e;if(this._handles.has(s))return;const o=Object(h.d)();r.then(()=>o.abort(),()=>o.abort());let l=!1;const c={remove(){l||(l=!0,o.abort())}};if(this._handles.add(c,s),await Object(f.b)(10,o.signal).catch(()=>{}),l||(l=!0,this._handles.remove(s)),Object(h.m)(o))return;const u={id:e,level:t,row:i,col:n},d={...a,signal:o.signal},p=this.layer.tileInfo;for(let e=0;O._prefetches.length<O._maxPrefetch&&p.upsampleTile(u);++e){const e=this.fetchAvailability(u.level,u.row,u.col,d);O._prefetches.push(e);const t=()=>{O._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const e=this.layer.parsedUrl,t=e.query;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:t?Object(c.D)(t):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,n){n.level=e,n.row=t-t%this.size,n.col=i-i%this.size;const a=w(n);return this._tilemapCache.get(a)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach(e=>this._availableLevels[e.level]=!0)}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,n)=>!!e._tilemapFromCache(t,i,n,e._tmpTilemapDefinition)}}};I._maxPrefetch=4,I._prefetches=new u.a({initialSize:O._maxPrefetch}),Object(n.a)([Object(r.b)({constructOnly:!0,type:Number})],I.prototype,"levels",void 0),Object(n.a)([Object(s.a)("levels")],I.prototype,"castLevels",null),Object(n.a)([Object(r.b)({readOnly:!0,type:Number})],I.prototype,"size",null),Object(n.a)([Object(r.b)({constructOnly:!0,type:Number})],I.prototype,"cacheByteSize",void 0),Object(n.a)([Object(r.b)({constructOnly:!0})],I.prototype,"layer",void 0),Object(n.a)([Object(r.b)({constructOnly:!0})],I.prototype,"request",void 0),I=O=Object(n.a)([Object(o.a)("esri.layers.support.TilemapCache")],I)},273:function(e,t,i){"use strict";i.d(t,"a",(function(){return r})),i.d(t,"b",(function(){return a}));var n=i(120);const a={type:n.a,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:r}}}}};function r(e,t,i,a){if(!e)return null;const{minScale:r,maxScale:s,minLOD:o,maxLOD:l}=t;if(null!=o&&null!=l)return a&&a.ignoreMinMaxLOD?n.a.fromJSON(e):n.a.fromJSON({...e,lods:e.lods.filter(({level:e})=>null!=e&&e>=o&&e<=l)});if(0!==r&&0!==s){const t=e=>Math.round(1e4*e)/1e4,i=r?t(r):1/0,a=s?t(s):-1/0;return n.a.fromJSON({...e,lods:e.lods.filter(e=>{const n=t(e.scale);return n<=i&&n>=a})})}return n.a.fromJSON(e)}},414:function(e,t,i){"use strict";i.r(t);var n=i(14),a=(i(4),i(0)),r=i(3),s=i(6),o=i(16),l=i(60),c=i(59),u=i(58),h=i(20),f=i(17),d=i(24),p=(i(37),i(38),i(147)),m=i(88),y=i(85),b=i(74),g=i(101),x=i(127),v=i(401),w=i(125),O=i(97),j=i(151),I=i(110),_=i(237),S=i(217),T=i(84),R=i(61),C=i(62),M=(i(64),i(55)),k=i(152),z=i(120),P=i(482),F=i(521),D=i(533),A=i(488);const B=r.a.getLogger("esri.layers.mixins.ImageryTileMixin"),N=e=>{let t=class extends e{constructor(){super(...arguments),this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.fullExtent=null,this.interpolation="nearest",this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.tileInfo=null,this.symbolizer=null}set multidimensionalDefinition(e){this.raster&&(this._sliceId=this.raster.getSliceIndex(e)),this._set("multidimensionalDefinition",e)}set url(e){this._set("url",Object(k.g)(e,B))}set renderer(e){this._set("renderer",e),this.updateRenderer()}async updateRenderer(){if(!this.loaded)return;if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(this.renderer))return;const e=this._rasterJobHandler.instance;e&&(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.bind(),await e.updateSymbolizer(this.symbolizer),this._cachedRendererJson=this.renderer.toJSON())}async applyRenderer(e,t){const i=e&&e.pixelBlock;if(!(i&&i.pixels&&i.pixels.length>0))return null;let n;this.updateRenderer();const a=this._rasterJobHandler.instance,{bandIds:r}=this;return n=a?await a.symbolize({...e,simpleStretchParams:t,bandIds:r}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:r}),n}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t){if(!this.loaded)return null;const i=Object(T.d)(e);return z.a.create({size:256,spatialReference:e,origin:i?{x:i.origin[0],y:i.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,i,n={}){if(n.requestAsImageElement){const a=this.getTileUrl(e,t,i);return Object(M.default)(a,{responseType:"image",query:{sliceId:this._sliceId,_ts:n.timestamp},signal:n.signal}).then(e=>e.data)}await this._initJobHandler();const a="raster-shaded-relief"===this.renderer.type?{cols:1,rows:1}:null;if(this.multidimensionalDefinition){const e=this._sliceId;n={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,buffer:a,...n}}return this.raster.fetchTile(e,t,i,n)}async fetchPixels(e,t,i,n){if(await this._initJobHandler(),this.multidimensionalDefinition){const e=this._sliceId;n={multidimensionalDefinition:this.multidimensionalDefinition,sliceId:e,...n}}return this.raster.fetchPixels(e,t,i,n)}identify(e,t={}){return this.multidimensionalDefinition&&!t.multidimensionalDefinition&&(t={...t,multidimensionalDefinition:this.multidimensionalDefinition}),this.raster.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}_configDefaultSettings(){this._configDefaultInterpolation(),this._configDefaultSlice(),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new F.a;return this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.renderer&&this.updateRenderer()}).catch(()=>null),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this.raster.rasterJobHandler=null}_configDefaultInterpolation(){if(null==this.interpolation){var e;const t=Object(D.c)(this.rasterInfo,this.raster.tileType,null==(e=this.sourceJSON)?void 0:e.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultSlice(){const{multidimensionalInfo:e}=this.raster.rasterInfo;if(Object(a.h)(e)){if(!this.multidimensionalDefinition){const t=e.variables[0],i=[];t.dimensions.forEach(e=>{i.push(new P.a({variableName:t.name,dimensionName:e.name,values:e.hasRegularIntervals?e.extent[0]:e.values[0],isSlice:!0}))}),this.multidimensionalDefinition=i}this._sliceId=this.raster.getSliceIndex(this.multidimensionalDefinition)}}_configDefaultRenderer(){const e=this.raster.rasterInfo;var t,i;this.bandIds||(this.bandIds=Object(D.b)(e)),this.renderer||(this.renderer=Object(D.a)(e,{bandIds:this.bandIds,variableName:null==(t=this.multidimensionalDefinition)||null==(i=t[0])?void 0:i.variableName})),this.symbolizer?(this.symbolizer.rendererJSON=this.renderer.toJSON(),this.symbolizer.rasterInfo=e):this.symbolizer=new A.a({rendererJSON:this.renderer.toJSON(),rasterInfo:e}),this.symbolizer.bind()||B.warn("imagery-tile-mixin","The given renderer is not supported by the layer.")}};return Object(n.a)([Object(o.b)()],t.prototype,"_cachedRendererJson",void 0),Object(n.a)([Object(o.b)()],t.prototype,"_sliceId",void 0),Object(n.a)([Object(o.b)()],t.prototype,"_compatibleFullExtent",void 0),Object(n.a)([Object(o.b)()],t.prototype,"_rasterJobHandler",void 0),Object(n.a)([Object(o.b)()],t.prototype,"bandIds",void 0),Object(n.a)([Object(o.b)()],t.prototype,"copyright",void 0),Object(n.a)([Object(o.b)({type:C.a}),Object(S.a)("rasterInfo.extent")],t.prototype,"fullExtent",void 0),Object(n.a)([Object(o.b)()],t.prototype,"interpolation",void 0),Object(n.a)([Object(o.b)()],t.prototype,"ioConfig",void 0),Object(n.a)([Object(o.b)({type:[P.a]})],t.prototype,"multidimensionalDefinition",null),Object(n.a)([Object(o.b)()],t.prototype,"raster",void 0),Object(n.a)([Object(o.b)({readOnly:!0}),Object(S.a)("raster.rasterInfo")],t.prototype,"rasterInfo",void 0),Object(n.a)([Object(o.b)()],t.prototype,"sourceJSON",void 0),Object(n.a)([Object(o.b)({type:R.a}),Object(S.a)("rasterInfo.spatialReference")],t.prototype,"spatialReference",void 0),Object(n.a)([Object(o.b)({type:z.a}),Object(S.a)("rasterInfo.storageInfo.tileInfo")],t.prototype,"tileInfo",void 0),Object(n.a)([Object(o.b)(b.n)],t.prototype,"url",null),Object(n.a)([Object(o.b)({types:v.a})],t.prototype,"renderer",null),Object(n.a)([Object(o.b)()],t.prototype,"symbolizer",void 0),t=Object(n.a)([Object(h.a)("esri.layers.ImageryTileMixin")],t),t};var L=i(69),E=i(91),J=i(303),H=i(269),q=i(2),W=i(56),U=i(219),$=i(421),G=i(268),V=i(144),X=i(73),Y=i(321);const K=function(e,t){const i=(e.isWGS84||e.isWebMercator)&&(t.isWGS84||t.isWebMercator);return!(e.equals(t)||i)},Z={3395:20037508.342789244,3410:17334193.943686873,3832:3339584.723798206,3857:20037508.342788905,3975:17367530.445161372,4087:20037508.342789244,4088:20015108.787169147,6933:17367530.445161372,8858:7396237.374497803,8859:2465412.4581659334,32662:20037508.342789244,53001:20015086.79602057,53002:10007543.39801029,53003:20015086.79602057,53004:20015086.79602057,53016:14152803.599503474,53017:17333573.624304302,53025:7276828.3848298555,53031:10384677.558821043,53034:20015086.79602057,53036:7389443.187332862,53037:2463147.729110953,53079:20015114.352186374,53080:20015114.352186374,54001:20037508.342789244,54002:10018754.171394624,54003:20037508.342789244,54004:20037508.342789244,54016:14168658.027268292,54017:17367530.44516137,54025:7311399.09166516,54031:10396310.810074743,54034:20037508.342789244,54050:808820.9223376509,54053:1920897.3915568967,54079:20037508.342789244,54080:20037508.342789244,54099:13524439.768288724,54100:20037508.342789244,54101:20037508.342789244,102038:4297258.582585486,102299:5013965.117483125};function Q(e,t,i,n=null){if(e.spatialReference.equals(t))return e;const a=K(e.spatialReference,t);if(a&&!Object(Y.d)())throw new f.a("rasterprojectionhelper-projectResolution","projection engine is not loaded");const r=i.center,s=new C.a({xmin:r.x-e.x/2,xmax:r.x+e.x/2,ymin:r.y-e.y/2,ymax:r.y+e.y/2,spatialReference:e.spatialReference}),o=a?Object(Y.g)(s,t,n):Object(V.d)(s,t);return null==o?null:{x:o.xmax-o.xmin,y:o.ymax-o.ymin}}function ee(e,t=.01){return Object(X.c)(e)?t/Object(X.c)(e):0}function te(e,t,i=null,n=!0){const a=e.spatialReference;if(a.equals(t))return e;const r=K(a,t);if(r&&!Object(Y.d)())throw new f.a("rasterprojectionhelper-projectResolution","projection engine is not loaded");const s=r?Object(Y.g)(e,t,i):Object(V.d)(e,t);if(s&&n&&t.isGeographic){const[t,i]=se(a,!0),n=ee(a);n&&null!=t&&null!=i&&(Math.abs(e.x-t)<n&&Math.abs(180-s.x)<5e-4?s.x-=360:Math.abs(e.x-i)<n&&Math.abs(180+s.x)<5e-4&&(s.x+=360))}return s}function ie(e){const t=re(e[0].spatialReference);if(e.length<2||!Object(a.h)(t))return e[0];let{xmin:i,xmax:n,ymin:r,ymax:s}=e[0];for(let i=1;i<e.length;i++){const a=e[i];n=a.xmax+t*i,r=Math.min(r,a.ymin),s=Math.max(s,a.ymax)}return new C.a({xmin:i,xmax:n,ymin:r,ymax:s,spatialReference:e[0].spatialReference})}function ne(e,t,i=null,n=!0){if(e.spatialReference.equals(t))return e;const r=le(e),s=re(e.spatialReference,!0);return Object(a.h)(s)&&0!==r?ie(e.clone().normalize().map(e=>ae(e,t,i,n))):ae(e,t,i,n)}function ae(e,t,i=null,n=!0){const a=e.spatialReference;if(a.equals(t))return e;const r=K(a,t);if(r&&!Object(Y.d)())throw new f.a("rasterprojectionhelper-projectExtent","projection engine is not loaded");const s=r?Object(Y.g)(e,t,i):Object(V.d)(e,t);let[o,l]=se(a,!0);if(s&&n&&a.isWebMercator&&t.isGeographic&&null!=o&&null!=l){const n=.001,r=1e3;if(Math.abs(e.xmin-o)<n&&Math.abs(l-e.xmax)>r&&Math.abs(180-s.xmax)<5e-4){s.xmin=-180;const n=[];n.push(new L.a(e.xmax,e.ymin,a)),n.push(new L.a(e.xmax,(e.ymin+e.ymax)/2,a)),n.push(new L.a(e.xmax,e.ymax,a));const r=n.map(e=>te(e,t,i)).filter(e=>!isNaN(null==e?void 0:e.x)).map(e=>e.x);s.xmax=Math.max.apply(null,r)}if(Math.abs(e.xmax-l)<n&&Math.abs(o-e.xmin)>r&&Math.abs(180+s.xmin)<5e-4){s.xmax=180;const n=[];n.push(new L.a(e.xmin,e.ymin,a)),n.push(new L.a(e.xmin,(e.ymin+e.ymax)/2,a)),n.push(new L.a(e.xmin,e.ymax,a));const r=n.map(e=>te(e,t,i)).filter(e=>!isNaN(null==e?void 0:e.x)).map(e=>e.x);s.xmin=Math.min.apply(null,r)}}[o,l]=se(t,!0);const c=ee(t);return c&&null!=o&&null!=l&&(Math.abs(s.xmin-o)<c&&(s.xmin=o),Math.abs(s.xmax-l)<c&&(s.xmax=l)),s}function re(e,t=!1){const i=t?20037508.342787:20037508.342788905;return e.isWebMercator?2*i:e.wkid&&e.isGeographic?360:2*Z[e.wkid]||null}function se(e,t=!1){const i=[],n=re(e,t);return Object(a.h)(n)&&(i.push(-n/2),i.push(n/2)),i}function oe(e,t,i,n){let a=(e-t)/i;return a-Math.floor(a)!=0?a=Math.floor(a):n&&(a-=1),a}function le(e,t=!1){const i=re(e.spatialReference);if(!Object(a.h)(i))return 0;const n=t?0:-i/2;return oe(e.xmax,n,i,!0)-oe(e.xmin,n,i,!1)}function ce(e,t,i,n=null,r=null,s=!1,o=[32,32]){if(K(e.spatialReference,t.spatialReference)&&!Object(Y.d)())throw new f.a("rasterprojectionhelper-projectResolution","projection engine is not loaded");if(!(e&&t&&i))return null;const{xmin:l,ymin:c,xmax:u,ymax:h}=e,d=e.spatialReference,p=t.spatialReference,m=re(p);s=s||"gcs-shift"===(null==r?void 0:r.type);const y={x:o[0]*i.x,y:o[1]*i.y},b={cols:Math.ceil((u-l)/y.x-.1)+1,rows:Math.ceil((h-c)/y.y-.1)+1},g=y.x,x=y.y,v=[];let w,O=!1;for(let e=0;e<b.cols;e++){const i=[];for(let o=0;o<b.rows;o++){let c=te(new L.a({x:l+g*e,y:h-x*o,spatialReference:d}),p,n);r&&(c=r.inverseTransform(c)),i.push(c),e>0&&s&&c&&w[o]&&Object(a.h)(m)&&c.x<w[o].x&&(c.x+=m),c?(v.push((c.x-t.xmin)/(t.xmax-t.xmin)),v.push((t.ymax-c.y)/(t.ymax-t.ymin))):(v.push(NaN),v.push(NaN),O=!0)}w=i}const j=function(e,t){const i=(e[0]+e[4]+e[4*t.cols]+e[4*t.cols+4])/4,n=(e[1]+e[5]+e[4*t.rows+1]+e[4*t.rows+5])/4;return[Math.abs(i-e[2*t.rows+2]),Math.abs(n-e[2*t.rows+3])]}(v,b),I=new Float32Array((b.cols-1)*(b.rows-1)*2*6),_=new Float32Array([-0,-1,1,-1,1,-0,1,-0,-0]),S=new Float32Array([-1,1,0,0,-1,1,1,0,0]);for(let e=0;e<b.cols-1;e++){for(let t=0;t<b.rows-1;t++){let i=e*b.rows*2+2*t;const n=v[i],a=v[i+1],r=v[i+2],s=v[i+3];i+=2*b.rows;const o=v[i],l=v[i+1],c=v[i+2],u=v[i+3];let h=0,f=12*(t*(b.cols-1)+e);for(let e=0;e<3;e++)I[f++]=_[h++]*n+_[h++]*r+_[h++]*c;h=0;for(let e=0;e<3;e++)I[f++]=_[h++]*a+_[h++]*s+_[h++]*u;h=0;for(let e=0;e<3;e++)I[f++]=S[h++]*n+S[h++]*o+S[h++]*c;h=0;for(let e=0;e<3;e++)I[f++]=S[h++]*a+S[h++]*l+S[h++]*u}if(O)for(let e=0;e<I.length;e++)isNaN(I[e])&&(I[e]=-1)}return{offsets:v,error:j,coefficients:I,spacing:o,size:[b.cols-1,b.rows-1]}}function ue(e,t,i){const n=Math.log(e.x/t.pixelSize.x)/Math.LN2,a=Math.log(e.y/t.pixelSize.y)/Math.LN2,r=t.storageInfo.maximumPyramidLevel||0;let s="down"===i?Math.floor(Math.min(n,a)):"up"===i?Math.ceil(Math.max(n,a)):Math.round((n+a)/2),o=!1;s<0?s=0:s>r&&(o=s>r+3,s=r);const l=2**s;return{pyramidLevel:s,pyramidResolution:new L.a({x:l*t.nativePixelSize.x,y:l*t.nativePixelSize.y,spatialReference:t.spatialReference}),excessiveReading:o}}var he=class{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.refCount--,e.refCount<=0&&(n.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){const i=e+"/"+t,n=this._cachedBlocks;if(n.has(i)){const e=n.get(i);return e.ts=Date.now(),e.refCount++,n.delete(i),n.set(i,e),e.block}return null}putBlock(e,t,i,n=null){const a=this._cachedBlocks,r=e+"/"+t;if(a.has(r)){const e=a.get(r);e.ts=Date.now(),e.refCount++}else a.set(r,{block:i,ts:Date.now(),refCount:1,controller:n});this.trim(),this.updateTimer()}deleteBlock(e,t){const i=this._cachedBlocks,n=e+"/"+t;i.has(n)&&i.delete(n)}updateMaxSize(e){this._size=e,this.trim()}empty(){this._cachedBlocks.clear(),this.clearTimer()}getCurrentSize(){return this._cachedBlocks.size}updateTimer(){if(null!=this._timer)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const t=Array.from(e),i=Date.now();for(let n=0;n<t.length&&t[n][1].ts<=i-this._duration;n++)e.delete(t[n][0]);0===e.size&&this.clearTimer()},this._interval)}trim(){const e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;const t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}};const fe=new Map,de=new he;function pe(e,t){return null==t?e:`${e}?sliceId=${t}`}function me(e,t,i){if(!fe.has(e))return null==t?de.getBlock(e,i):null;const n=fe.get(e);if(null==n[t]){for(let e=0;e<n.length;e++)if(n[e]&&n[e].cache.has(i)){const t=n[e].cache.get(i);return t.refCount++,t.block}return de.getBlock(e,i)}const a=n[t].cache;if(a.has(i)){const e=a.get(i);return e.refCount++,e.block}for(let e=0;e<n.length;e++)if(e!==t&&n[e]&&n[e]&&n[e].cache.has(i)){const t=n[e].cache.get(i);return t.refCount++,a.set(i,t),t.block}return null}function ye(e,t,i,n,a=null){if(!fe.has(e))return void(null==t&&de.putBlock(e,i,n,a));const r=fe.get(e);if(null==r[t])return void de.putBlock(e,i,n,a);const s={refCount:1,block:n,isResolved:!1,isRejected:!1,controller:a};n.then(()=>s.isResolved=!0).catch(()=>s.isRejected=!0),r[t].cache.set(i,s)}let be=class extends(Object(U.b)(W.a)){constructor(){super(...arguments),this.rasterJobHandler=null,this.datasetName=null,this.datasetFormat=null,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=async function(){if(Object(Y.d)()||!Object(Y.e)())return null;await Object(Y.f)()}();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e&&e.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:z.a.create(),...e.ioConfig}}),e}set url(e){this._set("url",Object(k.g)(e,r.a.getLogger(this.declaredClass)))}async open(e){throw new f.a("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,n={}){var r;const{tileInfo:s}=n,o=s.lodAt(e),l=this.getTileExtent({x:o.resolution,y:o.resolution},t,i,s.origin,s.spatialReference,s.size);return null!=(r=n.multidimensionalDefinition)&&r.length&&Object(a.h)(this.rasterInfo.multidimensionalInfo)&&null==n.sliceId&&(n={...n,sliceId:this.getSliceIndex(n.multidimensionalDefinition)||0}),this.fetchPixels(l,s.size[0],s.size[1],n)}async identify(e,t={}){const{spatialReference:i,extent:n}=this.rasterInfo,{datumTransformation:r}=t;let s=te(e,i,r);if(!n.intersects(s))return{location:s,value:null};if(Object(a.h)(this.rasterInfo.transform)){const e=this.rasterInfo.transform.inverseTransform(s);if(!this.rasterInfo.nativeExtent.intersects(e))return{location:e,value:null};s=e}let o=0;if(t.srcResolution)o=ue(t.srcResolution,this.rasterInfo,this.ioConfig.sampling).pyramidLevel;else if(o=await this.computeBestPyramidLevelForLocation(e,t),null==o)return{location:s,value:null};const l=this.identifyPixelLocation(s,o,null);if(null===l)return{location:s,value:null};const{row:c,col:u,rowOffset:h,colOffset:f}=l,d=pe(this.url,t.sliceId),p=`${o}/${c}/${u}`;let m=me(d,null,p);Object(a.h)(m)||(m=this.fetchRawTile(o,c,u,t),ye(d,null,p,m));const y=await m;if(!(y&&y.pixels&&y.pixels.length>0))return{location:s,value:null};const b=h*this.rasterInfo.storageInfo.blockHeight+f;return{location:s,value:!y.mask||y.mask[b]?y.pixels.map(e=>e[b]):null,pyramidLevel:o}}async fetchPixels(e,t,i,n={}){const r=le(e=function(e){const t=e.clone().normalize();return 1===t.length?t[0]:ie(t)}(e)),s=this.rasterInfo.spatialReference,o=!e.spatialReference.equals(s),{datumTransformation:l}=n,c=new L.a({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),u=n.srcResolution||(o?Q(c,s,e,l):c);if(!u)return null;const{pyramidLevel:h,pyramidResolution:f,excessiveReading:d}=ue(u,this.rasterInfo,this.ioConfig.sampling);if(d)return null;const p=this.rasterInfo.storageInfo;let m=o?ne(e,s,l):e;const y=Object(a.n)(this.rasterInfo.transform);if(y&&(m=y.inverseTransform(m)),null==m)return null;const b={x:Math.floor((m.xmin-p.origin.x)/f.x+.1),y:Math.floor((p.origin.y-m.ymax)/f.y+.1)},g=Math.ceil((m.xmax-m.xmin)/f.x-.1),x=Math.ceil((m.ymax-m.ymin)/f.y-.1);if(g/t>8||x/i>8||r>=2)return null;const v=await this.fetchRawPixels(h,b,{width:g,height:x,wrapCount:r},n);if(!v)return null;const w=h>0?p.pyramidBlockWidth:p.blockWidth,O=h>0?p.pyramidBlockHeight:p.blockHeight;if(!o&&1===v.pixelBlocks.length&&w===t&&O===i&&u.x===c.x&&u.y===c.y)return{extent:e,srcExtent:m,pixelBlock:v.pixelBlocks[0]};const j=ce(e,v.extent,c,l,y,r>0);let I;const _=!n.requestRawData,S={rows:j.spacing[0],cols:j.spacing[1]},T=Object(a.n)(this._getRasterTileAlignmentInfo(h,v.extent.xmin)),{pixelBlocks:R,mosaicSize:C,isPartiallyFilled:M}=v;if(this.rasterJobHandler)I=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:R,srcMosaicSize:C,destDimension:_?{width:t,height:i}:null,coefs:_?j.coefficients:null,sampleSpacing:_?S:null,interpolation:n.interpolation,alignmentInfo:T},n);else{const e=Object(G.j)(R,C,null,null,T);I=_?Object(G.a)(e,{width:t,height:i},j.coefficients,S,n.interpolation):e}return n.requestRawData?{srcExtent:m,pixelBlock:I,transformGrid:j,extent:e,isPartiallyFilled:M}:{srcExtent:m,extent:e,pixelBlock:I}}async fetchRawPixels(e,t,i,n){const{origin:r,blockBoundary:s}=this.rasterInfo.storageInfo,{blockWidth:o,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:u}=t,{width:h,height:f,wrapCount:d}=i;const p=Object(a.n)(this._getRasterTileAlignmentInfo(e,0));n.buffer&&(c-=n.buffer.cols,u-=n.buffer.rows,h+=2*n.buffer.cols,f+=2*n.buffer.rows);const m=Math.floor(c/o),y=Math.floor(u/l),b=Math.floor((c+h-1)/o),g=Math.floor((u+f-1)/l),x=s[e];if(!x)return null;const{minRow:v,minCol:w,maxCol:O,maxRow:j}=x;if(g<v||b<w||y>j||m>O)return null;const I=[];let _,S=!1;for(let t=y;t<=g;t++)for(let i=m;i<=b;i++){const a=0===d||null==p||i<p.worldColumnCountFromOrigin?i:i%p.worldColumnCountFromOrigin-p.originColumnOffset;t>=v&&a>=w&&j>=t&&O>=a?(_=this._fetchRawTile(e,t,a,n),this.ioConfig.allowPartialFill&&(_=new Promise(e=>{_.then(t=>e(t)).catch(()=>{S=!0,e(null)})})),I.push(_)):I.push(null)}if(0===I.length)return null;const T=await Promise.all(I),R={height:(g-y+1)*o,width:(b-m+1)*l},{nativePixelSize:M,spatialReference:k}=this.rasterInfo,z=M.x*2**e,P=M.y*2**e;return{extent:new C.a({xmin:r.x+m*o*z,xmax:r.x+(b+1)*o*z,ymin:r.y-(g+1)*l*P,ymax:r.y-y*l*P,spatialReference:k}),pixelBlocks:T,mosaicSize:R,isPartiallyFilled:S}}async fetchRawTile(e,t,i,n){throw new f.a("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return ne(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?Object($.a)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i){var n,a;const{customFetchParameters:r}=this.ioConfig,{range:s,query:o,headers:l}=t;i=null!=(n=null!=(a=i)?a:t.retryCount)?n:this.ioConfig.retryCount;const c=s?{Range:`bytes=${s.from}-${s.to}`}:null;try{return await Object(M.default)(e,{...t,query:{...o,...r},headers:{...l,...c}})}catch(n){if(i>0)return i--,this.request(e,t,i);throw n}}getSliceIndex(e){const{multidimensionalInfo:t}=this.rasterInfo;if(!Object(a.h)(t)||null==e||!e.length)return null;let i=0;const n=e[0].variableName;for(let a=0;a<t.variables.length;a++){const r=t.variables[a],s=r.dimensions;if(r.name!==n){i+=s.map(e=>this._getDimensionValuesCount(e)).reduce((e,t)=>e+t);break}const o=s.map(e=>this._getDimensionValuesCount(e)),l=s.length;for(let t=0;t<l;t++){const n=e.filter(e=>e.dimensionName===s[t].name)[0];if(null==n)return null;const a=Array.isArray(n.values[0])?n.values[0][0]:n.values[0],r=this._getIndexFromDimensions(a,s[t]);if(-1===r)return null;o.shift(),i+=t===l-1?r:r*o.reduce((e,t)=>e+t)}}return i}updateTileInfo(){const{storageInfo:e,spatialReference:t,extent:i,pixelSize:n}=this.rasterInfo;if(!e.tileInfo){const a=[],r=e.maximumPyramidLevel||0;let s=Math.max(n.x,n.y),o=1/.0254*96*s;for(let e=0;e<=r;e++)a.push({level:r-e,resolution:s,scale:o}),s*=2,o*=2;const l=new L.a({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new z.a({origin:l,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:a}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,n){const{width:a,height:r,nativeExtent:s,pixelSize:o,spatialReference:l}=e,c=new L.a({x:s.xmin,y:s.ymax,spatialReference:l});null==n&&(n=Math.max(0,Math.round(Math.log(Math.max(a,r))/Math.LN2-8)));const u=this._computeBlockBoundary(s,o,n,512,512);e.storageInfo=new J.a({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:n,blockBoundary:u})}async computeBestPyramidLevelForLocation(e,t={}){return 0}identifyPixelLocation(e,t,i){const{spatialReference:n,nativePixelSize:a,nativeExtent:r}=this.rasterInfo,{blockWidth:s,blockHeight:o,maximumPyramidLevel:l,pyramidScalingFactor:c,origin:u}=this.rasterInfo.storageInfo,h=te(e,n,i);if(!r.intersects(h))return null;if(t<0||t>l)return null;const f=c**t,d=f*a.x,p=f*a.y,m=(u.y-h.y)/p/o,y=(h.x-u.x)/d/s,b=Math.min(o-1,Math.floor((m-Math.floor(m))*o)),g=Math.min(s-1,Math.floor((y-Math.floor(y))*s));return{pyramidLevel:t,row:Math.floor(m),col:Math.floor(y),rowOffset:b,colOffset:g,srcLocation:h}}getTileExtent(e,t,i,n,a,r){const[s,o]=r,l=n.x+i*s*e.x,c=l+s*e.x,u=n.y-t*o*e.y,h=u-o*e.y;return new C.a({xmin:l,xmax:c,ymin:h,ymax:u,spatialReference:a})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){const n=this.rasterInfo.storageInfo.blockBoundary[e];return!n||n.maxRow<t||n.maxCol<i||n.minRow>t||n.minCol>i}_computeBlockBoundary(e,t,i,n,a){let{x:r,y:s}=t;const o=e.xmin,l=e.ymax,c=[{minCol:Math.floor((e.xmin-o+.1*r)/n/r),maxCol:Math.floor((e.xmax-o-.1*r)/n/r),minRow:Math.floor((l-e.ymax+.1*s)/a/s),maxRow:Math.floor((l-e.ymin-.1*s)/a/s)}];if(i>0)for(let t=0;t<i;t++)r*=2,s*=2,c.push({minCol:Math.floor((e.xmin-o+.1*r)/n/r),maxCol:Math.floor((e.xmax-o-.1*r)/n/r),minRow:Math.floor((l-e.ymax+.1*s)/a/r),maxRow:Math.floor((l-e.ymin-.1*s)/a/r)});return c}_fetchRawTile(e,t,i,n){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:s,minCol:o,maxCol:l,maxRow:c}=r;if(t<s||i<o||t>c||i>l)return Promise.resolve(null);const u=pe(this.url,n.sliceId),h=`${e}/${t}/${i}`;let f=me(u,n.registryId,h);if(!Object(a.h)(f)){const a=Object(q.d)();f=this.fetchRawTile(e,t,i,{...n,signal:a.signal}),ye(u,n.registryId,h,f,a),f.catch(()=>{!function(e,t,i){if(!fe.has(e))return void(null==t&&de.deleteBlock(e,i));const n=fe.get(e);null!=n[t]?n[t].cache.delete(i):de.deleteBlock(e,i)}(u,n.registryId,h)})}return n.signal&&Object(q.o)(n,()=>{!function(e,t,i){if(!fe.has(e))return null==t?de.decreaseRefCount(e,i):0;const n=fe.get(e);if(null==n[t])return de.decreaseRefCount(e,i);const a=n[t].cache;if(a.has(i)){const e=a.get(i);if(e.refCount--,0===e.refCount){a.delete(i);for(let e=0;e<n.length;e++)n[e]&&n[e].cache.has(i)&&n[e].cache.delete(i);e.controller&&e.controller.abort()}return e.refCount}}(u,n.registryId,h)}),f}_getIndexFromDimensions(e,t){const{extent:i,interval:n,unit:a,values:r}=t;if(null!=r&&r.length)return Array.isArray(r[0])?r.findIndex(t=>t[0]<=e&&t[1]>=e):r.indexOf(e);if(e>i[1])return-1;const s=i[0];let o=-1;if("ISO8601"===a){var l;switch((null==(l=t.intervalUnit)?void 0:l.toLowerCase())||"seconds"){case"seconds":o=Math.round((e-s)/1e3/n);break;case"minutes":o=Math.round((e-s)/6e4/n);break;case"hours":o=Math.round((e-s)/36e5/n);break;case"days":o=Math.round((e-s)/864e5/n);break;case"years":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/n);break;case"decades":o=Math.round((new Date(e).getUTCFullYear()-new Date(s).getUTCFullYear())/10/n)}return o}return Math.round((e-s)/n)}_getDimensionValuesCount(e){const{extent:t,interval:i,unit:n,values:a}=e;let r=(null==a?void 0:a.length)||0;if(r)return r;const s=t[0];if(0===r&&"ISO8601"===n){var o;switch((null==(o=e.intervalUnit)?void 0:o.toLowerCase())||"seconds"){case"seconds":r=Math.round((t[1]-t[0])/1e3/i);break;case"minutes":r=Math.round((t[1]-t[0])/6e4/i);break;case"hours":r=Math.round((t[1]-t[0])/36e5/i);break;case"days":r=Math.round((t[1]-t[0])/864e5/i);break;case"years":r=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/i);break;case"decades":r=Math.round((new Date(t[1]).getUTCFullYear()-new Date(s).getUTCFullYear())/10/i)}return r}return Math.round((t[1]-t[0])/i)}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=function(e){const t=e.storageInfo.origin.x,i=re(e.spatialReference,!0);if(!Object(a.h)(i))return{originX:t,halfWorldWidth:null,pyramidsInfo:null};const n=i/2,{spatialReference:r,nativePixelSize:s,storageInfo:o,extent:l}=e,{maximumPyramidLevel:c,blockWidth:u,pyramidScalingFactor:h}=o;let f=s.x;const d=[];for(let e=0;e<=c;e++){const e=(l.xmax-t)/f/u,a=e-Math.floor(e)==0?e:Math.ceil(e),r=(i/2-t)/f/u,s=r-Math.floor(r)==0?r:Math.ceil(r),o=Math.floor((t+n)/f/u),c=Math.round((t+n)/f)%u,p=(u-Math.round((i-t)/f)%u)%u;d.push({resolutionX:f,blockWidth:u,datsetColumnCount:a,worldColumnCountFromOrigin:s,leftMargin:c,rightPadding:p,originColumnOffset:o}),f*=h}return{originX:t,halfWorldWidth:Object(a.n)(re(r))/2,pyramidsInfo:d}}(this.rasterInfo)),Object(a.h)(this._rasterTileAlighmentInfo.pyramidsInfo)?{startX:t,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}:null}};Object(n.a)([Object(o.b)()],be.prototype,"_rasterTileAlighmentInfo",void 0),Object(n.a)([Object(o.b)(b.n)],be.prototype,"url",null),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],be.prototype,"datasetName",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],be.prototype,"datasetFormat",void 0),Object(n.a)([Object(o.b)()],be.prototype,"rasterInfo",void 0),Object(n.a)([Object(o.b)()],be.prototype,"ioConfig",void 0),Object(n.a)([Object(o.b)()],be.prototype,"sourceJSON",void 0),be=Object(n.a)([Object(h.a)("esri.layers.support.rasterDatasets.BaseRaster")],be);var ge=be,xe=i(502);function ve(e){const t=e.fields,i=e.records,n=t.some(e=>"oid"===e.name.toLowerCase())?"OBJECTID":"OID",a=[{name:n,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name}))),r=a.map(e=>e.name),s=[];let o=0,l=0;return i.forEach(e=>{const t={};for(t[n]=o++,l=1;l<r.length;l++)t[r[l]]=e[l-1];s.push({attributes:t})}),{displayFieldName:"",fields:a,features:s}}var we=class{static get supportedVersions(){return[5]}static parse(e){const t=new DataView(e),i=3&t.getUint8(0);if(3!==i)return{header:{version:i},recordSet:null};const n=t.getUint32(4,!0),a=t.getUint16(8,!0),r=t.getUint16(10,!0),s={version:i,recordCount:n,headerByteCount:a,recordByteCount:r};let o=32;const l=[],c=[];let u;if(3===i){for(;13!==t.getUint8(o);)u=String.fromCharCode(t.getUint8(o+11)).trim(),l.push({name:Object(xe.a)(new Uint8Array(e,o,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:t.getUint8(o+16)}),o+=32;if(o+=1,l.length>0)for(;c.length<n&&e.byteLength-o>r;){const i=[];32===t.getUint8(o)?(o+=1,l.forEach(t=>{if("C"===t.type)i.push(Object(xe.a)(new Uint8Array(e,o,t.length)).trim());else if("N"===t.type)i.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim(),10));else if("F"===t.type)i.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim()));else if("D"===t.type){const n=String.fromCharCode.apply(null,new Uint8Array(e,o,t.length)).trim();i.push(new Date(parseInt(n.substring(0,4),10),parseInt(n.substring(4,6),10)-1,parseInt(n.substring(6,8),10)))}o+=t.length}),c.push(i)):o+=r}}return{header:s,fields:l,records:c,recordSet:ve({fields:l,records:c})}}};let Oe=class extends W.a{constructor(){super(...arguments),this.affectsPixelSize=!1}forwardTransform(e){return e}inverseTransform(e){return e}};Object(n.a)([Object(o.b)()],Oe.prototype,"affectsPixelSize",void 0),Object(n.a)([Object(o.b)({json:{write:!0}})],Oe.prototype,"spatialReference",void 0),Oe=Object(n.a)([Object(h.a)("esri.layers.support.rasterTransforms.BaseRasterTransform")],Oe);var je=Oe;let Ie=class extends je{constructor(){super(...arguments),this.type="identity"}};Object(n.a)([Object(c.a)({IdentityXform:"identity"})],Ie.prototype,"type",void 0),Ie=Object(n.a)([Object(h.a)("esri.layers.support.rasterTransforms.IdentityTransform")],Ie);var _e=Ie,Se=i(57);function Te(e,t,i){const{x:n,y:a}=t;if(i<2)return{x:e[0]+n*e[2]+a*e[4],y:e[1]+n*e[3]+a*e[5]};if(2===i){const t=n*n,i=a*a,r=n*a;return{x:e[0]+n*e[2]+a*e[4]+t*e[6]+r*e[8]+i*e[10],y:e[1]+n*e[3]+a*e[5]+t*e[7]+r*e[9]+i*e[11]}}const r=n*n,s=a*a,o=n*a,l=r*n,c=r*a,u=n*s,h=a*s;return{x:e[0]+n*e[2]+a*e[4]+r*e[6]+o*e[8]+s*e[10]+l*e[12]+c*e[14]+u*e[16]+h*e[18],y:e[1]+n*e[3]+a*e[5]+r*e[7]+o*e[9]+s*e[11]+l*e[13]+c*e[15]+u*e[17]+h*e[19]}}function Re(e,t,i){const{xmin:n,ymin:a,xmax:r,ymax:s,spatialReference:o}=t;let l=[];if(i<2)l.push({x:n,y:s}),l.push({x:r,y:s}),l.push({x:n,y:a}),l.push({x:r,y:a});else{let e=10;for(let t=0;t<e;t++)l.push({x:n,y:a+(s-a)*t/(e-1)}),l.push({x:r,y:a+(s-a)*t/(e-1)});e=8;for(let t=1;t<=e;t++)l.push({x:n+(r-n)*t/e,y:a}),l.push({x:n+(r-n)*t/e,y:s})}l=l.map(t=>Te(e,t,i));const c=l.map(e=>e.x),u=l.map(e=>e.y);return new C.a({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,u),ymax:Math.max.apply(null,u),spatialReference:o})}let Ce=class extends je{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,t){const{coeffX:i,coeffY:n}=t;if(null==i||!i.length||null==n||!n.length||i.length!==n.length)return null;const a=[];for(let e=0;e<i.length;e++)a.push(i[e]),a.push(n[e]);return a}writeForwardCoefficients(e,t,i){const n=[],a=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?n.push(e[t]):a.push(e[t]);t.coeffX=n,t.coeffY=a}get inverseCoefficients(){let e=this._get("inverseCoefficients");const t=this._get("forwardCoefficients");return!e&&t&&this.polynomialOrder<2&&(e=function(e){const[t,i,n,a,r,s]=e,o=n*s-r*a,l=r*a-n*s;return[(r*i-t*s)/o,(n*i-t*a)/l,s/o,a/l,-r/o,-n/l]}(t)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,t){const{inverseCoeffX:i,inverseCoeffY:n}=t;if(null==i||!i.length||null==n||!n.length||i.length!==n.length)return null;const a=[];for(let e=0;e<i.length;e++)a.push(i[e]),a.push(n[e]);return a}writeInverseCoefficients(e,t,i){const n=[],a=[];for(let t=0;t<(null==e?void 0:e.length);t++)t%2==0?n.push(e[t]):a.push(e[t]);t.inverseCoeffX=n,t.inverseCoeffY=a}forwardTransform(e){if("point"===e.type){const t=Te(this.forwardCoefficients,e,this.polynomialOrder);return new L.a({x:t.x,y:t.y,spatialReference:e.spatialReference})}return Re(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if("point"===e.type){const t=Te(this.inverseCoefficients,e,this.polynomialOrder);return new L.a({x:t.x,y:t.y,spatialReference:e.spatialReference})}return Re(this.inverseCoefficients,e,this.polynomialOrder)}};Object(n.a)([Object(o.b)({json:{write:!0}})],Ce.prototype,"polynomialOrder",void 0),Object(n.a)([Object(o.b)()],Ce.prototype,"forwardCoefficients",void 0),Object(n.a)([Object(u.a)("forwardCoefficients",["coeffX","coeffY"])],Ce.prototype,"readForwardCoefficients",null),Object(n.a)([Object(Se.a)("forwardCoefficients")],Ce.prototype,"writeForwardCoefficients",null),Object(n.a)([Object(o.b)({json:{write:!0}})],Ce.prototype,"inverseCoefficients",null),Object(n.a)([Object(u.a)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],Ce.prototype,"readInverseCoefficients",null),Object(n.a)([Object(Se.a)("inverseCoefficients")],Ce.prototype,"writeInverseCoefficients",null),Object(n.a)([Object(o.b)()],Ce.prototype,"affectsPixelSize",void 0),Object(n.a)([Object(c.a)({PolynomialXform:"polynomial"})],Ce.prototype,"type",void 0),Ce=Object(n.a)([Object(h.a)("esri.layers.support.rasterTransforms.PolynomialTransform")],Ce);var Me=Ce;const ke={PolynomialXform:Me,IdentityXform:_e},ze=Object.keys(ke);const Pe=new Map;Pe.set("int16","esriFieldTypeSmallInteger"),Pe.set("int32","esriFieldTypeInteger"),Pe.set("int64","esriFieldTypeInteger"),Pe.set("float32","esriFieldTypeSingle"),Pe.set("float64","esriFieldTypeDouble"),Pe.set("text","esriFieldTypeString");let Fe=class extends ge{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:t}=await this.request(this.url+"/conf.json",{signal:null==e?void 0:e.signal});if(!this._validateHeader(t))throw new f.a("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:i,rasterInfo:n}=this._parseHeader(t);if("thematic"===n.dataType){const e=await this._fetchAuxiliaryInformation();n.attributeTable=e}this._set("storageInfo",i),this._set("rasterInfo",n),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,t,i,n={}){const a=this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(a<0)return null;const r=this._buildCacheFilePath(a,t,i,n.multidimensionalDefinition),s=this._getIndexRecordFromBundle(t,i),o=await this.request(r,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:n.signal});if(!o)return null;const l=new Uint8Array(o.data),c=this._getTileEndAndContentType(l,s);if(0===c.recordSize)return null;const u=await this.request(r,{range:{from:c.position,to:c.position+c.recordSize},responseType:"array-buffer",signal:n.signal});return u?this.decodePixelBlock(u.data,{width:this.rasterInfo.storageInfo.tileInfo.size[0],height:this.rasterInfo.storageInfo.tileInfo.size[1],planes:null,pixelType:null}):null}_validateHeader(e){return e&&"RasterInfo"===e.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some(t=>!e[t])}_parseHeader(e){var t,i;const n=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:a,histograms:r,colormap:s,blockWidth:o,blockHeight:l,firstPyramidLevel:c,maximumPyramidLevel:u}=e,h=e.statistics&&e.statistics.map(e=>({min:e.min,max:e.max,avg:e.mean,stddev:e.standardDeviation,median:e.median,mode:e.mode})),f=e.extent.spatialReference,d=null==(t=e.geodataXform)?void 0:t.spatialReference,p=new R.a(null!=f&&f.wkid||null!=f&&f.wkt?f:d);let m=new C.a({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:p});const y=new L.a({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:p}),b=Math.round((m.xmax-m.xmin)/y.x),g=Math.round((m.ymax-m.ymin)/y.y),x=this._parseTransform(e.geodataXform),v=x?m:null;x&&(m=x.forwardTransform(m),y.x=(m.xmax-m.xmin)/b,y.y=(m.ymax-m.ymin)/g);const w=null!=(i=e.properties)?i:{},O=e.format.toLowerCase().replace("cache/",""),j=new L.a(e.origin.x,e.origin.y,p);let I,_,S,T;if(s&&s.colors)for(I=[],_=0;_<s.colors.length;_++)S=s.colors[_],T=s.values?s.values[_]:_,I.push([T,255&S,S<<16>>>24,S<<8>>>24,S>>>24]);const M=e.LODInfos,k=[];for(_=0;_<M.levels.length;_++)k.push({level:M.levels[_],resolution:M.resolutions[_],scale:96/.0254*M.resolutions[_]});const P=new z.a({dpi:96,lods:k,format:O,origin:j,size:[o,l],spatialReference:p}),F={recordSize:8,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*8+64},D=[{maxCol:Math.ceil(b/o)-1,maxRow:Math.ceil(g/l)-1,minCol:0,minRow:0}];let A=2;if(u>0)for(_=0;_<u;_++)D.push({maxCol:Math.ceil(b/A/o)-1,maxRow:Math.ceil(g/A/l)-1,minCol:0,minRow:0}),A*=2;const B=e.mdInfo;return{storageInfo:F,rasterInfo:new H.a({width:b,height:g,pixelType:n,bandCount:a,extent:m,nativeExtent:v,transform:x,spatialReference:p,pixelSize:y,keyProperties:w,statistics:h,histograms:r,multidimensionalInfo:B,colormap:I,storageInfo:new J.a({blockWidth:o,blockHeight:l,pyramidBlockWidth:o,pyramidBlockHeight:l,origin:j,tileInfo:P,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:D})})}}_parseTransform(e){var t,i;if(!function(e){const t=null==e?void 0:e.type;return!e||ze.includes(t)}(e))throw new f.a("cloudraster:open","the data contains unsupported geodata transform types");const n=function(e){if(!(null==e?void 0:e.type))return null;const t=ke[null==e?void 0:e.type];if(t){const i=new t;return i.read(e),i}return null}(e);if("identity"===n.type)return null;if("polynomial"!==n.type||null==(t=n.forwardCoefficients)||!t.length||null==(i=n.inverseCoefficients)||!i.length)throw new f.a("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return n}async _fetchAuxiliaryInformation(e){const t=this.request(this.url+"/conf.vat.json",{signal:e}).then(e=>e.data).catch(()=>null),i=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(e=>e.data).catch(()=>null),n=await Promise.all([t,i]);let a;if(n[0]){let e=n[0].fields;const t=n[0].values;if(e&&t){e=e.map(e=>({type:"OID"===e.name?"esriFieldTypeOID":Pe.get(e.type),name:e.name,alias:e.alias||e.name}));const i=t.map(e=>({attributes:e}));e&&t&&(a={fields:e,features:i})}}return!a&&n[1]&&(a=we.parse(n[1]).recordSet),E.default.fromJSON(a)}_buildCacheFilePath(e,t,i,n){const r=this.storageInfo.packetSize,s=Math.floor(t/r)*r,o=Math.floor(i/r)*r,l="R"+this._toHexString4(s)+"C"+this._toHexString4(o);let c="L";c+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:u}=this.rasterInfo,h=null==n?void 0:n[0];if(!Object(a.h)(u)||!h)return`${this.url}/_alllayers/${c}/${l}.bundle`;let f=u.variables.filter(e=>e.name===h.variableName)[0].dimensions[0].values.indexOf(h.values[0]).toString(16);const d=4-f.length;for(let e=0;e<d;e++)f="0"+f;return f="S"+f,`${this.url}/_alllayers/${h.variableName}/${f}/${c}/${l}.bundle`}_getIndexRecordFromBundle(e,t){const i=this.storageInfo.packetSize,n=i*(e%i)+t%i;if(n<0)throw"Invalid level / row / col";return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,t){const i=e.subarray(t,t+8);let n,a=0;for(n=0;n<5;n++)a|=(255&i[n])<<8*n;const r=0xffffffffff&a;for(a=0,n=5;n<8;n++)a|=(255&i[n])<<8*(n-5);return{position:r,recordSize:0xffffffffff&a}}_toHexString4(e){let t=e.toString(16);if(4!==t.length){let e=4-t.length;for(;e-- >0;)t="0"+t}return t}};Object(n.a)([Object(o.b)({readOnly:!0})],Fe.prototype,"storageInfo",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],Fe.prototype,"datasetFormat",void 0),Fe=Object(n.a)([Object(h.a)("esri.layers.support.rasterDatasets.CloudRaster")],Fe);var De=Fe;let Ae=class extends ge{constructor(){super(...arguments),this.datasetFormat="MEMORY"}async open(e){var t;await this.init();const{pixelBlock:i,statistics:n,histograms:a,name:r,keyProperties:s,nativeExtent:o,transform:l}=this.data,{width:c,height:u,pixelType:h}=i,f=this.data.extent||new C.a({xmin:-.5,ymin:.5,xmax:c-.5,ymax:u-.5,spatialReference:new R.a({wkid:3857})}),d=null!=(t=this.data.isPseudoSpatialReference)?t:!this.data.extent,p={x:f.width/c,y:f.height/u},m=new H.a({width:c,height:u,pixelType:h,extent:f,nativeExtent:o,transform:l,pixelSize:p,spatialReference:f.spatialReference,bandCount:3,keyProperties:s||{},statistics:n,isPseudoSpatialReference:d,histograms:a});this.createRemoteDatasetStorageInfo(m,512,512),this._set("rasterInfo",m),this.updateTileInfo(),await this._buildInMemoryRaster(i,{width:512,height:512},e),this.datasetName=r,this.url="/InMemory/"+r}fetchRawTile(e,t,i,n={}){const a=this._pixelBlockTiles.get(`${e}/${t}/${i}`);return Promise.resolve(a)}async _buildInMemoryRaster(e,t,i){const n=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:n},i):Promise.resolve(Object(G.m)(e,t,n)),s=Object(a.h)(this.rasterInfo.statistics),o=Object(a.h)(this.rasterInfo.histograms),l=s&&o?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve(Object(G.g)(e)),c=await Object(q.j)([r,l]);if(!c[0].value&&c[1].value)throw new f.a("inmemory-raster:open","failed to build in memory raster");var u,h;this._pixelBlockTiles=c[0].value,s||(this.rasterInfo.statistics=null==(u=c[1].value)?void 0:u.statistics),o&&(this.rasterInfo.histograms=null==(h=c[1].value)?void 0:h.histograms)}};Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],Ae.prototype,"datasetFormat",void 0),Object(n.a)([Object(o.b)()],Ae.prototype,"data",void 0),Ae=Object(n.a)([Object(h.a)("esri.layers.support.rasterDatasets.InMemoryRaster")],Ae);var Be=Ae;function Ne(e,t){if(!e||!t)return[];let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=[];if(t){const a=Ne(e,i);for(let e=0;e<a.length;e++)Ne(a[e],t).forEach(e=>n.push(e));return n}const a=e.getElementsByTagNameNS("*",i);if(!a||0===a.length)return[];for(let e=0;e<a.length;e++)n.push(a[e]||a.item[e]);return n}function Le(e,t){if(!e||!t)return null;let i=t;t.indexOf("/")>-1?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";const n=Ne(e,i);return n.length>0?t?Le(n[0],t):n[0]:null}function Ee(e,t=null){const i=t?Le(e,t):e;let n;return i?(n=i.textContent||i.nodeValue,n?n.trim():null):null}function Je(e,t){return function(e,t){const i=Ne(e,t),n=[];let a;for(let e=0;e<i.length;e++)a=i[e].textContent||i[e].nodeValue,a&&(a=a.trim(),""!==a&&n.push(a));return n}(e,t).map(e=>Number(e))}function He(e,t){const i=Ee(e,t);return Number(i)}function qe(e,t){var i;const n=null==e||null==(i=e.nodeName)?void 0:i.toLowerCase(),a=t.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===a}function We(e,t){if(!e||!t)return null;const i=[];for(let n=0;n<e.length;n++)i.push(e[n]),i.push(t[n]);return i}function Ue(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new R.a({wkid:t});if(!(e=String(e)).startsWith("GEOGCS")&&!e.startsWith("PROJCS"))return null;const i=e.replace(/\]/g,"[").replace(/\"/g,"").split("[").map(e=>e.trim()).filter(e=>""!==e),n=i[i.length-1].split(",");return"EPSG"===n[0]&&e.endsWith('"]]')&&(t=Number(n[1]),!isNaN(t)&&0!==t)?new R.a({wkid:t}):new R.a({wkt:e})}function $e(e){var t;if("pamdataset"!==(null==e||null==(t=e.documentElement.tagName)?void 0:t.toLowerCase()))return{};const i={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(e=>{if(1===e.nodeType)if(qe(e,"SRS")){if(!i.spatialReference){const t=Ee(e);i.spatialReference=Ue(t)}}else if(qe(e,"Metadata"))if("xml:ESRI"===e.getAttribute("domain")){const{spatialReference:t,transform:n}=function(e){var t;const i=Le(e,"GeodataXform"),n=Ue(He(i,"SpatialReference/WKID")||Ee(i,"SpatialReference/WKT"));if("typens:PolynomialXform"!==i.getAttribute("xsi:type"))return{spatialReference:n,transform:null};const a=null!=(t=He(i,"PolynomialOrder"))?t:1,r=Je(i,"CoeffX/Double"),s=Je(i,"CoeffY/Double"),o=Je(i,"InverseCoeffX/Double"),l=Je(i,"InverseCoeffY/Double"),c=We(r,s),u=We(o,l);return{spatialReference:n,transform:new Me({spatialReference:n,polynomialOrder:a,forwardCoefficients:c,inverseCoefficients:u})}}(e);i.transform=n,i.spatialReference||(i.spatialReference=t)}else Ne(e,"MDI").forEach(e=>i.metadata[e.getAttribute("key")]=Ee(e));else if(qe(e,"PAMRasterBand")){const t=function(e){var t;const i=He(e,"NoDataValue"),n=Le(e,"Histograms/HistItem"),a=He(n,"HistMin"),r=He(n,"HistMax"),s=He(n,"BucketCount"),o=null==(t=Ee(n,"HistCounts"))?void 0:t.split("|").map(e=>Number(e));let l,c,u,h;Ne(e,"Metadata/MDI").forEach(e=>{var t;const i=Number(null!=(t=e.textContent)?t:e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=i;break;case"STATISTICS_MAXIMUM":c=i;break;case"STATISTICS_MEAN":u=i;break;case"STATISTICS_STDDEV":h=i}});const f=He(e,"Metadata/SourceBandIndex");return{noDataValue:i,histogram:null!=o&&o.length&&null!=l&&null!=c?{min:a,max:r,size:s||o.length,counts:o}:null,sourceBandIndex:f,statistics:null!=l&&null!=c?{min:l,max:c,avg:u,stddev:h}:null}}(e);null!=t.sourceBandIndex&&null==i.rasterBands[t.sourceBandIndex]?i.rasterBands[t.sourceBandIndex]=t:i.rasterBands.push(t)}});const n=i.rasterBands;if(n){const e=!!n[0].statistics;i.statistics=e?n.map(e=>e.statistics):null;const t=!!n[0].histogram;i.histograms=t?n.map(e=>e.histogram):null}return i}let Ge=class extends ge{async open(e){await this.init();const t=await this._fetchData(e);let{spatialReference:i,statistics:n,histograms:a,transform:r}=await this._fetchAuxiliaryData(e);const s=!i;s&&(i=new R.a({wkid:3857})),null!=a&&a.length&&null==n&&(n=Object(G.f)(a));const{width:o,height:l}=t;let c=new C.a({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=r?r.forwardTransform(c):c;let h=!0;if(r){const e=r.forwardCoefficients;h=e&&0===e[1]&&0===e[2],h&&(r=null,c=u)}const f=new Be({data:{extent:u,nativeExtent:c,transform:r,pixelBlock:t,statistics:n,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:s}});await f.open(),this._set("rasterInfo",f.rasterInfo),this._inMemoryRaster=f}fetchRawTile(e,t,i,n={}){return this._inMemoryRaster.fetchRawTile(e,t,i,n)}async _fetchData(e){const{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:null==e?void 0:e.signal}),i=Object($.b)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new f.a("image-aux-raster:open","the data is not a supported format");return this._set("datasetFormat",i),await this.decodePixelBlock(t,{format:"jpg",width:1,height:1,useCanvas:!0})}async _fetchAuxiliaryData(e){var t,i;const n=Object(a.n)(null==e?void 0:e.signal),r=null!=(t=this.ioConfig.skipExtensions)?t:[],s=r.indexOf("aux.xml")>-1?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:n}),o=this.datasetFormat,l="JPG"===o?"jgw":"PNG"===o?"pgw":"BMP"===o?"bpw":null,c=r.indexOf(l)>-1?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+l,{responseType:"text",signal:n}),u=await Object(q.j)([s,c]);if(null!=n&&n.aborted)throw Object(q.e)();const h=$e(null==(i=u[0].value)?void 0:i.data);if(!h.transform){const e=u[1].value?u[1].value.data.split("\n").slice(0,6).map(e=>Number(e)):null;h.transform=6===(null==e?void 0:e.length)?new Me({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return h}};Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],Ge.prototype,"datasetFormat",void 0),Ge=Object(n.a)([Object(h.a)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Ge);var Ve=Ge,Xe=i(273),Ye=i(238);let Ke=class extends je{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return"point"===(e=e.clone()).type?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return"point"===(e=e.clone()).type?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}};Object(n.a)([Object(c.a)({GCSShiftXform:"gcs-shift"})],Ke.prototype,"type",void 0),Object(n.a)([Object(o.b)()],Ke.prototype,"tolerance",void 0),Ke=Object(n.a)([Object(h.a)("esri.layers.support.rasterTransforms.GCSShiftTransform")],Ke);var Ze=Ke;let Qe=class extends ge{constructor(){super(...arguments),this._levelOffset=0,this._slices=null,this._tilemapCache=null,this.datasetFormat="RasterTileServer"}async open(e){await this.init();const t=e&&e.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:t});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const n=i.data;if(this.sourceJSON=n,!n)throw new f.a("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!n.tileInfo)throw new f.a("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();this.tileType=n.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].indexOf(n.tileInfo.format.toLowerCase())>-1?this.tileType="Map":"lerc"===n.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=n.name.slice(n.name.indexOf("/")+1);const r=await this._fetchRasterInfo({signal:t});if(!Object(a.h)(r))throw new f.a("image-server-raster:open","cannot initialize image service");{const e="Map"===this.tileType?Object(Xe.a)(n.tileInfo,n):z.a.fromJSON(n.tileInfo),{extent:t,pixelSize:i}=r,a=.5/r.width*i.x;let s,o;const l=e.lodAt(Math.max.apply(null,e.lods.map(e=>e.level)));"Map"!==this.tileType&&0!==n.maxScale&&("Raster"===this.tileType?(s=e.lods.filter(e=>e.resolution===i.x)[0],s||(s=e.lods[e.lods.length-1])):(s=e.lods.filter(e=>Math.abs(e.scale-n.maxScale)<a)[0],s||(s=e.lods.filter(e=>e.scale>n.maxScale).sort((e,t)=>e.scale>t.scale?1:-1)[0])),i.x=i.y=s.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1)),s||(s=l);const c=e.lodAt(Math.min.apply(null,e.lods.map(e=>e.level)));"Map"===this.tileType?this._levelOffset=e.lods[0].level:0!==n.minScale&&"Elevation"===this.tileType&&(o=e.lods.filter(e=>Math.abs(e.scale-n.minScale)<a)[0],this._levelOffset=o.level-c.level),o||(o=c);const u=Math.max(i.x,i.y);(Math.abs(i.x-i.y)>a||!e.lods.some(e=>Math.abs(e.resolution-u)<a))&&(i.x=i.y=s.resolution,r.width=Math.ceil((t.xmax-t.xmin)/i.x-.1),r.height=Math.ceil((t.ymax-t.ymin)/i.y-.1));const h=s.level-o.level,[f,d]=e.size,p=e.origin;let{x:m,y:y}=i;const b=[{minCol:Math.floor((t.xmin-p.x+.1*m)/f/m),maxCol:Math.floor((t.xmax-p.x-.1*m)/f/m),minRow:Math.floor((p.y-t.ymax+.1*y)/d/y),maxRow:Math.floor((p.y-t.ymin-.1*y)/d/y)}];if(h>0)for(let e=0;e<h;e++)m*=2,y*=2,b.push({minCol:Math.floor((t.xmin-p.x+.1*m)/f/m),maxCol:Math.floor((t.xmax-p.x-.1*m)/f/m),minRow:Math.floor((p.y-t.ymax+.1*y)/d/m),maxRow:Math.floor((p.y-t.ymin-.1*y)/d/m)});r.storageInfo=new J.a({blockWidth:e.size[0],blockHeight:e.size[1],pyramidBlockWidth:e.size[0],pyramidBlockHeight:e.size[1],compression:e.format,origin:e.origin,firstPyramidLevel:1,maximumPyramidLevel:h,tileInfo:e,blockBoundary:b}),this._fixGCSShift(r),this._set("rasterInfo",r)}if(n.capabilities.toLowerCase().indexOf("tilemap")>-1){const e={tileInfo:r.storageInfo.tileInfo,parsedUrl:Object(d.J)(this.url),url:this.url,tileServers:[],type:"tile"};this._tilemapCache=new Ye.a({layer:e})}}async fetchRawTile(e,t,i,n={}){const{storageInfo:a,extent:r,pixelSize:s}=this.rasterInfo,o=a.maximumPyramidLevel-e+this._levelOffset,l=`${this.url}/tile/${o}/${t}/${i}`,c=this._slices?{sliceId:n.sliceId||0}:null,{data:u}=await this.request(l,{query:c,responseType:"array-buffer",signal:n.signal});if(!u)return null;const h=await this.decodePixelBlock(u,{width:a.tileInfo.size[0],height:a.tileInfo.size[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType}),f=a.blockBoundary[e];if("jpg"!==a.compression||i>f.minCol&&i<f.maxCol&&t>f.minRow&&t<f.maxRow)return h;const{origin:d,blockWidth:p,blockHeight:m}=a,y=2**e,b=Math.round((r.xmin-d.x)/(s.x*y))%p,g=Math.round((r.xmax-d.x)/(s.x*y))%p,x=Math.round((d.y-r.ymax)/(s.x*y))%m,v=Math.round((d.y-r.ymin)/(s.x*y))%m,w=i===f.minCol?b:0,O=t===f.minRow?x:0,j=i===f.maxCol?g:p,I=t===f.maxRow?v:m;return Object(G.l)(h,{x:w,y:O},{width:j-w,height:I-O}),h}getSliceIndex(e){if(null==e||!e.length||!this._slices)return null;const t=e;for(let e=0;e<this._slices.length;e++){const i=this._slices[e].multidimensionalDefinition;if(i.length===t.length&&!i.some(e=>{const i=t.filter(t=>e.variableName===t.variableName&&t.dimensionName===e.dimensionName)[0];return!i||(Array.isArray(e.values[0])?e.values[0][0]:e.values[0])!==(Array.isArray(i.values[0])?i.values[0][0]:i.values[0])}))return e}return null}async fetchVariableStatisticsHistograms(e,t){const i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.statistics}),n=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),a=await Promise.all([i,n]);return a[0]&&a[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,Object(a.n)(t.datumTransformation));if(null===i)return null;let n=0;const{maximumPyramidLevel:r}=this.rasterInfo.storageInfo;let s=r-n+this._levelOffset;const o=i.srcLocation;for(;s>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(s,i.row,i.col,t))break}catch{}if(s--,n++,i=this.identifyPixelLocation(o,n,Object(a.n)(t.datumTransformation)),null===i)return null}return-1===s||null==i?null:n}async _fetchRasterInfo(e){const t=this.sourceJSON,i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),n=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),a=R.a.fromJSON(t.spatialReference||t.extent.spatialReference);if("Map"===this.tileType)return new H.a({width:i,height:n,bandCount:3,extent:C.a.fromJSON(t.extent),spatialReference:a,pixelSize:new L.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}});const{slice:r,signal:s}=e,o=!!t.hasRasterAttributeTable&&this.request(this.url+"/rasterAttributeTable",{query:{slice:r,f:"json"},signal:s}).then(e=>E.default.fromJSON(e.data)).catch(()=>null),l=!!t.hasColormap&&this.request(this.url+"/colormap",{query:{slice:r,f:"json"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.colormap}),c=!!t.hasHistograms&&this.request(this.url+"/histograms",{query:{slice:r,f:"json"},signal:s}).then(e=>{var t;return null==(t=e.data)?void 0:t.histograms}),u=this.request(this.url+"/keyProperties",{query:{f:"json"},signal:s}).then(e=>e.data).catch(()=>{}),h=!!t.hasMultidimensions&&this._fetchMultidimensionalInfo(),f=!!t.hasMultidimensions&&this.request(this.url+"/slices",{query:{f:"json"},signal:s}).then(e=>e.data&&e.data.slices).catch(()=>{});return Promise.all([o,l,c,u,h,f]).then(e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}return this._slices=e[5]||null,new H.a({width:i,height:n,bandCount:t.bandCount,extent:C.a.fromJSON(t.extent),spatialReference:a,pixelSize:new L.a({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})})}async _fetchMultidimensionalInfo(e){var t;const i=await this.request(this.url+"/multidimensionalInfo",{query:{f:"json"},signal:e}).then(e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo});return null!=(t=i.variables)&&t.length&&i.variables.forEach(e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation})}),i}_fixScaleInServiceInfo(){const{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_fixGCSShift(e){const{extent:t,spatialReference:i}=e;0===t.xmin&&360===t.xmax&&i.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new Ze,e.extent=e.transform.forwardTransform(t))}};Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],Qe.prototype,"datasetFormat",void 0),Object(n.a)([Object(o.b)()],Qe.prototype,"tileType",void 0),Qe=Object(n.a)([Object(h.a)("esri.layers.support.rasterDatasets.ImageServerRaster")],Qe);var et=Qe,tt=i(267),it=i(458);const nt=new Map;nt.set("Int8","s8"),nt.set("UInt8","u8"),nt.set("Int16","s16"),nt.set("UInt16","u16"),nt.set("Int32","s32"),nt.set("UInt32","u32"),nt.set("Float32","f32"),nt.set("Float64","f32"),nt.set("Double64","f32");const at=new Map;at.set("lerc",".lrc"),at.set("none",".til"),at.set("deflate",".pzp"),at.set("jpeg",".jzp");let rt=class extends ge{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){var t;await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const i=e?Object(a.n)(e.signal):null,n=await this.request(this.url,{responseType:"xml",signal:i}),{rasterInfo:r,files:s}=this._parseHeader(n.data);if(-1===(null==(t=this.ioConfig.skipExtensions)?void 0:t.indexOf("aux.xml"))){const t=await this._fetchAuxiliaryData(e);var o;null!=t&&(r.statistics=null!=(o=t.statistics)?o:r.statistics,r.histograms=t.histograms,t.histograms&&!Object(a.h)(r.statistics)&&(r.statistics=Object(G.f)(t.histograms)))}this._set("rasterInfo",r),this._files=s;const l=await this.request(s.index,{responseType:"array-buffer",signal:i});this._storageIndex=this._parseIndex(l.data);let c,u,h=0,f=-1;const{blockWidth:d,blockHeight:p,compression:m}=this.rasterInfo.storageInfo,y=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:b,height:g,bandCount:x}=this.rasterInfo,v=[],w="none"===m?1:x;for(;h<this._storageIndex.length;)f++,c=Math.ceil(b/d/y**f),u=Math.ceil(g/p/y**f),h+=c*u*w*4,v.push({maxRow:u,maxCol:c,minCol:0,minRow:0});this.rasterInfo.storageInfo.blockBoundary=v,f>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=f),this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){const{blockWidth:a,blockHeight:r,blockBoundary:s,compression:o}=this.rasterInfo.storageInfo,l=s[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;const{bandCount:c,pixelType:u}=this.rasterInfo,{ranges:h,actualTileWidth:f,actualTileHeight:d}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){const e=new Uint8Array(a*r);return new tt.a({width:a,height:r,pixels:null,mask:e,validPixelCount:0})}const{bandIds:p}=this.ioConfig,m="none"===o?1:c,y=[];let b=0;for(b=0;b<m;b++)(!p||p.indexOf[b]>-1)&&y.push(this.request(this._files.data,{range:{from:h[b].from,to:h[b].to},responseType:"array-buffer",signal:n.signal}));const g=await Promise.all(y),x=g.map(e=>e.data.byteLength).reduce((e,t)=>e+t),v=new Uint8Array(x);let w=0;for(b=0;b<m;b++)v.set(new Uint8Array(g[b].data),w),w+=g[b].data.byteLength;const O="lerc"===this.rasterInfo.storageInfo.compression?"lerc":"bip",j=await this.decodePixelBlock(v.buffer,{width:a,height:r,format:O,pixelType:u});let I=0,_=0;if(f!==a||d!==r){let e=j.mask;if(e)for(b=0;b<r;b++)if(_=b*a,b<d)for(I=f;I<a;I++)e[_+I]=0;else for(I=0;I<a;I++)e[_+I]=0;else for(e=new Uint8Array(a*r),j.mask=e,b=0;b<d;b++)for(_=b*a,I=0;I<f;I++)e[_+I]=1}return j}_parseIndex(e){if(e.byteLength%16>0)throw"invalid array buffer must be multiples of 16";let t,i,n,a,r,s;if(it.a){for(i=new Uint8Array(e),a=new ArrayBuffer(e.byteLength),n=new Uint8Array(a),r=0;r<e.byteLength/4;r++)for(s=0;s<4;s++)n[4*r+s]=i[4*r+3-s];t=new Uint32Array(a)}else t=new Uint32Array(e);return t}_getTileLocation(e,t,i){const{blockWidth:n,blockHeight:a,pyramidScalingFactor:r,compression:s}=this.rasterInfo.storageInfo,{width:o,height:l,bandCount:c}=this.rasterInfo,u="none"===s?1:c;let h,f,d,p=0,m=0;for(d=0;d<e;d++)m=r**d,h=Math.ceil(o/n/m),f=Math.ceil(l/a/m),p+=h*f;m=r**e,h=Math.ceil(o/n/m),f=Math.ceil(l/a/m),p+=t*h+i,p*=4*u;const y=this._storageIndex.subarray(p,p+4*u);let b=0,g=0;const x=[];for(let e=0;e<u;e++)b=y[4*e+0]*2**32+y[4*e+1],g=b+y[4*e+2]*2**32+y[4*e+3],x.push({from:b,to:g});return{ranges:x,actualTileWidth:i<h-1?n:Math.ceil(o/m)-n*(h-1),actualTileHeight:t<f-1?a:Math.ceil(l/m)-a*(f-1)}}_parseHeader(e){const t=Le(e,"MRF_META/Raster");if(!t)throw new f.a("mrf:open","not a valid MRF format");const i=Le(t,"Size"),n=parseInt(i.getAttribute("x"),10),a=parseInt(i.getAttribute("y"),10),r=parseInt(i.getAttribute("c"),10),s=(Ee(t,"Compression")||"none").toLowerCase();if(!s||-1===["none","lerc"].indexOf(s))throw new f.a("mrf:open","currently does not support compression "+s);const o=Ee(t,"DataType")||"UInt8",l=nt.get(o);if(null==l)throw new f.a("mrf:open","currently does not support pixel type "+o);const c=Le(t,"PageSize"),u=parseInt(c.getAttribute("x"),10),h=parseInt(c.getAttribute("y"),10),d=Le(t,"DataValues");let p,m;if(d&&(m=d.getAttribute("NoData"),null!=m&&(p=m.trim().split(" ").map(e=>parseFloat(e)))),Le(e,"MRF_META/CachedSource"))throw new f.a("mrf:open","currently does not support MRF referencing other data files");const y=Le(e,"MRF_META/GeoTags"),b=Le(y,"BoundingBox");if(null==b)throw new f.a("mrf:open","missing node MRF_META/GeoTags/BoundingBox");const g=parseFloat(b.getAttribute("minx")),x=parseFloat(b.getAttribute("miny")),v=parseFloat(b.getAttribute("maxx")),w=parseFloat(b.getAttribute("maxy")),O=Ee(y,"Projection")||"",j=Ee(e,"datafile"),I=Ee(e,"IndexFile");let _;if("LOCAL_CS[]"!==O)if(O.toLowerCase().startsWith("epsg:")){const e=Number(O.slice(5));isNaN(e)||0===e||(_=new R.a({wkid:e}))}else _=Ue(O);const S=new C.a(g,x,v,w);S.spatialReference=_;const T=Le(e,"MRF_META/Rsets"),M=parseInt(T&&T.getAttribute("scale")||"2",10),k=new J.a({origin:new L.a({x:S.xmin,y:S.ymax,spatialReference:_}),blockWidth:u,blockHeight:h,pyramidBlockWidth:u,pyramidBlockHeight:h,compression:s,pyramidScalingFactor:M}),z=new L.a({x:(v-g)/n,y:(w-x)/a,spatialReference:_});return{rasterInfo:new H.a({width:n,height:a,extent:S,spatialReference:_,bandCount:r,pixelType:l,pixelSize:z,noDataValue:p,storageInfo:k}),files:{mrf:this.url,index:I||this.url.replace(".mrf",".idx"),data:j||this.url.replace(".mrf",at.get(s))}}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return $e(t)}catch{return null}}};Object(n.a)([Object(o.b)()],rt.prototype,"_files",void 0),Object(n.a)([Object(o.b)()],rt.prototype,"_storageIndex",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],rt.prototype,"datasetFormat",void 0),rt=Object(n.a)([Object(h.a)("esri.layers.support.rasterIO.MRFRaster")],rt);var st=rt,ot=i(503),lt=i(536);const ct=function(e,t){const i=e.get(t);return i&&i.values},ut=function(e,t){const i=e.get(t);return i&&i.values[0]};let ht=class extends ge{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){var t;await this.init();const i=e?Object(a.n)(e.signal):null,{data:n}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:i});if(!n)throw new f.a("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{littleEndian:r,firstIFD:s,isBigTiff:o}=Object(lt.f)(n),l=[];await this.readIFDs(l,n,r,s,0,o?8:4,i);const c=Object(lt.c)(l),{width:u,height:h,tileWidth:d,tileHeight:p,planes:m,pixelType:y,compression:b,firstPyramidLevel:g,maximumPyramidLevel:x,pyramidBlockWidth:v,pyramidBlockHeight:w,tileBoundary:O,affine:j,metadata:I}=c,_=C.a.fromJSON(c.extent),S=_.spatialReference,T=new L.a(_?{x:_.xmin,y:_.ymax,spatialReference:S}:{x:0,y:0}),R=new J.a({blockWidth:d,blockHeight:p,pyramidBlockWidth:v,pyramidBlockHeight:w,compression:b,origin:T,firstPyramidLevel:g,maximumPyramidLevel:x,blockBoundary:O}),M=new L.a({x:(_.xmax-_.xmin)/u,y:(_.ymax-_.ymin)/h,spatialReference:S}),k=I?{BandProperties:I.bandProperties,DataType:I.dataType}:{},z=new H.a({width:u,height:h,bandCount:m,pixelType:y,compression:b,pixelSize:M,storageInfo:R,spatialReference:S,keyProperties:k,extent:_,statistics:I?I.statistics:null});if(null!=j&&j.length&&(z.nativeExtent=new C.a({xmin:-.5,ymin:.5-h,xmax:u-.5,ymax:.5,spatialReference:S}),z.transform=new Me({polynomialOrder:1,forwardCoefficients:[j[2]+j[0]/2,j[5]-j[3]/2,j[0],j[3],-j[1],-j[4]]}),z.extent=z.transform.forwardTransform(z.nativeExtent),z.pixelSize=new L.a({x:(_.xmax-_.xmin)/u,y:(_.ymax-_.ymin)/h,spatialReference:S}),R.origin.x=-.5,R.origin.y=.5),null==(t=this.ioConfig.skipExtensions)||!t.includes("aux.xml")){const t=await this._fetchAuxiliaryData(e);if(null!=t){var P;if(z.statistics=null!=(P=t.statistics)?P:z.statistics,z.histograms=t.histograms,t.histograms&&!Object(a.h)(z.statistics)&&(z.statistics=Object(G.f)(t.histograms)),t.transform&&!j){z.transform=t.transform,z.nativeExtent=z.extent;const e=z.transform.forwardTransform(z.nativeExtent);z.pixelSize=new L.a({x:(e.xmax-e.xmin)/u,y:(e.ymax-e.ymin)/h,spatialReference:S}),z.extent=e}z.spatialReference||(z.spatialReference=t.spatialReference)}}if(this._set("rasterInfo",z),this._headerInfo={littleEndian:r,isBigTiff:o,ifds:l,...c},!this._headerInfo.isSupported)throw new f.a("tiffraster:open","this tiff is not supported: "+this._headerInfo.message);this.updateTileInfo()}async fetchRawTile(e,t,i,n={}){var a;if(null==(a=this._headerInfo)||!a.isSupported||this.isBlockOutside(e,t,i))return null;const r=this.getTileLocation(e,t,i);if(!r)return null;const{range:s,actualTileWidth:o,actualTileHeight:l,ifd:c}=r,{data:u}=await this.request(this.url,{range:s,responseType:"array-buffer",signal:n.signal}),{blockWidth:h,blockHeight:f}=this.getBlockWidthHeight(e),d=await this.decodePixelBlock(u,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offset:0,size:0},width:h,height:f,planes:null,pixelType:null});let p,m,y;if(o!==h||l!==f){let e=d.mask;if(e)for(p=0;p<f;p++)if(y=p*h,p<l)for(m=o;m<h;m++)e[y+m]=0;else for(m=0;m<h;m++)e[y+m]=0;else for(e=new Uint8Array(h*f),d.mask=e,p=0;p<l;p++)for(y=p*h,m=0;m<o;m++)e[y+m]=1}return d}async readIFDs(e,t,i,n,a,r=4,s){if(!n)return null;(n>=t.byteLength||n<0)&&(t=(await this.request(this.url,{range:{from:n+a,to:n+a+this._bufferSize},responseType:"array-buffer",signal:s})).data,a=n+a,n=0);const o=await this.readIFD(t,i,n,a,ot.a.TIFF_TAGS,r,s);if(e.push(o.ifd),!o.nextIFD)return null;await this.readIFDs(e,t,i,o.nextIFD-a,a,r,s)}async readIFD(e,t,i,n,a=ot.a.TIFF_TAGS,r=4,s){if(!e)return null;const o=Object(lt.e)(e,t,i,n,a,r);if(o.success){const i=[];if(o.ifd.forEach(e=>{e.values||i.push(e)}),i.length>0){const a=i.map(e=>e.offlineOffsetSize),r=Math.min.apply(null,a.map(e=>e[0]));if(Math.min.apply(null,a.map(e=>e[0]+e[1]))-r<=this._bufferSize){const{data:a}=await this.request(this.url,{range:{from:r,to:r+this._bufferSize},responseType:"array-buffer",signal:s});e=a,n=r,i.forEach(i=>Object(lt.d)(e,t,i,n))}}if(o.ifd.has("GEOKEYDIRECTORY")){const i=o.ifd.get("GEOKEYDIRECTORY"),a=i.values;if(a&&a.length>4){const r=a[0]+"."+a[1]+"."+a[2],o=await this.readIFD(e,t,i.valueOffset+6-n,n,ot.a.GEO_KEYS,2,s);i.data=o.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[r]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==e.byteLength){const i=await this.request(this.url,{range:{from:n,to:n+o.requiredBufferSize+4},responseType:"array-buffer",signal:s});return(e=i.data).byteLength<o.requiredBufferSize?null:this.readIFD(e,t,0,n,ot.a.TIFF_TAGS,4,s)}}getTileLocation(e,t,i){const{firstPyramidLevel:n,blockBoundary:a}=this.rasterInfo.storageInfo,r=0===e?0:e-(n-1),s=this._headerInfo.ifds[r];if(!s)return null;const o=ct(s,"TILEOFFSETS");if(void 0===o)return null;const l=ct(s,"TILEBYTECOUNTS"),{minRow:c,minCol:u,maxRow:h,maxCol:f}=a[r];if(t>h||i>f||t<c||i<u)return null;const d=ut(s,"IMAGEWIDTH"),p=ut(s,"IMAGELENGTH"),m=ut(s,"TILEWIDTH"),y=ut(s,"TILELENGTH"),b=t*(f+1)+i,g=o[b],x=l[b];return null==g||null==x?null:{range:{from:g,to:g+x-1},ifd:s,actualTileWidth:i===f?d%m:m,actualTileHeight:t===h?p%y:y}}async _fetchAuxiliaryData(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:null==e?void 0:e.signal});return $e(t)}catch{return null}}};Object(n.a)([Object(o.b)()],ht.prototype,"_files",void 0),Object(n.a)([Object(o.b)()],ht.prototype,"_headerInfo",void 0),Object(n.a)([Object(o.b)()],ht.prototype,"_bufferSize",void 0),Object(n.a)([Object(o.b)({type:String,json:{write:!0}})],ht.prototype,"datasetFormat",void 0),ht=Object(n.a)([Object(h.a)("esri.layers.support.rasterDatasets.TIFFRaster")],ht);var ft=ht;const dt=new Map;dt.set("CRF",{desc:"Cloud Raster Format",constructor:De}),dt.set("MRF",{desc:"Meta Raster Format",constructor:st}),dt.set("TIFF",{desc:"GeoTIFF",constructor:ft}),dt.set("RasterTileServer",{desc:"Raster Tile Server",constructor:et}),dt.set("JPG",{desc:"JPG Raster Format",constructor:Ve}),dt.set("PNG",{desc:"PNG Raster Format",constructor:Ve}),dt.set("GIF",{desc:"GIF Raster Format",constructor:Ve}),dt.set("BMP",{desc:"BMP Raster Format",constructor:Ve});var pt=class{static get supportedFormats(){const e=new Set;return dt.forEach((t,i)=>e.add(i)),e}static async open(e){const{url:t,ioConfig:i,sourceJSON:n}=e;let a=e.datasetFormat;null==a&&t.lastIndexOf(".")&&(a=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===a||"TIF"===a?a="TIFF":"JPG"!==a&&"JPEG"!==a&&"JFIF"!==a||(a="JPG"),t.toLowerCase().indexOf("/imageserver")>-1&&-1===t.toLowerCase().indexOf("/wcsserver")&&(a="RasterTileServer");const r={url:t,sourceJSON:n,datasetFormat:a,ioConfig:i||{bandIds:null,sampling:null}};let s,o;if(this.supportedFormats.has(a))return s=dt.get(a).constructor,o=new s(r),await o.open({signal:e.signal}),o;if(a)throw new f.a("rasterfactory:open","not a supported format "+a);const l=Array.from(dt.keys());let c=0;const u=function(){return a=l[c++],a?(s=dt.get(a).constructor,o=new s(r),o.open({signal:e.signal}).then(()=>o).catch(()=>u())):null};return u()}static register(e,t,i){dt.has(e.toUpperCase())||dt.set(e.toUpperCase(),{desc:t,constructor:i})}};const mt=Object(l.b)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"});function yt(){return{enabled:!this.loaded||"RasterTileServer"===this.raster.datasetFormat&&"Raster"===this.raster.tileType}}let bt=class extends(Object(w.a)(Object(I.a)(Object(j.a)(Object(g.a)(Object(O.a)(N(Object(y.a)(m.a)))))))){constructor(...e){super(...e),this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.title=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=Object(a.h)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then(()=>this._openRaster(t),()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get fields(){var e,t;let i=[new x.a({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"})];const n=null==(e=this.rasterInfo)||null==(t=e.attributeTable)?void 0:t.fields;if(n){const e=n.filter(e=>"oid"!==e.type&&"value"!==e.name.toLowerCase()).map(e=>{const t=e.clone();return t.name="Raster."+e.name,t});i=i.concat(e)}return i}set renderer(e){this._set("renderer",e),this.updateRenderer()}readRenderer(e,t,i){const n=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,a=Object(v.b)(n,i)||void 0;if(null!=a)return a}createPopupTemplate(e){return Object(_.a)(this,e)}write(e,t){const{raster:i}=this;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t&&t.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new f.a("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){this.raster?(this.raster.rasterInfo||await this.raster.open(),this.url=this.raster.url):this.raster=await pt.open({url:this.url,sourceJSON:this.sourceJSON,ioConfig:this.ioConfig,signal:e});const{rasterInfo:t}=this.raster;if(!t)throw new f.a("imagery-tile-layer:load","cannot load resources on "+this.url);this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON&&(this._set("version",this.sourceJSON.currentVersion),this._set("copyright",this.sourceJSON.copyrightText)),null==this.title&&(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings()}};Object(n.a)([Object(o.b)({type:[s.a],json:{write:{overridePolicy:yt}}})],bt.prototype,"bandIds",void 0),Object(n.a)([Object(o.b)({json:{write:{overridePolicy:yt}}}),Object(c.a)(mt)],bt.prototype,"interpolation",void 0),Object(n.a)([Object(o.b)({json:{write:!0}})],bt.prototype,"multidimensionalDefinition",void 0),Object(n.a)([Object(o.b)(b.e)],bt.prototype,"legendEnabled",void 0),Object(n.a)([Object(o.b)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],bt.prototype,"isReference",void 0),Object(n.a)([Object(o.b)({type:["show","hide"]})],bt.prototype,"listMode",void 0),Object(n.a)([Object(o.b)()],bt.prototype,"sourceJSON",void 0),Object(n.a)([Object(o.b)({readOnly:!0})],bt.prototype,"version",void 0),Object(n.a)([Object(o.b)()],bt.prototype,"title",void 0),Object(n.a)([Object(o.b)({readOnly:!0,json:{read:!1}})],bt.prototype,"type",void 0),Object(n.a)([Object(o.b)({type:["ArcGISTiledImageServiceLayer"]})],bt.prototype,"operationalLayerType",void 0),Object(n.a)([Object(o.b)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:yt,writer(e,t,i){t[i]=!e}}}})],bt.prototype,"popupEnabled",void 0),Object(n.a)([Object(o.b)({type:p.a,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:yt}}})],bt.prototype,"popupTemplate",void 0),Object(n.a)([Object(o.b)({readOnly:!0})],bt.prototype,"defaultPopupTemplate",null),Object(n.a)([Object(o.b)({readOnly:!0,type:[x.a]})],bt.prototype,"fields",null),Object(n.a)([Object(o.b)({types:v.a,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:yt},origins:{"web-scene":{types:v.c,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],bt.prototype,"renderer",null),Object(n.a)([Object(u.a)("renderer")],bt.prototype,"readRenderer",null),bt=Object(n.a)([Object(h.a)("esri.layers.ImageryTileLayer")],bt);var gt=bt;t.default=gt}});