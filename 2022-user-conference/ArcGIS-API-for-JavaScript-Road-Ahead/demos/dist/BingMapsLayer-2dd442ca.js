import { hO as t, kk as a, kl as t$1, km as n, fa as b$1, e5 as S, R as k, w, bi as u, h as L, s, B as e, C as d$1, D as n$1, J as s$1, f4 as c, f6 as O, r, t as t$2 } from './_virtual_index-4b72c57d.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
const y$1=new t("0/0/0",0,0,0,null);let d=class extends(a(t$1(n(b$1)))){constructor(){super(...arguments),this.tileInfo=S.create({spatialReference:k.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new w(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,k.WebMercator),this.spatialReference=k.WebMercator;}getTileBounds(e,r,t,o){const s=o||u();return y$1.level=e,y$1.row=r,y$1.col=t,y$1.extent=s,this.tileInfo.updateTileInfo(y$1),y$1.extent=null,s}fetchTile(e,t,o,s={}){const{signal:i}=s,p=this.getTileUrl(e,t,o),l={responseType:"image",signal:i,query:{...this.refreshParameters}};return L(p,l).then((e=>e.data))}getTileUrl(){throw new s("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};e([d$1({type:S})],d.prototype,"tileInfo",void 0),e([d$1({type:["show","hide"]})],d.prototype,"listMode",void 0),e([d$1({readOnly:!0,value:"base-tile"})],d.prototype,"type",void 0),e([d$1({nonNullable:!0})],d.prototype,"fullExtent",void 0),e([d$1()],d.prototype,"spatialReference",void 0),d=e([n$1("esri.layers.BaseTileLayer")],d);const j=d;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
const y=new s$1({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"}),h="https://dev.virtualearth.net";let m=class extends(a(c(O(j)))){constructor(e){super(e),this.type="bing-maps",this.tileInfo=new S({size:[256,256],dpi:96,origin:{x:-20037508.342787,y:20037508.342787,spatialReference:k.WebMercator},spatialReference:k.WebMercator,lods:[{level:1,resolution:78271.5169639999,scale:295828763.795777},{level:2,resolution:39135.7584820001,scale:147914381.897889},{level:3,resolution:19567.8792409999,scale:73957190.948944},{level:4,resolution:9783.93962049996,scale:36978595.474472},{level:5,resolution:4891.96981024998,scale:18489297.737236},{level:6,resolution:2445.98490512499,scale:9244648.868618},{level:7,resolution:1222.99245256249,scale:4622324.434309},{level:8,resolution:611.49622628138,scale:2311162.217155},{level:9,resolution:305.748113140558,scale:1155581.108577},{level:10,resolution:152.874056570411,scale:577790.554289},{level:11,resolution:76.4370282850732,scale:288895.277144},{level:12,resolution:38.2185141425366,scale:144447.638572},{level:13,resolution:19.1092570712683,scale:72223.819286},{level:14,resolution:9.55462853563415,scale:36111.909643},{level:15,resolution:4.77731426794937,scale:18055.954822},{level:16,resolution:2.38865713397468,scale:9027.977411},{level:17,resolution:1.19432856685505,scale:4513.988705},{level:18,resolution:.597164283559817,scale:2256.994353},{level:19,resolution:.298582141647617,scale:1128.497176},{level:20,resolution:.1492910708238085,scale:564.248588}]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0;}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(e){this._set("bingMetadata",e);}get copyright(){return r(this.bingMetadata)?this.bingMetadata.copyright:null}get operationalLayerType(){return y.toJSON(this.style)}get bingLogo(){return r(this.bingMetadata)?this.bingMetadata.brandLogoUri:null}load(e){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then((()=>this._getMetadata()))):this.addResolvingPromise(Promise.reject(new s("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(e,t,r){if(!this.loaded||t$2(this.bingMetadata))return null;const o=this.bingMetadata.resourceSets[0].resources[0],a=o.imageUrlSubdomains[t%o.imageUrlSubdomains.length],i=this._getQuadKey(e,t,r);return o.imageUrl.replace("{subdomain}",a).replace("{quadkey}",i)}async fetchAttributionData(){return this.load().then((()=>{if(t$2(this.bingMetadata))return null;return {contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map((e=>({attribution:e.attribution,coverageAreas:e.coverageAreas.map((e=>({zoomMin:e.zoomMin,zoomMax:e.zoomMax,score:1,bbox:[e.bbox[0],e.bbox[1],e.bbox[2],e.bbox[3]]})))})))}}))}_getMetadata(){const e={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style];return L(`${h}/REST/v1/Imagery/Metadata/${e}`,{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then((e=>{const t=e.data;if(200!==t.statusCode)throw new s("bingmapslayer:getmetadata",t.statusDescription);if(this.bingMetadata=t,0===this.bingMetadata.resourceSets.length)throw new s("bingmapslayer:getmetadata","no bing resourcesets");if(0===this.bingMetadata.resourceSets[0].resources.length)throw new s("bingmapslayer:getmetadata","no bing resources")})).catch((e=>{throw new s("bingmapslayer:getmetadata",e.message)}))}_getPortalBingKey(){return L(this.portalUrl,{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then((e=>{if(!e.data.bingKey)throw new s("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey;})).catch((e=>{throw new s("bingmapslayer:getportalbingkey",e.message)}))}_getQuadKey(e,t,r){let o="";for(let a=e;a>0;a--){let e=0;const s=1<<a-1;0!=(r&s)&&(e+=1),0!=(t&s)&&(e+=2),o+=e.toString();}return o}};e([d$1({json:{read:!1,write:!1},value:null})],m.prototype,"bingMetadata",null),e([d$1({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],m.prototype,"type",void 0),e([d$1({type:S})],m.prototype,"tileInfo",void 0),e([d$1({type:String,readOnly:!0,json:{read:!1,write:!1}})],m.prototype,"copyright",null),e([d$1({type:String,json:{write:!1,read:!1}})],m.prototype,"key",void 0),e([d$1({type:y.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:y.read}}})],m.prototype,"style",void 0),e([d$1({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],m.prototype,"operationalLayerType",null),e([d$1({type:String,json:{write:!1,read:!1}})],m.prototype,"culture",void 0),e([d$1({type:String,json:{write:!1,read:!1}})],m.prototype,"region",void 0),e([d$1({type:String,json:{write:!0,read:!0}})],m.prototype,"portalUrl",void 0),e([d$1({type:Boolean,json:{write:!1,read:!1}})],m.prototype,"hasAttributionData",void 0),e([d$1({type:String,readOnly:!0})],m.prototype,"bingLogo",null),m=e([n$1("esri.layers.BingMapsLayer")],m);const b=m;

export { b as default };
