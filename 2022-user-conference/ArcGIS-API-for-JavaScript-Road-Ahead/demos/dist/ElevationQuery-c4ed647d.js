import { m as r, w3 as t, t as t$1, E as s$1, oS as _n, fr as rn, w4 as p, se as c, c as c$1, e1 as $, D as y, c1 as w, a6 as E$1, mt as t$2, bI as u, lb as b, er as u$1, ev as m, bk as w$1, lO as R$1 } from './_virtual_index-1ea2035a.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
class e{constructor(a,e=null){if(this.tile=a,this.zmin=0,this.zmax=0,r(e)&&r(a)){const t$1=a.extent;this._samplerData=new t(e,t$1),this.zmin=e.minValue,this.zmax=e.maxValue;}}sample(t,i){if(t$1(this._samplerData))return;const{safeWidth:e,width:r,pixelData:o,noDataValue:n,dx:l,dy:m,y1:h,x0:f}=this._samplerData,p=s(m*(h-i),0,e),u=s(l*(t-f),0,e),c=Math.floor(p),x=Math.floor(u),D=c*r+x,d=D+r,z=o[D],y=o[d],V=o[D+1],_=o[d+1];if(z!==n&&y!==n&&V!==n&&_!==n){const t=u-x,a=z+(V-z)*t;return a+(y+(_-y)*t-a)*(p-c)}}}function s(t,a,i){return t<a?a:t>i?i:t}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
class g{async queryAll(e,i,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new s$1("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=x.fromGeometry(i);let o=!1;s&&s.returnSampleInfo||(o=!0);const l={...A,...s,returnSampleInfo:!0},a=await this.query(e[e.length-1],n,l),r=await this._queryAllContinue(e,a,l);return r.geometry=r.geometry.export(),o&&delete r.sampleInfo,r}async query(e,i,s){if(!e)throw new s$1("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!i||!(i instanceof x)&&"point"!==i.type&&"multipoint"!==i.type&&"polyline"!==i.type)throw new s$1("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...A,...s},o=new R(e,i.spatialReference,n),l=n.signal;return await e.load({signal:l}),await this._createGeometryDescriptor(o,i,l),await this._selectTiles(o,l),await this._populateElevationTiles(o,l),this._sampleGeometryWithElevation(o),this._createQueryResult(o,l)}async createSampler(e,i,s){if(!e)throw new s$1("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!i||"extent"!==i.type)throw new s$1("elevation-query:invalid-extent","Invalid or undefined extent");const n={...A,...s};return this._createSampler(e,i,n)}async createSamplerAll(e,i,s){if(!(e=s&&s.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new s$1("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!i||"extent"!==i.type)throw new s$1("elevation-query:invalid-extent","Invalid or undefined extent");const n={...A,...s,returnSampleInfo:!0},o=await this._createSampler(e[e.length-1],i,n);return this._createSamplerAllContinue(e,i,o,n)}async _createSampler(e,t,i,s){const n=i.signal;await e.load({signal:n});const o=t.spatialReference,l=e.tileInfo.spatialReference;o.equals(l)||(await _n([{source:o,dest:l}],{signal:n}),t=rn(t,l));const a=new q(e,t,i,s);return await this._selectTiles(a,n),await this._populateElevationTiles(a,n),new p(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,s){if(e.pop(),!e.length)return i;const n=i.samplers.map((e=>c(e.extent))),o=await this._createSampler(e[e.length-1],t,s,n);if(0===o.samplers.length)return i;const l=i.samplers.concat(o.samplers),a=new p(l,s.noDataValue);return this._createSamplerAllContinue(e,t,a,s)}async _queryAllContinue(e,t,s){const n=e.pop(),o=t.geometry.coordinates,l=t.sampleInfo;c$1(l);const a=[],r=[];for(let i=0;i<o.length;i++){const t=l[i];t.demResolution>=0?t.source||(t.source=n):e.length&&(a.push(o[i]),r.push(i));}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,s),h=u.sampleInfo;if(!h)throw new Error("no sampleInfo");return r.forEach(((e,t)=>{o[e].z=u.geometry.coordinates[t].z,l[e].demResolution=h[t].demResolution;})),this._queryAllContinue(e,t,s)}async _createQueryResult(e,t){const s=await e.geometry.project(e.outSpatialReference,t);c$1(s);const n={geometry:s.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(n.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null;})),n}async _createGeometryDescriptor(e,i,s){let n;const o=e.layer.tileInfo.spatialReference;if(i instanceof x?n=await i.project(o,s):(await _n([{source:i.spatialReference,dest:o}],{signal:s}),n=rn(i,o)),!n)throw new s$1("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${o.wkid}'`);e.geometry=x.fromGeometry(n);}async _selectTiles(e,i){const s=e.options.demResolution;if("geometry"===e.type&&this._preselectOutsideLayerExtent(e),"number"==typeof s)this._selectTilesClosestResolution(e);else if("finest-contiguous"===s)await this._selectTilesFinestContiguous(e,i);else {if("auto"!==s)throw new s$1("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${s}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,i);}}_preselectOutsideLayerExtent(e$1){if(t$1(e$1.layer.fullExtent))return;const t=new e(null);t.sample=()=>e$1.options.noDataValue,e$1.outsideExtentTile=t;const i=e$1.layer.fullExtent;e$1.geometry.coordinates.forEach((e=>{const s=e.x,n=e.y;(s<i.xmin||s>i.xmax||n<i.ymin||n>i.ymax)&&(e.elevationTile=t);}));}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i);}_findNearestDemResolutionLODIndex(e,t){const i=t/$(e.spatialReference);let s=e.lods[0],n=0;for(let o=1;o<e.lods.length;o++){const t=e.lods[o];Math.abs(t.resolution-i)<Math.abs(s.resolution-i)&&(s=t,n=o);}return n}async _selectTilesFinestContiguous(e,t){const i=I(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t);}async _selectTilesFinestContiguousAt(e,i,s){const n=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=n.tilemapCache,r=e.getTilesToFetch();try{if(a)await y(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:s})))),s);else if(await this._populateElevationTiles(e,s),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new s$1("elevation-query:has-unavailable-tiles")}catch(c){w(c),await this._selectTilesFinestContiguousAt(e,i-1,s);}}async _populateElevationTiles(e$1,t){const i=e$1.getTilesToFetch(),s={},l=e$1.options.cache,r$1=e$1.options.noDataValue,c=i.map((async i=>{if(null==i.id)return;const o=`${e$1.layer.uid}:${i.id}:${r$1}`,a=r(l)?l.get(o):null,c=r(a)?a:await e$1.layer.fetchTile(i.level,i.row,i.col,{noDataValue:r$1,signal:t});r(l)&&l.put(o,c),s[i.id]=new e(i,c);}));await y(E$1(c),t),e$1.populateElevationTiles(s);}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const s=t.layer.tilemapCache;if(!s)return this._selectTilesAutoPrefetchUpsample(t,i);const n=t.getTilesToFetch(),a={},r=n.map((async t=>{const n=new t$2(null,0,0,0,u()),o=await b(s.fetchAvailabilityUpsample(t.level,t.row,t.col,n,{signal:i}));!1!==o.ok?null!=t.id&&(a[t.id]=n):w(o.error);}));await y(Promise.all(r),i),t.remapTiles(a);}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const s={},n=e=>{null!=e.id&&(e.id in s?s[e.id]++:(s[e.id]=1,i++));},o=e=>{if(null==e.id)return;const t=s[e.id];1===t?(delete s[e.id],i--):s[e.id]=t-1;};e.forEachTileToFetch(n,o);let l=!0;for(;l&&(l=!1,e.forEachTileToFetch((s=>{i<=e.options.maximumAutoTileRequests||(o(s),t.upsampleTile(s)&&(l=!0),n(s));}),o),l););}_selectTilesAutoFinest(e){const t=I(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests);}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let s=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?s=!0:t();})),s&&await this._selectTilesAutoPrefetchUpsample(e,t);}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);r(e)?s=e:t.elevationTile=null;}t.z=s;}));}_extractSampleInfo(e){const t=e.layer.tileInfo,i=$(t.spatialReference);return e.geometry.coordinates.map((s=>{let n=-1;if(s.elevationTile&&s.elevationTile!==e.outsideExtentTile){n=t.lodAt(s.elevationTile.tile.level).resolution*i;}return {demResolution:n}}))}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await _n([{source:this.spatialReference,dest:e}],{signal:t});const i=new u$1({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),s=rn(i,e);if(!s)return null;const n=this.coordinates.map(((e,t)=>{const i=e.clone(),n=s.points[t];return i.x=n[0],i.y=n[1],i})),o=this.clone(n);return o.spatialReference=e,o}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const s=e.clone(t);return s.spatialReference=i,s};else switch(e.type){case"point":{const i=e,{hasZ:s,hasM:n}=i;t.coordinates=s&&n?[new _(i.x,i.y,i.z,i.m)]:s?[new _(i.x,i.y,i.z)]:n?[new _(i.x,i.y,null,i.m)]:[new _(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new w$1(t[0].x,t[0].y,t[0].z,t[0].m,i):new w$1(t[0].x,t[0].y,t[0].z,i);break}case"multipoint":{const i=e,{hasZ:s,hasM:n}=i;t.coordinates=s&&n?i.points.map((e=>new _(e[0],e[1],e[2],e[3]))):s?i.points.map((e=>new _(e[0],e[1],e[2]))):n?i.points.map((e=>new _(e[0],e[1],null,e[2]))):i.points.map((e=>new _(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new u$1({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new u$1(t.map((e=>[e.x,e.y,e.z])),i);break}case"polyline":{const i=e,s=[],n=[],{hasZ:o,hasM:l}=e;let a=0;for(const e of i.paths)if(n.push([a,a+e.length]),a+=e.length,o&&l)for(const t of e)s.push(new _(t[0],t[1],t[2],t[3]));else if(o)for(const t of e)s.push(new _(t[0],t[1],t[2]));else if(l)for(const t of e)s.push(new _(t[0],t[1],null,t[2]));else for(const t of e)s.push(new _(t[0],t[1]));t.coordinates=s,t._exporter=(t,i)=>{const s=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),o=n.map((e=>s.slice(e[0],e[1])));return new m({paths:o,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class _{constructor(e,t,i=null,s=null,n=null,o=null){this.x=e,this.y=t,this.z=i,this.m=s,this.tile=n,this.elevationTile=o;}clone(){return new _(this.x,this.y,this.z,this.m)}}class E{constructor(e,t){this.layer=e,this.options=t;}}class R extends E{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry";}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>{e.tile=null;}));else {const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y);}));}}allElevationTilesFetched(){return !this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null);}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id]);}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null;}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const s=i.tile;if(!s)continue;const n=i.tile?.id;i.elevationTile||!n||e[n]||(e[n]=s,t.push(s));}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null;}));}}class q extends E{constructor(e,t,i,s){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=s;}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),s=Math.min(i,e);s<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(s);}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;if(t$1(i))return -1;for(let s=t.lods.length-1;s>=0;s--){const n=t.lods[s],o=n.resolution*t.size[0],l=n.resolution*t.size[1];if(Math.ceil(i.width/o)*Math.ceil(i.height/l)<=e)return s}return -1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear();}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i));}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map((t=>e[t.id])));}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let s=!1;e(i,(()=>s=!0)),s?t&&t(i):this._candidateTiles.push(i);})),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t);}_uniqueNonOverlappingTiles(e,t){const i={},s=[];for(const o of e){const e=o.id;e&&!i[e]?(i[e]=o,s.push(o)):t&&t(o);}const n=s.sort(((e,t)=>e.level-t.level));return n.filter(((e,i)=>{for(let s=0;s<i;s++){const i=n[s].extent;if(i&&e.extent&&R$1(i,e.extent))return t&&t(e),!1}return !0}))}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(t$1(t))return;const i=this.layer.tileInfo,n=i.lods[e],o=i.tileAt(n.level,t.xmin,t.ymin),l=o.extent;if(t$1(l))return;const a=n.resolution*i.size[0],r=n.resolution*i.size[1],c=Math.ceil((t.xmax-l[0])/a),u=Math.ceil((t.ymax-l[1])/r);for(let s=0;s<u;s++)for(let e=0;e<c;e++){const t=new t$2(null,o.level,o.row-s,o.col+e);i.updateTileInfo(t),this._tileIsMasked(t)||this._candidateTiles.push(t);}}_tileIsMasked(e){return !!this.maskExtents&&this.maskExtents.some((t=>e.extent&&R$1(t,e.extent)))}}function I(e,t=0){let i=e.lods.length-1;if(t>0){const s=t/$(e.spatialReference),n=e.lods.findIndex((e=>e.resolution<s));0===n?i=0:n>0&&(i=n-1);}return i}const A={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};

export { g as ElevationQuery, x as GeometryDescriptor, I as getFinestLodIndex };
