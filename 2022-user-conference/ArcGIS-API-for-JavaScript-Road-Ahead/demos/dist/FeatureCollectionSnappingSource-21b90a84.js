import { A as m, m as r, xc as y, b7 as l, b8 as h, xj as m$1, xk as h$1, aB as f$1, xe as E, u as e, y as y$1, z as n$1, D as y$2 } from './_virtual_index-1ea2035a.js';
import { r as r$3, a } from './queryEngineUtils-bb18d1b1.js';
import { r as r$1, a as r$2, n } from './symbologySnappingCandidates-4bd92922.js';
import './VertexSnappingCandidate-92ca86f8.js';
import './PointSnappingHint-71b3a4f1.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let f=class extends m{constructor(e){super(e),this.view=null,this._layerView3D=null;}get availability(){return 1}get updating(){return this.layerSource.updating}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,r$2=r(e)&&"3d"===e.type;if(!r$2||"subtype-group"===t.type)return r$1();const n=async(o,r)=>(await y$2(e.whenLayerView(t),r)).elevationAlignPointsInFeatures(o,r);return r$1(r$2,{elevationInfo:t.elevationInfo,alignPointsInFeatures:n,spatialReference:e.spatialReference})}get _snappingElevationFilter(){const{view:e}=this,t=r(e)&&"3d"===e.type&&"subtype-group"!==this.layerSource.layer.type;return r$2(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource;return r(e)&&"3d"===e.type&&"subtype-group"!==t.type?n(this._symbologySnappingSupported,(async(o,i)=>{const n=await e.whenLayerView(t);return f$1(i),n.queryForSymbologySnapping({candidates:o,spatialReference:e.spatialReference},i)})):n()}get _symbologySnappingSupported(){return r(this._layerView3D)&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:e}=this,{layer:t}=this.layerSource;r(e)&&"3d"===e.type&&"subtype-group"!==t.type&&(e.whenLayerView(t).then((e=>this._layerView3D=e)),this.addHandles([e.elevationProvider.on("elevation-change",(({context:e})=>{const{elevationInfo:o}=t;y(e,o)&&this._snappingElevationAligner.notifyElevationSourceChange();})),l((()=>t.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),h),l((()=>r(this._layerView3D)?this._layerView3D.processor?.renderer:null),(()=>this._symbologySnappingFetcher.notifySymbologyChange()),h)]));}refresh(){}async fetchCandidates(e,t){const{layer:o}=this.layerSource,{coordinateHelper:i,elevationInfo:n}=e,a=o.source;if(!a.querySnapping)return [];const s=m$1(o),p=h$1(e,s),l=await a.querySnapping(p,{signal:t});f$1(t);const h=await this._snappingElevationAligner.alignCandidates(l.candidates,t);f$1(t);const m=await this._symbologySnappingFetcher.fetch(h,t);f$1(t);const d=0===m.length?h:[...h,...m],v=this._snappingElevationFilter.filter(p,d),f=i.hasZ()?E:n,S=this._getGroundElevation;return v.map((e=>r$3(e,i,f,S)))}get _getGroundElevation(){return a(this.view)}};e([y$1({constructOnly:!0})],f.prototype,"layerSource",void 0),e([y$1({constructOnly:!0})],f.prototype,"view",void 0),e([y$1()],f.prototype,"_snappingElevationAligner",null),e([y$1()],f.prototype,"_snappingElevationFilter",null),e([y$1()],f.prototype,"_symbologySnappingFetcher",null),e([y$1()],f.prototype,"_layerView3D",void 0),e([y$1()],f.prototype,"_symbologySnappingSupported",null),e([y$1()],f.prototype,"_getGroundElevation",null),f=e([n$1("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],f);

export { f as FeatureCollectionSnappingSource };
