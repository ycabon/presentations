import { hU as G, x8 as Q, x9 as es, aO as o, fR as n, u as e$1, y, z as n$1, A as m$1, m as r, lS as c$1, t, mt as t$1, b7 as l$1, hH as U, eY as d$1, b8 as h, xa as s, bC as t$2, eq as n$2, bJ as v$1, ox as f$1, D as y$1, ni as i, qX as h$1, cB as o$1, mx as j, bk as w, oH as p$1, be as a$2, aB as f$2, xb as t$3, xc as y$2, d3 as o$2, e0 as b$1, h3 as t$4, xd as p$2, xe as E } from './_virtual_index-1ea2035a.js';
import { r as r$1, a as a$3 } from './queryEngineUtils-bb18d1b1.js';
import { b } from './TileTreeDebugger-53267901.js';
import './VertexSnappingCandidate-92ca86f8.js';
import './PointSnappingHint-71b3a4f1.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
function c(n,o$1){return Q(o$1.extent,e),es(e,o(a$1,n.x,n.y,0))}const e=G(),a$1=n();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let u$1=class extends m$1{constructor(e){super(e),this.pointOfInterest=null;}get tiles(){const e=this.tilesCoveringView,t=r(this.pointOfInterest)?this.pointOfInterest:this.view.center;return e.sort(((e,r)=>c(t,e)-c(t,r))),e}_scaleEnabled(){return c$1(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||t(this.tileInfo))return [];if(!this._scaleEnabled)return [];const{spans:e,lodInfo:t$2}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:r}=t$2,o=[];for(const{row:i,colFrom:s,colTo:l}of e)for(let e=s;e<=l;e++){const s=t$2.normalizeCol(e),l=new t$1(null,r,i,s);this.tileInfo.updateTileInfo(l),o.push(l);}return o}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return r(this.tileInfo)?this.tileInfo.size[0]:256}initialize(){this.addHandles(l$1((()=>this.view?.state?.viewpoint),(()=>this.notifyChange("tilesCoveringView")),U));}};e$1([y({readOnly:!0})],u$1.prototype,"tiles",null),e$1([y({readOnly:!0})],u$1.prototype,"_scaleEnabled",null),e$1([y({readOnly:!0})],u$1.prototype,"tilesCoveringView",null),e$1([y({readOnly:!0})],u$1.prototype,"tileInfo",null),e$1([y({readOnly:!0})],u$1.prototype,"tileSize",null),e$1([y({constructOnly:!0})],u$1.prototype,"view",void 0),e$1([y({constructOnly:!0})],u$1.prototype,"layer",void 0),e$1([y()],u$1.prototype,"pointOfInterest",void 0),u$1=e$1([n$1("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],u$1);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let u=class extends d$1{constructor(e){super(e),this.pointOfInterest=null;}get tiles(){const e=this.tilesCoveringView,t=this._effectivePointOfInterest;if(r(t)){const r=e.map((e=>c(t,e)));for(let i=1;i<r.length;i++)if(r[i-1]>r[i])return e.sort(((e,r)=>c(t,e)-c(t,r))),e.slice()}return e}get tilesCoveringView(){return this._filterTiles(this.view.featureTiles?.tiles?.toArray()).map(f)}get tileInfo(){return this.view.featureTiles?.tilingScheme.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){const e=this.pointOfInterest;return r(e)?e:this.view.pointsOfInterest?.focus.location}initialize(){this.handles.add(l$1((()=>this.view.featureTiles),(e=>{this.handles.remove(v),e&&this.handles.add(e.addClient(),v);}),h));}_filterTiles(e){if(t(e))return [];return e.filter((e=>Math.abs(e.measures.screenRect[3]-e.measures.screenRect[1])>m&&e.measures.visibility===s.VISIBLE_ON_SURFACE))}};function f({lij:[e,t,r],extent:i}){return new t$1(`${e}/${t}/${r}`,e,t,r,i)}e$1([y({readOnly:!0})],u.prototype,"tiles",null),e$1([y({readOnly:!0})],u.prototype,"tilesCoveringView",null),e$1([y({readOnly:!0})],u.prototype,"tileInfo",null),e$1([y({readOnly:!0})],u.prototype,"tileSize",null),e$1([y({constructOnly:!0})],u.prototype,"view",void 0),e$1([y()],u.prototype,"pointOfInterest",void 0),e$1([y()],u.prototype,"_effectivePointOfInterest",null),u=e$1([n$1("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],u);const m=50,v="feature-tiles";

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let d=class extends b{constructor(e){super(e),this._handles=new t$2;}initialize(){const e=setInterval((()=>this._fetchDebugInfo()),2e3);this._handles.add(n$2((()=>clearInterval(e))));}destroy(){this._handles.destroy();}getTiles(){if(!this._debugInfo)return [];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach((t=>{e.set(t.data.id,t.featureCount);})),this._debugInfo.pendingTiles.forEach((r=>{e.set(r.data.id,r.featureCount),t.set(r.data.id,r.state);}));const r=r=>{const o=t.get(r),s=e.get(r)??"?";return o?`${o}:${s}\n${r}`:`store:${s}\n${r}`},o=new Map;return this._debugInfo.storedTiles.forEach((e=>{o.set(e.data.id,e.data);})),this._debugInfo.pendingTiles.forEach((e=>{o.set(e.data.id,e.data);})),Array.from(o.values()).map((e=>({lij:[e.level,e.row,e.col],geometry:v$1.fromExtent(f$1(e.extent,this.view.spatialReference)),label:r(e.id)})))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then((e=>{this._debugInfo=e,this.update();}));}};e$1([y({constructOnly:!0})],d.prototype,"handle",void 0),d=e$1([n$1("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],d);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let l=class extends d$1{constructor(e){super(e),this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async e=>{const t=[];for(const{points:i}of e)for(const{z:e}of i)t.push(e);return {elevations:t,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0;}get updating(){return this.updatingHandles.updating||this._workerHandleUpdating}destroy(){this._workerHandle.destroy();}initialize(){this._workerHandle=new p(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.points,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.handles.add([this._workerHandle.on("notify-updating",(({updating:e})=>this._workerHandleUpdating=e)),this._workerHandle.on("notify-availability",(({availability:e})=>this._set("availability",e)))]);}async setup(e,t$1){const o=this._serviceInfoFromLayer(e.layer);if(t(o))return;const a={configuration:this._convertConfiguration(e.configuration),serviceInfo:o,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",a,t$1)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t$1));}async configure(e,t){const i=this._convertConfiguration(e);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t));}async refresh(e){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e));}async fetchCandidates(e,t){const i={distance:e.distance,point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),types:e.types,filter:r(e.filter)?e.filter.toJSON():null};return this._workerHandle.invoke(i,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:r(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t));}async applyEdits(e,t){const i=this._editId++,n={id:i};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",n,t));const r$1=await this.updatingHandles.addPromise(y$1(e.result,t)),s={id:i,edits:{addedFeatures:r$1.addedFeatures?.map((({objectId:e})=>e)).filter(r)??[],deletedFeatures:r$1.deletedFeatures?.map((({objectId:e,globalId:t})=>({objectId:e,globalId:t})))??[],updatedFeatures:r$1.updatedFeatures?.map((({objectId:e})=>e)).filter(r)??[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",s,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t));}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{});}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{});}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e);}_convertConfiguration(e){return {filter:r(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}_serviceInfoFromLayer(e){return "multipatch"===e.geometryType||"mesh"===e.geometryType?null:{url:e.parsedUrl?.path??"",fields:e.fields.map((e=>e.toJSON())),geometryType:i.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}};e$1([y({constructOnly:!0})],l.prototype,"schedule",void 0),e$1([y({constructOnly:!0})],l.prototype,"hasZ",void 0),e$1([y({constructOnly:!0})],l.prototype,"elevationAlignPointsInFeatures",void 0),e$1([y({constructOnly:!0})],l.prototype,"queryForSymbologySnapping",void 0),e$1([y({readOnly:!0})],l.prototype,"updating",null),e$1([y({readOnly:!0})],l.prototype,"availability",void 0),e$1([y()],l.prototype,"_workerHandleUpdating",void 0),l=e$1([n$1("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],l);class p extends h$1{constructor(e,t){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:t});}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let a=class extends m$1{constructor(e){super(e),this.pointOfInterest=null;}get tiles(){return [new t$1("0/0/0",0,0,0,o$1(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new j({origin:new w({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new p$1({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}};e$1([y({readOnly:!0})],a.prototype,"tiles",null),e$1([y({readOnly:!0})],a.prototype,"tileInfo",null),e$1([y({readOnly:!0})],a.prototype,"tileSize",null),e$1([y({constructOnly:!0})],a.prototype,"layer",void 0),e$1([y()],a.prototype,"pointOfInterest",void 0),a=e$1([n$1("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],a);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let k=class extends(a$2(m$1)){constructor(e){super(e);}get _updateTilesParameters(){return {tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){return this._workerHandle.updating||this.updatingHandles.updating}get configuration(){const{view:e}=this,t=r(e)?e.type:"2d";return {filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:t}}get availability(){return this._workerHandle.availability}get _layer(){return this.layerSource.layer}initialize(){const e=this.view;if(r(e))switch(e.type){case"2d":this._tilesOfInterest=new u$1({view:e,layer:this._layer}),this._workerHandle=new l;break;case"3d":{const{resourceController:t}=e,r=this._layer,i=e.whenLayerView(r);this._tilesOfInterest=new u({view:e}),this._workerHandle=new l({schedule:e=>t.schedule(e),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(e,t)=>{const r=await i;return f$2(t),r.elevationAlignPointsInFeatures(e,t)},queryForSymbologySnapping:async(e,t)=>{const r=await i;return f$2(t),r.queryForSymbologySnapping(e,t)}});const o=new t$3(null);i.then((e=>o.set(e))),this.addHandles([e.elevationProvider.on("elevation-change",(({context:e})=>{const{elevationInfo:t}=r;y$2(e,t)&&this._workerHandle?.notifyElevationSourceChange();})),l$1((()=>r.elevationInfo),(()=>this._workerHandle?.notifyElevationSourceChange()),h),l$1((()=>o$2(o.get(),(({processor:e})=>e?.renderer))),(()=>this._workerHandle?.notifySymbologyChange()),h),l$1((()=>b$1(o.get(),!1,(e=>e.symbologySnappingSupported))),(e=>this._workerHandle?.setSymbologySnappingSupported(e)),h)]);break}}else this._tilesOfInterest=new a({layer:this._layer}),this._workerHandle=new l;this.handles.add([t$4(this._workerHandle)]),this._workerHandle.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null),this.updatingHandles.add((()=>this._updateTilesParameters),(()=>this._workerHandle.updateTiles(this._updateTilesParameters,null)),h),this.handles.add([l$1((()=>this.configuration),(e=>this._workerHandle.configure(e,null)),U)]),r(e)&&this.handles.add(l$1((()=>p$2.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES),(t=>{t&&!this._debug?(this._debug=new d({view:e,handle:this._workerHandle}),this.handles.add(t$4(this._debug),"debug")):!t&&this._debug&&this.handles.remove("debug");}),h)),this.handles.add(this.layerSource.layer.on("apply-edits",(e=>{this._workerHandle.applyEdits(e,null);})));}refresh(){this._workerHandle.refresh(null);}async fetchCandidates(e,t){const{coordinateHelper:r,elevationInfo:i,point:o}=e;this._tilesOfInterest.pointOfInterest=r.vectorToPoint(o);const s=r.hasZ()?E:i,n=this._getGroundElevation;return (await this._workerHandle.fetchCandidates({...e},t)).candidates.map((e=>r$1(e,r,s,n)))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}get _getGroundElevation(){return a$3(this.view)}};e$1([y({constructOnly:!0})],k.prototype,"spatialReference",void 0),e$1([y({constructOnly:!0})],k.prototype,"layerSource",void 0),e$1([y({constructOnly:!0})],k.prototype,"view",void 0),e$1([y()],k.prototype,"_tilesOfInterest",void 0),e$1([y({readOnly:!0})],k.prototype,"_updateTilesParameters",null),e$1([y({readOnly:!0})],k.prototype,"updating",null),e$1([y({readOnly:!0})],k.prototype,"configuration",null),e$1([y({readOnly:!0})],k.prototype,"availability",null),e$1([y()],k.prototype,"_getGroundElevation",null),k=e$1([n$1("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],k);

export { k as FeatureServiceSnappingSource };
