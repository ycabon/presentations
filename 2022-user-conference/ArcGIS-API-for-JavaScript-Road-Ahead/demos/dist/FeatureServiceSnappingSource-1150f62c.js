import { hg as G, uR as Q, uS as es, aL as o, f3 as n, B as e$1, C as d$1, D as n$1, E as f$1, r, kZ as c$1, t, sT as t$1, b3 as l$1, h5 as U, eI as d$2, b4 as h, uT as s, by as t$2, dW as n$2, bF as v$1, ph as f$2, I as y, pC as i, nt as h$1, cm as o$1, lX as S, bg as b$1, uU as p$1, ba as a$2, gB as t$3, uV as p$2 } from './_virtual_index-9b831d4a.js';
import { o as o$2 } from './queryEngineUtils-697e1e8c.js';
import { b } from './TileTreeDebugger-14f174e9.js';
import './VertexSnappingCandidate-6547b1c5.js';
import './PointSnappingHint-f4370fcd.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
function c(n,o$1){return Q(o$1.extent,e),es(e,o(a$1,n.x,n.y,0))}const e=G(),a$1=n();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let u$1=class extends f$1{constructor(e){super(e),this.pointOfInterest=null;}get tiles(){const e=this.tilesCoveringView,t=r(this.pointOfInterest)?this.pointOfInterest:this.view.center;return e.sort(((e,r)=>c(t,e)-c(t,r))),e}_scaleEnabled(){return c$1(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||t(this.tileInfo))return [];if(!this._scaleEnabled)return [];const{spans:e,lodInfo:t$2}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:r}=t$2,o=[];for(const{row:i,colFrom:s,colTo:l}of e)for(let e=s;e<=l;e++){const s=t$2.normalizeCol(e),l=new t$1(null,r,i,s);this.tileInfo.updateTileInfo(l),o.push(l);}return o}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return r(this.tileInfo)?this.tileInfo.size[0]:256}initialize(){this.addHandles(l$1((()=>this.view?.state?.viewpoint),(()=>this.notifyChange("tilesCoveringView")),U));}};e$1([d$1({readOnly:!0})],u$1.prototype,"tiles",null),e$1([d$1({readOnly:!0})],u$1.prototype,"_scaleEnabled",null),e$1([d$1({readOnly:!0})],u$1.prototype,"tilesCoveringView",null),e$1([d$1({readOnly:!0})],u$1.prototype,"tileInfo",null),e$1([d$1({readOnly:!0})],u$1.prototype,"tileSize",null),e$1([d$1({constructOnly:!0})],u$1.prototype,"view",void 0),e$1([d$1({constructOnly:!0})],u$1.prototype,"layer",void 0),e$1([d$1()],u$1.prototype,"pointOfInterest",void 0),u$1=e$1([n$1("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],u$1);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let u=class extends d$2{constructor(e){super(e),this.pointOfInterest=null;}get tiles(){const e=this.tilesCoveringView,t=this._effectivePointOfInterest;if(r(t)){const r=e.map((e=>c(t,e)));for(let i=1;i<r.length;i++)if(r[i-1]>r[i])return e.sort(((e,r)=>c(t,e)-c(t,r))),e.slice()}return e}get tilesCoveringView(){return this._filterTiles(this.view.featureTiles?.tiles?.toArray()).map(f)}get tileInfo(){return this.view.featureTiles?.tilingScheme.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){const e=this.pointOfInterest;return r(e)?e:this.view.pointsOfInterest?.focus.location}initialize(){this.handles.add(l$1((()=>this.view.featureTiles),(e=>{this.handles.remove(v),e&&this.handles.add(e.addClient(),v);}),h));}_filterTiles(e){if(t(e))return [];return e.filter((e=>Math.abs(e.measures.screenRect[3]-e.measures.screenRect[1])>m&&e.measures.visibility===s.VISIBLE_ON_SURFACE))}};function f({lij:[e,t,r],extent:i}){return new t$1(`${e}/${t}/${r}`,e,t,r,i)}e$1([d$1({readOnly:!0})],u.prototype,"tiles",null),e$1([d$1({readOnly:!0})],u.prototype,"tilesCoveringView",null),e$1([d$1({readOnly:!0})],u.prototype,"tileInfo",null),e$1([d$1({readOnly:!0})],u.prototype,"tileSize",null),e$1([d$1({constructOnly:!0})],u.prototype,"view",void 0),e$1([d$1()],u.prototype,"pointOfInterest",void 0),e$1([d$1()],u.prototype,"_effectivePointOfInterest",null),u=e$1([n$1("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],u);const m=50,v="feature-tiles";

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let d=class extends b{constructor(e){super(e),this.handles=new t$2;}initialize(){const e=setInterval((()=>this._fetchDebugInfo()),2e3);this.handles.add(n$2((()=>clearInterval(e))));}destroy(){this.handles.destroy();}getTiles(){if(!this.debugInfo)return [];const e=new Map,t=new Map;this.debugInfo.storedTiles.forEach((t=>{e.set(t.data.id,t.featureCount);})),this.debugInfo.pendingTiles.forEach((r=>{e.set(r.data.id,r.featureCount),t.set(r.data.id,r.state);}));const r=r=>{const o=t.get(r),s=e.get(r)??"?";return o?`${o}:${s}\n${r}`:`store:${s}\n${r}`},o=new Map;return this.debugInfo.storedTiles.forEach((e=>{o.set(e.data.id,e.data);})),this.debugInfo.pendingTiles.forEach((e=>{o.set(e.data.id,e.data);})),Array.from(o.values()).map((e=>({lij:[e.level,e.row,e.col],geometry:v$1.fromExtent(f$2(e.extent,this.view.spatialReference)),label:r(e.id)})))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then((e=>{this.debugInfo=e,this.update();}));}};e$1([d$1({constructOnly:!0})],d.prototype,"handle",void 0),d=e$1([n$1("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],d);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let l=class extends d$2{constructor(e){super(e),this.availability=0,this.workerHandleUpdating=!0,this.editId=0;}get updating(){return this.updatingHandles.updating||this.workerHandleUpdating}destroy(){this.workerHandle.destroy();}initialize(){this.workerHandle=new p(this.schedule),this.handles.add([this.workerHandle.on("notify-updating",(({updating:e})=>this.workerHandleUpdating=e)),this.workerHandle.on("notify-availability",(({availability:e})=>this._set("availability",e)))]);}async setup(e,t$1){const r=this._serviceInfoFromLayer(e.layer);if(t(r))return;const o={configuration:this._convertConfiguration(e.configuration),serviceInfo:r,spatialReference:e.spatialReference.toJSON()};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("setup",o,t$1)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t$1));}async configure(e,t){const i=this._convertConfiguration(e);await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("configure",i,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t));}async refresh(e){await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},e));}async fetchCandidates(e,t){const i={distance:e.distance,point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),types:e.types,filter:r(e.filter)?e.filter.createQuery().toJSON():null};return this.workerHandle.invoke(i,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:r(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("updateTiles",i,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t));}async applyEdits(e,t){const i=this.editId++,r={id:i};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("beginApplyEdits",r,t));const a=await this.updatingHandles.addPromise(y(e.result,t)),s={id:i,edits:{addedFeatures:a.addedFeatures?.map((({objectId:e})=>e))??[],deletedFeatures:a.deletedFeatures?.map((({objectId:e,globalId:t})=>({objectId:e,globalId:t})))??[],updatedFeatures:a.updatedFeatures?.map((({objectId:e})=>e))??[]}};await this.updatingHandles.addPromise(this.workerHandle.invokeMethod("endApplyEdits",s,t)),this.updatingHandles.addPromise(this.workerHandle.invokeMethod("whenNotUpdating",{},t));}getDebugInfo(e){return this.workerHandle.invokeMethod("getDebugInfo",{},e)}_convertConfiguration(e){return {filter:r(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters}}_serviceInfoFromLayer(e){return "multipatch"===e.geometryType||"mesh"===e.geometryType?null:{url:e.parsedUrl.path,fields:e.fields.map((e=>e.toJSON())),geometryType:i.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}};e$1([d$1({constructOnly:!0})],l.prototype,"schedule",void 0),e$1([d$1({readOnly:!0})],l.prototype,"updating",null),e$1([d$1({readOnly:!0})],l.prototype,"availability",void 0),e$1([d$1()],l.prototype,"workerHandleUpdating",void 0),l=e$1([n$1("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],l);class p extends h$1{constructor(e){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated"});}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let a=class extends f$1{constructor(e){super(e),this.pointOfInterest=null;}get tiles(){return [new t$1("0/0/0",0,0,0,o$1(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new S({origin:new b$1({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new p$1({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}};e$1([d$1({readOnly:!0})],a.prototype,"tiles",null),e$1([d$1({readOnly:!0})],a.prototype,"tileInfo",null),e$1([d$1({readOnly:!0})],a.prototype,"tileSize",null),e$1([d$1({constructOnly:!0})],a.prototype,"layer",void 0),e$1([d$1()],a.prototype,"pointOfInterest",void 0),a=e$1([n$1("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],a);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let g=class extends(a$2(f$1)){constructor(e){super(e);}get _updateTilesParameters(){return {tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){return this.workerHandle.updating||this.updatingHandles.updating}get configuration(){return {filter:this._layer.createQuery(),customParameters:this._layer.customParameters}}get availability(){return this.workerHandle.availability}get _layer(){return this.layerSource.layer}initialize(){const e=this.view;if(r(e))switch(e.type){case"2d":this._tilesOfInterest=new u$1({view:e,layer:this._layer}),this.workerHandle=new l;break;case"3d":{const r=e.resourceController;this._tilesOfInterest=new u({view:e}),this.workerHandle=new l({schedule:e=>r.schedule(e)});break}}else this._tilesOfInterest=new a({layer:this._layer}),this.workerHandle=new l;this.handles.add([t$3(this.workerHandle)]),this.workerHandle.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null),this.updatingHandles.add((()=>this._updateTilesParameters),(()=>this.workerHandle.updateTiles(this._updateTilesParameters,null)),h),this.handles.add([l$1((()=>this.configuration),(e=>this.workerHandle.configure(e,null)),U)]),r(e)&&this.handles.add(l$1((()=>p$2.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES),(r=>{r&&!this.debug?(this.debug=new d({view:e,handle:this.workerHandle}),this.handles.add(t$3(this.debug),"debug")):!r&&this.debug&&this.handles.remove("debug");}),h)),this.handles.add(this.layerSource.layer.on("apply-edits",(e=>{this.workerHandle.applyEdits(e,null);})));}refresh(){this.workerHandle.refresh(null);}async fetchCandidates(e,r){return this._tilesOfInterest.pointOfInterest=e.coordinateHelper.vectorToPoint(e.point),(await this.workerHandle.fetchCandidates({...e,filter:null},r)).candidates.map((r=>o$2(r,e.coordinateHelper,e.elevationInfo)))}getDebugInfo(e){return this.workerHandle.getDebugInfo(e)}};e$1([d$1({constructOnly:!0})],g.prototype,"spatialReference",void 0),e$1([d$1({constructOnly:!0})],g.prototype,"layerSource",void 0),e$1([d$1({constructOnly:!0})],g.prototype,"view",void 0),e$1([d$1()],g.prototype,"_tilesOfInterest",void 0),e$1([d$1({readOnly:!0})],g.prototype,"_updateTilesParameters",null),e$1([d$1({readOnly:!0})],g.prototype,"updating",null),e$1([d$1({readOnly:!0})],g.prototype,"configuration",null),e$1([d$1({readOnly:!0})],g.prototype,"availability",null),g=e$1([n$1("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],g);

export { g as FeatureServiceSnappingSource };
