import { B as e, C as d, D as n, eI as d$1, gb as e$1, gc as i, r, d1 as m, aA as j, b3 as l$1, h5 as U, dX as l$2, jZ as a, j_ as s$1, j$ as b, k0 as f$1, k1 as u, d as b$1, g, j as j$1, t, er as w, dW as n$1, k2 as z, k3 as r$1 } from './_virtual_index-9b831d4a.js';
import { f, F as Fe } from './Graphics3DScaleVisibility-2c856a9f.js';
import { l, d as d$2, s } from './Graphics3DObjectStates-f844df23.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let _=class extends d$1{constructor(t){super(t),this.type="graphics-3d",this.graphicsCore=null,this.elevationAlignment=new l,this.drapeSourceType=e$1.Features,this._suspendResumeExtent=null;}normalizeCtorArgs(t){const e={...t,scaleVisibility:null,frustumVisibility:null};return delete e.scaleVisibilityEnabled,delete e.frustumVisibilityEnabled,t.scaleVisibilityEnabled&&(e.scaleVisibility=new f),t.frustumVisibilityEnabled&&(e.frustumVisibility=new d$2),e}initialize(){const t=new Fe({owner:this,layer:this.owner.layer,preferredUpdatePolicy:i.SYNC,graphicSymbolSupported:!0});this._set("graphicsCore",t);const{layer:e,scaleVisibility:i$1}=this;if(r(i$1)&&"effectiveScaleRange"in e){const t=e;this.updatingHandles.add((()=>t.effectiveScaleRange),(()=>i$1.layerMinMaxScaleChangeHandler()));}if("fullOpacity"in this.owner){const t=this.owner;this.updatingHandles.add((()=>t.fullOpacity),(()=>this.graphicsCore.opacityChange()));}if("elevationInfo"in e){const t=e;this.updatingHandles.add((()=>t.elevationInfo),((t,e)=>{m(t,e)&&this.updatingHandles.addPromise(this.graphicsCore.elevationInfoChange());}));}}async setup(){const t=(t,e,i)=>this.graphicsCore.spatialIndex.queryGraphicUIDsInExtent(t,e,i);if(this.elevationAlignment.setup(this,t,this.graphicsCore,this.view.elevationProvider),r(this.scaleVisibility)&&"effectiveScaleRange"in this.layer){const e=this.owner.view.basemapTerrain;this.scaleVisibility.setup(this,this.layer,t,this.graphicsCore,e);}r(this.frustumVisibility)&&this.frustumVisibility.setup(this),this._set("objectStates",new s(this.graphicsCore));try{await this.graphicsCore.setup({elevationAlignment:this.elevationAlignment,scaleVisibility:this.scaleVisibility,objectStates:this.objectStates});}catch(e){if(j(e))return;throw e}this.destroyed||(this.handles.add(l$1((()=>this.view.clippingArea),(()=>this._updateClippingExtent()),U)),this._updateClippingExtent(),this._setupSuspendResumeExtent(),this.graphicsCore.startCreateGraphics());}destroy(){this.handles.removeAll(),this.updatingHandles.removeAll(),this._set("elevationAlignment",l$2(this.elevationAlignment)),this._set("scaleVisibility",l$2(this.scaleVisibility)),this._set("frustumVisibility",l$2(this.frustumVisibility)),this._set("objectStates",l$2(this.objectStates)),this._set("graphicsCore",l$2(this.graphicsCore));}get layer(){return this.owner.layer}get view(){return this.owner.view}get scaleVisibilitySuspended(){return !(!r(this.scaleVisibility)||!this.scaleVisibility.suspended)}get frustumVisibilitySuspended(){return !(!r(this.frustumVisibility)||!this.frustumVisibility.suspended)}get suspended(){return this.owner.suspended??!1}get updating(){return !!(this.graphicsCore?.updating||r(this.scaleVisibility)&&this.scaleVisibility.updating||r(this.frustumVisibility)&&this.frustumVisibility.updating||this.updatingHandles.updating)}get graphics3DGraphics(){return this.graphicsCore?.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphicsCore?.graphics3DGraphicsByObjectID}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner.fullOpacity??1}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}notifyGraphicGeometryChanged(t){this.graphicsCore.notifyGraphicGeometryChanged(t);}notifyGraphicVisibilityChanged(t){this.graphicsCore.notifyGraphicVisibilityChanged(t);}getRenderingInfo(t,e,i){const s=a(t,{renderer:e,arcade:i});if(r(s)&&s.color){const t=s.color;t[0]=t[0]/255,t[1]=t[1]/255,t[2]=t[2]/255;}return s}getRenderingInfoAsync(t,e,i,s){return s$1(t,{renderer:e,arcade:i,...s})}getHit(t){if(this.owner.loadedGraphics){const e=this.owner.loadedGraphics.find((e=>e.uid===t));if(e){const t=this.layer instanceof b?this.layer:null,i=f$1(e,t);return {type:"graphic",graphic:i,layer:i.layer}}}return null}whenGraphicBounds(t,e){return this.graphicsCore?this.graphicsCore.whenGraphicBounds(t,e):Promise.reject()}computeAttachmentOrigin(t,e){return this.graphicsCore?this.graphicsCore.computeAttachmentOrigin(t,e):null}getSymbolLayerSize(t,e){return this.graphicsCore?this.graphicsCore.getSymbolLayerSize(t,e):null}maskOccludee(t){const{set:e,handle:i}=this.objectStates.acquireSet(u.MaskOccludee,null);return this.objectStates.setUid(e,t.uid),i}highlight(t){if(t instanceof b$1)return P;if("number"==typeof t)return this.highlight([t]);if(t instanceof g)return this.highlight([t]);if(t instanceof j$1&&(t=t.toArray()),Array.isArray(t)&&t.length>0){if(t[0]instanceof g){const e=t.map((t=>t.uid)),{set:i,handle:s}=this.objectStates.acquireSet(u.Highlight,null);return this.objectStates.setUids(i,e),s}if("number"==typeof t[0]){const e=t,{set:i,handle:s}=this.objectStates.acquireSet(u.Highlight,null);return this.objectStates.setObjectIds(i,e),s}}return P}_setupSuspendResumeExtent(){const{scaleVisibility:t$1,frustumVisibility:e}=this;if(t(t$1)&&t(e))return;const i=({computedExtent:i,extentPadding:s})=>{this._suspendResumeExtent=z(i,this._suspendResumeExtent,r$1,s),r(t$1)&&t$1.setExtent(this._suspendResumeExtent),r(e)&&e.setExtent(this._suspendResumeExtent);};this.handles.add(l$1((()=>({computedExtent:this.graphicsCore?.computedExtent,extentPadding:this.graphicsCore?.extentPadding})),(t=>i(t)),w));}_updateClippingExtent(){const t=this.view.clippingArea;this.graphicsCore.setClippingExtent(t,this.view.spatialReference)&&this.graphicsCore.recreateAllGraphics();}};e([d()],_.prototype,"type",void 0),e([d({constructOnly:!0})],_.prototype,"owner",void 0),e([d()],_.prototype,"layer",null),e([d()],_.prototype,"view",null),e([d({constructOnly:!0})],_.prototype,"graphicsCore",void 0),e([d({constructOnly:!0})],_.prototype,"scaleVisibility",void 0),e([d({constructOnly:!0})],_.prototype,"frustumVisibility",void 0),e([d({readOnly:!0})],_.prototype,"elevationAlignment",void 0),e([d({readOnly:!0})],_.prototype,"objectStates",void 0),e([d({readOnly:!0})],_.prototype,"scaleVisibilitySuspended",null),e([d({readOnly:!0})],_.prototype,"frustumVisibilitySuspended",null),e([d()],_.prototype,"suspended",null),e([d({readOnly:!0})],_.prototype,"updating",null),e([d()],_.prototype,"loadedGraphics",null),e([d()],_.prototype,"fullOpacity",null),e([d()],_.prototype,"slicePlaneEnabled",null),e([d()],_.prototype,"drapeSourceType",void 0),e([d()],_.prototype,"updatePolicy",null),_=e([n("esri.views.3d.layers.graphics.GraphicsProcessor")],_);const P=n$1();

export { _ };
