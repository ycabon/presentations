import { u as e, eY as d, gI as e$1, m as r, gJ as i, dm as m, aC as j, b7 as l$1, hH as U, es as s$1, kP as a, kQ as s$2, eb as b, kR as f, kS as u, x, P as g, e9 as j$1, t, eX as w, y, z as n, eq as n$1, kT as z, kU as s$3 } from './_virtual_index-1ea2035a.js';
import { F as Fe, l, S, s, _ as _$1 } from './Graphics3DScaleVisibility-0e954b85.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let A=class extends d{constructor(t){super(t),this.type="graphics-3d",this.graphicsCore=null,this.drapeSourceType=e$1.Features,this.scaleVisibilityEnabled=!1,this.frustumVisibilityEnabled=!1,this._suspendResumeExtent=null;}initialize(){const{layer:t}=this,e="effectiveScaleRange"in t?t:null,i$1=this.scaleVisibilityEnabled&&r(e),s$1=new Fe({owner:this,layer:this.owner.layer,preferredUpdatePolicy:i.SYNC,graphicSymbolSupported:!0,componentFactories:{elevationAlignment:(t,e)=>new l({graphicsCoreOwner:this,graphicsCore:t,queryGraphicUIDsInExtent:e,elevationProvider:this.view.elevationProvider}),scaleVisibility:i$1?(t,i)=>new S({graphicsCoreOwner:this,layer:e,queryGraphicUIDsInExtent:i,graphicsCore:t,basemapTerrain:this.owner.view.basemapTerrain}):null,objectStates:t=>new s(t)}});if(this._set("graphicsCore",s$1),this.frustumVisibilityEnabled&&this._set("frustumVisibility",new _$1({graphicsCoreOwner:this})),"fullOpacity"in this.owner){const t=this.owner;this.updatingHandles.add((()=>t.fullOpacity),(()=>this.graphicsCore.opacityChange()));}if("elevationInfo"in t){const e=t;this.updatingHandles.add((()=>e.elevationInfo),((t,e)=>{m(t,e)&&this.updatingHandles.addPromise(this.graphicsCore.elevationInfoChange());}));}this._set("initializePromise",this._initializeAsync()),this.updatingHandles.addPromise(this.initializePromise);}async _initializeAsync(){try{await this.graphicsCore.initializePromise;}catch(t){if(j(t))return;throw t}this.destroyed||(this.handles.add(l$1((()=>this.view.clippingArea),(()=>this._updateClippingExtent()),U)),this._updateClippingExtent(),this._setupSuspendResumeExtent(),this.graphicsCore.startCreateGraphics());}destroy(){this.handles.removeAll(),this.updatingHandles.removeAll(),this._set("frustumVisibility",s$1(this.frustumVisibility)),this._set("graphicsCore",s$1(this.graphicsCore));}get layer(){return this.owner.layer}get view(){return this.owner.view}get scaleVisibility(){return this.graphicsCore?.scaleVisibility}get elevationAlignment(){return this.graphicsCore?.elevationAlignment}get objectStates(){return this.graphicsCore?.objectStates}get scaleVisibilitySuspended(){return !(!r(this.scaleVisibility)||!this.scaleVisibility.suspended)}get frustumVisibilitySuspended(){return r(this.frustumVisibility)&&this.frustumVisibility.suspended}get suspended(){return this.owner.suspended??!1}get updating(){return !!(this.graphicsCore?.updating||r(this.scaleVisibility)&&this.scaleVisibility.updating||r(this.frustumVisibility)&&this.frustumVisibility.updating||this.updatingHandles.updating)}get graphics3DGraphics(){return this.graphicsCore?.graphics3DGraphics}get graphics3DGraphicsByObjectID(){return this.graphicsCore?.graphics3DGraphicsByObjectID}get loadedGraphics(){return this.owner.loadedGraphics}get fullOpacity(){return this.owner.fullOpacity??1}get slicePlaneEnabled(){return this.owner.slicePlaneEnabled}get updatePolicy(){return this.owner.updatePolicy}notifyGraphicGeometryChanged(t){this.graphicsCore.notifyGraphicGeometryChanged(t);}notifyGraphicVisibilityChanged(t){this.graphicsCore.notifyGraphicVisibilityChanged(t);}getRenderingInfo(t,e,i){const s=a(t,{renderer:e,arcade:i});if(r(s)&&s.color){const t=s.color;t[0]=t[0]/255,t[1]=t[1]/255,t[2]=t[2]/255;}return s}getRenderingInfoAsync(t,e,i,s){return s$2(t,{renderer:e,arcade:i,...s})}getHit(t){if(this.owner.loadedGraphics){const e=this.owner.loadedGraphics.find((e=>e.uid===t));if(e){const t=this.layer instanceof b?this.layer:null,i=f(e,t);return {type:"graphic",graphic:i,layer:i.layer}}}return null}whenGraphicBounds(t,e){return this.graphicsCore?this.graphicsCore.whenGraphicBounds(t,e):Promise.reject()}computeAttachmentOrigin(t,e){return this.graphicsCore?this.graphicsCore.computeAttachmentOrigin(t,e):null}getSymbolLayerSize(t,e){return this.graphicsCore?this.graphicsCore.getSymbolLayerSize(t,e):null}maskOccludee(t){const{set:e,handle:i}=this.objectStates.acquireSet(u.MaskOccludee,null);return this.objectStates.setUid(e,t.uid),i}highlight(t){if(t instanceof x)return _;if("number"==typeof t)return this.highlight([t]);if(t instanceof g)return this.highlight([t]);if(t instanceof j$1&&(t=t.toArray()),Array.isArray(t)&&t.length>0){if(t[0]instanceof g){const e=t.map((t=>t.uid)),{set:i,handle:s}=this.objectStates.acquireSet(u.Highlight,null);return this.objectStates.setUids(i,e),s}if("number"==typeof t[0]){const e=t,{set:i,handle:s}=this.objectStates.acquireSet(u.Highlight,null);return this.objectStates.setObjectIds(i,e),s}}return _}_setupSuspendResumeExtent(){const{scaleVisibility:t$1,frustumVisibility:e}=this;if(t(t$1)&&t(e))return;const i=({computedExtent:i,extentPadding:s})=>{this._suspendResumeExtent=z(i,this._suspendResumeExtent,s$3,s),r(t$1)&&t$1.setExtent(this._suspendResumeExtent),r(e)&&e.setExtent(this._suspendResumeExtent);};this.handles.add(l$1((()=>({computedExtent:this.graphicsCore?.computedExtent,extentPadding:this.graphicsCore?.extentPadding})),(t=>i(t)),w));}_updateClippingExtent(){const t=this.view.clippingArea;this.graphicsCore.setClippingExtent(t,this.view.spatialReference)&&this.graphicsCore.recreateAllGraphics();}};e([y()],A.prototype,"type",void 0),e([y({constructOnly:!0})],A.prototype,"owner",void 0),e([y()],A.prototype,"layer",null),e([y()],A.prototype,"view",null),e([y({constructOnly:!0})],A.prototype,"graphicsCore",void 0),e([y()],A.prototype,"scaleVisibility",null),e([y({constructOnly:!0})],A.prototype,"frustumVisibility",void 0),e([y()],A.prototype,"elevationAlignment",null),e([y()],A.prototype,"objectStates",null),e([y()],A.prototype,"scaleVisibilitySuspended",null),e([y({readOnly:!0})],A.prototype,"frustumVisibilitySuspended",null),e([y()],A.prototype,"suspended",null),e([y({readOnly:!0})],A.prototype,"updating",null),e([y()],A.prototype,"loadedGraphics",null),e([y()],A.prototype,"fullOpacity",null),e([y()],A.prototype,"slicePlaneEnabled",null),e([y()],A.prototype,"drapeSourceType",void 0),e([y()],A.prototype,"updatePolicy",null),e([y({constructOnly:!0})],A.prototype,"scaleVisibilityEnabled",void 0),e([y({constructOnly:!0})],A.prototype,"frustumVisibilityEnabled",void 0),e([y()],A.prototype,"initializePromise",void 0),A=e([n("esri.views.3d.layers.graphics.GraphicsProcessor")],A);const _=n$1();

export { A };
