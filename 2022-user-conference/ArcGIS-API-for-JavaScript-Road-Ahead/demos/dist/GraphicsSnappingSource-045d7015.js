import { be as a, A as m, m as r, b8 as h, xc as y, b7 as l, qU as L, aB as f, xe as E, xl as a$1, xk as h$1, t, bD as j, oS as _n, bJ as v, sC as B, gz as An, fr as rn, c5 as p, d5 as nt, l8 as s, ni as i, u as e, y as y$1, z as n$1, D as y$2, hB as v$1 } from './_virtual_index-1ea2035a.js';
import { u } from './FeatureStore-6d86d70a.js';
import { Y } from './QueryEngine-c226e0c5.js';
import { r as r$3, a as a$2 } from './queryEngineUtils-bb18d1b1.js';
import { r as r$1, a as r$2, n } from './symbologySnappingCandidates-4bd92922.js';
import './optimizedFeatureQueryEngineAdapter-fcb7e44b.js';
import './centroid-205dc6cf.js';
import './QueryEngineCapabilities-45006836.js';
import './timeSupport-eac99e81.js';
import './VertexSnappingCandidate-92ca86f8.js';
import './PointSnappingHint-71b3a4f1.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
const U="graphics-collections";let x=class extends(a(m)){constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0;}get updating(){return this.updatingHandles.updating}get _hasZ(){const e=this.view;return r(e)&&"3d"===e.type&&"map-notes"!==this.layerSource.layer.type}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,o=r(e)&&"3d"===e.type;if(!o||"map-notes"===t.type)return r$1();const r$2=async(o,r)=>(await y$2(e.whenLayerView(t),r)).elevationAlignPointsInFeatures(o,r);return r$1(o,{elevationInfo:t.elevationInfo,alignPointsInFeatures:r$2,spatialReference:e.spatialReference})}get _snappingElevationFilter(){const{view:e}=this,t=r(e)&&"3d"===e.type&&"map-notes"!==this.layerSource.layer.type;return r$2(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,o=r(e)&&"3d"===e.type,r$1=this._extrudedPolygonSymbolsCount>0;return o&&"map-notes"!==t.type&&r$1?n(r$1,(async(o,r)=>{const s=await e.whenLayerView(t);return f(r),s.queryForSymbologySnapping({candidates:o,spatialReference:e.spatialReference},r)})):n()}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources((e=>this._destroySource(e)));}initialize(){this.updatingHandles.add((()=>this.getGraphicsLayers()),(e=>{this.updatingHandles.removeHandles(U);for(const t of e)this._addMany(t.graphics.toArray()),this.handles.add([t.on("graphic-update",(e=>this._onGraphicUpdate(e))),this.updatingHandles.addOnCollectionChange((()=>t.graphics),(e=>this._onGraphicsChanged(e)))],U);}),h);const{view:e}=this,{layer:t}=this.layerSource;r(e)&&"3d"===e.type&&"map-notes"!==t.type&&this.addHandles([e.elevationProvider.on("elevation-change",(({context:e})=>{y(e,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange();})),l((()=>t.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),h)]);}async fetchCandidates(e,t){const{point:o,coordinateHelper:r,elevationInfo:s}=e,i=await L(this._mapSources((o=>this._fetchCandidatesForSource(o,e,t))));f(t);const n=r.hasZ()?E:s,l=this._getGroundElevation,c=i.flat().map((e=>r$3(e,r,n,l)));return a$1(o,c,r),c}get _getGroundElevation(){return a$2(this.view)}async _fetchCandidatesForSource(e,t,o){const r=h$1(t),s=await e.queryEngine.executeQueryForSnapping(r,o);f(o);const i=await this._snappingElevationAligner.alignCandidates(s.candidates,o);f(o);const n=await this._symbologySnappingFetcher.fetch(i,o);f(o);const a=0===n.length?i:[...i,...n];return this._snappingElevationFilter.filter(r,a)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some((t=>t.graphics.includes(e.graphic))))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic]);}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added);}_addMany(e){const t$1=[],o=new Map;for(const r of e)t(r.geometry)||(this._needsInitializeProjection(r.geometry.spatialReference)?(t$1.push(r.geometry.spatialReference),o.set(r.uid,r)):this._add(r));this._createPendingAdd(t$1,o);}_createPendingAdd(e,t){if(!e.length)return;const s=j((async o=>{await _n(e.map((e=>({source:e,dest:this.spatialReference}))),{signal:o}),this._markLoadedSpatialReferences(e);for(const[,e]of t)this._add(e);}));this.updatingHandles.addPromise(s.promise);const i={task:s,graphics:t},n=()=>v$1(this._pendingAdds,i);s.promise.then(n,n),this._pendingAdds.push(i);}_markLoadedSpatialReferences(e){for(const t of e)null!=t.wkid&&this._loadedWkids.add(t.wkid),null!=t.wkt&&this._loadedWkts.add(t.wkt);}_add(e){if(t(e.geometry)||!e.visible)return;let t$1=e.geometry;if("mesh"===t$1.type)return;"extent"===t$1.type&&(t$1=v.fromExtent(t$1));const o=this._ensureSource(t$1.type);if(t(o))return;const r=this._createOptimizedFeature(e.uid,t$1);t(r)||(o.featureStore.add(r),B(e.symbol)&&this._extrudedPolygonSymbolsCount++);}_needsInitializeProjection(e){return (null==e.wkid||!this._loadedWkids.has(e.wkid))&&((null==e.wkt||!this._loadedWkts.has(e.wkt))&&!An(e,this.spatialReference))}_createOptimizedFeature(e,t){const o=rn(p(t),this.spatialReference);if(!o)return null;const r=this._ensureGeometryHasZ(o),s$1=nt(r,this._hasZ,!1);return new s(s$1,{[H]:e},null,e)}_ensureGeometryHasZ(e){if(!this._hasZ)return e;const t=e=>{for(;e.length<3;)e.push(0);},o=e.clone();switch(o.hasZ=!0,o.type){case"point":o.z=o.z??0;break;case"multipoint":o.points.forEach(t);break;case"polyline":o.paths.forEach((e=>e.forEach(t)));break;case"polygon":o.rings.forEach((e=>e.forEach(t)));}return o}_ensureSource(e){const t=this._sources[e];if(r(t))return t;const o=this._createSource(e);return this._sources[e]=o,o}_createSource(e){const t=i.toJSON(e),o=this._hasZ,r$1=new u({geometryType:t,hasZ:o,hasM:!1});return {featureStore:r$1,queryEngine:new Y({featureStore:r$1,fields:[{name:H,type:"esriFieldTypeOID",alias:H}],geometryType:t,hasM:!1,hasZ:o,objectIdField:H,spatialReference:this.spatialReference,scheduler:r(this.view)&&"3d"===this.view.type?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources((t=>this._removeFromSource(t,e)));for(const t of this._pendingAdds)t.graphics.delete(e.uid),0===t.graphics.size&&t.task.abort();}_removeFromSource(e,t){const o=t.uid;e.featureStore.has(o)&&(e.featureStore.removeById(t.uid),B(t.symbol)&&this._extrudedPolygonSymbolsCount--);}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null;}_mapSources(e){const{point:t,polygon:o,polyline:r$1,multipoint:s}=this._sources,n=[];return r(t)&&n.push(e(t)),r(o)&&n.push(e(o)),r(r$1)&&n.push(e(r$1)),r(s)&&n.push(e(s)),n}};e([y$1()],x.prototype,"getGraphicsLayers",void 0),e([y$1({constructOnly:!0})],x.prototype,"layerSource",void 0),e([y$1({constructOnly:!0})],x.prototype,"spatialReference",void 0),e([y$1({constructOnly:!0})],x.prototype,"view",void 0),e([y$1({readOnly:!0})],x.prototype,"updating",null),e([y$1({readOnly:!0})],x.prototype,"availability",void 0),e([y$1()],x.prototype,"_hasZ",null),e([y$1()],x.prototype,"_snappingElevationAligner",null),e([y$1()],x.prototype,"_snappingElevationFilter",null),e([y$1()],x.prototype,"_symbologySnappingFetcher",null),e([y$1()],x.prototype,"_extrudedPolygonSymbolsCount",void 0),e([y$1()],x.prototype,"_getGroundElevation",null),x=e([n$1("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],x);const H="OBJECTID";

export { x as GraphicsSnappingSource };
