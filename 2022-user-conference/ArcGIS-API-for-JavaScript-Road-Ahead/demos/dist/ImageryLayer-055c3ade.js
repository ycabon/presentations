import { a as e$1, d as d$7, iA as o, bY as r, jQ as r$1, n as n$2, i as l$4, bo as y$6, bZ as j$2, O as t$1, jO as o$1, lv as T$2, cw as s, aw as b$1, ba as k, jg as x$1, G as r$2, jz as n$4, jG as o$3, jH as e$2, L as L$1, jF as L$2, eP as w$3, jC as i$3, c3 as d$8, jD as y$7, aP as v$1, cI as m$5, ld as y$8, nS as w$4, jZ as f$4, cd as d$9, m as j$3, C as s$1, s as s$2, iC as v$2, nX as $, e as e$3, iu as b$2, nY as s$3, aO as v$3, l as l$7, cG as g$2, nZ as v$4, f$ as a$1, ne as a$2, nL as a$3, ng as n$7, nf as t$2, jV as c$4, jW as w$5, nJ as o$4, jU as p$a, jX as O$1, ij as b$3, bb as w$6, nj as d$a, n_ as e$4, nF as c$5, nl as p$b, jj as J } from './_virtual_index-64b818a8.js';
import { n as n$3, p as p$8, o as o$2, i as i$2, l as l$6, a as i$4, u as u$3, m as m$6, V, B, k as k$1, t as te, f as f$6, b as i$5, c as n$6 } from './fetchRasterInfo-b1764849.js';
import { R as R$2, _, h as h$4, f as f$3, p as p$9, l as l$5, T as T$3, O, S as S$2 } from './RasterSymbolizer-6f387eb1.js';
import { u as u$4 } from './pixelUtils-d970883c.js';
import { f as f$5, a as f$7 } from './dataUtils-7eaa3915.js';
import { s as s$4, n as n$5 } from './executeForIds-16781a89.js';
import './colorUtils-d9f4d315.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var u$2;const c$3=new Set(["raster","raster2","dem","fillraster"]),p$7=new Set(["rasters"]),m$4=t=>t&&t.rasterFunction?d$6.fromJSON(t):t,f$2=t=>t&&t instanceof d$6?t.toJSON():t,l$3=t=>t?.functionName&&!t.declaredClass,y$5=t=>l$3(t)?new d$6(t):t,F$1=t=>{if(null==t)return null;t=y$6(t);const r={};for(const e of Object.keys(t))c$3.has(e.toLowerCase())?r[e]=m$4(t[e]):p$7.has(e.toLowerCase())&&Array.isArray(t[e])?r[e]=t[e].map(m$4):r[e]=t[e];return r};let d$6=u$2=class extends l$4{constructor(t){super(t),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.rasterFunctionDefinition=null;}set functionArguments(t){if(t){const r=Object.keys(t);if(r.some((r=>c$3.has(r.toLowerCase())&&l$3(t[r])))||r.some((r=>p$7.has(r.toLowerCase())&&Array.isArray(t[r])&&t[r].some((t=>l$3(t)))))){t=y$6(t);for(const e of r)c$3.has(e.toLowerCase())?t[e]=y$5(t[e]):p$7.has(e.toLowerCase())&&Array.isArray(t[e])&&(t[e]=t[e].map((t=>y$5(t))));}}this._set("functionArguments",t);}readFunctionArguments(t){return F$1(t)}writeFunctionArguments(t,r,e){const o={};for(const n of Object.keys(t))c$3.has(n.toLowerCase())?o[n]=f$2(t[n]):p$7.has(n.toLowerCase())&&Array.isArray(t[n])?o[n]=t[n].map(f$2):o[n]=f$2(t[n]);r[e]=o;}readFunctionName(t,r){const e=r.rasterFunctionInfos,o=r.name;return o||(e&&e.length&&"None"!==e[0].name?e[0].name:r.rasterFunctionDefinition?r.rasterFunctionDefinition.name:r.rasterFunction)}clone(){return new u$2({functionName:this.functionName,functionArguments:y$6(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:y$6(this.rasterFunctionDefinition)})}};e$1([d$7({json:{type:Object,name:"rasterFunctionArguments"}})],d$6.prototype,"functionArguments",null),e$1([o("functionArguments")],d$6.prototype,"readFunctionArguments",null),e$1([r("functionArguments")],d$6.prototype,"writeFunctionArguments",null),e$1([d$7({json:{type:String,write:{target:"rasterFunction"}}})],d$6.prototype,"functionName",void 0),e$1([o("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],d$6.prototype,"readFunctionName",null),e$1([r$1({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),d$7({json:{default:"unknown"}})],d$6.prototype,"outputPixelType",void 0),e$1([d$7({type:String,json:{read:!0,write:!0}})],d$6.prototype,"variableName",void 0),e$1([d$7({type:Object,json:{name:"rasterFunctionDefinition"}})],d$6.prototype,"rasterFunctionDefinition",void 0),d$6=u$2=e$1([n$2("esri.layers.support.RasterFunction")],d$6);const w$2=d$6;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
const e={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
const l$2={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},m$3={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},f$1=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function p$6(e){return f$1.has(e.type)}function g$1(t,n){if(!t||!n)return y$6(t||n);const r=y$6(t);if(n.rasterFunctionDefinition){const e=n.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),d$5(r.rasterFunctionDefinition.arguments,n);}else if("none"!==n.functionName.toLowerCase()){R$1(r.functionArguments).Raster=n;}return r}function d$5(e,t){for(const n in e)"raster"===n.toLowerCase()&&("RasterFunctionVariable"===e[n].type?(e[n]=t.rasterFunctionDefinition,e[n].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[n].type&&d$5(e[n].arguments,t));}function h$3(t){const n=y$6(e[t.functionName+"Function"]),o=t.functionArguments;for(const e in o)"raster"===e.toLowerCase()?(n.arguments[e]=h$3(o[e]),n.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(n.arguments[e].value=D(o[e]),n.arguments.ColorSchemeType.value=0):n.arguments[e].value=o[e];return n}function b(e,t){switch(t=t||{},e.type){case"raster-stretch":return T$1(e,t);case"class-breaks":return S$1(e,t);case"unique-value":return F(e,t);case"raster-colormap":return x(e,t);case"vector-field":return w$1(e,t);case"raster-shaded-relief":return v(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}function R$1(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?R$1(t.functionArguments):e}const y$4={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function w$1(e,t){const r=new w$2;r.functionName="VectorFieldRenderer";const{dataType:o,bandProperties:a}=t,i="vector-uv"===o;let s,u;a&&2===a.length&&(s=a.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),u=a.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==s&&null!==s||(s=0,u=1);const l="arithmetic"===e.rotationType?1:2,f="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new j$2,g={magnitudeBandID:s,directionBandID:u,isUVComponents:i,referenceSystem:l,massFlowAngleRepresentation:f,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:m$3[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};return r.functionArguments=g,t.convertToRFT?new w$2({rasterFunctionDefinition:h$3(r)}):r}function v(e,t){const r=t.convertToRFT;if("elevation"!==t.dataType)return new w$2;const i=new w$2;i.functionName="Hillshade";const s="traditional"===e.hillshadeType?0:1,u="none"===e.scalingType?1:3,c={HillshadeType:s,SlopeType:u,ZFactor:e.zFactor};return 0===s&&(c.Azimuth=e.azimuth,c.Altitude=e.altitude),3===u&&(c.PSPower=e.pixelSizePower,c.PSZFactor=e.pixelSizeFactor),i.functionArguments=c,i.variableName="Raster",e.colorRamp&&(i.functionName="ShadedRelief",r?c.ColorRamp=_(e.colorRamp):c.Colormap=h$4(e.colorRamp,256)),r?new w$2({rasterFunctionDefinition:h$3(i)}):i}function T$1(e,t){const r=t.convertToRFT,s=new w$2;s.functionName="Stretch";const c=y$4[n$3.toJSON(e.stretchType)],l="u8",m={StretchType:c,Statistics:N$1(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(m.Min=e.outputMin),null!=e.outputMax&&(m.Max=e.outputMax),c===y$4.standardDeviation?(m.NumberOfStandardDeviations=e.numberOfStandardDeviations,s.outputPixelType=l):c===y$4.percentClip?(m.MinPercent=e.minPercent,m.MaxPercent=e.maxPercent,s.outputPixelType=l):c===y$4.minMax?s.outputPixelType=l:c===y$4.sigmoid&&(m.SigmoidStrengthLevel=e.sigmoidStrengthLevel),s.functionArguments=m,s.variableName="Raster",e.colorRamp){const u=e.colorRamp,c=new w$2;if(r)c.functionArguments={ColorRamp:_(u)};else {const n=f$3(u);if(n)c.functionArguments={colorRamp:n};else if(!t.convertColorRampToColormap||"algorithmic"!==u.type&&"multipart"!==u.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),c.functionArguments={colorRamp:t};}else c.functionArguments={Colormap:h$4(u,256)};}return c.variableName="Raster",c.functionName="Colormap",c.functionArguments.Raster=s,r?new w$2({rasterFunctionDefinition:h$3(c)}):c}return r?new w$2({rasterFunctionDefinition:h$3(s)}):s}function S$1(e,r){const o=[],a=[],i=[],s=[],u=1e-6,{pixelType:c,rasterAttributeTable:l}=r,m=t$1(l)?null:l.features,f=A(l);if(m&&Array.isArray(m)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,n)=>{const r=t.symbol.color;let o;r.a&&m.forEach((a=>{o=a.attributes[e.field],(o>=t.minValue&&o<t.maxValue||n===e.classBreakInfos.length-1&&o>=t.minValue)&&s.push([a.attributes[f],r.r,r.g,r.b]);}));}));const t=c?C(s,c):s,o=new w$2;return o.functionName="Colormap",o.functionArguments={},o.functionArguments.Colormap=t,o.variableName="Raster",r.convertToRFT?new w$2({rasterFunctionDefinition:h$3(o)}):o}e.classBreakInfos.forEach(((e,t)=>{const n=e.symbol&&e.symbol.color;n.a?(0===t?o.push(e.minValue,e.maxValue+u):o.push(e.minValue+u,e.maxValue+u),a.push(t),s.push([t,n.r,n.g,n.b])):i.push(e.minValue,e.maxValue);}));const p=c?C(s,c):s,g=new w$2;g.functionName="Remap",g.functionArguments={InputRanges:o,OutputValues:a,NoDataRanges:i},g.variableName="Raster";const d=new w$2;return d.functionName="Colormap",d.functionArguments={Colormap:p,Raster:g},r.convertToRFT?new w$2({rasterFunctionDefinition:h$3(d)}):d}function C(e,t){const n=l$2[String(t).toLowerCase()];return n&&e.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),e}function A(e){if(t$1(e))return;const{fields:n}=e,r=n&&n.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return r&&r.name}function F(e,r){const o=[],{pixelType:a,rasterAttributeTable:i}=r,s=t$1(i)?null:i.features,u=A(i),c=e.defaultSymbol?.color?.toRgb(),l=e.uniqueValueInfos;if(l)if(s){const t=new Map;l.forEach((e=>{const n=e.value,r=e.symbol.color?.toRgb();null!=n&&r&&t.set(String(n),r);}));const n=e.field;s.forEach((({attributes:e})=>{const r=String(e[n]),a=e[u];if(t.has(r)){const e=t.get(r);o.push([a,...e]);}else c&&o.push([a,...c]);}));}else for(let t=0;t<l.length;t++){const e=l[t],n=e.symbol.color,r=+e.value;if(n?.a){if(isNaN(r))return null;o.push([r,n.r,n.g,n.b]);}}const m=a&&o.length>0?C(o,a):o,f=new w$2;return f.functionName="Colormap",f.functionArguments={},f.functionArguments.Colormap=m,f.variableName="Raster",r.convertToRFT?new w$2({rasterFunctionDefinition:h$3(f)}):f}function x(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:o}=t,a=o?C(r,o):r,i=new w$2;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=a,t.convertToRFT?new w$2({rasterFunctionDefinition:h$3(i)}):i}function N$1(e){const t=[];return e.forEach((e=>{const n=e;if(Array.isArray(n))t.push(n);else {if(null==n.min||null==n.max)return;const e=[n.min,n.max,n.avg||0,n.stddev||0];t.push(e);}})),t}function D(e){const t=[],n=[];return e.forEach((e=>{t.push(e[0]),n.push(R$2([...e.slice(1),255]));})),{type:"RasterColormap",values:t,colors:n}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var u$1;const m$2=o$1()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),h$2=o$1()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function M(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone";}return h$2.fromJSON(t)}let w=u$1=class extends l$4{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null;}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return M(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const o=t.mosaicOperation,r=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),i=o||(r?m$2.toJSON(r):null);return m$2.fromJSON(i)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new u$1({ascending:this.ascending,itemRenderingRule:y$6(this.itemRenderingRule),lockRasterIds:y$6(this.lockRasterIds),method:this.method,multidimensionalDefinition:y$6(this.multidimensionalDefinition),objectIds:y$6(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:y$6(this.viewpoint),where:this.where})}};e$1([d$7({type:Boolean,json:{write:!0}})],w.prototype,"ascending",void 0),e$1([o("ascending",["ascending","sortAscending"])],w.prototype,"readAscending",null),e$1([d$7({type:w$2,json:{write:!0}})],w.prototype,"itemRenderingRule",void 0),e$1([d$7({type:[T$2],json:{write:{overridePolicy(){return {enabled:"lock-raster"===this.method}}}}})],w.prototype,"lockRasterIds",void 0),e$1([d$7({type:String,json:{type:h$2.jsonValues,write:{target:"mosaicMethod",writer:h$2.write}}})],w.prototype,"method",void 0),e$1([o("method",["mosaicMethod","defaultMosaicMethod"])],w.prototype,"readMethod",null),e$1([d$7({type:[p$8],json:{write:!0}})],w.prototype,"multidimensionalDefinition",void 0),e$1([d$7({type:[T$2],json:{name:"fids",write:!0}})],w.prototype,"objectIds",void 0),e$1([d$7({json:{type:m$2.jsonValues,read:{reader:m$2.read},write:{target:"mosaicOperation",writer:m$2.write}}})],w.prototype,"operation",void 0),e$1([o("operation",["mosaicOperation","mosaicOperator"])],w.prototype,"readOperation",null),e$1([d$7({type:String,json:{write:{overridePolicy(){return {enabled:"attribute"===this.method}}}}})],w.prototype,"sortField",void 0),e$1([d$7({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return {enabled:"attribute"===this.method,allowNull:!0}}}}})],w.prototype,"sortValue",void 0),e$1([s("sortValue")],w.prototype,"castSortValue",null),e$1([d$7({type:b$1,json:{write:!0}})],w.prototype,"viewpoint",void 0),e$1([d$7({type:String,json:{write:!0}})],w.prototype,"where",void 0),w=u$1=e$1([n$2("esri.layers.support.MosaicRule")],w);const y$3=w;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let d$4=class extends l$4{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2;}writeAdjustAspectRatio(e,r,t){this.layer.version<10.3||(r[t]=e);}get bandIds(){return this.layer.bandIds}set bandIds(e){this.layer&&(this.layer.bandIds=e);}get compressionQuality(){return this.layer?.compressionQuality}set compressionQuality(e){this.layer&&(this.layer.compressionQuality=e);}writeCompressionQuality(e,r,t){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(r[t]=e);}get compressionTolerance(){return this.layer?.compressionTolerance}set compressionTolerance(e){this.layer&&(this.layer.compressionTolerance=e);}writeCompressionTolerance(e,r,t){"lerc"===this.format&&null!=e&&(r[t]=e);}get format(){return "vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer?.interpolation}set interpolation(e){this.layer&&(this.layer.interpolation=e);}get noData(){return this.layer?.noData}set noData(e){this.layer&&(this.layer.noData=e);}get noDataInterpretation(){return this.layer?.noDataInterpretation}set noDataInterpretation(e){this.layer&&(this.layer.noDataInterpretation=e);}writeLercVersion(e,r,t){"lerc"===this.format&&this.layer.version>=10.5&&(r[t]=e);}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("renderingRule"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("renderer"),e.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(e){this._set("version",e);}get mosaicRule(){const e=this.layer;let r=e.mosaicRule;const t=e.definitionExpression;return r?t&&t!==r.where&&(r=r.clone(),r.where=t):t&&(r=new y$3({where:t})),r}get renderingRule(){const e=this.layer;let r=e.renderingRule;const t=e.pixelFilter,o=!e.format||e.format.includes("jpg")||e.format.includes("png");return r=this._addResampleRasterFunction(r),o&&!t&&"vector-field"!==e.renderer?.type&&(r=this.combineRendererWithRenderingRule()),r}combineRendererWithRenderingRule(){const e=this.layer,{rasterInfo:r,renderingRule:t,renderer:o}=e;if(!o||!p$6(o))return t;return g$1(b(o,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:r.keyProperties?.BandProperties,convertColorRampToColormap:e.version<10.6,convertToRFT:!!t?.rasterFunctionDefinition}),t)}_addResampleRasterFunction(e){if(!("vector-field"===this.layer.renderer?.type)||"Resample"===e?.functionName||t$1(this.layer.serviceRasterInfo))return e;const r="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,o=this.layer.serviceRasterInfo.pixelSize;let i=new w$2({functionName:"Resample",functionArguments:{ResamplingType:r,InputCellSize:o}});return i=e?.rasterFunctionDefinition?new w$2({rasterFunctionDefinition:h$3(i)}):i,g$1(i,e)}};e$1([d$7()],d$4.prototype,"layer",void 0),e$1([d$7({json:{write:!0}})],d$4.prototype,"adjustAspectRatio",void 0),e$1([r("adjustAspectRatio")],d$4.prototype,"writeAdjustAspectRatio",null),e$1([d$7({json:{write:!0}})],d$4.prototype,"bandIds",null),e$1([d$7({json:{write:!0}})],d$4.prototype,"compression",void 0),e$1([d$7({json:{write:!0}})],d$4.prototype,"compressionQuality",null),e$1([r("compressionQuality")],d$4.prototype,"writeCompressionQuality",null),e$1([d$7({json:{write:!0}})],d$4.prototype,"compressionTolerance",null),e$1([r("compressionTolerance")],d$4.prototype,"writeCompressionTolerance",null),e$1([d$7({json:{write:!0}})],d$4.prototype,"format",null),e$1([d$7({type:String,json:{read:{reader:o$2.read},write:{writer:o$2.write}}})],d$4.prototype,"interpolation",null),e$1([d$7({json:{write:!0}})],d$4.prototype,"noData",null),e$1([d$7({type:String,json:{read:{reader:i$2.read},write:{writer:i$2.write}}})],d$4.prototype,"noDataInterpretation",null),e$1([d$7({json:{write:!0}})],d$4.prototype,"pixelType",void 0),e$1([d$7({json:{write:!0}})],d$4.prototype,"lercVersion",void 0),e$1([r("lercVersion")],d$4.prototype,"writeLercVersion",null),e$1([d$7({type:Number})],d$4.prototype,"version",null),e$1([d$7({json:{write:!0}})],d$4.prototype,"mosaicRule",null),e$1([d$7({json:{write:!0}})],d$4.prototype,"renderingRule",null),d$4=e$1([n$2("esri.layers.mixins.ExportImageServiceParameters")],d$4);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let p$5=class extends l$4{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null;}};e$1([d$7({type:Number,json:{write:!0}})],p$5.prototype,"north",void 0),e$1([d$7({type:Number,json:{write:!0}})],p$5.prototype,"up",void 0),e$1([d$7({type:k,json:{write:!0}})],p$5.prototype,"spatialReference",void 0),p$5=e$1([n$2("esri.rest.support.ImageAngleResult")],p$5);const i$1=p$5;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let p$4=class extends l$4{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null;}};e$1([d$7({json:{write:!0}})],p$4.prototype,"catalogItemVisibilities",void 0),e$1([d$7({type:x$1,json:{write:!0}})],p$4.prototype,"catalogItems",void 0),e$1([d$7({type:b$1,json:{write:!0}})],p$4.prototype,"location",void 0),e$1([d$7({json:{write:!0}})],p$4.prototype,"name",void 0),e$1([d$7({json:{write:!0}})],p$4.prototype,"objectId",void 0),e$1([d$7({json:{write:!0}})],p$4.prototype,"processedValues",void 0),e$1([d$7({json:{write:!0}})],p$4.prototype,"properties",void 0),e$1([d$7({json:{write:!0}})],p$4.prototype,"value",void 0),p$4=e$1([n$2("esri.rest.support.ImageIdentifyResult")],p$4);const l$1=p$4;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let t=class extends l$4{constructor(){super(...arguments),this.geometries=null;}};e$1([d$7({json:{write:!0}})],t.prototype,"geometries",void 0),t=e$1([n$2("esri.rest.support.ImagePixelLocationResult")],t);const p$3=t;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let i=class extends l$4{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null;}};e$1([d$7({json:{write:!0}})],i.prototype,"attributes",void 0),e$1([d$7({type:b$1,json:{write:!0}})],i.prototype,"location",void 0),e$1([d$7({json:{write:!0}})],i.prototype,"locationId",void 0),e$1([d$7({json:{write:!0}})],i.prototype,"rasterId",void 0),e$1([d$7({json:{write:!0}})],i.prototype,"resolution",void 0),e$1([d$7({json:{write:!0}})],i.prototype,"pixelValue",void 0),i=e$1([n$2("esri.rest.support.ImageSample")],i);const p$2=i;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let p$1=class extends l$4{constructor(){super(...arguments),this.samples=null;}};e$1([d$7({type:[p$2],json:{write:!0}})],p$1.prototype,"samples",void 0),p$1=e$1([n$2("esri.rest.support.ImageSampleResult")],p$1);const c$2=p$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
function u(e){const t=e?.time;if(t&&(null!=t.start||null!=t.end)){const n=[];null!=t.start&&n.push(t.start),null==t.end||n.includes(t.end)||n.push(t.end),e.time=n.join(",");}}async function p(e,r,i){const m=n$4(e),c=r.geometry?[r.geometry]:[],l=await L$2(c),p=r.toJSON();u(p);const f=l&&l[0];r$2(f)&&(p.geometry=f.toJSON());const g=o$3({...m.query,f:"json",...p});return e$2(g,i)}async function f(n,i,m){const c=i.toJSON();r$2(c.angleName)&&(c.angleName=c.angleName.join(",")),r$2(i.point)&&i.point.spatialReference?.imageCoordinateSystem&&(c.point.spatialReference=h$1(i.point.spatialReference)),r$2(i.spatialReference)&&i.spatialReference.imageCoordinateSystem&&(c.spatialReference=R(i.spatialReference));const u=n$4(n),p=o$3({...u.query,f:"json",...c}),f=e$2(p,m),{data:g}=await L$1(`${u.path}/computeAngles`,f);return g.spatialReference=g.spatialReference?null!=g.spatialReference.geodataXform?new k({wkid:0,imageCoordinateSystem:g.spatialReference}):k.fromJSON(g.spatialReference):null,"NaN"===g.north&&(g.north=null),"NaN"===g.up&&(g.up=null),new i$1(g)}async function g(t,n,r){const i=n.toJSON(),{geometries:c}=n;for(let e=0;e<c.length;e++)c[e].spatialReference?.imageCoordinateSystem&&(i.geometries.geometries[e].spatialReference=h$1(c[e].spatialReference));const l=n$4(t),u=o$3({...l.query,f:"json",...i}),p=e$2(u,r),{data:f}=await L$1(`${l.path}/computePixelLocation`,p);return p$3.fromJSON(f)}async function y$2(t,n,a){const s=await p(t,n,a),r=n$4(t),{data:i}=await L$1(`${r.path}/computeStatisticsHistograms`,s),{statistics:m}=i;return m?.length&&m.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation;})),{statistics:m,histograms:i.histograms}}async function d$3(t,n,a){const s=await p(t,n,a),r=n$4(t),{data:i}=await L$1(`${r.path}/computeHistograms`,s);return {histograms:i.histograms}}async function N(r,i,m){const l=i.toJSON();u(l),l.outFields?.length&&(l.outFields=l.outFields.join(","));const p=(await L$2(i.geometry))?.[0];r$2(p)&&(l.geometry=p.toJSON());const f=n$4(r),g=o$3({...f.query,f:"json",...l}),y=e$2(g,m),{data:d}=await L$1(`${f.path}/getSamples`,y),N=d?.samples?.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return {...e,pixelValue:t}}));return c$2.fromJSON({samples:N})}async function S(r,m,c){const l=n$4(r),u=m.geometry?[m.geometry]:[];return L$2(u).then((n=>{const o=m.toJSON(),r=n&&n[0];r$2(r)&&(o.geometry=JSON.stringify(r.toJSON()));const i=o$3({...l.query,f:"json",...o}),u=e$2(i,c);return L$1(l.path+"/identify",u)})).then((e=>l$1.fromJSON(e.data)))}function h$1(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:n}=t;return null!=e?n?{icsid:e,icsns:n}:{icsid:e}:{ics:t}}return e.toJSON()}function R(e,t){const n=h$1(e),{icsid:o,icsns:a,wkid:s}=n;return null!=o?null==a||t?.toLowerCase().includes("/"+a.toLowerCase()+"/")?`0:${o}`:JSON.stringify(n):s?s.toString():JSON.stringify(n)}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
async function n$1(n,m,p){const f=n$4(n),u=o$3({...f.query,f:"json"}),h=e$2(u,p),d=`${f.path}/${m}/info`,c=L$1(`${d}`,h),g=L$1(`${d}/keyProperties`,h),x=await Promise.allSettled([c,g]),y="fulfilled"===x[0].status?x[0].value.data:null,v="fulfilled"===x[1].status?x[1].value.data:null;let P=null;y.statistics?.length&&(P=y.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const S=w$3.fromJSON(y.extent),j=Math.ceil(S.width/y.pixelSizeX-.1),w=Math.ceil(S.height/y.pixelSizeY-.1),b=S.spatialReference,k=new b$1({x:y.pixelSizeX,y:y.pixelSizeY,spatialReference:b}),z=y.histograms?.length?y.histograms:null,L=new p$9({origin:y.origin,blockWidth:y.blockWidth,blockHeight:y.blockHeight,firstPyramidLevel:y.firstPyramidLevel,maximumPyramidLevel:y.maxPyramidLevel});return new l$5({width:j,height:w,bandCount:y.bandCount,extent:S,spatialReference:b,pixelSize:k,pixelType:y.pixelType.toLowerCase(),statistics:P,histograms:z,keyProperties:v,storageInfo:L})}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var n;let m$1=n=class extends l$4{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null;}clone(){return new n(y$6({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};e$1([d$7({type:[String],json:{name:"angleName",write:!0}})],m$1.prototype,"angleNames",void 0),e$1([d$7({type:b$1,json:{write:!0}})],m$1.prototype,"point",void 0),e$1([d$7({type:k,json:{write:!0}})],m$1.prototype,"spatialReference",void 0),e$1([d$7({type:T$2,json:{write:!0}})],m$1.prototype,"rasterId",void 0),m$1=n=e$1([n$2("esri.rest.support.ImageAngleParameters")],m$1);const l=m$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var y$1;let j$1=y$1=class extends l$4{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null;}writeGeometry(e,r,t){null!=e&&(r.geometryType=v$1(e),r[t]=e.toJSON());}clone(){return new y$1(y$6({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};e$1([d$7({types:i$3,json:{read:d$8}})],j$1.prototype,"geometry",void 0),e$1([r("geometry")],j$1.prototype,"writeGeometry",null),e$1([d$7({type:y$3,json:{write:!0}})],j$1.prototype,"mosaicRule",void 0),e$1([d$7({type:w$2,json:{write:!0}})],j$1.prototype,"renderingRule",void 0),e$1([d$7({type:b$1,json:{write:!0}})],j$1.prototype,"pixelSize",void 0),e$1([d$7({json:{write:!0}})],j$1.prototype,"raster",void 0),e$1([d$7({type:y$7,json:{read:{source:"time"},write:{target:"time"}}})],j$1.prototype,"timeExtent",void 0),j$1=y$1=e$1([n$2("esri.rest.support.ImageHistogramParameters")],j$1);const d$2=j$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var y;let c$1=y=class extends l$4{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1;}writeGeometry(e,t,r){null!=e&&(t.geometryType=v$1(e),t[r]=JSON.stringify(e.toJSON()));}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=y$3.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t);}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()));}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=w$2.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t);}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[r]=JSON.stringify(e.rasterFunctionDefinition));}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))));}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e));}writeTimeExtent(e,t,r){if(null!=e){const o=r$2(e.start)?e.start.getTime():null,s=r$2(e.end)?e.end.getTime():null;t[r]=null!=o?null!=s?`${o},${s}`:`${o}`:null;}}clone(){return new y(y$6({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};e$1([d$7({json:{write:!0}})],c$1.prototype,"geometry",void 0),e$1([r("geometry")],c$1.prototype,"writeGeometry",null),e$1([d$7({type:y$3,json:{write:!0}})],c$1.prototype,"mosaicRule",null),e$1([r("mosaicRule")],c$1.prototype,"writeMosaicRule",null),e$1([d$7({type:w$2,json:{write:!0}})],c$1.prototype,"renderingRule",null),e$1([r("renderingRule")],c$1.prototype,"writeRenderingRule",null),e$1([d$7({type:[w$2],json:{write:!0}})],c$1.prototype,"renderingRules",void 0),e$1([r("renderingRules")],c$1.prototype,"writeRenderingRules",null),e$1([d$7({type:b$1,json:{write:!0}})],c$1.prototype,"pixelSize",void 0),e$1([r("pixelSize")],c$1.prototype,"writePixelSize",null),e$1([d$7({type:Boolean,json:{write:!0}})],c$1.prototype,"returnGeometry",void 0),e$1([d$7({type:Boolean,json:{write:!0}})],c$1.prototype,"returnCatalogItems",void 0),e$1([d$7({type:Boolean,json:{write:!0}})],c$1.prototype,"returnPixelValues",void 0),e$1([d$7({type:Number,json:{write:!0}})],c$1.prototype,"maxItemCount",void 0),e$1([d$7({type:y$7,json:{write:{target:"time"}}})],c$1.prototype,"timeExtent",void 0),e$1([r("timeExtent")],c$1.prototype,"writeTimeExtent",null),e$1([d$7({json:{write:!0}})],c$1.prototype,"raster",void 0),e$1([d$7({json:{write:!0}})],c$1.prototype,"viewId",void 0),e$1([d$7({type:Boolean,json:{write:!0}})],c$1.prototype,"processAsMultidimensional",void 0),c$1=y=e$1([n$2("esri.rest.support.ImageIdentifyParameters")],c$1);const d$1=c$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var m;let c=m=class extends l$4{constructor(){super(...arguments),this.geometries=null,this.rasterId=null;}writeGeometry(r,e,o){e.geometries={geometryType:"esriGeometryPoint",geometries:r.map((r=>r.toJSON()))};}clone(){return new m({geometries:this.geometries.map((r=>r.clone())),rasterId:this.rasterId})}};e$1([d$7({type:[b$1],json:{write:!0}})],c.prototype,"geometries",void 0),e$1([r("geometries")],c.prototype,"writeGeometry",null),e$1([d$7({type:T$2,json:{write:!0}})],c.prototype,"rasterId",void 0),c=m=e$1([n$2("esri.rest.support.ImagePixelLocationParameters")],c);const a=c;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var d;let j=d=class extends l$4{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null;}writeGeometry(t,e,o){null!=t&&(e.geometryType=v$1(t),e[o]=t.toJSON());}set locations(t){if(t?.length){const e=new m$5({spatialReference:t[0].spatialReference});e.points=t.map((t=>[t.x,t.y])),this._set("locations",t),this.geometry=e;}}clone(){return new d(y$6({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};e$1([d$7({types:i$3,json:{read:d$8}})],j.prototype,"geometry",void 0),e$1([r("geometry")],j.prototype,"writeGeometry",null),e$1([d$7()],j.prototype,"locations",null),e$1([d$7({type:String,json:{type:o$2.jsonValues,read:o$2.read,write:o$2.write}})],j.prototype,"interpolation",void 0),e$1([d$7({type:y$3,json:{write:!0}})],j.prototype,"mosaicRule",void 0),e$1([d$7({type:[String],json:{write:!0}})],j.prototype,"outFields",void 0),e$1([d$7({type:b$1,json:{write:!0}})],j.prototype,"pixelSize",void 0),e$1([d$7({type:String,json:{write:!0}})],j.prototype,"raster",void 0),e$1([d$7({type:Boolean,json:{write:!0}})],j.prototype,"returnFirstValueOnly",void 0),e$1([d$7({type:Number,json:{write:!0}})],j.prototype,"sampleDistance",void 0),e$1([d$7({type:Number,json:{write:!0}})],j.prototype,"sampleCount",void 0),e$1([d$7({type:Number,json:{write:!0}})],j.prototype,"sliceId",void 0),e$1([d$7({type:y$7,json:{read:{source:"time"},write:{target:"time"}}})],j.prototype,"timeExtent",void 0),j=d=e$1([n$2("esri.rest.support.ImageSampleParameters")],j);const h=j;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
const ge=o$1()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Re=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),ve=v$4(a$1,{min:0,max:255});function Se(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi)?.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return t?t.join("/"):null}const be=a$1=>{let g$1=class extends a$1{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0;}initialize(){this._set("exportImageServiceParameters",new d$4({layer:this}));}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?y$3.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return !this.rasterFunctionInfos||r$2(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||r$2(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name);})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e);}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e);}get fieldsIndex(){return this.fields?new d$9(this.fields):null}set format(e){e&&Re.has(e.toLowerCase())&&this._set("format",e.toLowerCase());}readFormat(e,t){return "esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=y$3.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t);}readMosaicRule(e,t){const r=e||t.mosaicRule;return r?y$3.fromJSON(r):this._isMosaicRuleSupported(t)?y$3.fromJSON(t):null}writeMosaicRule(e,t,r){let i=this.mosaicRule;const s=this.definitionExpression;i?s&&s!==i.where&&(i=i.clone(),i.where=s):s&&(i=new y$3({where:s})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON());}get multidimensionalInfo(){return r$2(this.serviceRasterInfo)?this.serviceRasterInfo.multidimensionalInfo:null}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=ve(e));}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name;}return e}get parsedUrl(){return this.url?j$3(this.url):null}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e);}readRenderer(e,t,i){const s=t?.layerDefinition?.drawingInfo?.renderer,n=u$3(s,i);return null==n?null:("vector-field"===n.type&&t.symbolTileSize&&!s.symbolTileSize&&(n.symbolTileSize=t.symbolTileSize),p$6(n)||s$1.getLogger(this.declaredClass).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n)}writeRenderer(e,t,r){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize);}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new y$8({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new y$8({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new y$8({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let s=this.fields?y$6(this.fields):[];s.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&s.push(t),this.version>=10.4&&r$2(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&s.push(i),r$2(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{s.push(new y$8({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}));})),this._isVectorDataSet()&&(s.push(new y$8({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),s.push(new y$8({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:n}=this.rasterInfo,o=r$2(n)?n.fields:null;if(o.length){const t=o.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const r=y$6(t);return r.name=e+t.name,r}));s=s.concat(t);}return s}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=w$2.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t);}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?this._isRFTJson(t.renderingRule)?w$2.fromJSON({rasterFunctionDefinition:t.renderingRule}):w$2.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){const i=e.toJSON();i.rasterFunctionDefinition?t[r]=i.rasterFunctionDefinition:t[r]=i;}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?k.fromJSON(r):null}readPixelType(e){return ge.fromJSON(e)||e}writePixelType(e,t,r){(t$1(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=ge.toJSON(e));}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this.symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),s=this._rasterJobHandler.instance,{bandIds:n}=this;if(s){i&&(this.symbolizer.bind(),await s.updateSymbolizer(this.symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const o=await s.symbolize({bandIds:n,...e},t);r={extent:e.extent,pixelBlock:o};}else r={extent:e.extent,pixelBlock:this.symbolizer.symbolize({bandIds:n,...e})};}return r}destroy(){this._shutdownJobHandler();}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++;}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler();}async computeAngles(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsComputeAngles)throw new s$2("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=v$2(l,e).clone(),f(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsComputePixelLocation)throw new s$2("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=v$2(a,e).clone(),g(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsComputeHistograms)throw new s$2("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=v$2(d$2,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),d$3(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new s$2("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=v$2(d$2,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),y$2(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return r$2(t)?t.get(e):void 0}getFieldDomain(e,t){const r=this.getField(e);return r?r.domain:null}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return Promise.reject(new s$2("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const s=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return $(s).then((s=>{s&&(this.rasterInfo=s);const n={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(n)}))}fetchKeyProperties(e){return L$1(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new s$2("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):L$1(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.renderingRule:null})}).then((e=>x$1.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return n$1(this.parsedUrl.path,e,r)}async getCatalogItemICSInfo(e,t){const{data:r}=await L$1(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let s=null;try{s=(await L$1(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent;}catch{}if(!s||!s.spatialReference)return {ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const o=this.version>=10.7?L$1(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=s.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[s]}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},u=L$1(this.parsedUrl.path+"/project",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),p=5,c=(s.xmin+s.xmax)/2,m=(s.ymax-s.ymin)/(p+1),d=s.ymin+m,h=[];for(let n=0;n<p;n++)h.push({x:c,y:d+m*n});const f={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:h}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},y=L$1(this.parsedUrl.path+"/project",{query:this._getQueryParams(f),...t}).then((e=>e.data)).catch((()=>({}))),g=await Promise.all([o,u,y]);let R=g[0].ipxf;if(null==R){const e=i.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(R={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}});}const v=w$3.fromJSON(g[1]&&g[1].geometries&&g[1].geometries[0]);v&&(v.spatialReference=new k({wkid:0,imageCoordinateSystem:i}));const S=g[2].geometries?g[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],b=S.length;if(b<3)return {ics:i,icsToPixelTransform:R,icsExtent:v,northDirection:null};let I=0,x=0,_=0,w=0;for(let n=0;n<b;n++)I+=S[n].x,x+=S[n].y,_+=S[n].x*S[n].x,w+=S[n].x*S[n].y;const F=(b*w-I*x)/(b*_-I*I);let D=0;const j=S[p-1].x>S[0].x,P=S[p-1].y>S[0].y;return F===1/0?D=P?90:270:0===F?D=j?0:180:F>0?D=j?180*Math.atan(F)/Math.PI:180*Math.atan(F)/Math.PI+180:F<0&&(D=P?180+180*Math.atan(F)/Math.PI:360+180*Math.atan(F)/Math.PI),{ics:i,icsToPixelTransform:R,icsExtent:v,northDirection:D}}async generateRasterInfo(e,t){if((!e||"none"===e?.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e))&&r$2(this.serviceRasterInfo))return this.serviceRasterInfo;const r=Se(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){e=e.clone().shiftCentralMeridian();const s=R(e.spatialReference,this.parsedUrl.path);r$2(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const n=this.exportImageServiceParameters.toJSON(),{bandIds:o,noData:a}=n;let{renderingRule:l}=n;const u=this.renderingRule?.rasterFunctionDefinition,c=!this.renderer||"raster-stretch"===this.renderer.type;if(o?.length&&this._hasRenderingRule(this.renderingRule)&&!u&&c){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:o}};if("Stretch"===l.rasterFunction)e.rasterFunctionArguments.Raster=l.rasterFunctionArguments.Raster,l.rasterFunctionArguments.Raster=e;else if("Colormap"===l.rasterFunction){const t=l.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,l.rasterFunctionArguments.Raster=e);}else e.rasterFunctionArguments.Raster=l,l=e;n.bandIds=void 0;}else n.bandIds=o?.join(",");a instanceof Array&&a.length>0&&(n.noData=a.join(","));const m=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,i):null;n.mosaicRule=m&&JSON.stringify(m),n.renderingRule=this._getRenderingRuleString(w$2.fromJSON(l));const d={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?d.time=""+e:null==e&&null==t||(d.time=`${e??"null"},${t??"null"}`);}return {bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:s,imageSR:s,size:t+","+r,...n,...d}}async getSamples(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsGetSamples)throw new s$2("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=v$2(h,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),N(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsIdentify)throw new s$2("imagery-layer:query-rasters","query operation is not supported on the input image service");e=v$2(d$1,e).clone();const{raster:r,mosaicRule:i,renderingRule:s}=this;if(s&&null==e.renderingRule&&(e.renderingRule=s),i&&null==e.mosaicRule){const t=this._combineMosaicRuleWithTimeExtent(i,e.timeExtent);e.mosaicRule=e$3(t);}return r&&null==e.raster&&(e.raster=r),S(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new b$2;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return ({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),s$3(this.url,e,t)}async queryObjectIds(e,t){return ({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),s$4(this.url,e,t)}async queryRasterCount(e,t){return ({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),n$5(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new s$2("imagery-layer: query-visible-rasters","missing query parameter");const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:s,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let a=!1,l=null,u=null;const m="raster.servicepixelvalue",d=this._rasterFunctionNamesIndex;if(r$2(e.outFields)&&(a=e.outFields.some((e=>!e.toLowerCase().includes(m))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(m)&&e.length>m.length)).map((e=>{const t=e.slice(m.length+1);return [this._updateRenderingRulesFunctionName(t,d),t]}));l=t.map((e=>new w$2({functionName:e[0]}))),u=t.map((e=>e[1])),0===l.length?this.renderingRule?(l.push(this.renderingRule),u.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some((e=>e.functionName===this.renderingRule.functionName))&&(l.push(this.renderingRule),u.push(this.renderingRule.functionName));}const h=t$1(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),f=e.timeExtent||this.timeExtent,y=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,f),g=this._getQueryParams({geometry:e.geometry,timeExtent:f,mosaicRule:y,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:a,returnGeometry:h,raster:this.raster,maxItemCount:s?1:null});delete g.f;const R=new d$1(g);try{await this.generateRasterInfo(this.renderingRule);const r=await S(this.url,R,{signal:t?.signal,query:{...this.customParameters}}),s=e.outFields,o=r.value.toLowerCase().includes("nodata");if(!(a&&!h&&r?.catalogItems?.features.length&&(n||!o)))return this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s});const l=this.objectIdField||"ObjectId",c=r.catalogItems.features,m=c.map((e=>e.attributes?.[l])),d=new b$2({objectIds:m,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[l]}),f=await this.queryRasters(d);return f?.features?.length&&f.features.forEach((t=>{c.forEach((r=>{r.attributes[l]===t.attributes[l]&&(r.geometry=new v$3(t.geometry),r$2(e.outSpatialReference)&&(r.geometry.spatialReference=e.outSpatialReference));}));})),this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s})}catch{throw new s$2("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=L$1(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.statistics)),i=L$1(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.histograms)),s=await Promise.all([r,i]);return s[0]&&s[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation;})),{statistics:s[0]||null,histograms:s[1]||null}}async createFlowMesh(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):f$5(e.meshType,e.simulationSettings,e.flowData,r$2(t.signal)?t.signal:(new AbortController).signal)}async _fetchService(e){await this._fetchServiceInfo(e),r$2(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=r$2(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):m$6(this.parsedUrl.path,t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),e))),i=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,s=this._getRasterFunctionInfos();return Promise.all([r,i,s]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),s$1.getLogger(this.declaredClass).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles(l$7((()=>this.renderingRule),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e);}));})));const{serviceRasterInfo:t}=this;r$2(t)&&t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t);}))}_combineMosaicRuleWithTimeExtent(e,t){const r=this.timeInfo;if(t$1(e)||t$1(this.multidimensionalInfo)||t$1(t)||t$1(r?.startField))return e;const{startField:i}=r,s=this.multidimensionalInfo.variables.some((e=>e.dimensions.some((e=>e.name===i))))?i:"StdTime";if(e=e.clone(),"mosaic-dataset"===this._serviceSourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter((e=>e.dimensionName!==s)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const n=e.multidimensionalDefinition.filter((e=>e.dimensionName===s)),o=r$2(t.start)?t.start.getTime():null,a=r$2(t.end)?t.end.getTime():null,l=null==o||null==a||o===a,u=l?[o||a]:[[o,a]],m=this.version>=10.8;if(n.length)n.forEach((e=>{e.dimensionName===s&&(m?(e.dimensionName=null,e.isSlice=null,e.values=null):(e.isSlice=l,e.values=u));}));else if(!m){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=s,e.isSlice=l,e.values=u;})):e.multidimensionalDefinition.push(new p$8({variableName:"",dimensionName:s,isSlice:l,values:u}));}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return t$1(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this._serviceSourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(await this._fetchCapabilities(t?.signal),!this.capabilities.operations.supportsQuery)throw new s$2("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=r$2(e)?v$2(b$2,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new n$6;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e;}),(()=>null)),await this._rasterJobHandler.connectionPromise;}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null;}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:r}=this;return "unique-value"===e.type&&this._hasRenderingRule(r)&&1===t.bandCount&&["u8","s8"].includes(t.pixelType)||V(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:r,ssl:i}=await L$1(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});t=r,this.sourceJSON=t,i&&(this.url=this.url.replace(/^http:/i,"https:"));}if(t.capabilities?.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly")>-1)throw new s$2("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl});}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return !1;const t=this._isMosaicDataset(e),r=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&e.fields?.length>1);return t||r}_isVectorFieldResampleFunction(e){if(t$1(e))return !1;const{functionName:t,functionArguments:r}=e,i="resample"===t?.toLowerCase(),s=r?.ResampleType||r?.resampleType;return i&&(7===s||10===s)}_isPicture(){return !this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=B(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e);}e||(e=k$1(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const t=te(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=t,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new T$3({rendererJSON:t,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null);}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:r$2(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){r$2(e?.renderingRule)&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:r}=this;return {raster:t,viewId:r,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return {...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):O(e,t,r)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.serviceRasterInfo)return t;if(t&&this.version>=10.3){if(1===t.length&&"none"===t[0].name.toLowerCase())return t;return (await L$1(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos}return null}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format?.indexOf("png")>-1){return {imageElement:(await L$1(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i})).data,params:t}}const s=this._initJobHandler(),a=L$1(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}),l=(await Promise.all([a,s]))[0].data,u=t.format||"jpgpng";let p=u;if("bsq"!==p&&"bip"!==p&&(p=S$2(l)),!p)throw new s$2("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(l)));const c={signal:i},m="gif"===u||"bmp"===u||u.includes("png")&&("png"===p||"jpg"===p)?O(l,{useCanvas:!0,...t},c):this._decodePixelBlock(l,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:u},c);return {pixelData:{pixelBlock:await m,extent:t.extent},params:t}}_generateRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return f$6(this.parsedUrl.path,e,r)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=i$5(e);if(r$2(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new y$3;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t);}}_processVisibleRastersResponse(e,r){r=r||{};const i=e.value,{templateRRFunctionNames:s,showNoDataRecords:n,returnDomainValues:o,templateFields:a}=r,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,c=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const m=this.objectIdField||"ObjectId",d="string"==typeof i&&i.toLowerCase().includes("nodata"),h=[];if(i&&!u&&!d){const e={};e[m]=0;c=[i],u=[new g$2(this.fullExtent,null,e)];}if(!u)return [];let f,y,g;this._updateResponseFieldNames(u,a),d&&!n&&(u=[]);for(let t=0;t<u.length;t++){if(f=u[t],null!=i){if(y=c[t],g=this.renderingRule&&l&&l.length>0&&s&&s.length>0&&s.includes(this.renderingRule.functionName)?l[s.indexOf(this.renderingRule.functionName)]:i,"nodata"===y.toLowerCase()&&!n)continue;const e="Raster.ItemPixelValue",r="Raster.ServicePixelValue";f.attributes[e]=y,f.attributes[r]=g,this._updateFeatureWithMagDirValues(f,y);const o=this.fields&&this.fields.length>0;let a=this.renderingRule&&r$2(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?o?y:i:g;this.renderingRule||(a=o?y:i),this._updateFeatureWithRasterAttributeTableValues(f,a);}if(f.sourceLayer=f.layer=this,o&&this._updateFeatureWithDomainValues(f),s&&l&&s.length===l.length)for(let e=0;e<s.length;e++){const t="Raster.ServicePixelValue."+s[e];f.attributes[t]=l[e];}h.push(u[t]);}return h}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||(r$2(this.serviceRasterInfo)?this.serviceRasterInfo.attributeTable:null);if(t$1(r))return;const{features:i,fields:s}=r,n=s.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),o=n&&n[0];if(!o)return;const a=i.filter((e=>e.attributes[o]===(null!=t?parseInt(t,10):null)));a&&a[0]&&s.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=a[0].attributes[t.name];}));}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const r=t.split(/,\s*/).map((e=>parseFloat(e))),i=r.map((e=>[e])),s=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new u$4({height:1,width:1,pixelType:"f32",pixels:i,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new w$3(0,0,0,0,this.spatialReference)});const o="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:f$7([n.pixels[0][0],n.pixels[1][0]]);e.attributes["Raster.Magnitude"]=o[0],e.attributes["Raster.Direction"]=o[1];}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.find((e=>e.code===r));i&&(e.attributes[t.name]=i.name);}}));}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;t$1(r)||e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t]);}}));}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRenderingRule(e){return e&&e.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return "esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:s}=e,n=t.includes("image"),o="esriImageServiceDataTypeElevation"===e.serviceDataType,a=!!(e.spatialReference||e.extent&&e.extent.spatialReference),l=t.includes("edit");return {data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsMeasure:t.includes("mensuration")&&a,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&n,supportsProject:r>=10.3&&n,supportsComputeStatisticsHistograms:r>=10.4&&n,supportsQueryBoundary:r>=10.6&&n,supportsCalculateVolume:r>=10.7&&o,supportsComputePixelLocation:r>=10.7&&t.includes("catalog"),supportsComputeAngles:r>=10.91,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!!i?.supportsStatistics,supportsOrderBy:!!i?.supportsOrderBy,supportsDistinct:!!i?.supportsDistinct,supportsPagination:!!i?.supportsPagination,supportsStandardizedQueriesOnly:!!i?.useStandardizedQueries,supportsPercentileStatistics:!!i?.supportsPercentileStatistics,supportsCentroid:!!i?.supportsReturningGeometryCentroid,supportsDistance:!!i?.supportsQueryWithDistance,supportsExtent:!!i?.supportsReturningQueryExtent,supportsGeometryProperties:!!i?.supportsReturningGeometryProperties,supportsHavingClause:!!i?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!i?.supportsDefaultSR,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return e$1([d$7()],g$1.prototype,"_functionRasterInfos",void 0),e$1([d$7()],g$1.prototype,"_rasterJobHandler",void 0),e$1([d$7({dependsOn:["_serviceSupportsMosaicRule"]})],g$1.prototype,"_defaultServiceMosaicRule",void 0),e$1([o("_defaultServiceMosaicRule",["defaultMosaicMethod"])],g$1.prototype,"readDefaultServiceMosaicRule",null),e$1([d$7()],g$1.prototype,"_cachedRendererJson",void 0),e$1([d$7({readOnly:!0})],g$1.prototype,"_serviceSourceType",void 0),e$1([o("_serviceSourceType",["serviceSourceType","fields"])],g$1.prototype,"readServiceSourceType",null),e$1([d$7({readOnly:!0})],g$1.prototype,"_serviceSupportsMosaicRule",void 0),e$1([o("_serviceSupportsMosaicRule",["currentVersion","fields"])],g$1.prototype,"readServiceSupportsMosaicRule",null),e$1([d$7()],g$1.prototype,"rasterAttributeTableFieldPrefix",void 0),e$1([d$7({readOnly:!0})],g$1.prototype,"_rasterFunctionNamesIndex",null),e$1([d$7()],g$1.prototype,"adjustAspectRatio",void 0),e$1([d$7({type:[T$2],json:{write:!0}})],g$1.prototype,"bandIds",void 0),e$1([o("bandIds")],g$1.prototype,"readBandIds",null),e$1([d$7({readOnly:!0,json:{read:!1}})],g$1.prototype,"capabilities",void 0),e$1([o("service","capabilities",["capabilities","currentVersion","serviceDataType"])],g$1.prototype,"readCapabilities",null),e$1([d$7({type:Number})],g$1.prototype,"compressionQuality",void 0),e$1([r("compressionQuality")],g$1.prototype,"writeCompressionQuality",null),e$1([d$7({type:Number})],g$1.prototype,"compressionTolerance",void 0),e$1([r("compressionTolerance")],g$1.prototype,"writeCompressionTolerance",null),e$1([d$7({json:{read:{source:"copyrightText"}}})],g$1.prototype,"copyright",void 0),e$1([d$7({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],g$1.prototype,"definitionExpression",void 0),e$1([d$7({readOnly:!0,constructOnly:!0})],g$1.prototype,"exportImageServiceParameters",void 0),e$1([d$7()],g$1.prototype,"rasterInfo",void 0),e$1([d$7({readOnly:!0,type:[y$8]})],g$1.prototype,"fields",void 0),e$1([d$7({readOnly:!0})],g$1.prototype,"fieldsIndex",null),e$1([d$7({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],g$1.prototype,"format",null),e$1([o("service","format",["serviceDataType"])],g$1.prototype,"readFormat",null),e$1([d$7({type:w$3})],g$1.prototype,"fullExtent",void 0),e$1([d$7({readOnly:!0})],g$1.prototype,"hasMultidimensions",void 0),e$1([d$7({json:{read:{source:"maxImageHeight"}}})],g$1.prototype,"imageMaxHeight",void 0),e$1([d$7({json:{read:{source:"maxImageWidth"}}})],g$1.prototype,"imageMaxWidth",void 0),e$1([d$7({type:String,json:{type:o$2.jsonValues,read:o$2.read,write:o$2.write}})],g$1.prototype,"interpolation",void 0),e$1([d$7()],g$1.prototype,"minScale",void 0),e$1([o("service","minScale")],g$1.prototype,"readMinScale",null),e$1([d$7()],g$1.prototype,"maxScale",void 0),e$1([o("service","maxScale")],g$1.prototype,"readMaxScale",null),e$1([d$7({type:y$3})],g$1.prototype,"mosaicRule",null),e$1([o("mosaicRule",["mosaicRule","defaultMosaicMethod"])],g$1.prototype,"readMosaicRule",null),e$1([r("mosaicRule")],g$1.prototype,"writeMosaicRule",null),e$1([d$7()],g$1.prototype,"multidimensionalInfo",null),e$1([d$7({json:{type:T$2}})],g$1.prototype,"noData",void 0),e$1([r("noData")],g$1.prototype,"writeNoData",null),e$1([d$7({type:String,json:{type:i$2.jsonValues,read:i$2.read,write:i$2.write}})],g$1.prototype,"noDataInterpretation",void 0),e$1([d$7({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],g$1.prototype,"objectIdField",void 0),e$1([o("objectIdField")],g$1.prototype,"readObjectIdField",null),e$1([d$7({})],g$1.prototype,"geometryType",void 0),e$1([d$7({})],g$1.prototype,"typeIdField",void 0),e$1([d$7({})],g$1.prototype,"types",void 0),e$1([d$7({readOnly:!0})],g$1.prototype,"parsedUrl",null),e$1([d$7({type:Function})],g$1.prototype,"pixelFilter",void 0),e$1([d$7()],g$1.prototype,"raster",void 0),e$1([d$7()],g$1.prototype,"viewId",void 0),e$1([d$7({types:l$6,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:i$4,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],g$1.prototype,"renderer",null),e$1([o("renderer")],g$1.prototype,"readRenderer",null),e$1([r("renderer")],g$1.prototype,"writeRenderer",null),e$1([d$7()],g$1.prototype,"symbolizer",void 0),e$1([d$7(w$4)],g$1.prototype,"opacity",void 0),e$1([d$7({readOnly:!0})],g$1.prototype,"rasterFields",null),e$1([d$7({constructOnly:!0})],g$1.prototype,"rasterFunctionInfos",void 0),e$1([d$7({type:w$2})],g$1.prototype,"renderingRule",null),e$1([o("renderingRule",["renderingRule","rasterFunctionInfos"])],g$1.prototype,"readRenderingRule",null),e$1([r("renderingRule")],g$1.prototype,"writeRenderingRule",null),e$1([d$7()],g$1.prototype,"serviceDataType",void 0),e$1([d$7({readOnly:!0,type:k})],g$1.prototype,"spatialReference",void 0),e$1([o("spatialReference",["spatialReference","extent"])],g$1.prototype,"readSpatialReference",null),e$1([d$7({json:{type:ge.jsonValues}})],g$1.prototype,"pixelType",void 0),e$1([o("pixelType")],g$1.prototype,"readPixelType",null),e$1([r("pixelType")],g$1.prototype,"writePixelType",null),e$1([d$7({constructOnly:!0,type:l$5})],g$1.prototype,"serviceRasterInfo",void 0),e$1([d$7()],g$1.prototype,"sourceJSON",void 0),e$1([d$7(f$4)],g$1.prototype,"url",void 0),e$1([d$7({readOnly:!0})],g$1.prototype,"version",void 0),e$1([o("version",["currentVersion","fields","timeInfo"])],g$1.prototype,"readVersion",null),g$1=e$1([n$2("esri.layers.mixins.ArcGISImageService")],g$1),g$1};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let L=class extends(a$2(a$3(n$7(t$2(c$4(w$5(be(o$4(p$a(O$1(b$3))))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery";}normalizeCtorArgs(e,r){return "string"==typeof e?{url:e,...r}:e}load(e){const r=r$2(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(w$6).then((()=>this._fetchService(r)))),Promise.resolve(this)}writeOperationalLayerType(e,r,t){const o="vector-field"===this.renderer?.type;r[t]=o?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer";}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const r=this.rasterFields,t=this.title,o=new Set;let i=!1,s=!1;this.capabilities&&(i=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,s="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const a=new Set;i&&a.add("raster.itempixelvalue");for(const p of r){const e=p.name.toLowerCase();a.has(e)||e.includes("raster.servicepixelvalue.")||o.add(p.name);}return s&&o.add("raster.magnitude").add("raster.direction"),d$a({fields:r,title:t},{...e,visibleFieldNames:o})}queryFeatures(e,r){return this.queryRasters(e,r).then((e=>{if(e?.features)for(const r of e.features)r.layer=r.sourceLayer=this;return e}))}queryFeatureCount(e,r){return this.queryRasterCount(e,r)}redraw(){this.emit("redraw");}serviceSupportsSpatialReference(e){return e$4(this,e)}};e$1([d$7(c$5)],L.prototype,"legendEnabled",void 0),e$1([d$7({type:["show","hide"]})],L.prototype,"listMode",void 0),e$1([d$7({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],L.prototype,"isReference",void 0),e$1([d$7({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],L.prototype,"operationalLayerType",void 0),e$1([r("web-map","operationalLayerType")],L.prototype,"writeOperationalLayerType",null),e$1([d$7(p$b)],L.prototype,"popupEnabled",void 0),e$1([d$7({type:J,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],L.prototype,"popupTemplate",void 0),e$1([d$7({readOnly:!0})],L.prototype,"defaultPopupTemplate",null),e$1([d$7({readOnly:!0,json:{read:!1}})],L.prototype,"type",void 0),L=e$1([n$2("esri.layers.ImageryLayer")],L);const T=L;

export { T as default };
