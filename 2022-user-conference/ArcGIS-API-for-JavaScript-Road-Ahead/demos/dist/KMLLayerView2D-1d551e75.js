import { b3 as y, fr as rn, bk as w, qi as C$1, qj as $, dF as c, ai as E, aq as P, ar as G, ay as D, ax as L, ae as x, aZ as Y, a_ as V, qk as f, U, q5 as i, e9 as j$1, b7 as l, w as w$1, m as r, t, oz as tn, O as k$1, ql as a$1, mf as L$1, a as f$1, mh as I, u as e, y as y$2, z as n$1 } from './_virtual_index-1ea2035a.js';
import { b as b$1, g, d } from './kmlUtils-64b42c1a.js';
import { S, T, R } from './Bitmap-c8e15fa6.js';
import { a } from './BitmapContainer-6c702079.js';
import { y as y$1 } from './LayerView2D-0acb5666.js';
import { i as i$1 } from './GraphicContainer-0fdd8b97.js';
import { o as oe } from './BaseGraphicContainer-aab27617.js';
import { u } from './LayerView-04d8537b.js';
import { a as n } from './WGLContainer-be6ebd59.js';
import { o } from './MaterialPrograms-196f7df0.js';
import './enums-4e1a5b11.js';
import './utils-94e6680e.js';
import './EffectView-de5a8347.js';
import './MaterialKey-8672cbbb.js';
import './alignmentUtils-d4b065e2.js';
import './Utils-7b2ac961.js';
import './number-7d0da80b.js';
import './enums-3e26cf0d.js';
import './definitions-a784b44f.js';
import './cimAnalyzer-32e4ad07.js';
import './fontUtils-49a60944.js';
import './BidiEngine-25d35bf3.js';
import './Rect-1c5846da.js';
import './GeometryUtils-10c98655.js';
import './FeatureContainer-e333c7c0.js';
import './visualVariablesUtils-e0de182e.js';
import './visualVariablesUtils-933d57c8.js';
import './TileContainer-18a96df2.js';
import './Matcher-39feddc4.js';
import './tileUtils-e3849516.js';
import './TileClipper-b7d453c3.js';
import './Geometry-bc69b0c8.js';
import './GeometryUtils-07c7843a.js';
import './ExpandedCIM-a44ee24d.js';
import './schemaUtils-15a39169.js';
import './createSymbolSchema-49eb4f50.js';
import './util-b1c4d8f0.js';
import './ComputedAttributeStorage-5652149f.js';
import './centroid-205dc6cf.js';
import './GraphicsView-fce768d1.js';
import './WGLBrushVTLSymbol-5326d98d.js';
import './StyleDefinition-98114241.js';
import './ShaderCompiler-4879c29c.js';
import './ProgramTemplate-192f2ab9.js';
import './heatmapTextureUtils-076ceaf2.js';
import './programUtils-24cf67f4.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
class b{constructor(t){if(t)this._ownsRctx=!1,this._rctx=t;else {if(b._instance)return b._instanceRefCount++,b._instance;b._instanceRefCount=1,b._instance=this,this._ownsRctx=!0;const t=document.createElement("canvas").getContext("webgl");t.getExtension("OES_texture_float"),this._rctx=new y(t,{});}const e={applyProjection:!0,bilinear:!1,bicubic:!1},r=o("raster/reproject","raster/reproject",new Map([["a_position",0]]),e);this._program=this._rctx.programCache.acquire(r.shaders.vertexShader,r.shaders.fragmentShader,r.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new n(this._rctx,[0,0,1,0,0,1,1,1]);}reprojectTexture(t,s,n=!1){const o=rn(t.extent,s),m=new w({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:l,y:b}=C$1(m,s,t.extent);let D$1=(l+b)/2;const T=Math.round((o.xmax-o.xmin)/D$1),j=Math.round((o.ymax-o.ymin)/D$1);D$1=(o.width/T+o.height/j)/2;const E$1=new w({x:D$1,y:D$1,spatialReference:o.spatialReference}),R=$({projectedExtent:o,srcBufferExtent:t.extent,pixelSize:E$1,hasWrapAround:!0,spacing:[16,16]}),C=c(this._rctx,R),y=new E(this._rctx,{width:T,height:j,pixelFormat:P.RGBA,dataType:G.UNSIGNED_BYTE,wrapMode:D.CLAMP_TO_EDGE,samplingMode:L.LINEAR,hasMipmap:!1}),M=new x(this._rctx,{colorTarget:Y.TEXTURE,depthStencilTarget:V.NONE,width:T,height:j},y);if(this._rctx.bindFramebuffer(M),this._rctx.setViewport(0,0,T,j),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(C,1),this._quad.bind(),this._program.setUniform2f("u_srcImageSize",t.texture.descriptor.width,t.texture.descriptor.height),this._program.setUniform2fv("u_transformSpacing",R.spacing),this._program.setUniform2fv("u_transformGridSize",R.size),this._program.setUniform2f("u_targetImageSize",T,j),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),C.dispose(),n){const t=new ImageData(M.descriptor.width,M.descriptor.height);return M.readPixels(0,0,M.descriptor.width,M.descriptor.height,P.RGBA,G.UNSIGNED_BYTE,t.data),M.detachColorTexture(f.COLOR_ATTACHMENT0),M.dispose(),{texture:y,extent:o,imageData:t}}return M.detachColorTexture(f.COLOR_ATTACHMENT0),M.dispose(),{texture:y,extent:o}}reprojectBitmapData(t,e){const r=S(t.bitmapData)?T(t.bitmapData):t.bitmapData,i=new E(this._rctx,{width:t.bitmapData.width,height:t.bitmapData.height,pixelFormat:P.RGBA,dataType:G.UNSIGNED_BYTE,wrapMode:D.CLAMP_TO_EDGE,samplingMode:L.LINEAR,hasMipmap:!1},r),a=this.reprojectTexture({texture:i,extent:t.extent},e,!0);a.texture.dispose();const o=document.createElement("canvas");o.width=a.imageData.width,o.height=a.imageData.height;return o.getContext("2d").putImageData(a.imageData,0,0),{bitmapData:o,extent:a.extent}}async loadAndReprojectBitmapData(e,r,i){const a=(await U(e,{responseType:"image"})).data,s=document.createElement("canvas");s.width=a.width,s.height=a.height;const n=s.getContext("2d");n.drawImage(a,0,0);const o=n.getImageData(0,0,s.width,s.height);if(r.spatialReference.equals(i))return {bitmapData:o,extent:r};const m=this.reprojectBitmapData({bitmapData:o,extent:r},i);return {bitmapData:m.bitmapData,extent:m.extent}}destroy(){this._ownsRctx?(b._instanceRefCount--,0===b._instanceRefCount&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),b._instance=null)):(this._quad.dispose(),this._program.dispose());}}b._instanceRefCount=0;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
class C{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[];}}let j=class extends(y$1(u)){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new a,this._kmlVisualData=new C,this.allVisiblePoints=new i,this.allVisiblePolylines=new i,this.allVisiblePolygons=new i,this.allVisibleMapImages=new j$1;}async hitTest(e,i){const t=this.layer;return [this._pointsView?.hitTest(e),this._polylinesView?.hitTest(e),this._polygonsView?.hitTest(e)].flat().filter(Boolean).map((i=>(i.layer=t,i.sourceLayer=t,{type:"graphic",graphic:i,layer:t,mapPoint:e})))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e);}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new oe({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new i$1(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new oe({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new i$1(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new oe({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new i$1(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.handles.add([this.allVisibleMapImages.on("change",(e=>{e.added.forEach((e=>this._addMapImage(e))),e.removed.forEach((e=>this._removeMapImage(e)));})),l((()=>this.layer.visibleSublayers),(e=>{for(const[i,t]of this._kmlVisualData.allSublayers)t.visibility=0;for(const i of e){const e=this._kmlVisualData.allSublayers.get(i.id);e&&(e.visibility=1);}this._refreshCollections();}))]),this.updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new b;}detach(){this._fetchController.abort(),this._fetchController=null,this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null),this._imageReprojector&&(this._imageReprojector.destroy(),this._imageReprojector=null);}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange();}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(e.href,w$1.fromJSON(e.extent),this.view.spatialReference).then((i=>{const t=new R(i.bitmapData,{immutable:!1,requestRenderOnSourceChangedEnabled:!0});t.x=i.extent.xmin,t.y=i.extent.ymax,t.resolution=i.extent.width/i.bitmapData.width,t.rotation=e.rotation,this._mapImageContainer.addChild(t),this._bitmapIndex.set(e,t);}));}async _getViewDependentUrl(e,t$1){const{viewFormat:o,viewBoundScale:n,httpQuery:h}=e;if(r(o)){if(t(t$1))throw new Error("Loading this network link requires a view state.");let y;if(await tn(),r(n)&&1!==n){const e=new w$1(t$1.extent);e.expand(n),y=e;}else y=t$1.extent;y=rn(y,k$1.WGS84);const g=rn(y,k$1.WebMercator),w=y.xmin,_=y.xmax,b=y.ymin,V=y.ymax,f=t$1.size[0]*t$1.pixelRatio,v=t$1.size[1]*t$1.pixelRatio,S=Math.max(g.width,g.height),I$1={"[bboxWest]":w.toString(),"[bboxEast]":_.toString(),"[bboxSouth]":b.toString(),"[bboxNorth]":V.toString(),"[lookatLon]":y.center.x.toString(),"[lookatLat]":y.center.y.toString(),"[lookatRange]":S.toString(),"[lookatTilt]":"0","[lookatHeading]":t$1.rotation.toString(),"[lookatTerrainLon]":y.center.x.toString(),"[lookatTerrainLat]":y.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":y.center.x.toString(),"[cameraLat]":y.center.y.toString(),"[cameraAlt]":S.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":f.toString(),"[vertPixels]":v.toString(),"[terrainEnabled]":"0","[clientVersion]":a$1,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},x=e=>{for(const i in e)for(const t in I$1)e[i]=e[i].replace(t,I$1[t]);},C=L$1(o);x(C);let j={};r(h)&&(j=L$1(h),x(j));const k=f$1(e.href);k.query={...k.query,...C,...j};return `${k.path}?${I(C)}`}return e.href}async _fetchService(e){const i=new C;await this._loadVisualData(this.layer.url,i,e),this._kmlVisualData=i,this._refreshCollections();}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e))),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter((e=>this._isSublayerVisible(e.sublayerId))).map((({item:e})=>e)));}_isSublayerVisible(e){const i=this._kmlVisualData.allSublayers.get(e);return !!i.visibility&&(-1===i.parentFolderId||this._isSublayerVisible(i.parentFolderId))}_loadVisualData(e,i,t){return this._fetchParsedKML(e,t).then((async e=>{for(const s of e.sublayers){i.allSublayers.set(s.id,s);const e=s.points?await b$1(s.points):[],a=s.polylines?await b$1(s.polylines):[],o=s.polygons?await b$1(s.polygons):[],l=s.mapImages||[];if(i.allPoints.push(...e.map((e=>({item:e,sublayerId:s.id})))),i.allPolylines.push(...a.map((e=>({item:e,sublayerId:s.id})))),i.allPolygons.push(...o.map((e=>({item:e,sublayerId:s.id})))),i.allMapImages.push(...l.map((e=>({item:e,sublayerId:s.id})))),s.networkLink){const e=await this._getViewDependentUrl(s.networkLink,this.view.state);await this._loadVisualData(e,i,t);}}}))}_fetchParsedKML(e,i){return g(e,this.layer.spatialReference,this.layer.refreshInterval,i).then((e=>d(e.data)))}_removeMapImage(e){const i=this._bitmapIndex.get(e);i&&(this._mapImageContainer.removeChild(i),this._bitmapIndex.delete(e));}};e([y$2()],j.prototype,"_pointsView",void 0),e([y$2()],j.prototype,"_polylinesView",void 0),e([y$2()],j.prototype,"_polygonsView",void 0),e([y$2()],j.prototype,"updating",void 0),j=e([n$1("esri.views.2d.layers.KMLLayerView2D")],j);const k=j;

export { k as default };
