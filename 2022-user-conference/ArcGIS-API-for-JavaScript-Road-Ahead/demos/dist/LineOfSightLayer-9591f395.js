import { e9 as j$1, u as e, y, n8 as t, z as n, b7 as l, eX as w, t as t$1, m as r, n9 as n$1, d3 as o, L as e$1, oi as u$1, oj as un, lg as c$1, ok as m, gF as i, my as c$2, mz as O$1, eb as b$1 } from './_virtual_index-1ea2035a.js';
import { c } from './Analysis-a31c916e.js';
import { f as f$1, u } from './LineOfSightAnalysisTarget-e7f5e9fa.js';
import './persistable-2efd2972.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
const b=j$1.ofType(f$1);let x=class extends c{constructor(t){super(t),this.type="line-of-sight",this.observer=null,this.extent=null;}initialize(){this.addHandles(l((()=>this._computeExtent()),(t=>{(t$1(t)||t$1(t.pending))&&this._set("extent",r(t)?t.extent:null);}),w));}get targets(){return this._get("targets")||new b}set targets(t){this._set("targets",n$1(t,this.targets,b));}get spatialReference(){return r(this.observer)&&r(this.observer.position)?this.observer.position.spatialReference:null}get requiredPropertiesForEditing(){return [o(this.observer,(t=>t.position))]}async waitComputeExtent(){const t=this._computeExtent();return r(t)?e$1(t.pending):null}_computeExtent(){const t=this.spatialReference;if(t$1(this.observer)||t$1(this.observer.position)||t$1(t))return null;const e=t=>"absolute-height"===i(t.position,t.elevationInfo),r$1=this.observer.position,o=u$1(r$1.x,r$1.y,r$1.z,r$1.x,r$1.y,r$1.z);for(const i of this.targets)if(r(i.position)){const e=un(i.position,t);if(r(e.pending))return {pending:e.pending,extent:null};if(r(e.geometry)){const{x:t,y:r,z:s}=e.geometry;c$1(o,[t,r,s]);}}const s=m(o,t);return e(this.observer)&&this.targets.every(e)||(s.zmin=null,s.zmax=null),{pending:null,extent:s}}clear(){this.observer=null,this.targets.removeAll();}};e([y({type:["line-of-sight"]})],x.prototype,"type",void 0),e([y({type:u,json:{read:!0,write:!0}})],x.prototype,"observer",void 0),e([y({cast:t,type:b,nonNullable:!0,json:{read:!0,write:!0}})],x.prototype,"targets",null),e([y({value:null,readOnly:!0})],x.prototype,"extent",void 0),e([y({readOnly:!0})],x.prototype,"spatialReference",null),e([y({readOnly:!0})],x.prototype,"requiredPropertiesForEditing",null),x=e([n("esri.analysis.LineOfSightAnalysis")],x);const O=x;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
const f=j$1.ofType(f$1);let g=class extends(c$2(O$1(b$1))){constructor(e){super(e),this.type="line-of-sight",this.operationalLayerType="LineOfSightLayer",this.analysis=new O,this.opacity=1;}initialize(){this.addHandles(l((()=>this.analysis),((e,t)=>{r(t)&&t.parent===this&&(t.parent=null),r(e)&&(e.parent=this);}),w));}async load(){return r(this.analysis)&&this.addResolvingPromise(this.analysis.waitComputeExtent()),this}get observer(){return o(this.analysis,(e=>e.observer))}set observer(e){o(this.analysis,(t=>t.observer=e));}get targets(){return r(this.analysis)?this.analysis.targets:new j$1}set targets(e){n$1(e,this.analysis?.targets);}get fullExtent(){return r(this.analysis)?this.analysis.extent:null}get spatialReference(){return r(this.analysis)?e$1(this.analysis.spatialReference):null}releaseAnalysis(e){this.analysis===e&&(this.analysis=new O);}};e([y({json:{read:!1},readOnly:!0})],g.prototype,"type",void 0),e([y({type:["LineOfSightLayer"]})],g.prototype,"operationalLayerType",void 0),e([y({type:u,json:{read:!0,write:{ignoreOrigin:!0}}})],g.prototype,"observer",null),e([y({type:f,json:{read:!0,write:{ignoreOrigin:!0}}})],g.prototype,"targets",null),e([y({nonNullable:!0,json:{read:!1,write:!1}})],g.prototype,"analysis",void 0),e([y({readOnly:!0})],g.prototype,"fullExtent",null),e([y({readOnly:!0})],g.prototype,"spatialReference",null),e([y({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],g.prototype,"opacity",void 0),e([y({type:["show","hide"]})],g.prototype,"listMode",void 0),g=e([n("esri.layers.LineOfSightLayer")],g);const j=g;

export { j as default };
