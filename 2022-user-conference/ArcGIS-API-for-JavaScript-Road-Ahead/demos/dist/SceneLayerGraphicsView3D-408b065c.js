import { nt as h, qh as qe, b4 as h$1, b3 as l, n6 as t$1, gc as i, o, qi as ae, fv as A, dX as l$2, nL as ye, k0 as f, t as t$2, r as r$1, qj as e, Z as s$1, gr as Un, qk as H, fu as Bn, bl as r$2, fd as u, g, eM as v, bG as e$1, pc as A$1, ql as M$1, kY as zn, d as b$1, B as e$2, C as d, lI as y, n1 as t$3, D as n$1, o3 as Ie, aH as n$2, bE as u$1 } from './_virtual_index-9b831d4a.js';
import { s, c as b, t as te$1 } from './I3SAttributeOverrides-7cacace0.js';
import { n } from './LayerView3D-b7813df6.js';
import { M, l as l$1 } from './Graphics3DFeatureProcessor-54aa608f.js';
import { c as c$1, i as i$1, a, b as i$2, d as d$1 } from './SceneLayerView-4da148f3.js';
import { t } from './DefinitionExpressionSceneLayerView-dadd3e85.js';
import { c } from './PopupSceneLayerView-60439158.js';
import './I3SNode-8ddf3624.js';
import './Graphics3DScaleVisibility-2c856a9f.js';
import './rendererConversion-c619220f.js';
import './optimizedFeatureQueryEngineAdapter-66a8e5a3.js';
import './centroid-3313e4f0.js';
import './Graphics3DObjectStates-f844df23.js';
import './attributeUtils-cf3c0bd5.js';
import './floorFilterUtils-776aae8e.js';
import './QueryEngine-12d30a72.js';
import './QueryEngineCapabilities-140b3c8f.js';
import './timeSupport-a77eca3d.js';
import './LayerView-e26ca8f9.js';
import './popupUtils-c1e7b664.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
class r extends h{constructor(e){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:e=>[e.geometryBuffer]},e,{hasInitialize:!0});}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
const Z=i$2();let Y=class extends(t(c(n(d$1)))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._nodesAddedToStage=new Map,this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this.loadedGraphics=new s,this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20;}initialize(){const e=this.layer;this.addResolvingPromise(e.indexInfo),this._attributeOverrides=new b(this.layer,this.view.resourceController?.memoryController),qe(e,this.view.spatialReference,this.view.viewingMode),this.fieldsHelper=new c$1({layerView:this}),this.updatingHandles.add((()=>e.rangeInfos),(e=>this._rangeInfosChanged(e)),h$1),this.updatingHandles.add((()=>e.renderer),((e,t)=>this._rendererChange(e,t))),this.updatingHandles.add((()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted]),(()=>this._filterChange())),this.handles.add(l((()=>t$1.I3S_TREE_SHOW_TILES),(e=>{if(e&&!this._treeDebugger){const e=this._controller.crsIndex;import('./I3STreeDebugger-aa8e1c10.js').then((({I3STreeDebugger:t})=>{!this._treeDebugger&&t$1.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new t({lv:this,view:this.view,nodeSR:e}));}));}else e||!this._treeDebugger||t$1.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null);}),h$1)),this._set("processor",new M({owner:this,preferredUpdatePolicy:i.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,dataExtent:e.fullExtent,updateClippingExtent:e=>this._updateClippingExtent(e)})),this.processor.elevationAlignment?.events.on("invalidate-elevation",(e=>this._invalidateElevation(e))),this.supportsHeightUnitConversion&&(this._verticalScale=o("point",e.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.initializePromise),this._memCache=this.view.resourceController.memoryController.newCache(e.uid),this._controller=new te$1({layerView:this,scaleVisibilityEnabled:!1}),ae(this.layer.geometryDefinitions)&&(this._worker=new r((e=>this.view.resourceController.schedule(e)))),this.handles.add(this.layer.on("apply-edits",(e=>this.updatingHandles.addPromise(e.result)))),this.handles.add(this.layer.on("edits",(e=>this._handleEdits(e)))),this.when((()=>{this._queryEngine=new l$1({layerView:this,priority:A.FEATURE_QUERY_ENGINE}),this.updatingHandles.add((()=>this.maximumNumberOfFeatures),(e=>this._controller.featureTarget=e),h$1),this.updatingHandles.add((()=>this.suspended),(e=>{e&&this._removeAllNodeData();}));}));}destroy(){this._treeDebugger=l$2(this._treeDebugger),this._attributeOverrides=l$2(this._attributeOverrides),this._set("processor",l$2(this.processor)),this._controller=l$2(this._controller),this._queryEngine=l$2(this._queryEngine),this._worker=l$2(this._worker),this._memCache=l$2(this._memCache),this._nodesAddedToStage.clear(),this.fieldsHelper=l$2(this.fieldsHelper);}get requiredFields(){return this.fieldsHelper?.requiredFields??[]}get maximumNumberOfFeatures(){const e=this.processor?.graphicsCore?.displayFeatureLimit;return e?.maximumNumberOfFeatures??0}set maximumNumberOfFeatures(e){null!=e?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1);}get maximumNumberOfFeaturesExceeded(){return !this.suspended&&(!!this._controller?.useMaximumNumberOfFeatures&&!this._controller.leavesReached)}get _excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort(((e,t)=>e-t)):null}get lodFactor(){return "Labels"===this.layer.semantic?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return !1}get hasZ(){return !0}async whenGraphicAttributes(e,t){return ye(this.layer,e,this._getObjectIdField(),t,(()=>[...this._nodesAddedToStage.values()]))}getHit(e){if(!this.loadedGraphics)return null;const t=f(this.loadedGraphics.find((t=>t.uid===e)),this.layer),r=this._getObjectIdField();return t&&t.attributes&&t.attributes[r]?(t.layer=this.layer,t.sourceLayer=this.layer,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}isUpdating(){return !!(this._controller?.updating||this.processor?.updating||this.fieldsHelper?.updating||this.layerFilterUpdating)}highlight(e){return this.processor.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return i$1(this._attributeEditingContext,e)}async _extractBinaryPointData(e,t){const r$2={geometryBuffer:e.geometryBuffer};return t$2(this._worker)&&(this._worker=new r((e=>this.view.resourceController.schedule(e)))),this._worker.invoke(r$2,t).then((e=>{if(r$1(e)){return {positionData:e.positions,featureIds:e.featureIds}}throw new Error("Failed to decompress Draco point data")}))}_checkExtent(e$1,t){e$1&&!e(e$1,t)&&(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&s$1.getLogger(this.declaredClass).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&s$1.getLogger(this.declaredClass).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++);}async addNode(e,t,r){if(!X(t)&&!$(t))throw new Error;if(this._nodesAddedToStage.has(e.index))return void s$1.getLogger(this.declaredClass).error("I3S node "+e.id+" already added");const i=r$1(this.layer.fullExtent)?te(this.layer.fullExtent.clone(),.5):null,o=this._controller.crsVertex,n=[],d={graphics:null,featureIds:null,attributeInfo:t.attributeDataInfo,node:e};if(X(t)?await this._addNodeBinaryPointData(e,d,t,i,n,r):$(t)&&this._addNodeLegacyPointData(e,d,t,i,n),await this._attributeOverrides.apply(d.featureIds,t.attributeDataInfo,r),e.numFeatures=d.graphics.length,this._updateNodeMemory(e),ee(d),n.length>0&&(this._computeObb(e,n,o),this._controller.updateVisibility(e.index)),this._controller.isGeometryVisible(e)){if(r$1(this._verticalScale))for(const e of d.graphics)this._verticalScale(e.geometry);this._nodesAddedToStage.set(e.index,d),this.loadedGraphics.addMany(d.graphics),this._controller.updateLoadStatus(e.index,!0),this._filterNode(d),this._treeDebugger&&this._treeDebugger.update();}else this._cacheNodeData(d);}_computeObb(e,t,r){const s=this._controller.crsIndex,i=s.isGeographic?this.view.renderSpatialReference:s;Un(t,r,0,t,i,0,t.length/3);const o={data:t,size:3};e.serviceObb=H(o),s.isGeographic&&Bn(e.serviceObb.center,i,e.serviceObb.center,s);}isNodeLoaded(e){return this._nodesAddedToStage.has(e)}isNodeReloading(){return !1}updateNodeState(){}async _addNodeBinaryPointData(e,r,s,i,o,d){const l=await this._extractBinaryPointData(s,d);if(null==l)throw new Error;const h=this._getObjectIdField(),u$1=this._controller.crsVertex,g$1=this.view.spatialReference,_=this.processor.graphicsCore,{positionData:y,featureIds:f}=l,b=3,v$1=y.length/b,x=new Array;for(let I=0;I<v$1;I++){const r=r$1(e.serviceObb)?e.serviceObb.center:[0,0,0],s=I*b,d=r$2(y[s+0],y[s+1],y[s+2]);u(d,d,r),e.serviceObb||o.push(d[0],d[1],d[2]),r$1(i)&&this._checkExtent(i,d);const l=f[I],v$1={};null!=l&&(v$1[h]=l);const S=l??g.generateUID();Un(d,u$1,0,se,g$1,0,1);const w=v(se[0],se[1],se[2],g$1),D=this.loadedGraphics.get(S);if(r$1(D))D.level<e.level&&(ie.property="geometry",ie.graphic=D,ie.oldValue=e$1(D.geometry),ie.newValue=w,D.geometry=w,_.graphicUpdateHandler(ie)),x.push(D);else {const r=g.generateUID();x.push({objectId:S,uid:r,geometry:w,attributes:v$1,visible:!0,level:e.level});}}r.graphics=x,r.featureIds=Array.from(f);}_addNodeLegacyPointData(e,r,s,i,o){const n=this._getObjectIdField(),d=this._controller.crsVertex,l=this.view.spatialReference,h=[0,0,0],u=new Array,c=new Array;for(const p of s.pointData){const r=p.featureDataPosition,s=r.length,g$1=p.geometries&&p.geometries[0]||re[s],_=p.featureIds[0];if("points"!==g$1.params.type)continue;r$1(i)&&this._checkExtent(i,r);const y={};null!=_&&(y[n]=_);const f=_??g.generateUID();let b;"Embedded"===g$1.type&&(b=g$1.params.vertexAttributes.position);for(let i=0;i<b.length;i+=s){for(let e=0;e<s;e++)h[e]=r[e]+b[i+e];const n=3===s;e.serviceObb||o.push(h[0],h[1],n?h[2]:0),Un(h,d,0,se,l,0,1);const u=v(se[0],se[1],n?se[2]:void 0,l),p=this.loadedGraphics.get(f);r$1(p)?c.push(p):c.push({objectId:f,uid:g.generateUID(),geometry:u,attributes:y,visible:!0});}u.push(_);}r.graphics=c,r.featureIds=u;}_updateNodeMemory(e){e.memory=4096+(r$1(e.numFeatures)?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0);}_cacheNodeData(e){const t=e.graphics.reduce(((e,t)=>A$1(t)+e),512+8*e.featureIds.length+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t);}_getMemCacheKey(e){return `${e.index}`}_removeAllNodeData(){this._nodesAddedToStage.forEach(((e,t)=>{if(e){const t=e.node;this._updateNodeMemory(t),this._cacheNodeData(e);}this._controller.updateLoadStatus(t,!1);})),this._nodesAddedToStage.clear(),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear();}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t));}_removeNodeStageData(e){const t=this._nodesAddedToStage.get(e);return t?(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeMany(t.graphics),this._nodesAddedToStage.delete(e),this._treeDebugger&&this._treeDebugger.update(),t):null}async loadCachedNodeData(e){return this._memCache.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,r,i){this._nodesAddedToStage.has(e.index)?s$1.getLogger(this.declaredClass).error("I3S node "+e.id+" already added"):(this.loadedGraphics.addMany(t.graphics),this._nodesAddedToStage.set(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),await this.updateAttributes(e.index,r,i),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update());}getLoadedNodeIds(){const e=[];return this._nodesAddedToStage.forEach((t=>e.push(t.node.id))),e.sort()}getVisibleNodes(){const e=new Array;return this._nodesAddedToStage.forEach((t=>e.push(t.node))),e}getLoadedNodeIndices(e){this._nodesAddedToStage.forEach(((t,r)=>e.push(r)));}getLoadedAttributes(e){const t=this._nodesAddedToStage.get(e);if(t&&r$1(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodesAddedToStage.get(e);if(t&&r$1(t.attributeInfo))return t.attributeInfo.attributeData}_setAttributeData(e,t){const r=this._nodesAddedToStage.get(e);r&&!t$2(r.attributeInfo)&&(r.attributeInfo.attributeData=t,this._attributeValuesChanged(r));}async updateAttributes(e,t,r){const s=this._nodesAddedToStage.get(e);s&&(await this._attributeOverrides.apply(s.featureIds,t,r),s.attributeInfo=t,this._attributeValuesChanged(s));}_attributeValuesChanged(e){if(ee(e),this._filterNode(e),this.processor.graphicsCore.labelsEnabled){const t=e.graphics.map((e=>e.uid));this.processor.graphicsCore.updateLabelingInfo(t);}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||"OBJECTID"}async _rendererChange(e,t){const{layer:{fieldsIndex:r}}=this,s=new Set;let i,o;e?(await e.collectRequiredFields(s,r),i=Array.from(s).sort()):i=[],s.clear(),t?(await t.collectRequiredFields(s,r),o=Array.from(s).sort()):o=[],i.length===o.length&&i.every(((e,t)=>i[t]===o[t]))||this._reloadAllNodes();}_rangeInfosChanged(e){null!=e&&e.length>0&&s$1.getLogger(this.declaredClass).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.");}_filterChange(){this._nodesAddedToStage.forEach((e=>this._filterNode(e)));}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading();}_filterNode(e){const t=this.parsedDefinitionExpression,s=this._excludeObjectIdsSorted,i=this._getObjectIdField();for(const a of e.graphics){const e=a.visible,n=!t||this._evaluateClause(t,a),d=t$2(s)||M$1(s,a.attributes[i])<0;a.visible=n&&d,e!==a.visible&&(ie.graphic=a,ie.property="visible",ie.oldValue=e,ie.newValue=a.visible,this.processor.graphicsCore.graphicUpdateHandler(ie));}}_invalidateElevation(e){const t=this._controller.crsIndex;zn(e.extent,e.spatialReference,oe,t),this._controller.updateElevationChanged(oe,t);}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return r$1(this.filter)?this.filter.createQuery(e):new b$1(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t?.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t?.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t?.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t?.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(t$2(e)?this.createQuery():b$1.from(e))}getUsedMemory(){return this.processor?.graphicsCore?.usedMemory??0}getUnloadedMemory(){return .8*((this._controller?.unloadedMemoryEstimate??0)+(this.processor?.graphicsCore?.unprocessedMemoryEstimate??0))}ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}_handleEdits(e){a(this._attributeEditingContext,e);}get _attributeEditingContext(){const e=this._getObjectIdField();return {sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,forEachNode:e=>this._nodesAddedToStage.forEach((t=>e(t.node,t.featureIds))),attributeStorageInfo:this.i3slayer.attributeStorageInfo,attributeOverrides:this._attributeOverrides,getAttributeData:e=>this.getAttributeData(e),setAttributeData:(t,r,s)=>{this._setAttributeData(t,r);const i=this._nodesAddedToStage.get(t);if(r$1(s)){const t=this.loadedGraphics.get(s.attributes[e]);r$1(t)&&this.processor.graphicsCore.recreateGraphics([t]);}else r$1(i)&&this.processor.graphicsCore.recreateGraphics(i.graphics);},clearMemCache:()=>{}}}get performanceInfo(){const e={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this._nodesAddedToStage.size,core:this.processor.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(e),e}get test(){return {controller:this._controller,numNodes:this._nodesAddedToStage.size,loadedGraphics:this.loadedGraphics}}};e$2([d()],Y.prototype,"processor",void 0),e$2([d({type:y})],Y.prototype,"filter",void 0),e$2([d()],Y.prototype,"loadedGraphics",void 0),e$2([d({aliasOf:"layer"})],Y.prototype,"i3slayer",void 0),e$2([d()],Y.prototype,"_controller",void 0),e$2([d()],Y.prototype,"updating",void 0),e$2([d()],Y.prototype,"suspended",void 0),e$2([d()],Y.prototype,"holeFilling",void 0),e$2([d(t$3)],Y.prototype,"updatingProgress",void 0),e$2([d({aliasOf:"_controller.updatingProgress"})],Y.prototype,"updatingProgressValue",void 0),e$2([d(Z.requiredFields)],Y.prototype,"requiredFields",null),e$2([d(Z.availableFields)],Y.prototype,"availableFields",void 0),e$2([d()],Y.prototype,"fieldsHelper",void 0),e$2([d({type:Number})],Y.prototype,"maximumNumberOfFeatures",null),e$2([d({readOnly:!0})],Y.prototype,"maximumNumberOfFeaturesExceeded",null),e$2([d()],Y.prototype,"_excludeObjectIdsSorted",null),e$2([d({readOnly:!0})],Y.prototype,"lodFactor",null),e$2([d({readOnly:!0})],Y.prototype,"hasM",null),e$2([d({readOnly:!0})],Y.prototype,"hasZ",null),Y=e$2([n$1("esri.views.3d.layers.SceneLayerGraphicsView3D")],Y);const J=Y;function $(e){return "pointData"in e}function X(e){return "geometryBuffer"in e&&null!==e.geometryBuffer}function ee(e){const t=e.attributeInfo;for(let r=0;r<e.graphics.length;r++){const s=e.graphics[r];if(s.attributes||(s.attributes={}),r$1(t)&&r$1(t.loadedAttributes))for(const{name:e}of t.loadedAttributes)t.attributeData[e]&&(s.attributes[e]=Ie(t.attributeData[e],r));}}function te(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.hasZ&&(e.zmin-=t,e.zmax+=t),e.hasM&&(e.mmin-=t,e.mmax+=t),e}const re={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},se=n$2(),ie={graphic:null,property:null,oldValue:null,newValue:null},oe=u$1();

export { J as default };
