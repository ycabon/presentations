import { u as e, y, z as n, eY as d, aK as n$1, sb as E, xe as E$1, xh as e$1, qX as h$1, gi as h$2, gh as p$1, xm as n$2, t, h3 as t$1, d3 as o$1, dk as p$2, A as m, aB as f, m as r } from './_virtual_index-1ea2035a.js';
import { o } from './VertexSnappingCandidate-92ca86f8.js';
import './PointSnappingHint-71b3a4f1.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let p=class extends d{constructor(e){super(e),this.availability=0,this._ids=new Set,this._tmpP=n$1();}destroy(){this._workerHandle.destroy(),this._workerHandle=null;}initialize(){this._workerHandle=new l(this.schedule,{fetchAllEdgeLocations:(e,t)=>this._fetchAllEdgeLocations(e,t)});}async fetchCandidates(e,t){const r=e.coordinateHelper,o=r.toXYZ(e.point);this.renderCoordsHelper.toRenderCoords(o,r.spatialReference,o);const s=e.distance,n="number"==typeof s?s:s.distance,a=await this._workerHandle.invoke({bounds:E(o[0],o[1],o[2],n),types:e.types},t);return a.candidates.sort(((e,t)=>e.distance-t.distance)),a.candidates.map((e=>this._convertCandidate(r,e)))}async add(e,t){this._ids.add(e.id),await this._workerHandle.invokeMethod("add",e,t);}async remove(e,t){this._ids.delete(e.id),await this._workerHandle.invokeMethod("remove",e,t);}_convertCandidate(e,t){switch(t.type){case"edge":return new e$1({coordinateHelper:e,objectId:t.objectId,targetPoint:this._convertRenderCoordinate(e,t.target),edgeStart:this._convertRenderCoordinate(e,t.start),edgeEnd:this._convertRenderCoordinate(e,t.end),elevationInfo:E$1});case"vertex":return new o({coordinateHelper:e,objectId:t.objectId,targetPoint:this._convertRenderCoordinate(e,t.target),elevationInfo:E$1})}}_convertRenderCoordinate(e,t){return this.renderCoordsHelper.fromRenderCoords(t,this._tmpP,e.spatialReference),e.fromXYZ(this._tmpP)}async _fetchAllEdgeLocations(e,t){const r=[],o=[];for(const{id:s,uid:n}of e.components)this._ids.has(s)&&r.push((async()=>{const e=await this.fetchEdgeLocations(s,t.signal);return o.push(e.locations.buffer),{id:s,uid:n,objectIds:e.objectIds,locations:e.locations.buffer,origin:e.origin,type:e.type}})());return {result:{components:(await Promise.all(r)).filter((({id:e})=>this._ids.has(e)))},transferList:o}}};e([y({constructOnly:!0})],p.prototype,"renderCoordsHelper",void 0),e([y({constructOnly:!0})],p.prototype,"fetchEdgeLocations",void 0),e([y({constructOnly:!0})],p.prototype,"schedule",void 0),e([y({readOnly:!0})],p.prototype,"availability",void 0),p=e([n("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],p);class l extends h$1{constructor(e,t){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:t});}}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let h=class extends d{constructor(e){super(e),this.availability=1,this._abortController=new AbortController;}get updating(){return this.updatingHandles.updating}destroy(){this._tracker=h$2(this._tracker),this._abortController=p$1(this._abortController);}initialize(){const{view:e}=this,r=e.resourceController;this._edgeWorker=new n$2((e=>r.schedule(e))),this._workerHandle=new p({renderCoordsHelper:this.view.renderCoordsHelper,schedule:e=>r.schedule(e),fetchEdgeLocations:async(e,r)=>{if(t(this._tracker))throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(e,this._edgeWorker,r)}}),this.updatingHandles.addPromise(this._setupLayerView()),this.handles.add([t$1(this._workerHandle),t$1(this._edgeWorker)]);}async fetchCandidates(e,r){return this._workerHandle.fetchCandidates(e,r)}refresh(){}async _setupLayerView(){if(this.destroyed)return;const e=o$1(this._abortController,(e=>e.signal)),r=await this.getLayerView();t(r)||p$2(e)||(this._tracker=r.trackSnappingSources({add:(r,t)=>{this.updatingHandles.addPromise(this._workerHandle.add({id:r,bounds:t},e));},remove:r=>{this.updatingHandles.addPromise(this._workerHandle.remove({id:r},e));}}));}};e([y({constructOnly:!0})],h.prototype,"getLayerView",void 0),e([y({constructOnly:!0})],h.prototype,"view",void 0),e([y({readOnly:!0})],h.prototype,"updating",null),e([y({readOnly:!0})],h.prototype,"availability",void 0),h=e([n("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],h);

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let c=class extends m{constructor(e){super(e),this.availability=1,this._i3sSources=[];}get updating(){return this._i3sSources.some((e=>e.updating))}destroy(){this._i3sSources.forEach((e=>e.destroy())),this._i3sSources.length=0;}initialize(){const{view:e}=this,r=this.layerSource.layer;this._i3sSources="building-scene"===r.type?this._getBuildingSceneI3SSources(e,r):[this._getSceneLayerI3SSource(e,r)];}async fetchCandidates(e,r){const t=await Promise.all(this._i3sSources.map((t=>t.fetchCandidates(e,r))));return f(r),t.flat()}refresh(){this._i3sSources.forEach((e=>e.refresh()));}_getBuildingSceneI3SSources(e,r$1){return r$1.allSublayers.toArray().map((t=>"building-component"===t.type?new h({getLayerView:async()=>(await e.whenLayerView(r$1)).whenSublayerView(t),view:e}):null)).filter(r)}_getSceneLayerI3SSource(e,r){return new h({getLayerView:async()=>{const t=await e.whenLayerView(r);return "scene-layer-graphics-3d"===t.type?void 0:t},view:e})}};e([y({constructOnly:!0})],c.prototype,"layerSource",void 0),e([y({constructOnly:!0})],c.prototype,"view",void 0),e([y({readOnly:!0})],c.prototype,"updating",null),e([y({readOnly:!0})],c.prototype,"availability",void 0),c=e([n("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],c);

export { c as SceneLayerSnappingSource };
