import { hr as s, hs as v$1, hn as d, by as t, aH as n$1, bl as r, dm as r$1, g7 as o, gj as B, b3 as l, r as r$2, gw as T$1, bG as e, f2 as r$3, e8 as e$1, ht as p, fC as F$1, gf as D, f7 as a, t as t$1, gg as t$2, cA as c, hu as l$1, hv as p$1, fc as j, hw as m, hx as l$2, hy as v$2, gh as O, hz as j$1, e9 as z, fd as u, fi as v$3, e0 as o$1, g5 as l$3, aE as r$4, bp as s$1, bk as i, gB as t$3, ct as l$4, d_ as p$2, hA as l$5, ej as A$1, hB as j$3, hC as e$2 } from './_virtual_index-9b831d4a.js';
import { _, S as S$1 } from './PointVisualElement-b8280c3d.js';
import { n } from './LineVisualElement-53a30f81.js';
import { j as j$2 } from './RightAngleQuadVisualElement-05916d4c.js';
import { r as r$5 } from './SnappingContext-43cb3fd4.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
class G extends n{constructor(t$1){super(t$1),this._ray=d(),this._externalResources=null,this._handles=new t,this._isWorldDown=!1,this._start=n$1(),this._end=r(1,0,0),this._width=1,this._color=r$1(1,0,1,1),this._polygonOffset=!1,this._writeDepthEnabled=!0,this._innerWidth=0,this._innerColor=r$1(1,1,1,1),this._stipplePattern=null,this._stippleOffColor=null,this._stipplePreferContinuous=!0,this._falloff=0,this._extensionType=V$1.LINE,this._laserlineStyle=null,this._laserlineEnabled=!1,this._renderOccluded=o.OccludeAndTransparent,this._fadedExtensions=F,this.applyProps(t$1);}createExternalResources(){const e=new B(this.materialParameters);this._handles.add(l((()=>this.view.state.camera),(()=>{this._updateGeometry();})));const t=new _({view:this.view,attached:this._laserlineEnabled});this._externalResources={material:e,laserline:t};}destroyExternalResources(){r$2(this._externalResources)&&this._externalResources.laserline.destroy(),this._externalResources=null,this._handles.removeAll();}forEachExternalMaterial(e){r$2(this._externalResources)&&e(this._externalResources.material);}createGeometries(e$1){const t=[n$1(),n$1()],i=this.extensionType===V$1.FADED;i&&t.push(n$1(),n$1());const r=i?new Float32Array([1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0]):null,n=T$1.createPolylineGeometry(t,null,r);e$1.addGeometry(n,e(this._externalResources).material),this._updateVertices(e$1);}updateVisibility(e){super.updateVisibility(e),r$2(this._externalResources)&&(this._externalResources.laserline.visible=e);}setStartEndFromWorldDownAtLocation(e){this._isWorldDown=!0,r$3(this._start,e),this.view.renderCoordsHelper.worldUpAtPosition(e,this._end),e$1(this._end,e,this._end),p(this._start,this._end,this._ray),this._updateGeometry();}get start(){return this._start}set start(e){this._isWorldDown=!1,F$1(this._start,e)||(r$3(this._start,e),p(this._start,this._end,this._ray),this._updateGeometry());}get end(){return this._end}set end(e){this._isWorldDown=!1,F$1(this._end,e)||(r$3(this._end,e),p(this._start,this._end,this._ray),this._updateGeometry());}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this._updateMaterial());}get color(){return this._color}set color(e){D(e,this._color)||(a(this._color,e),this._updateMaterial());}get polygonOffset(){return this._polygonOffset}set polygonOffset(e){e!==this._polygonOffset&&(this._polygonOffset=e,this._updateMaterial());}get writeDepthEnabled(){return this._writeDepthEnabled}set writeDepthEnabled(e){this._writeDepthEnabled!==e&&(this._writeDepthEnabled=e,this._updateMaterial());}get innerWidth(){return this._innerWidth}set innerWidth(e){e!==this._innerWidth&&(this._innerWidth=e,this._updateMaterial());}get innerColor(){return this._innerColor}set innerColor(e){D(e,this._innerColor)||(a(this._innerColor,e),this._updateMaterial());}get stipplePattern(){return this._stipplePattern}set stipplePattern(e){const s=r$2(e)!==r$2(this._stipplePattern);this._stipplePattern=e,s?this.recreate():this._updateMaterial();}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(e){(t$1(e)||t$1(this._stippleOffColor)||!D(e,this._stippleOffColor))&&(this._stippleOffColor=r$2(e)?t$2(e):null,this._updateMaterial());}get stipplePreferContinuous(){return this._stipplePreferContinuous}set stipplePreferContinuous(e){e!==this._stipplePreferContinuous&&(this._stipplePreferContinuous=e,this._updateMaterial());}get falloff(){return this._falloff}set falloff(e){e!==this._falloff&&(this._falloff=e,this._updateMaterial());}get extensionType(){return this._extensionType}set extensionType(e){e!==this._extensionType&&(this._extensionType=e,this._updateGeometry());}get _laserlineAttached(){return this._laserlineEnabled&&r$2(this._laserlineStyle)}get laserlineStyle(){return this._laserlineStyle}set laserlineStyle(e){this._laserlineStyle=e,r$2(this._externalResources)&&(this._externalResources.laserline.attached=this._laserlineAttached,r$2(e)&&(this._externalResources.laserline.style=e));}get laserlineEnabled(){return this._laserlineEnabled}set laserlineEnabled(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,r$2(this._externalResources)&&(this._externalResources.laserline.attached=this._laserlineAttached));}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial());}get fadedExtensions(){return this._fadedExtensions}set fadedExtensions(e){this._fadedExtensions=c(e,F),this.recreateGeometry();}_updateMaterial(){if(t$1(this._externalResources))return;this._externalResources.material.setParameters(this.materialParameters);}get materialParameters(){return {width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:this._stipplePreferContinuous,innerWidth:this._innerWidth,innerColor:this._innerColor,falloff:this._falloff,hasPolygonOffset:this._polygonOffset,renderOccluded:this._renderOccluded,writeDepth:this._writeDepthEnabled}}_updateGeometry(){r$2(this.object)&&this._updateVertices(this.object);}_updateVertices(e){const s=this._extensionType===V$1.FADED?this._updateLineSegmentFinite(T):this._updateLineSegmentInfinite(this._extensionType,T);this._updateVertexAttributes(e,s),r$2(this._externalResources)&&(this._externalResources.laserline.intersectsLine=s);}_updateLineSegmentFinite(e){return l$1(this._start,this._end,e)}_updateLineSegmentInfinite(e,t){const s=this.view.state.camera;switch(p$1(this._ray,W),e){case V$1.LINE:W.c0=-Number.MAX_VALUE;break;case V$1.RAY:case V$1.GROUND_RAY:{const e=this._ray.origin,t=c(this.view.elevationProvider.getElevation(e[0],e[1],e[2],this.view.renderCoordsHelper.spatialReference,"ground"),0),s=this.view.renderCoordsHelper.getAltitude(e);this._isWorldDown&&s<t&&j(W.ray.direction,W.ray.direction),this._extensionType===V$1.GROUND_RAY&&null!=t&&(W.c1=Math.abs(s-t));break}}if(!m(s.frustum,W))return l$1(this._start,this._end,t);const i=l$2(W,L),n=v$2(W,S);return l$1(i,n,t)}_updateVertexAttributes(e,t){const s=e.geometries[0].getMutableAttribute(O.POSITION).data;if(this.extensionType===V$1.FADED){const e=j$1(t,-this.fadedExtensions.start,L);s[0]=e[0],s[1]=e[1],s[2]=e[2];const i=j$1(t,0,L);s[3]=i[0],s[4]=i[1],s[5]=i[2];const r=j$1(t,1,L);s[6]=r[0],s[7]=r[1],s[8]=r[2];const n=j$1(t,1+this.fadedExtensions.end,L);s[9]=n[0],s[10]=n[1],s[11]=n[2];}else {const e=j$1(t,0,L);s[0]=e[0],s[1]=e[1],s[2]=e[2];const i=j$1(t,1,L);s[3]=i[0],s[4]=i[1],s[5]=i[2];}e.geometryVertexAttrsUpdated(e.geometryRecords[0]);}}const W=s(),L=n$1(),S=n$1(),T=v$1();var V$1;!function(e){e[e.LINE=0]="LINE",e[e.RAY=1]="RAY",e[e.GROUND_RAY=2]="GROUND_RAY",e[e.FADED=3]="FADED";}(V$1||(V$1={}));const N=1/3,F={start:N,end:N};

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
class v extends n{constructor(t$1){super(t$1),this._handles=new t,this._location=n$1(),this._direction=r(1,0,0),this._width=1,this._offset=1,this._length=18,this._color=r$1(1,0,1,1),this._renderOccluded=o.OccludeAndTransparent,this.applyProps(t$1);}get location(){return this._location}set location(e){F$1(this._location,e)||(r$3(this._location,e),this._updateGeometry());}get direction(){return this._direction}set direction(e){F$1(this._direction,e)||(r$3(this._direction,e),this._updateGeometry());}setDirectionFromPoints(e,t){z(this._direction,e$1(this._direction,t,e)),this._updateGeometry();}get width(){return this._width}set width(e){e!==this._width&&(this._width=e,this._updateMaterial());}get offset(){return this._offset}set offset(e){e!==this._offset&&(this._offset=e,this._updateGeometry());}get length(){return this._length}set length(e){e!==this._length&&(this._length=e,this._updateGeometry());}get color(){return this._color}set color(e){D(e,this._color)||(a(this._color,e),this._updateMaterial());}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial());}createExternalResources(){const e=new B(this.materialParameters);this._handles.add(l((()=>this.view.state.camera),(()=>{this._updateGeometry();}))),this._externalResources={material:e};}destroyExternalResources(){this._handles.removeAll(),this._externalResources=null;}createGeometries(e$1){const r=T$1.createPolylineGeometry([n$1(),n$1()]),s=T$1.createPolylineGeometry([n$1(),n$1()]),i=e(this._externalResources).material;e$1.addGeometry(r,i),e$1.addGeometry(s,i),this._updateVertices(e$1);}forEachExternalMaterial(e){r$2(this._externalResources)&&e(this._externalResources.material);}_updateMaterial(){if(t$1(this._externalResources))return;this._externalResources.material.setParameters(this.materialParameters);}get materialParameters(){return {width:this._width,color:this._color,renderOccluded:this._renderOccluded}}_updateGeometry(){const e=this.object;t$1(e)||this._updateVertices(e);}_updateVertices(e){const t=this.view.state.camera;t.projectToScreen(this.location,V),u(P,this.location,this.direction),t.projectToScreen(P,A),v$3(A,o$1(A,A,V)),this._updateVertexAttributes(t,e,0,V,A,1),this._updateVertexAttributes(t,e,1,V,A,-1);}_updateVertexAttributes(e,t,r,s,i,o){const a=t.geometryRecords[r],c=a.geometry.getMutableAttribute(O.POSITION).data,d=l$3(M,r$4(M,i[1]*o,i[0]*-o),this.offset+this.width/2),m=s$1(k,s$1(k,s$1(k,s,l$3(k,i,this.length/2)),d),d),u=s$1(E,m,l$3(E,i,-this.length));e.unprojectFromScreen(m,P),c[0]=P[0],c[1]=P[1],c[2]=P[2],e.unprojectFromScreen(u,P),c[3]=P[0],c[4]=P[1],c[5]=P[2],t.geometryVertexAttrsUpdated(a);}}const P=n$1(),V=i(),A=i(),M=i(),k=i(),E=i();

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
class g extends r$5{visualizeIntersectionPoint(i,o){const{coordinateHelper:r,view:a}=o;return t$3(new S$1({view:a,primitive:"circle",geometry:r.vectorToPoint(i.intersectionPoint),elevationInfo:c(i.elevationInfo,o.elevationInfo),size:20,outlineSize:2,color:[0,0,0,0],outlineColor:l$4.toUnitRGBA(p$2.orange),pixelSnappingEnabled:!1}))}visualizePoint(i,o){const{coordinateHelper:r,view:a}=o;return t$3(new S$1({view:a,primitive:"circle",geometry:r.vectorToPoint(i.point),elevationInfo:c(i.elevationInfo,o.elevationInfo),size:20,outlineSize:2,color:[0,0,0,0],outlineColor:l$4.toUnitRGBA(p$2.orange),pixelSnappingEnabled:!1}))}visualizeLine(e,i){const{coordinateHelper:o,view:r}=i;return t$3(this._createLineSegmentHintFromMap(e.type,e.lineStart,e.lineEnd,o,c(e.elevationInfo,i.elevationInfo),r,e.fadeLeft,e.fadeRight))}visualizeParallelSign(o$1,r){const{coordinateHelper:a,view:s}=r,c$1=c(o$1.elevationInfo,r.elevationInfo),m=l$5(o$1.lineStart,a,c$1,r.view),v$1=l$5(o$1.lineEnd,a,c$1,r.view),f=A$1(v$1,m,v$1,.5),g=new v({view:s,attached:!1,offset:p$2.parallelLineHintOffset,length:p$2.parallelLineHintLength,width:p$2.parallelLineHintWidth,color:l$4.toUnitRGBA(p$2.orange),location:f,renderOccluded:o.Opaque});return g.setDirectionFromPoints(m,f),g.attached=!0,t$3(g)}visualizeRightAngleQuad(i,o$1){const{coordinateHelper:r,view:a}=o$1,l=c(i.elevationInfo,o$1.elevationInfo);return t$3(new j$2({view:a,attached:!0,color:l$4.toUnitRGBA(p$2.orange),renderOccluded:o.Transparent,outlineRenderOccluded:o.Opaque,outlineColor:l$4.toUnitRGBA(p$2.orange),outlineSize:p$2.rightAngleHintOutlineSize,size:p$2.rightAngleHintSize,geometry:{previous:l$5(i.previousVertex,r,l,a),center:l$5(i.centerVertex,r,l,a),next:l$5(i.nextVertex,r,l,a)}}))}_createLineSegmentHintFromMap(e,n,t,i,r,a,l=!0,s=!0){const c=n$1(),d=n$1();return j$3(n,t,i,r,a,c,d),this._createLineSegmentHint(e,a,c,d,l,s)}_createLineSegmentHint(n,t,i,o$1,l=!0,s=!0){const c=new G({view:t,extensionType:V$1.FADED,start:i,end:o$1,color:l$4.toUnitRGBA(p$2.orange),renderOccluded:o.Opaque});switch(n){case e$2.TARGET:c.width=p$2.lineHintWidthTarget,c.fadedExtensions={start:0,end:p$2.lineHintFadedExtensions};break;case e$2.REFERENCE_EXTENSION:c.width=p$2.lineHintWidthReference,c.fadedExtensions={start:0,end:0};break;case e$2.REFERENCE:c.width=p$2.lineHintWidthReference,c.fadedExtensions={start:l?p$2.lineHintFadedExtensions:0,end:s?p$2.lineHintFadedExtensions:0};}return c.attached=!0,c}}

export { G, V$1 as V, g };
