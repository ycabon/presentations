import { nG as o$1, jq as i$2, t as t$1, u as e$1, y as y$1, mA as r$1, mH as o$2, mZ as r$2, z as n$2, ju as l$1, L as e$2, m as r$3, P as g$4, ev as m$2, mS as k$1, oN as j$2, bk as w$2, bJ as v$1 } from './_virtual_index-1ea2035a.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
const i$1=o$1()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),r=o$1()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),t=o$1()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),s$1=o$1()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),a$1=o$1()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"});o$1()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"});const n$1=o$1()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"});o$1()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"});o$1()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"});const c$1=o$1()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),m$1=o$1()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),u$2=o$1()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),h$3=o$1()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),v=o$1()({1:"right",2:"left"},{useNumericKeys:!0}),p=o$1()({0:"restriction",1:"added-cost"},{useNumericKeys:!0}),T$2=o$1()({0:"permit",1:"restrict"},{useNumericKeys:!0}),g$3=o$1()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation"},{useNumericKeys:!0}),A$1=o$1()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),f$1=o$1()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),k=o$1()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),N$1=o$1()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),y=o$1()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),D$1=o$1()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),S$1=o$1()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),w$1=o$1()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),U=o$1()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),R=o$1()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"});

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let j$1=class extends(i$2(l$1)){constructor(t){super(t),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null;}readRestrictionAttributes(t,r){const{restrictionAttributeNames:e}=r;return t$1(e)?null:e.map((t=>D$1.fromJSON(t)))}writeRestrictionAttributes(t,r,e){t$1(t)||(r[e]=t.map((t=>D$1.toJSON(t))));}};e$1([y$1({type:[Object],json:{write:!0}})],j$1.prototype,"attributeParameterValues",void 0),e$1([y$1({type:String,json:{write:!0}})],j$1.prototype,"description",void 0),e$1([r$1(k,{ignoreUnknown:!1})],j$1.prototype,"distanceAttributeName",void 0),e$1([y$1({type:String,json:{write:!0}})],j$1.prototype,"id",void 0),e$1([r$1(y,{ignoreUnknown:!1})],j$1.prototype,"impedanceAttributeName",void 0),e$1([y$1({type:String,json:{write:!0}})],j$1.prototype,"name",void 0),e$1([y$1({type:[String],json:{write:!0}})],j$1.prototype,"restrictionAttributeNames",void 0),e$1([o$2("restrictionAttributeNames")],j$1.prototype,"readRestrictionAttributes",null),e$1([r$2("restrictionAttributeNames")],j$1.prototype,"writeRestrictionAttributes",null),e$1([y$1({type:Number,json:{write:{allowNull:!0}}})],j$1.prototype,"simplificationTolerance",void 0),e$1([r$1(i$1)],j$1.prototype,"simplificationToleranceUnits",void 0),e$1([r$1(N$1,{ignoreUnknown:!1})],j$1.prototype,"timeAttributeName",void 0),e$1([r$1(c$1)],j$1.prototype,"type",void 0),e$1([y$1({type:Boolean,json:{write:!0}})],j$1.prototype,"useHierarchy",void 0),e$1([r$1(n$1)],j$1.prototype,"uturnAtJunctions",void 0),j$1=e$1([n$2("esri.rest.support.TravelMode")],j$1);const A=j$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
function e(e,i){if(t$1(e))return null;const s={},o=new RegExp(`^${i}`,"i");for(const r of Object.keys(e))if(o.test(r)){const o=r.substring(i.length);s[y.fromJSON(o)]=e[r];}return s}function i(e,i,s){if(!t$1(e)){i.attributes||(i.attributes={});for(const r in e){const o=y.toJSON(r);i.attributes[`${s}${o}`]=e[r];}}}function s(r){const e={};for(const i of Object.keys(r)){const s=i;e[y.fromJSON(s)]=r[i];}return e}function o(r){const e={};for(const i of Object.keys(r)){const s=i;e[y.toJSON(s)]=r[i];}return e}function a(t,e){return t$1(t)||t$1(e)?null:Math.round((t-e)/6e4)}function n(r){const t=r.toJSON(),e=t;return e.accumulateAttributeNames&&(e.accumulateAttributeNames=t.accumulateAttributeNames.join()),e.attributeParameterValues&&(e.attributeParameterValues=JSON.stringify(t.attributeParameterValues)),e.barriers&&(e.barriers=JSON.stringify(t.barriers)),e.outSR&&(e.outSR=t.outSR.wkid),e.overrides&&(e.overrides=JSON.stringify(t.overrides)),e.polygonBarriers&&(e.polygonBarriers=JSON.stringify(t.polygonBarriers)),e.polylineBarriers&&(e.polylineBarriers=JSON.stringify(t.polylineBarriers)),e.restrictionAttributeNames&&(e.restrictionAttributeNames=t.restrictionAttributeNames.join()),e.stops&&(e.stops=JSON.stringify(t.stops)),e.travelMode&&(e.travelMode=JSON.stringify(t.travelMode)),e}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var m;let u$1=m=class extends(i$2(l$1)){constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line";}static fromGraphic(e){return new m({directionLineType:A$1.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:e.attributes.FromLevel??null,geometry:e.geometry,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,symbol:e.symbol,toLevel:e.attributes.ToLevel??null})}toGraphic(){const e={ObjectID:e$2(this.objectId),DirectionLineType:r$3(this.directionLineType)?A$1.toJSON(this.directionLineType):null,DirectionPointID:e$2(this.directionPointId),Meters:e$2(this.distance),Minutes:e$2(this.duration)};return r$3(this.fromLevel)&&(e.FromLevel=this.fromLevel),r$3(this.toLevel)&&(e.ToLevel=this.toLevel),new g$4({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};u$1.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],u$1.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e$1([y$1({type:A$1.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:A$1.read}}})],u$1.prototype,"directionLineType",void 0),e$1([y$1({json:{read:{source:"attributes.DirectionPointID"}}})],u$1.prototype,"directionPointId",void 0),e$1([y$1({json:{read:{source:"attributes.Meters"}}})],u$1.prototype,"distance",void 0),e$1([y$1({json:{read:{source:"attributes.Minutes"}}})],u$1.prototype,"duration",void 0),e$1([y$1({json:{read:{source:"attributes.FromLevel"}}})],u$1.prototype,"fromLevel",void 0),e$1([y$1({type:m$2})],u$1.prototype,"geometry",void 0),e$1([y$1({json:{read:{source:"attributes.ObjectID"}}})],u$1.prototype,"objectId",void 0),e$1([y$1({type:k$1})],u$1.prototype,"popupTemplate",void 0),e$1([y$1({types:j$2})],u$1.prototype,"symbol",void 0),e$1([y$1({json:{read:{source:"attributes.ToLevel"}}})],u$1.prototype,"toLevel",void 0),e$1([y$1({readOnly:!0,json:{read:!1}})],u$1.prototype,"type",void 0),u$1=m=e$1([n$2("esri.rest.support.DirectionLine")],u$1);const b$1=u$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var u;let b=u=class extends(i$2(l$1)){constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null;}readArrivalTime(e,t){return r$3(t.attributes.ArrivalTime)?new Date(t.attributes.ArrivalTime):null}static fromGraphic(e){return new u({alternateName:e.attributes.AlternateName??null,arrivalTime:r$3(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:e.attributes.ArrivalUTCOffset??null,azimuth:e.attributes.Azimuth??null,branchName:e.attributes.BranchName??null,directionPointType:g$3.fromJSON(e.attributes.DirectionPointType),displayText:e.attributes.DisplayText??null,exitName:e.attributes.ExitName??null,geometry:e.geometry,intersectingName:e.attributes.IntersectingName??null,level:e.attributes.Level??null,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,sequence:e.attributes.Sequence,shortVoiceInstruction:e.attributes.ShortVoiceInstruction??null,stopId:e.attributes.StopID??null,symbol:e.symbol,towardName:e.attributes.TowardName??null,voiceInstruction:e.attributes.VoiceInstruction??null})}toGraphic(){const e={ObjectID:e$2(this.objectId),DirectionPointType:r$3(this.directionPointType)?g$3.toJSON(this.directionPointType):null,Sequence:e$2(this.sequence),StopID:this.stopId};return r$3(this.alternateName)&&(e.AlternateName=this.alternateName),r$3(this.arrivalTime)&&(e.ArrivalTime=this.arrivalTime.getTime()),r$3(this.arrivalTimeOffset)&&(e.ArrivalUTCOffset=this.arrivalTimeOffset),r$3(this.azimuth)&&(e.Azimuth=this.azimuth),r$3(this.branchName)&&(e.BranchName=this.branchName),r$3(this.displayText)&&(e.DisplayText=this.displayText),r$3(this.exitName)&&(e.ExitName=this.exitName),r$3(this.intersectingName)&&(e.IntersectingName=this.intersectingName),r$3(this.level)&&(e.Level=this.level),r$3(this.name)&&(e.Name=this.name),r$3(this.shortVoiceInstruction)&&(e.ShortVoiceInstruction=this.shortVoiceInstruction),r$3(this.towardName)&&(e.TowardName=this.towardName),r$3(this.voiceInstruction)&&(e.VoiceInstruction=this.voiceInstruction),new g$4({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};b.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],b.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e$1([y$1()],b.prototype,"alternateName",void 0),e$1([y$1()],b.prototype,"arrivalTime",void 0),e$1([o$2("arrivalTime",["attributes.ArrivalTime"])],b.prototype,"readArrivalTime",null),e$1([y$1({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],b.prototype,"arrivalTimeOffset",void 0),e$1([y$1({json:{read:{source:"attributes.Azimuth"}}})],b.prototype,"azimuth",void 0),e$1([y$1({json:{read:{source:"attributes.BranchName"}}})],b.prototype,"branchName",void 0),e$1([y$1({type:g$3.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:g$3.read}}})],b.prototype,"directionPointType",void 0),e$1([y$1({json:{read:{source:"attributes.DisplayText"}}})],b.prototype,"displayText",void 0),e$1([y$1({json:{read:{source:"attributes.ExitName"}}})],b.prototype,"exitName",void 0),e$1([y$1({type:w$2})],b.prototype,"geometry",void 0),e$1([y$1()],b.prototype,"intersectingName",void 0),e$1([y$1()],b.prototype,"level",void 0),e$1([y$1({json:{read:{source:"attributes.Name"}}})],b.prototype,"name",void 0),e$1([y$1({json:{read:{source:"attributes.ObjectID"}}})],b.prototype,"objectId",void 0),e$1([y$1({type:k$1})],b.prototype,"popupTemplate",void 0),e$1([y$1({json:{read:{source:"attributes.Sequence"}}})],b.prototype,"sequence",void 0),e$1([y$1()],b.prototype,"shortVoiceInstruction",void 0),e$1([y$1({json:{read:{source:"attributes.StopID"}}})],b.prototype,"stopId",void 0),e$1([y$1({types:j$2})],b.prototype,"symbol",void 0),e$1([y$1({json:{read:{source:"attributes.TowardName"}}})],b.prototype,"towardName",void 0),e$1([y$1({readOnly:!0,json:{read:!1}})],b.prototype,"type",void 0),e$1([y$1()],b.prototype,"voiceInstruction",void 0),b=u=e$1([n$2("esri.rest.support.DirectionPoint")],b);const h$2=b;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var C;let N=C=class extends(i$2(l$1)){constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier";}readCosts(e$1,t){return e(t.attributes,"Attr_")}writeCosts(e,t){i(e,t,"Attr_");}static fromGraphic(e){return new C({addedCost:e.attributes.AddedCost??null,barrierType:r$3(e.attributes.BarrierType)?p.fromJSON(e.attributes.BarrierType):null,costs:r$3(e.attributes.Costs)?s(JSON.parse(e.attributes.Costs)):null,curbApproach:r$3(e.attributes.CurbApproach)?m$1.fromJSON(e.attributes.CurbApproach):null,fullEdge:r$3(e.attributes.FullEdge)?T$2.fromJSON(e.attributes.FullEdge):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,status:r$3(e.attributes.Status)?h$3.fromJSON(e.attributes.Status):null,symbol:e.symbol})}toGraphic(){const e={ObjectID:e$2(this.objectId),AddedCost:this.addedCost,BarrierType:r$3(this.barrierType)?p.toJSON(this.barrierType):null,Costs:r$3(this.costs)?JSON.stringify(o(this.costs)):null,CurbApproach:r$3(this.curbApproach)?m$1.toJSON(this.curbApproach):null,FullEdge:r$3(this.fullEdge)?T$2.toJSON(this.fullEdge):null,Name:this.name,Status:r$3(this.status)?h$3.toJSON(this.status):null};return new g$4({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};N.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],N.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e$1([y$1()],N.prototype,"addedCost",void 0),e$1([y$1({type:p.apiValues,json:{name:"attributes.BarrierType",read:{reader:p.read},write:{writer:p.write}}})],N.prototype,"barrierType",void 0),e$1([y$1()],N.prototype,"costs",void 0),e$1([o$2("costs",["attributes"])],N.prototype,"readCosts",null),e$1([r$2("costs")],N.prototype,"writeCosts",null),e$1([y$1({type:m$1.apiValues,json:{read:{source:"attributes.CurbApproach",reader:m$1.read}}})],N.prototype,"curbApproach",void 0),e$1([y$1({type:T$2.apiValues,json:{name:"attributes.FullEdge",read:{reader:T$2.read},write:{writer:T$2.write}}})],N.prototype,"fullEdge",void 0),e$1([y$1({type:w$2,json:{write:!0}})],N.prototype,"geometry",void 0),e$1([y$1({json:{name:"attributes.Name"}})],N.prototype,"name",void 0),e$1([y$1({json:{name:"attributes.ObjectID"}})],N.prototype,"objectId",void 0),e$1([y$1({type:k$1})],N.prototype,"popupTemplate",void 0),e$1([y$1({type:v.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:v.read}}})],N.prototype,"sideOfEdge",void 0),e$1([y$1({json:{read:{source:"attributes.SourceID"}}})],N.prototype,"sourceId",void 0),e$1([y$1({json:{read:{source:"attributes.SourceOID"}}})],N.prototype,"sourceOid",void 0),e$1([y$1({type:h$3.apiValues,json:{read:{source:"attributes.Status",reader:h$3.read}}})],N.prototype,"status",void 0),e$1([y$1({types:j$2})],N.prototype,"symbol",void 0),e$1([y$1({readOnly:!0,json:{read:!1}})],N.prototype,"type",void 0),N=C=e$1([n$2("esri.rest.support.PointBarrier")],N);const O=N;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var T$1;let h$1=T$1=class extends(i$2(l$1)){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier";}readCosts(e$1,t){return e(t.attributes,"Attr_")}writeCosts(e,t){i(e,t,"Attr_");}static fromGraphic(e){return new T$1({barrierType:r$3(e.attributes.BarrierType)?p.fromJSON(e.attributes.BarrierType):null,costs:r$3(e.attributes.Costs)?s(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:e$2(this.objectId),BarrierType:r$3(this.barrierType)?p.toJSON(this.barrierType):null,Costs:r$3(this.costs)?JSON.stringify(o(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new g$4({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};h$1.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],h$1.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e$1([y$1({type:p.apiValues,json:{name:"attributes.BarrierType",read:{reader:p.read},write:{writer:p.write}}})],h$1.prototype,"barrierType",void 0),e$1([y$1()],h$1.prototype,"costs",void 0),e$1([o$2("costs",["attributes"])],h$1.prototype,"readCosts",null),e$1([r$2("costs")],h$1.prototype,"writeCosts",null),e$1([y$1({type:v$1,json:{write:!0}})],h$1.prototype,"geometry",void 0),e$1([y$1({json:{name:"attributes.Name"}})],h$1.prototype,"name",void 0),e$1([y$1({json:{name:"attributes.ObjectID"}})],h$1.prototype,"objectId",void 0),e$1([y$1({type:k$1})],h$1.prototype,"popupTemplate",void 0),e$1([y$1()],h$1.prototype,"scaleFactor",void 0),e$1([y$1({types:j$2})],h$1.prototype,"symbol",void 0),e$1([y$1({readOnly:!0,json:{read:!1}})],h$1.prototype,"type",void 0),h$1=T$1=e$1([n$2("esri.rest.support.PolygonBarrier")],h$1);const g$2=h$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var j;let T=j=class extends(i$2(l$1)){constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier";}readCosts(e$1,t){return e(t.attributes,"Attr_")}static fromGraphic(e){return new j({barrierType:r$3(e.attributes.BarrierType)?p.fromJSON(e.attributes.BarrierType):null,costs:r$3(e.attributes.Costs)?s(JSON.parse(e.attributes.Costs)):null,geometry:e.geometry,name:e.attributes.Name??null,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,scaleFactor:e.attributes.ScaleFactor??null,symbol:e.symbol})}toGraphic(){const e={ObjectID:e$2(this.objectId),BarrierType:r$3(this.barrierType)?p.toJSON(this.barrierType):null,Costs:r$3(this.costs)?JSON.stringify(o(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new g$4({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};T.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],T.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e$1([y$1({type:p.apiValues,json:{read:{source:"attributes.BarrierType",reader:p.read}}})],T.prototype,"barrierType",void 0),e$1([y$1()],T.prototype,"costs",void 0),e$1([o$2("costs",["attributes"])],T.prototype,"readCosts",null),e$1([y$1({type:m$2,json:{write:!0}})],T.prototype,"geometry",void 0),e$1([y$1({json:{name:"attributes.Name"}})],T.prototype,"name",void 0),e$1([y$1({json:{name:"attributes.ObjectID"}})],T.prototype,"objectId",void 0),e$1([y$1({type:k$1})],T.prototype,"popupTemplate",void 0),e$1([y$1()],T.prototype,"scaleFactor",void 0),e$1([y$1({types:j$2})],T.prototype,"symbol",void 0),e$1([y$1({readOnly:!0,json:{read:!1}})],T.prototype,"type",void 0),T=j=e$1([n$2("esri.rest.support.PolylineBarrier")],T);const f=T;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
let c=class extends l$1{constructor(t){super(t),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null;}readAccumulateAttributes(t){return t$1(t)?null:t.map((t=>y.fromJSON(t)))}writeAccumulateAttributes(t,e,o){!t$1(t)&&t.length&&(e[o]=t.map((t=>y.toJSON(t))));}};e$1([y$1({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],c.prototype,"accumulateAttributes",void 0),e$1([o$2("accumulateAttributes")],c.prototype,"readAccumulateAttributes",null),e$1([r$2("accumulateAttributes")],c.prototype,"writeAccumulateAttributes",null),e$1([y$1({type:String,json:{write:!0}})],c.prototype,"directionsLanguage",void 0),e$1([y$1({type:Boolean,json:{write:!0}})],c.prototype,"findBestSequence",void 0),e$1([y$1({type:Boolean,json:{write:!0}})],c.prototype,"preserveFirstStop",void 0),e$1([y$1({type:Boolean,json:{write:!0}})],c.prototype,"preserveLastStop",void 0),e$1([y$1({type:Boolean,json:{write:!0}})],c.prototype,"startTimeIsUTC",void 0),e$1([y$1({type:Boolean,json:{write:!0}})],c.prototype,"timeWindowsAreUTC",void 0),e$1([y$1({type:A,json:{write:!0}})],c.prototype,"travelMode",void 0),c=e$1([n$2("esri.layers.support.RouteSettings")],c);const l=c;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var S;let g$1=S=class extends(i$2(l$1)){constructor(t){super(t),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0";}readEndTime(t,e){return r$3(e.attributes.EndTimeUTC)?new Date(e.attributes.EndTimeUTC):null}readEndTimeOffset(t,e){return a(e.attributes.EndTime,e.attributes.EndTimeUTC)}readStartTime(t,e){return r$3(e.attributes.StartTimeUTC)?new Date(e.attributes.StartTimeUTC):null}readStartTimeOffset(t,e){return a(e.attributes.StartTime,e.attributes.StartTimeUTC)}readTotalCosts(t,e$1){return e(e$1.attributes,"Total_")}readTotalViolations(t,e$1){return e(e$1.attributes,"TotalViolation_")}readTotalWait(t,e$1){return e(e$1.attributes,"TotalWait_")}static fromGraphic(t){return new S({analysisSettings:r$3(t.attributes.AnalysisSettings)?l.fromJSON(JSON.parse(t.attributes.AnalysisSettings)):null,endTime:r$3(t.attributes.EndTime)?new Date(t.attributes.EndTime):null,endTimeOffset:t.attributes.EndUTCOffset??null,geometry:t.geometry,messages:r$3(t.attributes.Messages)?JSON.parse(t.attributes.Messages):null,name:t.attributes.RouteName,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,startTime:r$3(t.attributes.StartTime)?new Date(t.attributes.StartTime):null,startTimeOffset:t.attributes.StartUTCOffset??null,symbol:t.symbol,totalCosts:r$3(t.attributes.TotalCosts)?s(JSON.parse(t.attributes.TotalCosts)):null,totalDistance:t.attributes.TotalMeters??null,totalDuration:t.attributes.TotalMinutes??null,totalLateDuration:t.attributes.TotalLateMinutes??null,totalWaitDuration:t.attributes.TotalWaitMinutes??null,version:t.attributes.Version})}toGraphic(){const t={ObjectID:e$2(this.objectId),AnalysisSettings:r$3(this.analysisSettings)?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:r$3(this.endTime)?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:r$3(this.messages)?JSON.stringify(this.messages):null,RouteName:e$2(this.name),StartTime:r$3(this.startTime)?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:r$3(this.totalCosts)?JSON.stringify(o(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:e$2(this.version)};return new g$4({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:e$2(this.popupTemplate)})}};g$1.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],g$1.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e$1([y$1()],g$1.prototype,"analysisSettings",void 0),e$1([y$1()],g$1.prototype,"endTime",void 0),e$1([o$2("endTime",["attributes.EndTimeUTC"])],g$1.prototype,"readEndTime",null),e$1([y$1()],g$1.prototype,"endTimeOffset",void 0),e$1([o$2("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],g$1.prototype,"readEndTimeOffset",null),e$1([y$1({json:{read:{source:"attributes.FirstStopID"}}})],g$1.prototype,"firstStopId",void 0),e$1([y$1({type:m$2})],g$1.prototype,"geometry",void 0),e$1([y$1({json:{read:{source:"attributes.LastStopID"}}})],g$1.prototype,"lastStopId",void 0),e$1([y$1()],g$1.prototype,"messages",void 0),e$1([y$1({json:{read:{source:"attributes.Name"}}})],g$1.prototype,"name",void 0),e$1([y$1({json:{read:{source:"attributes.ObjectID"}}})],g$1.prototype,"objectId",void 0),e$1([y$1({type:k$1})],g$1.prototype,"popupTemplate",void 0),e$1([y$1()],g$1.prototype,"startTime",void 0),e$1([o$2("startTime",["attributes.StartTimeUTC"])],g$1.prototype,"readStartTime",null),e$1([y$1()],g$1.prototype,"startTimeOffset",void 0),e$1([o$2("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],g$1.prototype,"readStartTimeOffset",null),e$1([y$1({json:{read:{source:"attributes.StopCount"}}})],g$1.prototype,"stopCount",void 0),e$1([y$1({types:j$2})],g$1.prototype,"symbol",void 0),e$1([y$1()],g$1.prototype,"totalCosts",void 0),e$1([o$2("totalCosts",["attributes"])],g$1.prototype,"readTotalCosts",null),e$1([y$1()],g$1.prototype,"totalDistance",void 0),e$1([y$1()],g$1.prototype,"totalDuration",void 0),e$1([y$1()],g$1.prototype,"totalLateDuration",void 0),e$1([y$1()],g$1.prototype,"totalViolations",void 0),e$1([o$2("totalViolations",["attributes"])],g$1.prototype,"readTotalViolations",null),e$1([y$1()],g$1.prototype,"totalWait",void 0),e$1([o$2("totalWait",["attributes"])],g$1.prototype,"readTotalWait",null),e$1([y$1()],g$1.prototype,"totalWaitDuration",void 0),e$1([y$1({readOnly:!0,json:{read:!1}})],g$1.prototype,"type",void 0),e$1([y$1()],g$1.prototype,"version",void 0),g$1=S=e$1([n$2("esri.rest.support.RouteInfo")],g$1);const h=g$1;

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var g;let w=g=class extends(i$2(l$1)){constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null;}readArriveTimeOffset(e,t){return a(t.attributes.ArriveTime,t.attributes.ArriveTimeUTC)}readCumulativeCosts(e$1,t){return e(t.attributes,"Cumul_")}readDepartTimeOffset(e,t){return a(t.attributes.DepartTime,t.attributes.DepartTimeUTC)}readServiceCosts(e$1,t){return e(t.attributes,"Attr_")}writeServiceCosts(e,t){i(e,t,"Attr_");}writeTimeWindowEnd(e,t){t$1(e)||(t.attributes||(t.attributes={}),t.attributes.TimeWindowEnd=e.getTime());}writeTimeWindowStart(e,t){t$1(e)||(t.attributes||(t.attributes={}),t.attributes.TimeWindowStart=e.getTime());}readViolations(e$1,t){return e(t.attributes,"Violation_")}readWait(e$1,t){return e(t.attributes,"Wait_")}static fromGraphic(e){return new g({arriveCurbApproach:r$3(e.attributes.ArrivalCurbApproach)?m$1.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:r$3(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:r$3(e.attributes.CumulativeCosts)?s(JSON.parse(e.attributes.CumulativeCosts)):null,cumulativeDistance:e.attributes.CumulativeMeters??null,cumulativeDuration:e.attributes.CumulativeMinutes??null,curbApproach:r$3(e.attributes.CurbApproach)?m$1.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:r$3(e.attributes.DepartureCurbApproach)?m$1.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:r$3(e.attributes.DepartureTime)?new Date(e.attributes.DepartureTime):null,departTimeOffset:e.attributes.DepartureUTCOffset??null,geometry:e.geometry,lateDuration:e.attributes.LateMinutes??null,locationType:r$3(e.attributes.LocationType)?u$2.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.ObjectID??e.attributes.__OBJECTID,popupTemplate:e.popupTemplate,routeName:e.attributes.RouteName,sequence:e.attributes.Sequence??null,serviceCosts:r$3(e.attributes.ServiceCosts)?s(JSON.parse(e.attributes.ServiceCosts)):null,serviceDistance:e.attributes.ServiceMeters??null,serviceDuration:e.attributes.ServiceMinutes??null,status:r$3(e.attributes.Status)?h$3.fromJSON(e.attributes.Status):null,symbol:e.symbol,timeWindowEnd:r$3(e.attributes.TimeWindowEnd)?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:e.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:r$3(e.attributes.TimeWindowStart)?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:e.attributes.TimeWindowStartUTCOffset??null,waitDuration:e.attributes.WaitMinutes??null})}toGraphic(){const e={ObjectID:e$2(this.objectId),ArrivalCurbApproach:r$3(this.arriveCurbApproach)?m$1.toJSON(this.arriveCurbApproach):null,ArrivalTime:r$3(this.arriveTime)?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:r$3(this.cumulativeCosts)?JSON.stringify(o(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:r$3(this.curbApproach)?m$1.toJSON(this.curbApproach):null,DepartureCurbApproach:r$3(this.departCurbApproach)?m$1.toJSON(this.departCurbApproach):null,DepartureTime:r$3(this.departTime)?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:r$3(this.locationType)?u$2.toJSON(this.locationType):null,Name:e$2(this.name),RouteName:e$2(this.routeName),Sequence:this.sequence,ServiceCosts:r$3(this.serviceCosts)?JSON.stringify(o(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:r$3(this.status)?h$3.toJSON(this.status):null,TimeWindowEnd:r$3(this.timeWindowEnd)?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:r$3(this.timeWindowStart)?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new g$4({geometry:this.geometry,attributes:e,symbol:this.symbol,popupTemplate:this.popupTemplate})}};w.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],w.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e$1([y$1({type:m$1.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:m$1.read}}})],w.prototype,"arriveCurbApproach",void 0),e$1([y$1({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],w.prototype,"arriveTime",void 0),e$1([y$1()],w.prototype,"arriveTimeOffset",void 0),e$1([o$2("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],w.prototype,"readArriveTimeOffset",null),e$1([y$1({json:{name:"attributes.Bearing",read:!1,write:!0}})],w.prototype,"bearing",void 0),e$1([y$1({json:{name:"attributes.BearingTol",read:!1,write:!0}})],w.prototype,"bearingTol",void 0),e$1([y$1()],w.prototype,"cumulativeCosts",void 0),e$1([o$2("cumulativeCosts",["attributes"])],w.prototype,"readCumulativeCosts",null),e$1([y$1()],w.prototype,"cumulativeDistance",void 0),e$1([y$1()],w.prototype,"cumulativeDuration",void 0),e$1([y$1({type:m$1.apiValues,json:{name:"attributes.CurbApproach",read:{reader:m$1.read},write:{writer:m$1.write}}})],w.prototype,"curbApproach",void 0),e$1([y$1({type:m$1.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:m$1.read}}})],w.prototype,"departCurbApproach",void 0),e$1([y$1({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],w.prototype,"departTime",void 0),e$1([y$1()],w.prototype,"departTimeOffset",void 0),e$1([o$2("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],w.prototype,"readDepartTimeOffset",null),e$1([y$1({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],w.prototype,"distanceToNetworkInMeters",void 0),e$1([y$1({type:w$2,json:{write:!0}})],w.prototype,"geometry",void 0),e$1([y$1()],w.prototype,"lateDuration",void 0),e$1([y$1({type:u$2.apiValues,json:{name:"attributes.LocationType",read:{reader:u$2.read},write:{writer:u$2.write}}})],w.prototype,"locationType",void 0),e$1([y$1({json:{name:"attributes.Name"}})],w.prototype,"name",void 0),e$1([y$1({json:{name:"attributes.NavLatency",read:!1,write:!0}})],w.prototype,"navLatency",void 0),e$1([y$1({json:{name:"attributes.ObjectID"}})],w.prototype,"objectId",void 0),e$1([y$1({type:k$1})],w.prototype,"popupTemplate",void 0),e$1([y$1({json:{read:{source:"attributes.PosAlong"}}})],w.prototype,"posAlong",void 0),e$1([y$1({json:{name:"attributes.RouteName"}})],w.prototype,"routeName",void 0),e$1([y$1()],w.prototype,"serviceCosts",void 0),e$1([o$2("serviceCosts",["attributes"])],w.prototype,"readServiceCosts",null),e$1([r$2("serviceCosts")],w.prototype,"writeServiceCosts",null),e$1([y$1()],w.prototype,"serviceDistance",void 0),e$1([y$1()],w.prototype,"serviceDuration",void 0),e$1([y$1({json:{name:"attributes.Sequence"}})],w.prototype,"sequence",void 0),e$1([y$1({type:v.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:v.read}}})],w.prototype,"sideOfEdge",void 0),e$1([y$1({json:{read:{source:"attributes.SnapX"}}})],w.prototype,"snapX",void 0),e$1([y$1({json:{read:{source:"attributes.SnapY"}}})],w.prototype,"snapY",void 0),e$1([y$1({json:{read:{source:"attributes.SnapZ"}}})],w.prototype,"snapZ",void 0),e$1([y$1({json:{read:{source:"attributes.SourceID"}}})],w.prototype,"sourceId",void 0),e$1([y$1({json:{read:{source:"attributes.SourceOID"}}})],w.prototype,"sourceOid",void 0),e$1([y$1({type:h$3.apiValues,json:{read:{source:"attributes.Status",reader:h$3.read}}})],w.prototype,"status",void 0),e$1([y$1({types:j$2})],w.prototype,"symbol",void 0),e$1([y$1({type:Date,json:{name:"attributes.TimeWindowEnd"}})],w.prototype,"timeWindowEnd",void 0),e$1([r$2("timeWindowEnd")],w.prototype,"writeTimeWindowEnd",null),e$1([y$1()],w.prototype,"timeWindowEndOffset",void 0),e$1([y$1({type:Date,json:{name:"attributes.TimeWindowStart"}})],w.prototype,"timeWindowStart",void 0),e$1([r$2("timeWindowStart")],w.prototype,"writeTimeWindowStart",null),e$1([y$1()],w.prototype,"timeWindowStartOffset",void 0),e$1([y$1({readOnly:!0,json:{read:!1}})],w.prototype,"type",void 0),e$1([y$1()],w.prototype,"violations",void 0),e$1([o$2("violations",["attributes"])],w.prototype,"readViolations",null),e$1([y$1()],w.prototype,"waitDuration",void 0),e$1([y$1()],w.prototype,"wait",void 0),e$1([o$2("wait",["attributes"])],w.prototype,"readWait",null),w=g=e$1([n$2("esri.rest.support.Stop")],w);const D=w;

export { A, D$1 as D, N$1 as N, O, R, S$1 as S, U, a, a$1 as b, n$1 as c, b$1 as d, f as e, f$1 as f, g$2 as g, h$2 as h, i$1 as i, D as j, h as k, l, n, r, s$1 as s, t, w$1 as w, y };
