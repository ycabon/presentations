import { by as t, s, dp as r, eA as E, r as r$1, b3 as l, b4 as h, dX as l$1, t as t$1, Z as s$1, B as e, C as d, D as n$1 } from './_virtual_index-9b831d4a.js';
import { n } from './LayerView3D-b7813df6.js';
import { u } from './LayerView-e26ca8f9.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
var y;!function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error";}(y||(y={}));let g=class extends(n(u)){constructor(){super(...arguments),this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this._wasmLayerId=-1,this._handles=new t,this._dbgFlags=new Set;}get wasmLayerId(){return this._wasmLayerId}initialize(){if("local"!==this.view.viewingMode)throw new s("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(this.view._stage.renderView.renderingContext.type!==r.WEBGL2)throw new s("voxel:unsupported-context","Voxel layers are supported in WebGL2 rendering contexts only.",{});if(!!!this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat?.textureFloat)throw new s("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const e=this.layer.spatialReference;if(!E(e,this.view.spatialReference))throw new s("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const t=this.layer.currentVariableId,r$2=this.layer.getVolume(t),a=this.layer.getVariable(t);if(r$1(r$2)&&r$1(a)){const e=r$2.dimensions[0],s=r$2.dimensions[1],t=r$2.getZDimension();if(t>1){const i=r$2.dimensions[t],o=e.size*s.size*i.size;let l=1;switch(a.renderingFormat.type){case"Int16":case"UInt16":l=2;break;case"Int32":case"UInt32":case"Float32":l=4;}this._futureMemory=l*o;}}const o=this.view.addVoxelLayerViewToWasm(this).then((e=>{this._wasmLayerId=e,this._suspendedHandle=l((()=>this.suspended),(e=>{const s=this.view.voxelWasm;r$1(s)&&s.setEnabled(this,!e);}),h),this._handles.add([l((()=>this.layer.renderMode),(e=>this._pushRenderModeToWasm(e))),l((()=>this.layer.currentVariableId),(e=>this._pushCurrentVariableIdToWasm(e))),l((()=>this.layer.getDynamicSections()),(e=>this._pushDynamicSectionsToWasm(e))),l((()=>this.layer.getSlices()),(e=>this._pushSlicesToWasm(e))),l((()=>this.layer.getSections()),(e=>this._pushSectionsToWasm(e))),l((()=>this.layer.getVerticalExaggeration()),(e=>this._pushVerticalExaggerationToWasm(e))),l((()=>this.layer.getVerticalOffset()),(e=>this._pushVerticalOffsetToWasm(e)))]);})).catch((e=>{if(this.view.removeVoxelLayerViewFromWasm(this),this._wasmLayerId=-1,-1===e)throw new s("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(-2===e)throw new s("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})}));this.addResolvingPromise(o);}destroy(){this.view.removeVoxelLayerViewFromWasm(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null),this._handles=l$1(this._handles);}isUpdating(){const e=this.view.voxelWasm;return !(this._wasmLayerId<0||!r$1(e))&&e.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating");}getUsedMemory(){return this._usedMemory}getUnloadedMemory(){return this._futureMemory}ignoresMemoryFactor(){return !0}get performanceInfo(){return {nodes:0,displayedNumberOfFeatures:0,maximumNumberOfFeatures:0,totalNumberOfFeatures:0,core:null}}setUsedMemory(e){this._usedMemory=e,this._futureMemory=0;}captureFrustum(){const e=this.view.voxelWasm;r$1(e)&&e.captureFrustum();}toggleFullVolumeExtentDraw(){const e=this.view.voxelWasm;r$1(e)&&e.toggleFullVolumeExtentDraw(this);}_pushRenderModeToWasm(e){const s=this.view.voxelWasm;this._dbg(y.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(r$1(s)?"have WASM":"don't have WASM!!!"));!!r$1(s)&&s.setRenderMode(this,e)||this._dbg(y.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!");}_pushSlicesToWasm(e){const s=this.view.voxelWasm;this._dbg(y.VerboseAPI,"VoxelLayerView3D._pushSlicesToWasm() called, "+(r$1(s)?"have WASM":"don't have WASM!!!"));!!r$1(s)&&s.setSlices(this,e)||this._dbg(y.Error,"VoxelLayerView3D._pushSlicesToWasm() failed!");}_pushSectionsToWasm(e){const s=this.view.voxelWasm;this._dbg(y.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(r$1(s)?"have WASM":"don't have WASM!!!"));!!r$1(s)&&s.setStaticSections(this,e)||this._dbg(y.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!");}_pushDynamicSectionsToWasm(e){const s=this.view.voxelWasm;this._dbg(y.VerboseAPI,"VoxelLayerView3D._pushDynamicSectionsToWasm() called, "+(r$1(s)?"have WASM":"don't have WASM!!!"));!!r$1(s)&&s.setDynamicSections(this,e)||this._dbg(y.Error,"VoxelLayer._updateDynamicSections() failed!");}_pushCurrentVariableIdToWasm(e){const s=this.view.voxelWasm;this._dbg(y.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(r$1(s)?"have WASM":"don't have WASM!!!"));!!r$1(s)&&s.setCurrentVariable(this,e)||this._dbg(y.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!");}_pushVerticalExaggerationToWasm(e){const s=this.layer.getVolumeStyle(null),t=this.view.voxelWasm;if(this._dbg(y.VerboseAPI,`VoxelLayerView3D._pushVerticalExaggerationToWasm() called, ${r$1(t)?"have WASM":"don't have WASM!!!"}, ${r$1(s)?"have style":"don't have style!!!"}`),t$1(s))return;!!r$1(t)&&t.setVerticalExaggerationAndOffset(this,s.volumeId,e,s.verticalOffset)||this._dbg(y.Error,"VoxelLayerView3D._pushVerticalExaggerationToWasm() failed!");}_pushVerticalOffsetToWasm(e){const s=this.layer.getVolumeStyle(null),t=this.view.voxelWasm;if(this._dbg(y.VerboseAPI,`VoxelLayerView3D._pushVerticalOffsetToWasm() called, ${r$1(t)?"have WASM":"don't have WASM!!!"}, ${r$1(s)?"have style":"don't have style!!!"}`),t$1(s))return;!!r$1(t)&&t.setVerticalExaggerationAndOffset(this,s.volumeId,s.verticalExaggeration,e)||this._dbg(y.Error,"VoxelLayerView3D._pushVerticalOffsetToWasm() failed!");}_dbg(e,s){this._dbgFlags.has(e)&&(e===y.Error?s$1.getLogger(this.declaredClass).error(s):s$1.getLogger(this.declaredClass).warn(s));}};e([d()],g.prototype,"layer",void 0),e([d({readOnly:!0,aliasOf:"layer.parsedUrl.path"})],g.prototype,"baseUrl",void 0),g=e([n$1("esri.views.3d.layers.VoxelLayerView3D")],g);const f=g;

export { f as default };
