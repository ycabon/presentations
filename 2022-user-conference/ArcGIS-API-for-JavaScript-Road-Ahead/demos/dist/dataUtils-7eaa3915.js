import { cr as s$2, O as t, e, G as r, C as s$3, S as has, _ as f$2, bp as t$1, aM as R, eP as w$2, en as M$2 } from './_virtual_index-64b818a8.js';
import { l as l$1, u as u$2 } from './pixelUtils-d970883c.js';

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
const s$1=new Map;s$1.set("meter-per-second",1),s$1.set("kilometer-per-hour",.277778),s$1.set("knots",.514444),s$1.set("feet-per-second",.3048),s$1.set("mile-per-hour",.44704);const i=180/Math.PI,h$1=5,l=new s$2({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function c$1(t,e){return s$1.get(t)/s$1.get(e)||1}function u$1(t){return (450-t)%360}function f$1(t,e="geographic"){const[n,r]=t,o=Math.sqrt(n*n+r*r);let a=Math.atan2(r,n)*i;return a=(360+a)%360,"geographic"===e&&(a=u$1(a)),[o,a]}function p$1(t,e="geographic"){let n=t[1];"geographic"===e&&(n=u$1(n)),n%=360;const r=t[0];return [r*Math.cos(n/i),r*Math.sin(n/i)]}function m$1(t$1,r,o,s="geographic"){if(!l$1(t$1)||t(o))return t$1;const i="vector-magdir"===r?t$1.clone():e(d$1(t$1,r)),h=i.pixels[1];for(let e=0;e<h.length;e++)h[e]="geographic"===s?(h[e]+o[e]+270)%360:(h[e]+360-o[e])%360;return "vector-magdir"===r?i:d$1(i,"vector-magdir")}function d$1(t,e,n="geographic",r=1){if(!l$1(t))return t;const{pixels:s,width:i,height:h}=t,l=i*h,c=s[0],u=s[1],m=t.pixelType.startsWith("f")?t.pixelType:"f32",d=u$2.createEmptyBand(m,l),M=u$2.createEmptyBand(m,l);let g=0;for(let o=0;o<h;o++)for(let t=0;t<i;t++)"vector-uv"===e?([d[g],M[g]]=f$1([c[g],u[g]],n),d[g]*=r):([d[g],M[g]]=p$1([c[g],u[g]],n),d[g]*=r,M[g]*=r),g++;const x=new u$2({pixelType:m,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[d,M]});return x.updateStatistics(),x}function M$1(t,e,n=1){if(1===n||!l$1(t))return t;const r=t.clone(),{pixels:o,width:s,height:i}=r,h=o[0],l=o[1];let c=0;for(let a=0;a<i;a++)for(let t=0;t<s;t++)"vector-uv"===e?(h[c]*=n,l[c]*=n):h[c]*=n,c++;return r.updateStatistics(),r}function g$1(t$1,n,r,o,a){if(t(a)||!a.spatialReference.equals(t$1.spatialReference))return {extent:t$1,width:Math.round(n/o),height:Math.round(r/o),resolution:t$1.width/n};const s=a.xmin,i=a.ymax,h=(t$1.xmax-t$1.xmin)/n*o,l=(t$1.ymax-t$1.ymin)/r*o,c=(h+l)/2;return t$1.xmin=s+Math.floor((t$1.xmin-s)/h)*h,t$1.xmax=s+Math.ceil((t$1.xmax-s)/h)*h,t$1.ymin=i+Math.floor((t$1.ymin-i)/l)*l,t$1.ymax=i+Math.ceil((t$1.ymax-i)/l)*l,{extent:t$1,width:Math.round(t$1.width/h),height:Math.round(t$1.height/l),resolution:c}}const x$1=k(0,0,0);function k(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const o=r?-1:1,a=13*o,s=-7*o,i=-2*o,h=-16*o,l=21.75,[c,u]=y$1(0,e+a,n,l),[f,p]=y$1(t-5.5,e+s,n,l),[m,d]=y$1(t+5.5,e+s,n,l),[M,g]=y$1(t-1.5,e+i,n,l),[x,k]=y$1(t+1.5,e+i,n,l),[w,P]=y$1(t-1.5,e+h,n,l),[b,I]=y$1(t+1.5,e+h,n,l);return [c,u,f,p,M,g,x,k,m,d,w,P,b,I]}function w$1(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,o=n?-1:1,a=5*o,s=20*o,i=25*o,l=45,c=0,u=0,f=2,p=0,m=f*o;let[d,M]=[c+r/2,u-s],[g,x]=[d+f,M],[k,w]=[g-p,x+m],[P,b]=[c-r/2,u-i],[I,v]=[P+p,b-m],A=Math.ceil(t/h$1),_=Math.floor(A/10);A-=8*_;const U=[],S=[];for(let h=0;h<A/2;h++,_--){_<=0&&A%2==1&&h===(A-1)/2&&(P=c,I=P+p,b=(b+M)/2,v=b-m);const[t,n]=y$1(P,b,e,l);if(_>0){const[r,o]=y$1(g,b,e,l),[a,s]=y$1(d,M,e,l);U.push(r),U.push(o),U.push(t),U.push(n),U.push(a),U.push(s);}else {const[r,o]=y$1(g,x,e,l),[a,s]=y$1(k,w,e,l),[i,h]=y$1(I,v,e,l);S.push(t),S.push(n),S.push(i),S.push(h),S.push(a),S.push(s),S.push(r),S.push(o);}b+=a,M+=a,x+=a,w+=a,v+=a;}const[D,F]=y$1(c+r/2,u+s,e,l),j=r/2+f,[N,J]=y$1(c+j,u+s,e,l),[O,q]=y$1(c+r/2,u-i,e,l),[B,E]=y$1(c+j,u-i,e,l);return {pennants:U,barbs:S,shaft:[D,F,N,J,O,q,B,E]}}function y$1(t,e,n,r=1){const o=Math.sqrt(t*t+e*e)/r,a=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return [o,(2*Math.PI+a-n)%(2*Math.PI)]}const P=[0,1,3,6,10,16,21,27,33,40,47,55,63],b=[0,.5,1,1.5,2],I=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function v(t,e,n,r){const o=c$1(r||"knots",n);let a;for(a=1;a<e.length;a++)if(a===e.length-1){if(t<e[a]*o)break}else if(t<=e[a]*o)break;return Math.min(a-1,e.length-2)}function A(t,e,n,r,o){let a=0;switch(e){case"beaufort_kn":a=v(t,P,"knots",n);break;case"beaufort_km":a=v(t,P,"kilometer-per-hour",n);break;case"beaufort_ft":a=v(t,P,"feet-per-second",n);break;case"beaufort_m":a=v(t,P,"meter-per-second",n);break;case"classified_arrow":a=v(t,o,r,n);break;case"ocean_current_m":a=v(t,b,"meter-per-second",n);break;case"ocean_current_kn":a=v(t,I,"knots",n);}return a}function _(t,e){const{style:n,inputUnit:o,outputUnit:a,breakValues:s}=e,i=l.fromJSON(o),h=l.fromJSON(a),c=7*6,u=15;let f=0,p=0;const{width:m,height:d,mask:M}=t,g=t.pixels[0],k=t.pixels[1],w=r(M)?M.filter((t=>t>0)).length:m*d,y=new Float32Array(w*c),P=new Uint32Array(u*w);for(let r=0;r<d;r++)for(let t=0;t<m;t++){const e=r*m+t;if(!M||M[r*m+t]){const o=(k[e]+360)%360/180*Math.PI??2*Math.PI*Math.random(),a=A(g[e],n,i,h,s);for(let n=0;n<x$1.length;n+=2)y[f++]=(t+.5)/m,y[f++]=(r+.5)/d,y[f++]=x$1[n],y[f++]=x$1[n+1]+o,y[f++]=a,y[f++]=g[e];const l=7*(f/c-1);P[p++]=l,P[p++]=l+1,P[p++]=l+2,P[p++]=l+0,P[p++]=l+4,P[p++]=l+3,P[p++]=l+0,P[p++]=l+2,P[p++]=l+3,P[p++]=l+2,P[p++]=l+5,P[p++]=l+3,P[p++]=l+5,P[p++]=l+6,P[p++]=l+3;}}return {vertexData:y,indexData:P}}const U=[];function S(t,e){if(0===U.length)for(let h=0;h<30;h++)U.push(w$1(5*h,0));const n=c$1(l.fromJSON(e.inputUnit),"knots"),{width:r,height:o,mask:a}=t,s=t.pixels[0],i=t.pixels[1],u=6,f=[],p=[];let m=0,d=0;for(let l=0;l<o;l++)for(let t=0;t<r;t++){const e=l*r+t,c=s[e]*n;if((!a||a[l*r+t])&&c>=h$1){const n=(i[e]+360)%360/180*Math.PI??2*Math.PI*Math.random(),{pennants:a,barbs:s,shaft:h}=U[Math.min(Math.floor(c/5),29)];if(a.length+s.length===0)continue;let M=f.length/u;const g=(t+.5)/r,x=(l+.5)/o;for(let t=0;t<a.length;t+=2)f[m++]=g,f[m++]=x,f[m++]=a[t],f[m++]=a[t+1]+n,f[m++]=0,f[m++]=c;for(let t=0;t<s.length;t+=2)f[m++]=g,f[m++]=x,f[m++]=s[t],f[m++]=s[t+1]+n,f[m++]=0,f[m++]=c;for(let t=0;t<h.length;t+=2)f[m++]=g,f[m++]=x,f[m++]=h[t],f[m++]=h[t+1]+n,f[m++]=0,f[m++]=c;for(let t=0;t<a.length/6;t++)p[d++]=M,p[d++]=M+1,p[d++]=M+2,M+=3;for(let t=0;t<s.length/8;t++)p[d++]=M,p[d++]=M+1,p[d++]=M+2,p[d++]=M+1,p[d++]=M+2,p[d++]=M+3,M+=4;p[d++]=M+0,p[d++]=M+1,p[d++]=M+2,p[d++]=M+1,p[d++]=M+3,p[d++]=M+2,M+=4;}}return {vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function D(t,e){const n=4*6;let r=0,o=0;const{width:a,height:s,mask:i}=t,u=t.pixels[0],f=[],p=[],m=c$1(l.fromJSON(e.inputUnit),"knots"),d="wind_speed"===e.style?h$1:Number.MAX_VALUE;for(let h=0;h<s;h++)for(let t=0;t<a;t++){const e=u[h*a+t]*m;if((!i||i[h*a+t])&&e<d){for(let n=0;n<4;n++)f[r++]=(t+.5)/a,f[r++]=(h+.5)/s,f[r++]=n<2?-.5:.5,f[r++]=n%2==0?-.5:.5,f[r++]=0,f[r++]=e;const i=4*(r/n-1);p[o++]=i,p[o++]=i+1,p[o++]=i+2,p[o++]=i+1,p[o++]=i+2,p[o++]=i+3;}}return {vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function F(t,e){return "simple_scalar"===e.style?D(t,e):"wind_speed"===e.style?S(t,e):_(t,e)}function j(t,e,n,r=[0,0],a=.5){const{width:s,height:i,mask:h}=t,[l,c]=t.pixels,[u,m]=r,d=Math.round((s-u)/n),M=Math.round((i-m)/n),g=d*M,x=new Float32Array(g),k=new Float32Array(g),w=new Uint8Array(g),y="vector-uv"===e;for(let o=0;o<M;o++)for(let t=0;t<d;t++){let e=0;const r=o*d+t,M=Math.max(0,o*n+m),g=Math.max(0,t*n+u),P=Math.min(i,M+n),b=Math.min(s,g+n);for(let t=M;t<P;t++)for(let n=g;n<b;n++){const o=t*s+n;if(!h||h[o]){e++;const t=y?[l[o],c[o]]:[l[o],(360+c[o])%360],[n,a]=y?t:p$1(t);x[r]+=n,k[r]+=a;}}if(e>=(P-M)*(b-g)*(1-a)){w[r]=1;const[t,n]=f$1([x[r]/e,k[r]/e]);x[r]=t,k[r]=n;}else w[r]=0,x[r]=0,k[r]=0;}const P=new u$2({width:d,height:M,pixels:[x,k],mask:w});return P.updateStatistics(),P}

/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
const s=s$3.getLogger("esri.views.2d.engine.flow.dataUtils"),c=10;async function f(t,e,n,r){const i=performance.now(),l=u(e,n),a=performance.now(),f=m(e,l,n.width,n.height),h=performance.now(),d=w(f,!0),y=performance.now(),x="Streamlines"===t?p(d,c):g(d),M=performance.now();return has("esri-2d-profiler")&&(s.info("I.1","_createFlowFieldFromData (ms)",Math.round(a-i)),s.info("I.2","_getStreamlines (ms)",Math.round(h-a)),s.info("I.3","createAnimatedLinesData (ms)",Math.round(y-h)),s.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(M-y)),s.info("I.5","createFlowMesh (ms)",Math.round(M-i)),s.info("I.6","Mesh size (bytes)",x.vertexData.buffer.byteLength+x.indexData.buffer.byteLength)),await Promise.resolve(),f$2(r),x}function u(t,e){const n=d(e.data,e.width,e.height,t.smoothing);if(t.interpolate){return (t,r)=>{const o=Math.floor(t),i=Math.floor(r);if(o<0||o>=e.width)return [0,0];if(i<0||i>=e.height)return [0,0];const l=t-o,a=r-i,s=o,c=i,f=o<e.width-1?o+1:o,u=i<e.height-1?i+1:i,h=n[2*(c*e.width+s)],m=n[2*(c*e.width+f)],d=n[2*(u*e.width+s)],w=n[2*(u*e.width+f)],p=n[2*(c*e.width+s)+1],g=n[2*(c*e.width+f)+1];return [(h*(1-a)+d*a)*(1-l)+(m*(1-a)+w*a)*l,(p*(1-a)+n[2*(u*e.width+s)+1]*a)*(1-l)+(g*(1-a)+n[2*(u*e.width+f)+1]*a)*l]}}return (t,r)=>{const o=Math.round(t),i=Math.round(r);return o<0||o>=e.width||i<0||i>=e.height?[0,0]:[n[2*(i*e.width+o)+0],n[2*(i*e.width+o)+1]]}}function h(t,e,n,r,o,i,l,a,s){const c=[];let f=n,u=r,h=0,[m,d]=e(f,u);m*=t.velocityScale,d*=t.velocityScale;const w=Math.sqrt(m*m+d*d);let p,g;c.push({x:f,y:u,t:h,speed:w});for(let y=0;y<t.verticesPerLine;y++){let[n,r]=e(f,u);n*=t.velocityScale,r*=t.velocityScale;const m=Math.sqrt(n*n+r*r);if(m<t.minSpeedThreshold)return c;const d=n/m,w=r/m;f+=d*t.segmentLength,u+=w*t.segmentLength;if(h+=t.segmentLength/m,Math.acos(d*p+w*g)>t.maxTurnAngle)return c;if(t.collisions){const t=Math.round(f*s),e=Math.round(u*s);if(t<0||t>l-1||e<0||e>a-1)return c;const n=i[e*l+t];if(-1!==n&&n!==o)return c;i[e*l+t]=o;}c.push({x:f,y:u,t:h,speed:m}),p=d,g=w;}return c}function m(t,e,n,r){const o=[],l=new t$1,a=1/Math.max(t.lineCollisionWidth,1),s=Math.round(n*a),c=Math.round(r*a),f=new Int32Array(s*c);for(let i=0;i<f.length;i++)f[i]=-1;const u=[];for(let i=0;i<r;i+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)u.push({x:e,y:i,sort:l.getFloat()});u.sort(((t,e)=>t.sort-e.sort));for(const{x:i,y:m}of u)if(l.getFloat()<t.density){const n=h(t,e,i,m,o.length,f,s,c,a);if(n.length<2)continue;o.push(n);}return o}function d(t,e,n,r){if(0===r)return t;const o=Math.round(3*r),i=new Array(2*o+1);let l=0;for(let c=-o;c<=o;c++){const t=Math.exp(-c*c/(r*r));i[c+o]=t,l+=t;}for(let c=-o;c<=o;c++)i[c+o]/=l;const a=new Float32Array(t.length);for(let c=0;c<n;c++)for(let n=0;n<e;n++){let r=0,l=0;for(let a=-o;a<=o;a++){if(n+a<0||n+a>=e)continue;const s=i[a+o];r+=s*t[2*(c*e+(n+a))+0],l+=s*t[2*(c*e+(n+a))+1];}a[2*(c*e+n)+0]=r,a[2*(c*e+n)+1]=l;}const s=new Float32Array(t.length);for(let c=0;c<e;c++)for(let t=0;t<n;t++){let r=0,l=0;for(let s=-o;s<=o;s++){if(t+s<0||t+s>=n)continue;const f=i[s+o];r+=f*a[2*((t+s)*e+c)+0],l+=f*a[2*((t+s)*e+c)+1];}s[2*(t*e+c)+0]=r,s[2*(t*e+c)+1]=l;}return s}function w(t,e){const n=new t$1,r=t.reduce(((t,e)=>t+e.length),0),o=new Float32Array(4*r),l=new Array(t.length);let a=0,s=0;for(const i of t){const t=a;for(const e of i)o[4*a+0]=e.x,o[4*a+1]=e.y,o[4*a+2]=e.t,o[4*a+3]=e.speed,a++;l[s++]={startVertex:t,numberOfVertices:i.length,totalTime:i[i.length-1].t,timeSeed:e?n.getFloat():0};}return {lineVertices:o,lineDescriptors:l}}function p(t,e){const n=9,{lineVertices:r,lineDescriptors:o}=t;let i=0,l=0;for(const m of o){i+=2*m.numberOfVertices;l+=6*(m.numberOfVertices-1);}const a=new Float32Array(i*n),s=new Uint32Array(l);let c=0,f=0;function u(){s[f++]=c-2,s[f++]=c,s[f++]=c-1,s[f++]=c,s[f++]=c+1,s[f++]=c-1;}function h(t,e,r,o,i,l,s,f){const u=c*n;let h=0;a[u+h++]=t,a[u+h++]=e,a[u+h++]=1,a[u+h++]=r,a[u+h++]=l,a[u+h++]=s,a[u+h++]=o/2,a[u+h++]=i/2,a[u+h++]=f,c++,a[u+h++]=t,a[u+h++]=e,a[u+h++]=-1,a[u+h++]=r,a[u+h++]=l,a[u+h++]=s,a[u+h++]=-o/2,a[u+h++]=-i/2,a[u+h++]=f,c++;}for(const m of o){const{totalTime:t,timeSeed:n}=m;let o=null,i=null,l=null,a=null,s=null,c=null;for(let f=0;f<m.numberOfVertices;f++){const d=r[4*(m.startVertex+f)+0],w=r[4*(m.startVertex+f)+1],p=r[4*(m.startVertex+f)+2],g=r[4*(m.startVertex+f)+3];let y=null,x=null,M=null,A=null;if(f>0){y=d-o,x=w-i;const r=Math.sqrt(y*y+x*x);if(y/=r,x/=r,f>1){let t=y+s,n=x+c;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const o=Math.min(1/(t*y+n*x),e);t*=o,n*=o,M=-n,A=t;}else M=-x,A=y;null!==M&&null!==A&&(h(o,i,l,M,A,t,n,g),u());}o=d,i=w,l=p,s=y,c=x,a=g;}h(o,i,l,-c,s,t,n,a);}return {vertexData:a,indexData:s}}function g(t){const e=16,n=1,r=2,{lineVertices:o,lineDescriptors:i}=t;let l=0,a=0;for(const j of i){const t=j.numberOfVertices-1;l+=4*t*2,a+=6*t*2;}const s=new Float32Array(l*e),c=new Uint32Array(a);let f,u,h,m,d,w,p,g,y,x,M,A,I,V,F=0,D=0;function b(){c[D++]=F-8,c[D++]=F-7,c[D++]=F-6,c[D++]=F-7,c[D++]=F-5,c[D++]=F-6,c[D++]=F-4,c[D++]=F-3,c[D++]=F-2,c[D++]=F-3,c[D++]=F-1,c[D++]=F-2;}function v(t,o,i,l,a,c,f,u,h,m,d,w,p,g){const y=F*e;let x=0;for(const e of [n,r])for(const n of [1,2,3,4])s[y+x++]=t,s[y+x++]=o,s[y+x++]=i,s[y+x++]=l,s[y+x++]=f,s[y+x++]=u,s[y+x++]=h,s[y+x++]=m,s[y+x++]=e,s[y+x++]=n,s[y+x++]=p,s[y+x++]=g,s[y+x++]=a/2,s[y+x++]=c/2,s[y+x++]=d/2,s[y+x++]=w/2,F++;}function S(t,e){let n=y+M,r=x+A;const o=Math.sqrt(n*n+r*r);n/=o,r/=o;const i=y*n+x*r;n/=i,r/=i;let l=M+I,a=A+V;const s=Math.sqrt(l*l+a*a);l/=s,a/=s;const c=M*l+A*a;l/=c,a/=c,v(f,u,h,m,-r,n,d,w,p,g,-a,l,t,e),b();}function k(t,e,n,r,o,i){if(y=M,x=A,M=I,A=V,null==y&&null==x&&(y=M,x=A),null!=d&&null!=w){I=t-d,V=e-w;const n=Math.sqrt(I*I+V*V);I/=n,V/=n;}null!=y&&null!=x&&S(o,i),f=d,u=w,h=p,m=g,d=t,w=e,p=n,g=r;}function L(t,e){y=M,x=A,M=I,A=V,null==y&&null==x&&(y=M,x=A),null!=y&&null!=x&&S(t,e);}for(const j of i){f=null,u=null,h=null,m=null,d=null,w=null,p=null,g=null,y=null,x=null,M=null,A=null,I=null,V=null;const{totalTime:t,timeSeed:e}=j;for(let n=0;n<j.numberOfVertices;n++){k(o[4*(j.startVertex+n)+0],o[4*(j.startVertex+n)+1],o[4*(j.startVertex+n)+2],o[4*(j.startVertex+n)+3],t,e);}L(t,e);}return {vertexData:s,indexData:c}}function y(t,n){const r=n.pixels,{width:o,height:i}=n,l=new Float32Array(o*i*2),a=n.mask||new Uint8Array(o*i*2);if(n.mask||a.fill(255),"vector-uv"===t)for(let e=0;e<o*i;e++)l[2*e+0]=r[0][e],l[2*e+1]=-r[1][e];else if("vector-magdir"===t)for(let s=0;s<o*i;s++){const t=r[0][s],n=M$2(r[1][s]),o=Math.cos(n-Math.PI/2),i=Math.sin(n-Math.PI/2);l[2*s+0]=o*t,l[2*s+1]=i*t;}return {data:l,mask:a,width:o,height:i}}async function x(t,e,n,r,o,i){const c=performance.now(),f=R(e.spatialReference);if(!f){const l=await M(t,e,n,r,o,i);return has("esri-2d-profiler")&&s.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-c)),has("esri-2d-profiler")&&s.info("I.9","Number of parts",1),l}const[u,h]=f.valid,m=h-u,d=Math.ceil(e.width/m),w=e.width/d,p=Math.round(n/d);let g=e.xmin;const y=[],x=performance.now();for(let l=0;l<d;l++){const n=new w$2({xmin:g,xmax:g+w,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});y.push(M(t,n,p,r,o,i)),g+=w;}const A=await Promise.all(y);has("esri-2d-profiler")&&s.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-x)),has("esri-2d-profiler")&&s.info("I.9","Number of parts",A.length);const I={data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r};let V=0;for(const l of A){for(let t=0;t<l.height;t++)for(let e=0;e<l.width;e++)V+e>=n||(I.data[2*(t*n+V+e)+0]=l.data[2*(t*l.width+e)+0],I.data[2*(t*n+V+e)+1]=l.data[2*(t*l.width+e)+1],I.mask[t*n+V+e]=l.mask[t*l.width+e]);V+=l.width;}return has("esri-2d-profiler")&&s.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-c)),I}async function M(t$1,e,o,i,l,a){const s={requestProjectedLocalDirections:!0,signal:a};if(r(l)&&(s.timeExtent=l),"imagery"===t$1.type){await t$1.load({signal:a});const r=t$1.rasterInfo.dataType,l=await t$1.fetchImage(e,o,i,s);return !l||t(l.pixelData)||t(l.pixelData.pixelBlock)?{data:new Float32Array(o*i*2),mask:new Uint8Array(o*i),width:o,height:i}:y(r,l.pixelData.pixelBlock)}await t$1.load({signal:a});const c=t$1.rasterInfo.dataType,f=await t$1.fetchPixels(e,o,i,s);return !f||t(f.pixelBlock)?{data:new Float32Array(o*i*2),mask:new Uint8Array(o*i),width:o,height:i}:y(c,f.pixelBlock)}

export { D, F, M$1 as M, f$1 as a, c$1 as c, d$1 as d, f, g$1 as g, j, l, m$1 as m, x };
