"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[5688,6646],{85674:(e,t,i)=>{i.d(t,{O:()=>r,h:()=>s});class r{constructor(e=null,t={},i,r){this.geometry=e,this.attributes=t,this.centroid=i,this.objectId=r,this.displayId=0,this.geohashX=0,this.geohashY=0}weakClone(){const e=new r(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e.geohashX=this.geohashX,e.geohashY=this.geohashY,e}clone(){const e=this.geometry?.clone(),t=new r(e,{...this.attributes},this.centroid?.clone(),this.objectId);return t.displayId=this.displayId,t.geohashX=this.geohashX,t.geohashY=this.geohashY,t}}function s(e){return!!e.geometry?.coords?.length}},9006:(e,t,i)=>{i.d(t,{O:()=>r});class r{constructor(){this.objectIdFieldName=null,this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const e=new r;return e.objectIdFieldName=this.objectIdFieldName,e.globalIdFieldName=this.globalIdFieldName,e.geohashFieldName=this.geohashFieldName,e.geometryProperties=this.geometryProperties,e.geometryType=this.geometryType,e.spatialReference=this.spatialReference,e.hasZ=this.hasZ,e.hasM=this.hasM,e.features=this.features,e.fields=this.fields,e.transform=this.transform,e.exceededTransferLimit=this.exceededTransferLimit,e.uniqueIdField=this.uniqueIdField,e.queryGeometry=this.queryGeometry,e.queryGeometryType=this.queryGeometryType,e}}},16204:(e,t,i)=>{i.d(t,{O:()=>r});class r{constructor(e=[],t=[],i=!1){this.lengths=e??[],this.coords=t??[],this.hasIndeterminateRingOrder=i}static fromRect(e){const[t,i,s,n]=e,o=s-t,a=n-i;return new r([5],[t,i,o,0,0,a,-o,0,0,-a])}get isPoint(){return 0===this.lengths.length}get maxLength(){return Math.max(...this.lengths)}get size(){return this.lengths.reduce(((e,t)=>e+t))}forEachVertex(e){let t=0;this.lengths.length||e(this.coords[0],this.coords[1]);for(let i=0;i<this.lengths.length;i++){const r=this.lengths[i];for(let i=0;i<r;i++)e(this.coords[2*(i+t)],this.coords[2*(i+t)+1]);t+=r}}deltaDecode(){const e=this.clone(),{coords:t,lengths:i}=e;let r=0;for(const e of i){for(let i=1;i<e;i++)t[2*(r+i)]+=t[2*(r+i)-2],t[2*(r+i)+1]+=t[2*(r+i)-1];r+=e}return e}clone(e){if(0===this.lengths.length)return new r([],[this.coords[0],this.coords[1]]);const t=2*(0===this.lengths.length?1:this.lengths.reduce(((e,t)=>e+t))),i=this.coords.slice(0,t);return e?(e.set(i),new r(this.lengths,e,this.hasIndeterminateRingOrder)):new r(Array.from(this.lengths),Array.from(i),this.hasIndeterminateRingOrder)}}},35154:(e,t,i)=>{i.d(t,{U:()=>s,i:()=>n,s:()=>o});var r=i(36097);class s{}function n(e){return e instanceof r.Z?e===s.instance:"unknown"===e?.toString().toLowerCase()}function o(e){return n(e)?s.instance:e}s.instance=new r.I("Etc/UTC")},55402:(e,t,i)=>{i.d(t,{a:()=>a,e:()=>o});var r=i(20438),s=i(49214),n=i(31292);async function o(e,t,i){const o=(0,r.p)(e);return(0,s.b)(o,n.Z.from(t),{...i}).then((e=>e.data.count))}async function a(e,t,i){const o=(0,r.p)(e);return(0,s.c)(o,n.Z.from(t),{...i}).then((e=>e.data.objectIds))}},2845:(e,t,i)=>{i.d(t,{a:()=>a,e:()=>l});var r=i(20438),s=i(49214),n=i(87258),o=i(31292);async function a(e,t,i){const r=await l(e,t,i);return n.Z.fromJSON(r)}async function l(e,t,i){const n=(0,r.p)(e),a={...i},l=o.Z.from(t),{data:u}=await(0,s.e)(n,l,l.sourceSpatialReference,a);return u}},32966:(e,t,i)=>{i.d(t,{a:()=>n,c:()=>o});var r=i(60991),s=i(50406);async function n(e,t,i){let n;try{n=await createImageBitmap(e)}catch(e){throw new r.Z("request:server",`Unable to load ${t}`,{url:t,error:e})}return(0,s.k_)(i),n}async function o(e,t,i,n,o){let a;try{a=await createImageBitmap(e)}catch(e){throw new r.Z("request:server",`Unable to load tile ${t}/${i}/${n}`,{error:e,level:t,row:i,col:n})}return(0,s.k_)(o),a}},55823:(e,t,i)=>{i.d(t,{a:()=>s});var r=i(92847);function s(e,t,i){if(!i?.features||!i.hasZ)return;const s=(0,r.g)(i.geometryType,t,e.outSpatialReference);if(null!=s)for(const e of i.features)s(e.geometry)}},40944:(e,t,i)=>{i.d(t,{s:()=>n});var r=i(21132);const s=[];function n(e,t){if((0,r.i)(e.url??""))return!0;const{wkid:i}=t;for(const t of s){if((e.version??0)>=t[0])return!0;if("function"==typeof t[1]&&(t[1]=t[1]()),t[1].has(i))return!1}return!0}s.push([10.91,()=>{const e=new Set([9709,9716,9741,9761,9766]);for(let t=9712;t<=9713;t++)e.add(t);for(let t=9748;t<=9749;t++)e.add(t);for(let t=20904;t<=20932;t++)e.add(t);for(let t=21004;t<=21032;t++)e.add(t);for(let t=21207;t<=21264;t++)e.add(t);for(let t=21307;t<=21364;t++)e.add(t);for(let t=23301;t<=23333;t++)e.add(t);for(let t=102759;t<=102760;t++)e.add(t);for(let t=102934;t<=102955;t++)e.add(t);return e}]),s.push([10.9,()=>{const e=new Set([9300,9354,9364,9367,9373,9377,9387,9456,9473,9498,9678,9680,29874,103599,103872,104028]);for(let t=9356;t<=9360;t++)e.add(t);for(let t=9404;t<=9407;t++)e.add(t);for(let t=9476;t<=9482;t++)e.add(t);for(let t=9487;t<=9494;t++)e.add(t);for(let t=9697;t<=9699;t++)e.add(t);return e}]),s.push([10.81,()=>{const e=new Set([9265,9333,103598,103699]);for(let t=9248;t<=9254;t++)e.add(t);for(let t=9271;t<=9273;t++)e.add(t);for(let t=9284;t<=9285;t++)e.add(t);for(let t=21453;t<=21463;t++)e.add(t);return e}]),s.push([10.8,()=>{const e=new Set([8088,8395,8428,8433,8531,8687,8692,8694,8699,8900,9003,9006,9009,9012,9017,9191]);for(let t=8035;t<=8036;t++)e.add(t);for(let t=8455;t<=8456;t++)e.add(t);for(let t=8518;t<=8529;t++)e.add(t);for(let t=8533;t<=8536;t++)e.add(t);for(let t=8538;t<=8540;t++)e.add(t);for(let t=8677;t<=8679;t++)e.add(t);for(let t=8902;t<=8903;t++)e.add(t);for(let t=8907;t<=8910;t++)e.add(t);for(let t=8949;t<=8951;t++)e.add(t);for(let t=8972;t<=8987;t++)e.add(t);for(let t=9039;t<=9040;t++)e.add(t);for(let t=9068;t<=9069;t++)e.add(t);for(let t=9140;t<=9141;t++)e.add(t);for(let t=9148;t<=9150;t++)e.add(t);for(let t=9153;t<=9159;t++)e.add(t);for(let t=9205;t<=9218;t++)e.add(t);for(let t=9221;t<=9222;t++)e.add(t);for(let t=54098;t<=54101;t++)e.add(t);return e}]),s.push([10.71,()=>{const e=new Set([6316]);for(let t=8351;t<=8353;t++)e.add(t);for(let t=9294;t<=9297;t++)e.add(t);for(let t=22619;t<=22621;t++)e.add(t);for(let t=103586;t<=103594;t++)e.add(t);return e}]),s.push([10.7,()=>{const e=new Set([8387,8391,8427,8545,8682,8685,8818,31370,104022,104024,104975]);for(let t=8065;t<=8068;t++)e.add(t);for(let t=8082;t<=8083;t++)e.add(t);for(let t=8379;t<=8385;t++)e.add(t);for(let t=8836;t<=8840;t++)e.add(t);for(let t=8857;t<=8860;t++)e.add(t);for(let t=53035;t<=53037;t++)e.add(t);for(let t=54090;t<=54091;t++)e.add(t);for(let t=102498;t<=102499;t++)e.add(t);return e}]),s.push([10.61,()=>new Set([102497])]),s.push([10.6,()=>{const e=new Set([7803,7805,7887,8086,8232,8237,8240,8246,8249,8252,8255,9019,9391]);for(let t=7755;t<=7787;t++)e.add(t);for(let t=7791;t<=7795;t++)e.add(t);for(let t=7799;t<=7801;t++)e.add(t);for(let t=7825;t<=7831;t++)e.add(t);for(let t=7877;t<=7878;t++)e.add(t);for(let t=7882;t<=7883;t++)e.add(t);for(let t=7991;t<=7992;t++)e.add(t);for(let t=8042;t<=8043;t++)e.add(t);for(let t=8058;t<=8059;t++)e.add(t);for(let t=8311;t<=8348;t++)e.add(t);for(let t=9060;t<=9067;t++)e.add(t);for(let t=102562;t<=102568;t++)e.add(t);for(let t=102799;t<=102900;t++)e.add(t);return e}])},777:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Ii});var r=i(29768),s=i(86748),n=i(66122),o=i(60991),a=i(54179),l=i(50406),u=i(34250),p=i(76506),c=i(92143),d=i(17533),m=i(2906),h=i(41617),y=i(74569),g=i(23761),f=i(88678),b=i(82058),w=i(21972),v=i(58085),_=i(32101),R=i(91306),S=i(97714),C=i(53785),I=i(43022),F=i(66827),x=i(12047),j=i(56550),T=i(81434),D=i(62484),N=i(82844),O=i(90319),P=i(46535),M=i(97546),Z=i(1709),A=i(32966),V=i(47868),q=i(22337),J=i(72246),E=i(13074),G=i(53571),L=i(40558),z=i(7534),B=i(1030),U=i(95533),H=i(20438),Q=i(91597);const k=e=>{let t=class extends e{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return(0,r._)([(0,u.Cb)({json:{write:!0}})],t.prototype,"make",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],t.prototype,"model",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],t.prototype,"focalLength",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],t.prototype,"pixelSize",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],t.prototype,"rows",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],t.prototype,"cols",void 0),t=(0,r._)([(0,d.j)("esri.rest.support.CameraInfoMixin")],t),t};i(86656),i(66396),i(22723),i(62062),i(6540),i(6906),i(31450),i(86787),i(73796);var $=i(60947),W=i(57251);i(73173),i(88762),i(35132);let X=class extends(k(x.wq)){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=e?.getTime()}};(0,r._)([(0,u.Cb)({json:{write:!0}})],X.prototype,"id",void 0),(0,r._)([(0,u.Cb)({json:{name:"uri",write:!0}})],X.prototype,"referenceUri",void 0),(0,r._)([(0,u.Cb)({type:Date,json:{write:!0}})],X.prototype,"acquisitionDate",void 0),(0,r._)([(0,m.w)("acquisitionDate")],X.prototype,"writeAcquisitionDate",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],X.prototype,"cameraID",void 0),(0,r._)([(0,u.Cb)({type:Q.Z,json:{write:!0}})],X.prototype,"center",void 0),(0,r._)([(0,u.Cb)({type:Q.Z,json:{write:!0}})],X.prototype,"perspectiveCenter",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],X.prototype,"orientation",void 0),X=(0,r._)([(0,d.j)("esri.rest.support.ImageInspectionInfo")],X);const K=X;let Y=class extends x.wq{constructor(){super(...arguments),this.images=null}};(0,r._)([(0,u.Cb)({type:[K],json:{write:!0}})],Y.prototype,"images",void 0),Y=(0,r._)([(0,d.j)("esri.rest.support.FindImagesResult")],Y);const ee=Y;var te=i(21801),ie=i(84069),re=i(44567),se=(i(63685),i(89034),i(98380),i(92482),i(82426),i(72836),i(66106),i(29794),i(92896),i(22781),i(32422));let ne=class extends x.wq{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],ne.prototype,"north",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],ne.prototype,"up",void 0),(0,r._)([(0,u.Cb)({type:$.Z,json:{write:!0}})],ne.prototype,"spatialReference",void 0),ne=(0,r._)([(0,d.j)("esri.rest.support.ImageAngleResult")],ne);const oe=ne;let ae=class extends x.wq{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};(0,r._)([(0,u.Cb)({type:Number,json:{read:!0,write:!0}})],ae.prototype,"value",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:!0,write:!0}})],ae.prototype,"displayValue",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{read:!0,write:!0}})],ae.prototype,"uncertainty",void 0),ae=(0,r._)([(0,d.j)("esri.rest.support.ImageMeasureResultValue")],ae);let le=class extends ae{constructor(){super(...arguments),this.unit=null}};(0,r._)([(0,u.Cb)({type:String,json:{read:C.B.read,write:C.B.write}})],le.prototype,"unit",void 0),le=(0,r._)([(0,d.j)("esri.rest.support.ImageMeasureResultLengthValue")],le);let ue=class extends ae{constructor(){super(...arguments),this.unit=null}};(0,r._)([(0,u.Cb)({type:String,json:{read:C.A.read,write:C.A.write}})],ue.prototype,"unit",void 0),ue=(0,r._)([(0,d.j)("esri.rest.support.ImageMeasureResultAreaValue")],ue);let pe=class extends ae{constructor(){super(...arguments),this.unit=null}};(0,r._)([(0,u.Cb)({type:String,json:{read:C.R.read,write:C.R.write}})],pe.prototype,"unit",void 0),pe=(0,r._)([(0,d.j)("esri.rest.support.ImageMeasureResultAngleValue")],pe);let ce=class extends x.wq{constructor(){super(...arguments),this.name=null,this.sensorName=null}};(0,r._)([(0,u.Cb)({type:String,json:{read:!0,write:!0}})],ce.prototype,"name",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:!0,write:!0}})],ce.prototype,"sensorName",void 0),ce=(0,r._)([(0,d.j)("esri.rest.support.BaseImageMeasureResult")],ce);let de=class extends ce{constructor(){super(...arguments),this.area=null,this.perimeter=null}};(0,r._)([(0,u.Cb)({type:ue,json:{read:!0,write:!0}})],de.prototype,"area",void 0),(0,r._)([(0,u.Cb)({type:le,json:{read:!0,write:!0}})],de.prototype,"perimeter",void 0),de=(0,r._)([(0,d.j)("esri.rest.support.ImageAreaResult")],de);const me=de;let he=class extends x.wq{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(e,t){return null==e?null:e.rings?re.Z.fromJSON(e):te.Z.fromJSON(e)}};(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],he.prototype,"area",void 0),(0,r._)([(0,u.Cb)({json:{name:"shape",write:!0}})],he.prototype,"geometry",void 0),(0,r._)([(0,S.r)("geometry")],he.prototype,"readGeometry",null),he=(0,r._)([(0,d.j)("esri.rest.support.ImageBoundaryResult")],he);const ye=he;let ge=class extends ce{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};(0,r._)([(0,u.Cb)({type:le,json:{read:!0,write:!0}})],ge.prototype,"distance",void 0),(0,r._)([(0,u.Cb)({type:pe,json:{read:!0,write:!0}})],ge.prototype,"azimuthAngle",void 0),(0,r._)([(0,u.Cb)({type:pe,json:{read:!0,write:!0}})],ge.prototype,"elevationAngle",void 0),ge=(0,r._)([(0,d.j)("esri.rest.support.ImageDistanceResult")],ge);const fe=ge;let be=class extends(k(x.wq)){constructor(){super(...arguments),this.id=null}};(0,r._)([(0,u.Cb)({json:{write:!0}})],be.prototype,"id",void 0),be=(0,r._)([(0,d.j)("esri.rest.support.CameraInfo")],be);const we=be;let ve=class extends x.wq{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(e,t){t.acquisitionDate=e?.getTime()}};(0,r._)([(0,u.Cb)({json:{write:!0}})],ve.prototype,"id",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],ve.prototype,"name",void 0),(0,r._)([(0,u.Cb)({type:Date,json:{write:!0}})],ve.prototype,"acquisitionDate",void 0),(0,r._)([(0,m.w)("acquisitionDate")],ve.prototype,"writeAcquisitionDate",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],ve.prototype,"cameraID",void 0),(0,r._)([(0,u.Cb)({type:Q.Z,json:{write:!0}})],ve.prototype,"center",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],ve.prototype,"gps",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],ve.prototype,"orientation",void 0),ve=(0,r._)([(0,d.j)("esri.rest.support.ImageGPSInfo")],ve);const _e=ve;let Re=class extends x.wq{constructor(){super(...arguments),this.images=null,this.cameras=null}};(0,r._)([(0,u.Cb)({type:[_e],json:{write:!0}})],Re.prototype,"images",void 0),(0,r._)([(0,u.Cb)({type:[we],json:{write:!0}})],Re.prototype,"cameras",void 0),Re=(0,r._)([(0,d.j)("esri.rest.support.ImageGPSInfoResult")],Re);const Se=Re;let Ce=class extends ce{constructor(){super(...arguments),this.height=null}};(0,r._)([(0,u.Cb)({type:le,json:{read:!0,write:!0}})],Ce.prototype,"height",void 0),Ce=(0,r._)([(0,d.j)("esri.rest.support.ImageHeightResult")],Ce);const Ie=Ce;var Fe=i(87258),xe=(i(15324),i(75067),i(89914),i(14249),i(66284),i(8925),i(3482),i(76131),i(36097),i(87239),i(29107),i(30574),i(2157),i(25977),i(58076),i(98242),i(7471),i(54414),i(59465));i(1648),i(45154),i(16769),i(93603),i(15438),i(593),i(48027),i(54174),i(85699),i(55531),i(96055),i(47776),i(18033),i(6331),i(62048),i(56890),i(30493),i(4292),i(75626),i(72652),i(29641),i(70821),i(3296),i(34229),i(37029),i(96467),i(63571),i(30776),i(63130),i(25696),i(94216),i(42775),i(95834),i(34394),i(57150),i(76726),i(20444),i(76393),i(78548),i(2497),i(49906),i(46527),i(11799),i(48649),i(81731),i(9960),i(30823),i(53326),i(5853),i(39141),i(38742),i(48243),i(34635),i(10401),i(49900),i(81184),i(33101),i(58943),i(67477),i(78533),i(74653),i(91091),i(70737),i(36834),i(8487),i(17817),i(90814),i(15459),i(97189),i(61847),i(28212),i(16955),i(22401),i(48699),i(77894),i(55187),i(8586),i(44509),i(69814),i(11305),i(62259),i(44790),i(41864),i(5909),i(60669),i(48208),i(51589),i(9801),i(53523),i(42911),i(46826),i(45433),i(54732);let je=class extends x.wq{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,r._)([(0,u.Cb)({json:{write:!0}})],je.prototype,"catalogItemVisibilities",void 0),(0,r._)([(0,u.Cb)({type:Fe.Z,json:{write:!0}})],je.prototype,"catalogItems",void 0),(0,r._)([(0,u.Cb)({type:Q.Z,json:{write:!0}})],je.prototype,"location",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],je.prototype,"name",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],je.prototype,"objectId",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],je.prototype,"processedValues",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],je.prototype,"properties",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],je.prototype,"value",void 0),je=(0,r._)([(0,d.j)("esri.rest.support.ImageIdentifyResult")],je);const Te=je;let De=class extends x.wq{constructor(){super(...arguments),this.geometries=null}};(0,r._)([(0,u.Cb)({json:{write:!0}})],De.prototype,"geometries",void 0),De=(0,r._)([(0,d.j)("esri.rest.support.ImagePixelLocationResult")],De);const Ne=De;let Oe=class extends ce{constructor(){super(...arguments),this.point=null}};(0,r._)([(0,u.Cb)({type:Q.Z,json:{name:"point.value",read:!0,write:!0}})],Oe.prototype,"point",void 0),Oe=(0,r._)([(0,d.j)("esri.rest.support.ImagePointResult")],Oe);const Pe=Oe;let Me=class extends x.wq{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,r._)([(0,u.Cb)({json:{write:!0}})],Me.prototype,"attributes",void 0),(0,r._)([(0,u.Cb)({type:Q.Z,json:{write:!0}})],Me.prototype,"location",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],Me.prototype,"locationId",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],Me.prototype,"rasterId",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],Me.prototype,"resolution",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],Me.prototype,"pixelValue",void 0),Me=(0,r._)([(0,d.j)("esri.rest.support.ImageSample")],Me);const Ze=Me;let Ae=class extends x.wq{constructor(){super(...arguments),this.samples=null}};(0,r._)([(0,u.Cb)({type:[Ze],json:{write:!0}})],Ae.prototype,"samples",void 0),Ae=(0,r._)([(0,d.j)("esri.rest.support.ImageSampleResult")],Ae);const Ve=Ae;let qe=class extends x.wq{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(e,t){return e.spatialReference||(e={...e,spatialReference:t.Shape.spatialReference}),Q.Z.fromJSON(e)}};(0,r._)([(0,u.Cb)({types:y.qM,json:{name:"Shape",read:se.im,write:!0}})],qe.prototype,"geometry",void 0),(0,r._)([(0,u.Cb)({json:{name:"Length",write:!0}})],qe.prototype,"length",void 0),(0,r._)([(0,u.Cb)({json:{name:"Area",write:!0}})],qe.prototype,"area",void 0),(0,r._)([(0,u.Cb)({json:{name:"Center",write:!0}})],qe.prototype,"center",void 0),(0,r._)([(0,S.r)("center")],qe.prototype,"readCenter",null),qe=(0,r._)([(0,d.j)("esri.rest.support.MeasureAreaFromImageResult")],qe);const Je=qe;let Ee=class extends x.wq{constructor(){super(...arguments),this.geometry=null,this.length=null}};(0,r._)([(0,u.Cb)({types:y.qM,json:{name:"Shape",read:se.im,write:!0}})],Ee.prototype,"geometry",void 0),(0,r._)([(0,u.Cb)({json:{name:"Length",write:!0}})],Ee.prototype,"length",void 0),Ee=(0,r._)([(0,d.j)("esri.rest.support.MeasureLengthFromImageResult")],Ee);const Ge=Ee;i(94751),i(95307),i(22572);let Le=class extends x.wq{constructor(){super(...arguments),this.url=null}};(0,r._)([(0,u.Cb)({json:{name:"imageURL",write:!0}})],Le.prototype,"url",void 0),Le=(0,r._)([(0,d.j)("esri.rest.support.ImageUrlResult")],Le);const ze=Le;function Be(e){const t=e?.time;if(t&&(null!=t.start||null!=t.end)){const i=[];null!=t.start&&i.push(t.start),null==t.end||i.includes(t.end)||i.push(t.end),e.time=i.join(",")}}async function Ue(e,t,i){const r=(0,H.p)(e),s=t.geometry?[t.geometry]:[],n=await(0,U.aX)(s),o=t.toJSON();Be(o);const a=n?.[0];null!=a&&(o.geometry=$e(a));const l=(0,H.e)({...r.query,f:"json",...o});return(0,H.a)(l,i)}async function He(e,t,i){const r=(0,H.p)(e),s=t.geometry?[t.geometry]:[];return(0,U.aX)(s).then((e=>{const s=t.toJSON(),n=e?.[0];null!=n&&(s.geometry=JSON.stringify($e(n)));const o=(0,H.e)({...r.query,f:"json",...s}),a=(0,H.a)(o,i);return(0,b.Z)(r.path+"/identify",a)})).then((e=>Te.fromJSON(e.data)))}async function Qe(e,t,i,r){const s=(0,H.p)(e),n=await(0,U.aX)(i),o=t.toJSON();null!=n[0]&&(o.fromGeometry=JSON.stringify($e(n[0]))),null!=n[1]&&(o.toGeometry=JSON.stringify($e(n[1])));const a=(0,H.e)({...s.query,f:"json",...o}),l=(0,H.a)(a,r),{data:u}=await(0,b.Z)(s.path+"/measure",l);return u}async function ke(e,t,i){const r=(0,H.p)(e),s=t.toJSON(),n=(0,H.e)({...r.query,f:"json",...s}),o=(0,H.a)(n,i),{data:a}=await(0,b.Z)(r.path+"/measureFromImage",o);return a}function $e(e){const t=e.toJSON();return e.spatialReference?.imageCoordinateSystem&&(t.spatialReference=We(e.spatialReference)),t}function We(e){const{imageCoordinateSystem:t}=e;if(t){const{id:e,referenceServiceName:i}=t;return null!=e?i?{icsid:e,icsns:i}:{icsid:e}:{ics:t}}return e.toJSON()}function Xe(e,t){if(!e.imageCoordinateSystem)return(0,C.X)(e);const i=We(e),{icsid:r,icsns:s}=i;return null==r||null!=s&&!t?.toLowerCase().includes("/"+s.toLowerCase()+"/")?JSON.stringify(i):`0:${r}`}async function Ke(e,t,i){const r=t.toJSON(),s=(0,H.p)(e),n=(0,H.e)({...s.query,f:"json",...r}),o=(0,H.a)(n,i),{data:a}=await(0,b.Z)(`${s.path}/getImageUrl`,o);return ze.fromJSON(a)}i(69218);var Ye=i(2845),et=(i(11385),i(31292)),tt=(i(53426),i(34446),i(55402)),it=(i(46646),i(39210),i(93613));let rt=class extends((0,n.J)(x.wq)){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};(0,r._)([(0,u.Cb)({type:Q.Z,json:{read:!0}})],rt.prototype,"fromGeometry",void 0),(0,r._)([(0,u.Cb)({type:Q.Z,json:{read:!0,write:!0}})],rt.prototype,"toGeometry",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],rt.prototype,"objectIds",void 0),(0,r._)([(0,u.Cb)({type:String,json:{write:!0}})],rt.prototype,"where",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],rt.prototype,"maxCount",void 0),rt=(0,r._)([(0,d.j)("esri.rest.support.FindImagesParameters")],rt);const st=rt;var nt;let ot=nt=class extends x.wq{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new nt((0,p.d9)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,r._)([(0,u.Cb)({type:[String],json:{name:"angleName",write:!0}})],ot.prototype,"angleNames",void 0),(0,r._)([(0,u.Cb)({type:Q.Z,json:{write:!0}})],ot.prototype,"point",void 0),(0,r._)([(0,u.Cb)({type:$.Z,json:{write:!0}})],ot.prototype,"spatialReference",void 0),(0,r._)([(0,u.Cb)({type:R.I,json:{write:!0}})],ot.prototype,"rasterId",void 0),ot=nt=(0,r._)([(0,d.j)("esri.rest.support.ImageAngleParameters")],ot);const at=ot,lt=new W.J({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let ut=class extends x.wq{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};var pt;(0,r._)([(0,u.Cb)()],ut.prototype,"type",void 0),(0,r._)([(0,u.Cb)({type:lt.apiValues,json:{read:lt.read,write:lt.write}})],ut.prototype,"measureOperation",void 0),(0,r._)([(0,u.Cb)({type:P.Z,json:{write:!0}})],ut.prototype,"mosaicRule",void 0),(0,r._)([(0,u.Cb)({type:Q.Z,json:{write:!0}})],ut.prototype,"pixelSize",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],ut.prototype,"raster",void 0),ut=(0,r._)([(0,d.j)("esri.rest.support.BaseImageMeasureParameters")],ut);let ct=pt=class extends ut{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,se.Ji)(e),t[i]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new pt((0,p.d9)({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,r._)([(0,u.Cb)({types:y.qM,json:{name:"fromGeometry",read:!0,write:!0}})],ct.prototype,"geometry",void 0),(0,r._)([(0,m.w)("geometry")],ct.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)({type:lt.apiValues,json:{write:lt.write}})],ct.prototype,"measureOperation",null),(0,r._)([(0,u.Cb)({json:{read:!0}})],ct.prototype,"is3D",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:C.B.read,write:C.B.write}})],ct.prototype,"linearUnit",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:C.A.read,write:C.A.write}})],ct.prototype,"areaUnit",void 0),ct=pt=(0,r._)([(0,d.j)("esri.rest.support.ImageAreaParameters")],ct);const dt=ct;let mt=class extends((0,n.J)(x.wq)){constructor(){super(...arguments),this.outSpatialReference=null}};(0,r._)([(0,u.Cb)({type:$.Z,json:{name:"outSR",write:!0}})],mt.prototype,"outSpatialReference",void 0),mt=(0,r._)([(0,d.j)("esri.rest.support.ImageBoundaryParameters")],mt);const ht=mt;var yt;let gt=yt=class extends ut{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,t,i){null!=e&&(t.geometryType=(0,se.Ji)(e),t[i]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new yt((0,p.d9)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,r._)([(0,u.Cb)({type:Q.Z,json:{read:!0,write:!0}})],gt.prototype,"fromGeometry",void 0),(0,r._)([(0,m.w)("fromGeometry")],gt.prototype,"writeFromGeometry",null),(0,r._)([(0,u.Cb)({type:Q.Z,json:{read:!0,write:!0}})],gt.prototype,"toGeometry",void 0),(0,r._)([(0,u.Cb)({type:lt.apiValues,json:{write:lt.write}})],gt.prototype,"measureOperation",null),(0,r._)([(0,u.Cb)({json:{read:!0}})],gt.prototype,"is3D",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:C.B.read,write:C.B.write}})],gt.prototype,"linearUnit",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:C.R.read,write:C.R.write}})],gt.prototype,"angularUnit",void 0),gt=yt=(0,r._)([(0,d.j)("esri.rest.support.ImageDistanceParameters")],gt);const ft=gt;var bt=i(93314),wt=i(12158);i(35197);let vt=class extends((0,n.J)(x.wq)){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,se.Ji)(e),t[i]=JSON.stringify(e.toJSON()))}};(0,r._)([(0,u.Cb)({types:y.qM,json:{read:se.im,write:!0}})],vt.prototype,"geometry",void 0),(0,r._)([(0,m.w)("geometry")],vt.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],vt.prototype,"objectIds",void 0),(0,r._)([(0,xe.e)(wt.s,{ignoreUnknown:!1,name:"spatialRel"})],vt.prototype,"spatialRelationship",void 0),(0,r._)([(0,u.Cb)({type:bt.Z,json:{name:"time",write:!0}})],vt.prototype,"timeExtent",void 0),(0,r._)([(0,u.Cb)({type:String,json:{write:!0}})],vt.prototype,"where",void 0),vt=(0,r._)([(0,d.j)("esri.rest.support.ImageGPSInfoParameters")],vt);const _t=vt;var Rt;let St=Rt=class extends ut{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,t,i){null!=e&&(t.geometryType=(0,se.Ji)(e),t[i]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new Rt((0,p.d9)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,r._)([(0,u.Cb)({type:Q.Z,json:{read:!0}})],St.prototype,"fromGeometry",void 0),(0,r._)([(0,m.w)("fromGeometry")],St.prototype,"writeFromGeometry",null),(0,r._)([(0,u.Cb)({type:Q.Z,json:{read:!0,write:!0}})],St.prototype,"toGeometry",void 0),(0,r._)([(0,u.Cb)({type:lt.apiValues,json:{write:lt.write}})],St.prototype,"measureOperation",null),(0,r._)([(0,u.Cb)({json:{read:!0}})],St.prototype,"operationType",void 0),(0,r._)([(0,u.Cb)({type:String,json:{read:C.B.read,write:C.B.write}})],St.prototype,"linearUnit",void 0),St=Rt=(0,r._)([(0,d.j)("esri.rest.support.ImageHeightParameters")],St);const Ct=St;var It,Ft=i(57949);let xt=It=class extends x.wq{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,se.Ji)(e),t[i]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=P.Z.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON()))}get renderingRule(){return(0,w.d)(c.L.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(e){(0,w.d)(c.L.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}get renderingRules(){return(0,w.d)(c.L.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._get("rasterFunctions")}set renderingRules(e){(0,w.d)(c.L.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._set("rasterFunctions",e)}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=j.Z.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(e,t,i){null!=e&&(t[i]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(t[i]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,t,i){null!=e&&(t[i]=JSON.stringify(e.map((e=>e.rasterFunctionDefinition||e.toJSON()))))}writePixelSize(e,t,i){null!=e&&(t[i]=JSON.stringify(e))}writeTimeExtent(e,t,i){if(null!=e){const r=null!=e.start?e.start.getTime():null,s=null!=e.end?e.end.getTime():null;t[i]=null!=r?null!=s?`${r},${s}`:`${r}`:null}}clone(){return new It((0,p.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,r._)([(0,u.Cb)({json:{write:!0}})],xt.prototype,"geometry",void 0),(0,r._)([(0,m.w)("geometry")],xt.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)({type:P.Z,json:{write:!0}})],xt.prototype,"mosaicRule",null),(0,r._)([(0,m.w)("mosaicRule")],xt.prototype,"writeMosaicRule",null),(0,r._)([(0,u.Cb)({type:j.Z})],xt.prototype,"renderingRule",null),(0,r._)([(0,u.Cb)({type:[j.Z]})],xt.prototype,"renderingRules",null),(0,r._)([(0,u.Cb)({type:j.Z,json:{write:!0,name:"renderingRule"}})],xt.prototype,"rasterFunction",null),(0,r._)([(0,m.w)("rasterFunction")],xt.prototype,"writeRasterFunction",null),(0,r._)([(0,u.Cb)({type:[j.Z],json:{write:!0,name:"renderingRules"}})],xt.prototype,"rasterFunctions",void 0),(0,r._)([(0,m.w)("rasterFunctions")],xt.prototype,"writeRasterFunctions",null),(0,r._)([(0,u.Cb)({type:Q.Z,json:{write:!0}})],xt.prototype,"pixelSize",void 0),(0,r._)([(0,m.w)("pixelSize")],xt.prototype,"writePixelSize",null),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],xt.prototype,"returnGeometry",void 0),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],xt.prototype,"returnCatalogItems",void 0),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],xt.prototype,"returnPixelValues",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],xt.prototype,"maxItemCount",void 0),(0,r._)([(0,u.Cb)({type:bt.Z,json:{write:{target:"time"}}})],xt.prototype,"timeExtent",void 0),(0,r._)([(0,m.w)("timeExtent")],xt.prototype,"writeTimeExtent",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],xt.prototype,"raster",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],xt.prototype,"viewId",void 0),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],xt.prototype,"processAsMultidimensional",void 0),xt=It=(0,r._)([(0,d.j)("esri.rest.support.ImageIdentifyParameters")],xt);const jt=xt;var Tt;let Dt=Tt=class extends x.wq{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,t,i){t.geometries={geometryType:"esriGeometryPoint",geometries:e.map((e=>e.toJSON()))}}clone(){return new Tt({geometries:this.geometries?.map((e=>e.clone()))??[],rasterId:this.rasterId})}};(0,r._)([(0,u.Cb)({type:[Q.Z],json:{write:!0}})],Dt.prototype,"geometries",void 0),(0,r._)([(0,m.w)("geometries")],Dt.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)({type:R.I,json:{write:!0}})],Dt.prototype,"rasterId",void 0),Dt=Tt=(0,r._)([(0,d.j)("esri.rest.support.ImagePixelLocationParameters")],Dt);const Nt=Dt;var Ot;let Pt=Ot=class extends ut{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,se.Ji)(e),t[i]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:t}=this;return"point"===t.type?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new Ot((0,p.d9)({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,r._)([(0,u.Cb)({types:y.qM,json:{name:"fromGeometry",read:se.im}})],Pt.prototype,"geometry",void 0),(0,r._)([(0,m.w)("geometry")],Pt.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)({type:lt.apiValues,json:{read:lt.read,write:lt.write}})],Pt.prototype,"measureOperation",null),(0,r._)([(0,u.Cb)({json:{read:!0}})],Pt.prototype,"is3D",void 0),Pt=Ot=(0,r._)([(0,d.j)("esri.rest.support.ImagePointParameters")],Pt);const Mt=Pt;var Zt;let At=Zt=class extends x.wq{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,se.Ji)(e),t[i]=e.toJSON())}set locations(e){if(e?.length){const t=new ie.Z({spatialReference:e[0].spatialReference});t.points=e.map((e=>[e.x,e.y])),this._set("locations",e),this.geometry=t}}clone(){return new Zt((0,p.d9)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,r._)([(0,u.Cb)({types:y.qM,json:{read:se.im}})],At.prototype,"geometry",void 0),(0,r._)([(0,m.w)("geometry")],At.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)()],At.prototype,"locations",null),(0,r._)([(0,u.Cb)({type:String,json:{type:j.i.jsonValues,read:j.i.read,write:j.i.write}})],At.prototype,"interpolation",void 0),(0,r._)([(0,u.Cb)({type:P.Z,json:{write:!0}})],At.prototype,"mosaicRule",void 0),(0,r._)([(0,u.Cb)({type:[String],json:{write:!0}})],At.prototype,"outFields",void 0),(0,r._)([(0,u.Cb)({type:Q.Z,json:{write:!0}})],At.prototype,"pixelSize",void 0),(0,r._)([(0,u.Cb)({type:String,json:{write:!0}})],At.prototype,"raster",void 0),(0,r._)([(0,u.Cb)({type:Boolean,json:{write:!0}})],At.prototype,"returnFirstValueOnly",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],At.prototype,"sampleDistance",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],At.prototype,"sampleCount",void 0),(0,r._)([(0,u.Cb)({type:Number,json:{write:!0}})],At.prototype,"sliceId",void 0),(0,r._)([(0,u.Cb)({type:bt.Z,json:{read:{source:"time"},write:{target:"time"}}})],At.prototype,"timeExtent",void 0),At=Zt=(0,r._)([(0,d.j)("esri.rest.support.ImageSampleParameters")],At);const Vt=At;let qt=class extends((0,n.J)(x.wq)){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,t,i){t.geometries=e?.length?{geometryType:(0,se.Ji)(e[0]),geometries:e.map((e=>({...e.toJSON(),spatialReference:void 0})))}:null}};(0,r._)([(0,u.Cb)({types:[y.qM]})],qt.prototype,"geometries",void 0),(0,r._)([(0,m.w)("geometries")],qt.prototype,"writeGeometries",null),(0,r._)([(0,u.Cb)({type:[R.I],json:{write:!0}})],qt.prototype,"rasterIds",void 0),(0,r._)([(0,u.Cb)({type:$.Z,json:{name:"outSR",write:!0}})],qt.prototype,"outSpatialReference",void 0),qt=(0,r._)([(0,d.j)("esri.rest.support.ImageToMapMultirayParameters")],qt);const Jt=qt;let Et=class extends((0,n.J)(x.wq)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,se.Ji)(e),t[i]={...e.toJSON(),spatialReference:void 0})}};(0,r._)([(0,u.Cb)({types:y.qM,json:{read:se.im,write:!0}})],Et.prototype,"geometry",void 0),(0,r._)([(0,m.w)("geometry")],Et.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],Et.prototype,"rasterId",void 0),(0,r._)([(0,u.Cb)({type:$.Z,json:{name:"outSR",write:!0}})],Et.prototype,"outSpatialReference",void 0),(0,r._)([(0,u.Cb)({json:{name:"options.DOff",write:!0}})],Et.prototype,"depthOffset",void 0),(0,r._)([(0,u.Cb)({json:{name:"options.Adjust",write:!0}})],Et.prototype,"adjust",void 0),Et=(0,r._)([(0,d.j)("esri.rest.support.ImageToMapParameters")],Et);const Gt=Et;let Lt=class extends((0,n.J)(x.wq)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,se.Ji)(e),t[i]=JSON.stringify(e))}};(0,r._)([(0,u.Cb)({types:y.qM,json:{read:se.im,write:!0}})],Lt.prototype,"geometry",void 0),(0,r._)([(0,m.w)("geometry")],Lt.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],Lt.prototype,"rasterId",void 0),(0,r._)([(0,u.Cb)({json:{name:"options.VisibleOnly",write:!0}})],Lt.prototype,"visibleOnly",void 0),Lt=(0,r._)([(0,d.j)("esri.rest.support.MapToImageParameters")],Lt);const zt=Lt;var Bt;let Ut=Bt=class extends x.wq{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(e,t,i){null!=e&&(t.geometryType=(0,se.Ji)(e),t[i]={...e.toJSON(),spatialReference:void 0})}clone(){const e=(0,p.d9)({geometry:this.geometry,rasterId:this.rasterId});return new Bt(e)}};(0,r._)([(0,u.Cb)({types:y.qM,json:{name:"fromGeometry",read:se.im,write:!0}})],Ut.prototype,"geometry",void 0),(0,r._)([(0,m.w)("geometry")],Ut.prototype,"writeGeometry",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],Ut.prototype,"rasterId",void 0),Ut=Bt=(0,r._)([(0,d.j)("esri.rest.support.MeasureFromImageParameters")],Ut);const Ht=Ut;var Qt=i(35717);i(55306),i(65684),i(798),i(74864),i(63683),i(94479),i(45702),i(51127),i(26822),i(51723),i(23243),i(51669),i(6090),i(3977),i(36741),i(11253),i(38822),i(52228),i(74057),i(48190),i(85557),i(94070),i(67541),i(16218),i(39855),i(83378),i(81050),i(55436),i(43916),i(7200),i(68681),i(76223),i(86951),i(95310),i(93939),i(62407),i(90033),i(97807),i(238),i(71831),i(84225),i(4978),i(92200),i(65949),i(59877),i(65775),i(5777),i(53269),i(19124),i(89241),i(91700),i(1557),i(47842),i(17298),i(35154),i(12240),i(47383),i(65514),i(46987),i(15173),i(37453),i(3781),i(66774),i(49214),i(76733),i(55823),i(92847),i(32925),i(27207),i(90549);const kt={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},$t=new Set(["u1","u2","u4","u8","s8","u16","s16"]),Wt={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Xt=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Kt(e){return Xt.has(e.type)}function Yt(e,t){if(!e||!t)return(0,p.d9)(e||t);const i=(0,p.d9)(e);if(i.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),ei(i.functionDefinition.arguments,t),i.rasterFunctionDefinition=i.functionDefinition.toJSON()}else"none"!==t.functionName?.toLowerCase()&&(ii(i.functionArguments).Raster=t);return i}function ei(e,t){for(const i in e)"raster"===i.toLowerCase()&&("RasterFunctionVariable"===e[i].type?(e[i]=t.rasterFunctionDefinition,e[i].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===e[i].type&&ei(e[i].arguments,t))}function ti(e){const t=(0,p.d9)(kt[e.functionName+"Function"]),i=e.functionArguments;for(const e in i)"raster"===e.toLowerCase()?(t.arguments[e]=ti(i[e]),t.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(t.arguments[e].value=oi(i[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=i[e];return t}function ii(e){const t=e?.Raster??e?.raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?ii(t.functionArguments):e}const ri={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function si(e,t){const i=$t.has(t)?(0,T.g)(t):null;return i&&e.push([Math.floor(i[0]-1),0,0,0],[Math.ceil(i[1]+1),0,0,0]),e}function ni(e){if(null==e)return;const{fields:t}=e,i=t?.find((e=>e?.name&&"value"===e.name.toLowerCase()));return i?.name}function oi(e){const t=[],i=[];return e.forEach((e=>{t.push(e[0]),i.push((0,D.e)([...e.slice(1),255]))})),{type:"RasterColormap",values:t,colors:i}}let ai=class extends x.wq{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,t,i){this.layer.version<10.3||(t[i]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,t,i){this.format&&this.format.toLowerCase().includes("jpg")&&null!=e&&(t[i]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(e,t,i){"lerc"===this.format&&this.layer.version>=10.5&&(t[i]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const i=e.definitionExpression;return t?i&&i!==t.where&&(t=t.clone(),t.where=i):i&&(t=new P.Z({where:i})),t}get rasterFunction(){const e=this.layer;let{rasterFunction:t}=e;const i=e.pixelFilter,r=!e.format||e.format.includes("jpg")||e.format.includes("png");t=this._addResampleRasterFunction(t);const s=e.multidimensionalSubset?.areaOfInterest;return s&&(t=this._addClipFunction(t,s)),r&&!i&&"vector-field"!==e.renderer?.type&&(t=this.combineRendererWithRenderingRule(t)),t}combineRendererWithRenderingRule(e){const t=this.layer,{rasterInfo:i,renderer:r}=t;return e=e||t.rasterFunction,r&&Kt(r)?Yt(function(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const i=t.convertToRFT,r=new j.Z;r.functionName="Stretch";const s=ri[N.s.toJSON(e.stretchType)],n="u8",o={StretchType:s,Statistics:function(e){const t=[];return e?.forEach((e=>{const i=e;if(Array.isArray(i))t.push(i);else{if(null==i.min||null==i.max)return;const e=[i.min,i.max,i.avg||0,i.stddev||0];t.push(e)}})),t}(e.statistics??[]),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(o.Min=e.outputMin),null!=e.outputMax&&(o.Max=e.outputMax),s===ri.standardDeviation?(o.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=n):s===ri.percentClip?(o.MinPercent=e.minPercent,o.MaxPercent=e.maxPercent,r.outputPixelType=n):s===ri.minMax?r.outputPixelType=n:s===ri.sigmoid&&(o.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=o,r.variableName="Raster",e.colorRamp){const s=e.colorRamp,n=new j.Z;if(i)n.functionArguments={ColorRamp:(0,D.g)(s)};else{const i=(0,D.d)(s,!0);if(i)n.functionArguments={colorRampName:i};else if(!t.convertColorRampToColormap||"algorithmic"!==s.type&&"multipart"!==s.type){const t=e.colorRamp.toJSON();"algorithmic"===t.type?t.algorithm=t.algorithm||"esriCIELabAlgorithm":"multipart"===t.type&&t.colorRamps?.length&&t.colorRamps.forEach((e=>e.algorithm=e.algorithm||"esriCIELabAlgorithm")),n.functionArguments={colorRamp:t}}else n.functionArguments={Colormap:(0,D.c)(s)}}return n.variableName="Raster",n.functionName="Colormap",n.functionArguments.Raster=r,i?new j.Z({rasterFunctionDefinition:ti(n)}):n}return i?new j.Z({rasterFunctionDefinition:ti(r)}):r}(e,t);case"class-breaks":return function(e,t){const i=[],r=[],s=[],n=[],o=1e-4,{pixelType:a,rasterAttributeTable:l}=t,u=null==l?null:l.features,p=ni(l);if(p&&u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,i)=>{const r=t.symbol?.color;let s;r?.a&&null!=t.minValue&&null!=t.maxValue&&u.forEach((o=>{null!=t.minValue&&null!=t.maxValue&&(s=o.attributes[e.field],(s>=t.minValue&&s<t.maxValue||i===e.classBreakInfos.length-1&&s>=t.minValue)&&n.push([o.attributes[p],r.r,r.g,r.b]))}))}));const i=a?si(n,a):n,r=new j.Z;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=i,r.variableName="Raster",t.convertToRFT?new j.Z({rasterFunctionDefinition:ti(r)}):r}e.classBreakInfos.forEach(((e,t)=>{if(null==e.minValue||null==e.maxValue)return;const a=e.symbol&&e.symbol.color;a?.a?(0===t?i.push(e.minValue,e.maxValue+o):i.push(e.minValue+o,e.maxValue+o),r.push(t),n.push([t,a.r,a.g,a.b])):s.push(e.minValue,e.maxValue)}));const c=a?si(n,a):n,d=new j.Z;d.functionName="Remap",d.functionArguments={InputRanges:i,OutputValues:r,NoDataRanges:s},d.variableName="Raster";const m=new j.Z;return m.functionName="Colormap",m.functionArguments={Colormap:c,Raster:d},t.convertToRFT?new j.Z({rasterFunctionDefinition:ti(m)}):m}(e,t);case"unique-value":return function(e,t){const i=[],{pixelType:r,rasterAttributeTable:s}=t,n=null==s?null:s.features,o=ni(s),a=e.defaultSymbol?.color?.toRgb(),l=e.uniqueValueInfos;if(l)if(n){if(o){const t=new Map;l.forEach((e=>{const i=e.value,r=e.symbol?.color;null!=i&&r?.a&&t.set(String(i),r.toRgb())}));const r=e.field;n.forEach((({attributes:e})=>{const s=String(e[r]),n=e[o],l=t.get(s);l?i.push([n,...l]):a&&i.push([n,...a])}))}}else for(let e=0;e<l.length;e++){const t=l[e],r=t.symbol?.color,s=+t.value;if(r?.a){if(isNaN(s))return null;i.push([s,r.r,r.g,r.b])}}const u=r?si(i,r):i,p=new j.Z;return p.functionName="Colormap",p.functionArguments={},p.functionArguments.Colormap=u,p.variableName="Raster",t.convertToRFT?new j.Z({rasterFunctionDefinition:ti(p)}):p}(e,t);case"raster-colormap":return function(e,t){const i=e.extractColormap();if(!i||0===i.length)return null;const{pixelType:r}=t,s=r?si(i,r):i,n=new j.Z;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=s,t.convertToRFT?new j.Z({rasterFunctionDefinition:ti(n)}):n}(e,t);case"vector-field":return function(e,t){const i=new j.Z;i.functionName="VectorFieldRenderer";const{dataType:r,bandNames:s}=t,n="vector-uv"===r;let o,a;if(s&&2===s.length){const e=s.map((e=>e.toLowerCase()));o=e.indexOf("magnitude"),a=e.indexOf("direction")}-1!==o&&null!==o||(o=0,a=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.find((e=>"Magnitude"===e.field)):new O.Z,c={magnitudeBandID:o,directionBandID:a,isUVComponents:n,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Wt[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};i.functionArguments=c;const d=ti(i);return t.convertToRFT?j.Z.fromJSON({rasterFunctionDefinition:d}):i}(e,t);case"raster-shaded-relief":return function(e,t){const i=t.convertToRFT;if("elevation"!==t.dataType&&("generic"!==t.dataType||1!==t.bandCount||"s16"!==t.pixelType&&"s32"!==t.pixelType&&"f32"!==t.pixelType&&"f64"!==t.pixelType))return new j.Z;const r=new j.Z;r.functionName="Hillshade";const s="traditional"===e.hillshadeType?0:1,n="none"===e.scalingType?1:3,o={HillshadeType:s,SlopeType:n,ZFactor:e.zFactor};return 0===s&&(o.Azimuth=e.azimuth,o.Altitude=e.altitude),3===n&&(o.PSPower=e.pixelSizePower,o.PSZFactor=e.pixelSizeFactor),r.functionArguments=o,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",i?o.ColorRamp=(0,D.g)(e.colorRamp):o.Colormap=(0,D.c)(e.colorRamp)),i?new j.Z({rasterFunctionDefinition:ti(r)}):r}(e,t);case"flow":throw new Error("Unsupported rendering rule.")}}(r,{rasterAttributeTable:i.attributeTable,pixelType:i.pixelType,dataType:i.dataType,bandNames:i.bandInfos.map((({name:e})=>e)),convertColorRampToColormap:t.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:i.bandCount}),e):e}_addResampleRasterFunction(e){if("vector-field"!==this.layer.renderer?.type||"Resample"===e?.functionName)return e;const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,i=this.layer.serviceRasterInfo.pixelSize;let r=new j.Z({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:i}});return r=e?.rasterFunctionDefinition?new j.Z({rasterFunctionDefinition:ti(r)}):r,Yt(r,e)}_addClipFunction(e,t){return Yt(new j.Z({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}}),e)}};(0,r._)([(0,u.Cb)()],ai.prototype,"layer",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],ai.prototype,"adjustAspectRatio",null),(0,r._)([(0,m.w)("adjustAspectRatio")],ai.prototype,"writeAdjustAspectRatio",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],ai.prototype,"bandIds",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],ai.prototype,"compression",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],ai.prototype,"compressionQuality",null),(0,r._)([(0,m.w)("compressionQuality")],ai.prototype,"writeCompressionQuality",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],ai.prototype,"compressionTolerance",null),(0,r._)([(0,m.w)("compressionTolerance")],ai.prototype,"writeCompressionTolerance",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],ai.prototype,"format",null),(0,r._)([(0,u.Cb)({type:String,json:{read:{reader:j.i.read},write:{writer:j.i.write}}})],ai.prototype,"interpolation",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],ai.prototype,"noData",null),(0,r._)([(0,u.Cb)({type:String,json:{read:{reader:j.n.read},write:{writer:j.n.write}}})],ai.prototype,"noDataInterpretation",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],ai.prototype,"pixelType",void 0),(0,r._)([(0,u.Cb)({json:{write:!0}})],ai.prototype,"lercVersion",void 0),(0,r._)([(0,m.w)("lercVersion")],ai.prototype,"writeLercVersion",null),(0,r._)([(0,u.Cb)({type:Number})],ai.prototype,"version",null),(0,r._)([(0,u.Cb)({json:{write:!0}})],ai.prototype,"mosaicRule",null),(0,r._)([(0,u.Cb)({json:{write:!0,name:"renderingRule"}})],ai.prototype,"rasterFunction",null),ai=(0,r._)([(0,d.j)("esri.layers.mixins.ExportImageServiceParameters")],ai);let li=class extends((0,n.J)(x.wq)){constructor(){super(...arguments),this.referenceUri=null}};(0,r._)([(0,u.Cb)({type:String,json:{name:"uri",write:!0}})],li.prototype,"referenceUri",void 0),li=(0,r._)([(0,d.j)("esri.rest.support.ImageUrlParameters")],li);const ui=li,pi=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),ci=(0,u.Eg)(R.f,{min:0,max:255}),di=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new ai({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)})),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?P.Z.fromJSON(t):null}get fieldsIndex(){return this.fields?new Z.Z(this.fields):null}set format(e){e&&pi.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=P.Z.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?P.Z.fromJSON(i):this._isMosaicRuleSupported(t)?P.Z.fromJSON(t):null}writeMosaicRule(e,t,i){let r=this.mosaicRule;const s=this.definitionExpression;r?s&&s!==r.where&&(r=r.clone(),r.where=s):s&&(r=new P.Z({where:s})),this._isValidCustomizedMosaicRule(r)&&(t[i]=r.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=ci(e))}readObjectIdField(e,t){if(!e){const i=t.fields.find((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=i?.name}return e}get parsedUrl(){return(0,_.mN)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,i){const r=t?.layerDefinition?.drawingInfo?.renderer,s=(0,f.ij)(r,i);return null==s?null:("vector-field"===s.type&&t.symbolTileSize&&!r.symbolTileSize&&(s.symbolTileSize=t.symbolTileSize),Kt(s)||c.L.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),s)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this._rasterAttributeTableFieldPrefix,t=new M.Z({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new M.Z({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new M.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let s=this.fields?(0,p.d9)(this.fields):[];s.push(i),this.capabilities?.operations.supportsQuery&&this.fields&&this.fields.length>0&&s.push(t),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&s.push(r),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{s.push(new M.Z({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),this._isVectorDataSet()&&(s.push(new M.Z({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),s.push(new M.Z({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:n}=this.rasterInfo??{};if(null!=n){const t=n.fields.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const i=(0,p.d9)(t);return i.name=e+t.name,i}));s=s.concat(t)}return s}get renderingRule(){return(0,w.d)(c.L.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this.rasterFunction}set renderingRule(e){(0,w.d)(c.L.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=j.Z.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i?.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?j.Z.fromJSON({rasterFunctionDefinition:t.renderingRule}):j.Z.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?$.Z.fromJSON(i):null}readPixelType(e){return j.p.fromJSON(e)||e}writePixelType(e,t,i){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[i]=j.p.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let i=e;const{renderer:r,symbolizer:s,pixelFilter:n,bandIds:o}=this;if(!this._isPicture()&&r&&s&&!n){const n=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(r.toJSON()),a=this._rasterJobHandler.instance;if(a){n&&(s.bind(),await a.updateSymbolizer(s,t),this._cachedRendererJson=r.toJSON());const l=await a.symbolize({bandIds:o,...e},t);i={extent:e.extent,pixelBlock:l}}else i={extent:e.extent,pixelBlock:s.symbolize({bandIds:o,...e})}}return i}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new o.Z("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=(0,R.b)(at,e).clone(),async function(e,t,i){const r=t.toJSON();null!=r.angleName&&(r.angleName=r.angleName.join(",")),t?.point?.spatialReference?.imageCoordinateSystem&&(r.point.spatialReference=We(t.point.spatialReference)),t?.spatialReference?.imageCoordinateSystem&&(r.spatialReference=Xe(t.spatialReference));const s=(0,H.p)(e),n=(0,H.e)({...s.query,f:"json",...r}),o=(0,H.a)(n,i),{data:a}=await(0,b.Z)(`${s.path}/computeAngles`,o);return a.spatialReference=a.spatialReference?null!=a.spatialReference.geodataXform?new $.Z({wkid:0,imageCoordinateSystem:a.spatialReference}):$.Z.fromJSON(a.spatialReference):null,"NaN"===a.north&&(a.north=null),"NaN"===a.up&&(a.up=null),new oe(a)}(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new o.Z("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,R.b)(Nt,e).clone(),async function(e,t,i){const r=t.toJSON(),{geometries:s}=t;if(s)for(let e=0;e<s.length;e++)s[e].spatialReference?.imageCoordinateSystem&&(r.geometries.geometries[e].spatialReference=We(s[e].spatialReference));const n=(0,H.p)(e),o=(0,H.e)({...n.query,f:"json",...r}),a=(0,H.a)(o,i),{data:l}=await(0,b.Z)(`${n.path}/computePixelLocation`,a);return Ne.fromJSON(l)}(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new o.Z("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,R.b)(Ft.Z,e).clone(),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await Ue(e,t,i),s=(0,H.p)(e),{data:n}=await(0,b.Z)(`${s.path}/computeHistograms`,r);return{histograms:n.histograms}}(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new o.Z("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,R.b)(Ft.Z,e).clone(),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await Ue(e,t,i),s=(0,H.p)(e),{data:n}=await(0,b.Z)(`${s.path}/computeStatisticsHistograms`,r),{statistics:o}=n;return o?.length&&o.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:o,histograms:n.histograms}}(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const i=await this._fetchCapabilities(t?.signal);if(!("base-and-top"===e.operationType?i.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?i.mensuration.supportsHeightFromBaseAndTopShadow:i.mensuration.supportsHeightFromTopAndTopShadow))throw new o.Z("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,R.b)(Ct,e).clone(),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await Qe(e,t,[t.fromGeometry,t.toGeometry],i);return Ie.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i.mensuration.supportsAreaAndPerimeter||e.is3D&&!i.mensuration.supports3D)throw new o.Z("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,R.b)(dt,e).clone(),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await Qe(e,t,[t.geometry],i);return me.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i.mensuration.supportsDistanceAndAngle||e.is3D&&!i.mensuration.supports3D)throw new o.Z("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,R.b)(ft,e).clone(),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await Qe(e,t,[t.fromGeometry,t.toGeometry],i);return fe.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i.mensuration.supportsPointOrCentroid||e.is3D&&!i.mensuration.supports3D)throw new o.Z("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,R.b)(Mt,e).clone(),this._applyMosaicAndRenderingRules(e),async function(e,t,i){const r=await Qe(e,t,[t.geometry],i);return Pe.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new o.Z("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new o.Z("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return e=(0,R.b)(Ht,e).clone(),async function(e,t,i){const r=await ke(e,t,i);return Ge.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new o.Z("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new o.Z("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return e=(0,R.b)(Ht,e).clone(),async function(e,t,i){const r=await ke(e,t,i);return Je.fromJSON(r)}(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return null!=t?t.get(e):void 0}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}async fetchImage(e,t,r,s={}){if(null==e||null==t||null==r)throw new o.Z("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const e=await this._generateRasterInfo(this.rasterFunction,{signal:s.signal});e&&(this.rasterInfo=e)}const n=this.getExportImageServiceParameters(e,t,r,s.timeExtent);if(null==n){if(s.requestAsImageElement&&this._canRequestImageElement(this.format)){const e=document.createElement("canvas");return e.width=t,e.height=r,s.returnImageBitmap?{imageBitmap:await(0,A.a)(e,`${i(this.parsedUrl)}/exportImage`,s.signal)}:{imageOrCanvasElement:e}}const{bandIds:n,rasterInfo:o}=this,a=(n?.length||o.bandCount)??0,l=t*r,u=o.pixelType,p=[];for(let e=0;e<a;e++)p.push(q.Z.createEmptyBand(u,l));return{pixelData:{pixelBlock:new q.Z({width:t,height:r,pixels:p,mask:new Uint8Array(l),pixelType:u}),extent:e}}}const a=!!s.requestAsImageElement&&!this.pixelFilter,l=a&&!!s.returnImageBitmap,u={imageServiceParameters:n,imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:a,returnImageBitmap:l,signal:s.signal};return this._requestArrayBuffer(u)}fetchKeyProperties(e){return(0,b.Z)(i(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then((e=>e.data))}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new o.Z("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,b.Z)(i(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then((e=>Fe.Z.fromJSON(e.data)))}getCatalogItemRasterInfo(e,t){const r={...t,query:this._getQueryParams()};return async function(e,t,i){const r=(0,H.p)(e),s=(0,H.e)({...r?.query,f:"json"}),n=(0,H.a)(s,i),o=`${r?.path}/${t}/info`,a=(0,b.Z)(`${o}`,n),l=(0,b.Z)(`${o}/keyProperties`,n),u=await Promise.allSettled([a,l]),p="fulfilled"===u[0].status?u[0].value.data:null,c="fulfilled"===u[1].status?u[1].value.data:null;let d=null;p.statistics?.length&&(d=p.statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))));const m=te.Z.fromJSON(p.extent),h=Math.ceil(m.width/p.pixelSizeX-.1),y=Math.ceil(m.height/p.pixelSizeY-.1),g=m.spatialReference,f=new Q.Z({x:p.pixelSizeX,y:p.pixelSizeY,spatialReference:g}),w=p.histograms?.length?p.histograms:null,v=new J.R({origin:p.origin,blockWidth:p.blockWidth,blockHeight:p.blockHeight,firstPyramidLevel:p.firstPyramidLevel,maximumPyramidLevel:p.maxPyramidLevel});return new J.Z({width:h,height:y,bandCount:p.bandCount,extent:m,spatialReference:g,pixelSize:f,pixelType:p.pixelType.toLowerCase(),statistics:d,histograms:w,keyProperties:c,storageInfo:v})}(i(this.parsedUrl),e,r)}async getCatalogItemICSInfo(e,t){const{data:r}=await(0,b.Z)(i(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),s=r?.ics;if(!s)return;let n=null;try{n=(await(0,b.Z)(i(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n||!n.spatialReference)return{ics:s,icsToPixelTransform:null,icsExtent:null,northDirection:null};const o=this.version>=10.7?(0,b.Z)(i(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=n.spatialReference,l={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:(0,C.X)(a),outSR:"0:"+e},u=(0,b.Z)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(l),...t}).then((e=>e.data)).catch((()=>({}))),p=(n.xmin+n.xmax)/2,c=(n.ymax-n.ymin)/6,d=n.ymin+c,m=[];for(let e=0;e<5;e++)m.push({x:p,y:d+c*e});const h={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:m}),inSR:(0,C.X)(a),outSR:"0:"+e},y=(0,b.Z)(i(this.parsedUrl)+"/project",{query:this._getQueryParams(h),...t}).then((e=>e.data)).catch((()=>({}))),g=await Promise.all([o,u,y]);let f=g[0].ipxf;if(null==f){const e=s.geodataXform?.xf_0;"topup"===e?.name?.toLowerCase()&&6===e?.coefficients?.length&&(f={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const w=te.Z.fromJSON(g[1]?.geometries?.[0]);w&&(w.spatialReference=new $.Z({wkid:0,imageCoordinateSystem:s}));const v=g[2].geometries?g[2].geometries.filter((e=>null!=e?.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],_=v.length;if(_<3)return{ics:s,icsToPixelTransform:f,icsExtent:w,northDirection:null};let R=0,S=0,I=0,F=0;for(let e=0;e<_;e++)R+=v[e].x,S+=v[e].y,I+=v[e].x*v[e].x,F+=v[e].x*v[e].y;const x=(_*F-R*S)/(_*I-R*R);let j=0;const T=v[4].x>v[0].x,D=v[4].y>v[0].y;return x===1/0?j=D?90:270:0===x?j=T?0:180:x>0?j=T?180*Math.atan(x)/Math.PI:180*Math.atan(x)/Math.PI+180:x<0&&(j=D?180+180*Math.atan(x)/Math.PI:360+180*Math.atan(x)/Math.PI),{ics:s,icsToPixelTransform:f,icsExtent:w,northDirection:j}}async generateRasterInfo(e,t){if(e=(0,R.b)(j.Z,e),this.serviceRasterInfo&&(!e||"none"===e.functionName?.toLowerCase()||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const r=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),i=t?.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return i?i.join("/"):null}(e);if(!r)throw new o.Z("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const s={...t,query:this._getQueryParams()},n=(0,it.g)(i(this.parsedUrl),e,s);this._functionRasterInfos[r]=n;try{return await n}catch(e){throw this._functionRasterInfos[r]=null,e}}getExportImageServiceParameters(e,t,r,s){const n=Xe((e=e.clone().shiftCentralMeridian()).spatialReference,i(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:a,noData:l}=o;let{renderingRule:u}=o;const p=this.rasterFunction?.rasterFunctionDefinition,c=!this.renderer||"raster-stretch"===this.renderer.type;if(a?.length&&this._hasRasterFunction(this.rasterFunction)&&!p&&c){const e={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:a}};if("Stretch"===u.rasterFunction)e.rasterFunctionArguments.Raster=u.rasterFunctionArguments.Raster,u.rasterFunctionArguments.Raster=e;else if("Colormap"===u.rasterFunction){const t=u.rasterFunctionArguments.Raster;"Stretch"===t?.rasterFunction?(e.rasterFunctionArguments.Raster=t.rasterFunctionArguments.Raster,t.rasterFunctionArguments.Raster=e):(e.rasterFunctionArguments.Raster=t,u.rasterFunctionArguments.Raster=e)}else e.rasterFunctionArguments.Raster=u,u=e;o.bandIds=void 0}else o.bandIds=a?.join(",");l instanceof Array&&l.length>0&&(o.noData=l.join(","));const d=this._processMultidimensionalIntersection(null,s,this.exportImageServiceParameters.mosaicRule);if(d.isOutSide)return null;o.mosaicRule=null!=d.mosaicRule?JSON.stringify(d.mosaicRule):null,s=d.timeExtent,o.renderingRule=this._getRenderingRuleString(j.Z.fromJSON(u));const m={};if(null!=s){const{start:e,end:t}=s.toJSON();e&&t&&e===t?m.time=""+e:null==e&&null==t||(m.time=`${e??"null"},${t??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:n,imageSR:n,size:t+","+r,...o,...m}}async getSamples(e,t){const i=await this._fetchCapabilities(t?.signal);if(!i?.operations.supportsGetSamples)throw new o.Z("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,R.b)(Vt,e).clone();const{raster:r}=this;return r&&null==e.raster&&(e.raster=r),async function(e,t,i){const r=t.toJSON();Be(r),r.outFields?.length&&(r.outFields=r.outFields.join(","));const s=await(0,U.aX)(t.geometry),n=s?.[0];null!=n&&(r.geometry=$e(n));const o=(0,H.p)(e),a=(0,H.e)({...o.query,f:"json",...r}),l=(0,H.a)(a,i),{data:u}=await(0,b.Z)(`${o.path}/getSamples`,l),p=u?.samples?.map((e=>{const t="NaN"===e.value||""===e.value?null:e.value.split(" ").map((e=>Number(e)));return{...e,pixelValue:t}}));return Ve.fromJSON({samples:p})}(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new o.Z("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,R.b)(jt,e).clone(),this.version<10.91&&"extent"===e.geometry?.type&&(e.geometry=re.Z.fromExtent(e.geometry));const i=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(i.isOutSide)throw new o.Z("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=i.timeExtent,e.mosaicRule=i.mosaicRule;const{raster:r,rasterFunction:s}=this;return s&&null==e.rasterFunction&&(e.rasterFunction=s),r&&null==e.raster&&(e.raster=r),He(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMap)throw new o.Z("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return e=(0,R.b)(Gt,e),async function(e,t,i){const r=t.toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(r.geometry=$e(t.geometry)),t.depthOffset&&t.adjust||delete r.options;const s=(0,H.p)(e),n=(0,H.e)({...s.query,f:"json",...r}),o=(0,H.a)(n,i),{data:a}=await(0,b.Z)(`${s.path}/imageToMap`,o);return(0,se.im)(a)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsImageToMapMultiray)throw new o.Z("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return e=(0,R.b)(Jt,e),async function(e,t,i){const r=t.toJSON();t.rasterIds?.length&&(r.rasterIds=t.rasterIds.join(","));const s=(0,H.p)(e),n=(0,H.e)({...s.query,f:"json",...r}),o=(0,H.a)(n,i),{data:a}=await(0,b.Z)(`${s.path}/imageToMapMultiray`,o);return(0,se.im)(a)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsMapToImage)throw new o.Z("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return e=(0,R.b)(zt,e),async function(e,t,i){const r=t.toJSON(),s=await(0,U.aX)(t.geometry),n=s?.[0];null!=n&&(r.geometry=$e(n)),t.visibleOnly||delete r.options;const o=n?.spatialReference??t.geometry?.spatialReference;o&&(r.inSR=Xe(o));const a=(0,H.p)(e),l=(0,H.e)({...a.query,f:"json",...r}),u=(0,H.a)(l,i),{data:p}=await(0,b.Z)(`${a.path}/mapToImage`,u);return(0,se.im)(p)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsFindImages)throw new o.Z("imagery-layer:find-images","findImages operation is not supported on the input image service");return e=(0,R.b)(st,e),async function(e,t,i){const r=t.toJSON(),s=await(0,U.aX)([t.fromGeometry,t.toGeometry]);null!=s[0]&&(r.fromGeometry=$e(s[0]),s[0].spatialReference&&(r.inSR=Xe(s[0].spatialReference))),null!=s[1]&&(r.toGeometry=$e(s[1])),t.objectIds?.length&&(r.objectIds=r.objectIds.join(","));const n=(0,H.p)(e),o=(0,H.e)({...n.query,f:"json",...r}),a=(0,H.a)(o,i),{data:l}=await(0,b.Z)(`${n.path}/find`,a);return ee.fromJSON(l)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsGetImageUrl)throw new o.Z("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return e=(0,R.b)(ui,e),Ke(i(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){const e=new et.Z;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryBoundary)throw new o.Z("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=(0,R.b)(ht,e??{outSpatialReference:this.spatialReference}).clone(),async function(e,t,i){const r=(0,H.p)(e),s=t.toJSON();t.outSpatialReference&&(s.outSR=Xe(t.outSpatialReference));const n=(0,H.e)({...r.query,f:"json",...s}),o=(0,H.a)(n,i),{data:a}=await(0,b.Z)(r.path+"/queryBoundary",o);return ye.fromJSON(a)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,Ye.a)(this.url,e,t)}async queryObjectIds(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,tt.a)(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQueryGPSInfo)throw new o.Z("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=(0,R.b)(_t,e??{outSpatialReference:this.spatialReference}).clone(),async function(e,t,i){const r=t.toJSON();Be(r),r.objectIds?.length&&(r.objectIds=r.objectIds.join(",")),r.geometry||r.objectIds||r.time||r.where||(r.where="1=1");const s=await(0,U.aX)(t.geometry),n=s?.[0];null!=n&&(r.geometry=$e(n));const o=n?.spatialReference??t.geometry?.spatialReference;o&&(r.inSR=Xe(o));const a=(0,H.p)(e),l=(0,H.e)({...a.query,f:"json",...r}),u=(0,H.a)(l,i),{data:p}=await(0,b.Z)(`${a.path}/queryGPSInfo`,u);return Se.fromJSON(p)}(i(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return({query:e,requestOptions:t}=await this._prepareForQuery(e,t)),(0,tt.e)(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new o.Z("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:i,returnDomainValues:r,returnTopmostRaster:s,showNoDataRecords:n}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let a=!1,l=null,u=null;const p="raster.servicepixelvalue",c=this._rasterFunctionNamesIndex;if(null!=e.outFields&&(a=e.outFields.some((e=>!e.toLowerCase().includes(p))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().includes(p)&&e.length>24)).map((e=>{const t=e.slice(25);return[this._updateRenderingRulesFunctionName(t,c),t]}));l=t.map((e=>new j.Z({functionName:e[0]}))),u=t.map((e=>e[1]));const{rasterFunction:i}=this;0===l.length?i?.functionName?(l.push(i),u.push(i.functionName)):l=null:i?.functionName&&!l.some((e=>e.functionName===i.functionName))&&(l.push(i),u.push(i.functionName))}const d=null==e.outSpatialReference||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:m}=this;let h=e.timeExtent||this.timeExtent;if(m){const{isOutside:t,intersection:i}=(0,G.f)(m,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(t)throw new o.Z("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=i?.timeExtent&&(h=i.timeExtent)}const y=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,h);let g=e.geometry;this.version<10.91&&"extent"===g?.type&&(g=re.Z.fromExtent(g));const f=this._getQueryParams({geometry:g,timeExtent:h,mosaicRule:y,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:l,pixelSize:i,returnCatalogItems:a,returnGeometry:d,raster:this.raster,maxItemCount:s?1:null});delete f.f;const b=new jt(f);try{await this._generateRasterInfo(this.rasterFunction);const i=await He(this.url,b,{signal:t?.signal,query:{...this.customParameters}}),s=e.outFields,o=null!=i.value&&i.value.toLowerCase().includes("nodata");if(!a||d||!i?.catalogItems?.features.length||!n&&o)return this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s});const l=this.objectIdField||"ObjectId",p=i.catalogItems?.features??[],c=p.map((e=>e.attributes?.[l])),m=new et.Z({objectIds:c,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[l]}),h=await this.queryRasters(m);return h?.features?.length&&h.features.forEach((t=>{p.forEach((i=>{i.attributes[l]===t.attributes[l]&&(i.geometry=new re.Z(t.geometry),null!=e.outSpatialReference&&(i.geometry.spatialReference=e.outSpatialReference))}))})),this._processVisibleRastersResponse(i,{returnDomainValues:r,templateRRFunctionNames:u,showNoDataRecords:n,templateFields:s})}catch{throw new o.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const r=(0,b.Z)(i(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.statistics)),s=(0,b.Z)(i(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>e.data?.histograms)),n=await Promise.all([r,s]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async createFlowMesh(e,t){const i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,Qt.c)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return(0,G.e)(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=null!=this.serviceRasterInfo?Promise.resolve(this.serviceRasterInfo):(0,it.f)(i(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then((e=>(this._set("serviceRasterInfo",e),this._set("multidimensionalInfo",e.multidimensionalInfo),(0,it.p)(e,t),e))),s=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,n=this._getRasterFunctionInfos();return Promise.all([r,s,n]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),e[2]&&this._set("rasterFunctionInfos",e[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),c.L.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([(0,v.YP)((()=>this.rasterFunction),(e=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}))]);const{serviceRasterInfo:t}=this;null!=t.multidimensionalInfo&&this._updateMultidimensionalDefinition(t)}))}_combineMosaicRuleWithTimeExtent(e,t){const i=this.timeInfo,{multidimensionalInfo:r}=this.serviceRasterInfo;if(null==e||null==r||null==t||null==i?.startField)return e;const{startField:s}=i,n=r.variables.some((e=>e.dimensions.some((e=>e.name===s))))?s:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter((e=>e.dimensionName!==n)),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const o=e.multidimensionalDefinition.filter((e=>e.dimensionName===n)),a=null!=t.start?t.start.getTime():null,l=null!=t.end?t.end.getTime():null,u=null==a||null==l||a===l,p=u?[a||l]:[[a,l]],c=this.version>=10.8;if(o.length)o.forEach((e=>{e.dimensionName===n&&(c?(e.dimensionName=null,e.isSlice=!1,e.values=[]):(e.isSlice=u,e.values=p))}));else if(!c){const t=e.multidimensionalDefinition.filter((e=>null!=e.variableName&&null==e.dimensionName));t.length?t.forEach((e=>{e.dimensionName=n,e.isSlice=u,e.values=p})):e.multidimensionalDefinition.push(new F.Z({variableName:"",dimensionName:n,isSlice:u,values:p}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter((e=>!(!e.variableName&&!e.dimensionName))),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new o.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,R.b)(et.Z,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new E.R;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>{})),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:i}=this;return"unique-value"===e.type&&this._hasRasterFunction(i)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,B.p)(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let t=this.sourceJSON;if(!t){const{data:r,ssl:s}=await(0,b.Z)(i(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=r,this.sourceJSON=t,s&&(this.url=this.url.replace(/^http:/i,"https:"))}if(t.capabilities?.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly")>-1)throw new o.Z("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const t=this._isMosaicDataset(e),i=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return t||i}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:i}=e,r="resample"===t?.toLowerCase(),s=i?.ResampleType||i?.resampleType;return r&&(7===s||10===s)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:i}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&i.bandCount>=3){const e=(0,B.h)(i);!e||3===i.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}e||(e=(0,B.o)(i,{bandIds:this.bandIds,variableName:this.rasterFunction?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const t=(0,B.n)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=t,this.symbolizer.rasterInfo=i):this.symbolizer=new L.R({rendererJSON:t,rasterInfo:i}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=e?.renderingRule&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,L.d)(e,t,i)}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.loaded)return t;if(t&&this.version>=10.3){if(1===t.length&&"none"===t[0].name.toLowerCase())return t;const r=await(0,b.Z)(i(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e});return r.data?.rasterFunctionInfos}return null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,returnImageBitmap:s,signal:n}=e;if(r&&this._canRequestImageElement(t.format)){const r=`${i(this.parsedUrl)}/exportImage`,{data:o}=await(0,b.Z)(r,{responseType:s?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:n});return o instanceof Blob?{imageBitmap:await(0,A.a)(o,r,n),params:t}:{imageOrCanvasElement:o,params:t}}const a=this._initJobHandler(),l=(0,b.Z)(i(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:n}),u=(await Promise.all([l,a]))[0].data,p=t.format||"jpgpng";let c=p;if("bsq"!==c&&"bip"!==c&&(c=(0,L.g)(u)),!c)throw new o.Z("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(u)));const d={signal:n},m="gif"===p||"bmp"===p||p.includes("png")&&("png"===c||"jpg"===c)?(0,L.d)(u,{useCanvas:!0,...t},d):this._decodePixelBlock(u,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:p},d);return{pixelData:{pixelBlock:await m,extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch((()=>null))}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,G.b)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){this.mosaicRule=this.mosaicRule||new P.Z;const e=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&t.forEach((e=>e.variableName="")),t=t.filter((({variableName:e,dimensionName:t})=>e&&"*"!==e||t)),!e?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const i=e.value,{templateRRFunctionNames:r,showNoDataRecords:s,returnDomainValues:n,templateFields:o}=t,a=e.processedValues;let l=e.catalogItems?.features,u=e.properties?.Values?.map((e=>e.replaceAll(/ /gi,", ")))||[];const p=this.objectIdField||"ObjectId",c="string"==typeof i&&i.toLowerCase().includes("nodata"),d=[];if(i&&!l&&!c){const e={};e[p]=0,u=[i],l=[new g.Z(this.fullExtent,null,e)]}if(!l)return[];let m,h,y;this._updateResponseFieldNames(l,o),c&&!s&&(l=[]);for(let e=0;e<l.length;e++){if(m=l[e],null!=i){if(h=u[e],y=this.rasterFunction&&a&&a.length>0&&r&&r.length>0&&r.includes(this.rasterFunction.functionName)?a[r.indexOf(this.rasterFunction.functionName)]:i,"nodata"===h.toLowerCase()&&!s)continue;const t="Raster.ItemPixelValue",n="Raster.ServicePixelValue";m.attributes[t]=h,m.attributes[n]=y,this._updateFeatureWithMagDirValues(m,h);const o=this.fields&&this.fields.length>0;let l=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?o?h:i:y;this.rasterFunction||(l=o?h:i),this._updateFeatureWithRasterAttributeTableValues(m,l)}if(m.sourceLayer=m.layer=this,n&&this._updateFeatureWithDomainValues(m),r&&a&&r.length===a.length)for(let e=0;e<r.length;e++){const t="Raster.ServicePixelValue."+r[e];m.attributes[t]=a[e]}d.push(l[e])}return d}_processMultidimensionalIntersection(e,t,i){const{multidimensionalSubset:r}=this;if(!r)return{isOutSide:!1,timeExtent:t,mosaicRule:i=this._combineMosaicRuleWithTimeExtent(i,t)};if(r){const{isOutside:i,intersection:s}=(0,G.f)(r,{geometry:e,timeExtent:t});if(i)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=s?.timeExtent&&(t=s.timeExtent)}if(i=this._combineMosaicRuleWithTimeExtent(i,t),i?.multidimensionalDefinition){const{isOutside:e}=(0,G.f)(r,{multidimensionalDefinition:i.multidimensionalDefinition});if(e)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:i}}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==i)return;const{features:r,fields:s}=i,n=s.map((e=>e.name)).find((e=>"value"===e.toLowerCase()));if(!n)return;const o=r.filter((e=>e.attributes[n]===(null!=t?parseInt(t,10):null)));o&&o[0]&&s.forEach((t=>{const i=this._rasterAttributeTableFieldPrefix+t.name;e.attributes[i]=o[0].attributes[t.name]}))}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map((e=>parseFloat(e))),r=i.map((e=>[e])),s=i.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),n=new q.Z({height:1,width:1,pixelType:"f32",pixels:r,statistics:s});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:n,extent:new te.Z(0,0,0,0,this.spatialReference)});const o="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[n.pixels[0][0],n.pixels[1][0]]:(0,z.h)([n.pixels[0][0],n.pixels[1][0]]);e.attributes["Raster.Magnitude"]=o[0],e.attributes["Raster.Direction"]=o[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const i=e.attributes[t.name];if(null!=i){const r=t.domain.codedValues.find((e=>e.code===i));r&&(e.attributes[t.name]=r.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;null!=i&&e.forEach((e=>{if(e?.attributes)for(const r of t){const t=i.get(r)?.name;t&&t!==r&&(e.attributes[r]=e.attributes[t],delete e.attributes[t])}}))}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=e?.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:i,rasterFunction:r}=this;r&&e instanceof Ft.Z&&null==e.rasterFunction&&(e.rasterFunction=r),i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:r,maxRecordCount:s}=e,n=t.includes("image"),o="esriImageServiceDataTypeElevation"===e.serviceDataType,a=!(!e.spatialReference&&!e.extent?.spatialReference),l=t.includes("edit"),u=t.includes("mensuration")&&a,p=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map((e=>e.trim())),c=u&&p.includes("basic"),d=this._isMosaicDataset(e)&&t.includes("catalog"),m=t.includes("download");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:n,supportsExportImage:n,supportsIdentify:n,supportsImageToMap:i>=11.2&&d,supportsImageToMapMultiray:i>=11.2&&d,supportsMapToImage:i>=11.2&&d,supportsFindImages:i>=11.2&&d,supportsGetImageUrl:i>=11.2&&m,supportsMeasure:u,supportsMeasureFromImage:i>=11.2,supportsDownload:m,supportsQuery:d&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&n,supportsProject:i>=10.3&&n,supportsComputeStatisticsHistograms:i>=10.4&&n,supportsQueryBoundary:i>=10.6&&n,supportsCalculateVolume:i>=10.7&&o,supportsComputePixelLocation:i>=10.7&&d,supportsComputeAngles:i>=10.91,supportsQueryGPSInfo:i>=11.2&&d,supportsAdd:l,supportsDelete:l,supportsEditing:l,supportsUpdate:l,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:s,maxRecordCountFactor:void 0,supportsStatistics:!!r?.supportsStatistics,supportsOrderBy:!!r?.supportsOrderBy,supportsDistinct:!!r?.supportsDistinct,supportsPagination:!!r?.supportsPagination,supportsStandardizedQueriesOnly:!!r?.useStandardizedQueries,supportsPercentileStatistics:!!r?.supportsPercentileStatistics,supportsCentroid:!!r?.supportsReturningGeometryCentroid,supportsDistance:!!r?.supportsQueryWithDistance,supportsExtent:!!r?.supportsReturningQueryExtent,supportsGeometryProperties:!!r?.supportsReturningGeometryProperties,supportsHavingClause:!!r?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!r?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:c,supportsAreaAndPerimeter:c,supportsPointOrCentroid:c,supportsHeightFromBaseAndTop:u&&p.includes("base-top height"),supportsHeightFromBaseAndTopShadow:u&&p.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:u&&p.includes("top-top shadow height"),supports3D:u&&p.includes("3d")}}}};function i(e){return e?.path??""}return(0,r._)([(0,u.Cb)({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),(0,r._)([(0,u.Cb)({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),(0,r._)([(0,u.Cb)({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),(0,r._)([(0,S.r)("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"_rasterAttributeTableFieldPrefix",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),(0,r._)([(0,u.Cb)()],t.prototype,"adjustAspectRatio",void 0),(0,r._)([(0,u.Cb)({type:[R.I],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,r._)([(0,S.r)("bandIds")],t.prototype,"readBandIds",null),(0,r._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,r._)([(0,S.r)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,r._)([(0,u.Cb)({type:Number})],t.prototype,"compressionQuality",void 0),(0,r._)([(0,m.w)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,r._)([(0,u.Cb)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,r._)([(0,m.w)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,r._)([(0,u.Cb)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,r._)([(0,u.Cb)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),(0,r._)([(0,S.r)("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),(0,r._)([(0,u.Cb)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),(0,r._)([(0,u.Cb)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,r._)([(0,u.Cb)()],t.prototype,"rasterInfo",void 0),(0,r._)([(0,u.Cb)({readOnly:!0,type:[M.Z]})],t.prototype,"fields",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"fieldsIndex",null),(0,r._)([(0,u.Cb)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),(0,r._)([(0,S.r)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,r._)([(0,u.Cb)({type:te.Z})],t.prototype,"fullExtent",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,r._)([(0,u.Cb)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,r._)([(0,u.Cb)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,r._)([(0,u.Cb)({type:String,json:{type:j.i.jsonValues,read:j.i.read,write:j.i.write}})],t.prototype,"interpolation",void 0),(0,r._)([(0,u.Cb)()],t.prototype,"minScale",void 0),(0,r._)([(0,S.r)("service","minScale")],t.prototype,"readMinScale",null),(0,r._)([(0,u.Cb)()],t.prototype,"maxScale",void 0),(0,r._)([(0,S.r)("service","maxScale")],t.prototype,"readMaxScale",null),(0,r._)([(0,u.Cb)({type:P.Z})],t.prototype,"mosaicRule",null),(0,r._)([(0,S.r)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,r._)([(0,m.w)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,r._)([(0,u.Cb)()],t.prototype,"multidimensionalInfo",void 0),(0,r._)([(0,u.Cb)({type:V.Z,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,r._)([(0,u.Cb)({json:{type:R.I}})],t.prototype,"noData",void 0),(0,r._)([(0,m.w)("noData")],t.prototype,"writeNoData",null),(0,r._)([(0,u.Cb)({type:String,json:{type:j.n.jsonValues,read:j.n.read,write:j.n.write}})],t.prototype,"noDataInterpretation",void 0),(0,r._)([(0,u.Cb)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,r._)([(0,S.r)("objectIdField")],t.prototype,"readObjectIdField",null),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"geometryType",void 0),(0,r._)([(0,u.Cb)({})],t.prototype,"typeIdField",void 0),(0,r._)([(0,u.Cb)({})],t.prototype,"types",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"parsedUrl",null),(0,r._)([(0,u.Cb)({type:Function})],t.prototype,"pixelFilter",void 0),(0,r._)([(0,u.Cb)()],t.prototype,"raster",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"sourceType",void 0),(0,r._)([(0,S.r)("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),(0,r._)([(0,u.Cb)()],t.prototype,"viewId",void 0),(0,r._)([(0,u.Cb)({types:f.dr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:f.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"renderer",null),(0,r._)([(0,S.r)("renderer")],t.prototype,"readRenderer",null),(0,r._)([(0,m.w)("renderer")],t.prototype,"writeRenderer",null),(0,r._)([(0,u.Cb)({clonable:!1})],t.prototype,"symbolizer",void 0),(0,r._)([(0,u.Cb)(I.g)],t.prototype,"opacity",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"rasterFields",null),(0,r._)([(0,u.Cb)({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,r._)([(0,u.Cb)({type:j.Z})],t.prototype,"renderingRule",null),(0,r._)([(0,u.Cb)({type:j.Z,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),(0,r._)([(0,S.r)("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"serviceDataType",void 0),(0,r._)([(0,u.Cb)({readOnly:!0,type:$.Z})],t.prototype,"spatialReference",void 0),(0,r._)([(0,S.r)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,r._)([(0,u.Cb)({json:{type:j.p.jsonValues}})],t.prototype,"pixelType",void 0),(0,r._)([(0,S.r)("pixelType")],t.prototype,"readPixelType",null),(0,r._)([(0,m.w)("pixelType")],t.prototype,"writePixelType",null),(0,r._)([(0,u.Cb)({constructOnly:!0,type:J.Z})],t.prototype,"serviceRasterInfo",void 0),(0,r._)([(0,u.Cb)()],t.prototype,"sourceJSON",void 0),(0,r._)([(0,u.Cb)(I.u)],t.prototype,"url",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],t.prototype,"version",void 0),(0,r._)([(0,S.r)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,r._)([(0,d.j)("esri.layers.mixins.ArcGISImageService")],t),t};var mi=i(75025),hi=i(80462),yi=i(21471),gi=i(11634),fi=i(39241),bi=i(68219),wi=i(6416),vi=i(82377),_i=i(40944),Ri=i(78893),Si=i(67075);i(21132),i(56420),i(74742),i(28239),i(60111),i(1623),i(50626),i(92624),i(59765),i(77361);let Ci=class extends((0,hi.h)((0,vi.n)((0,wi.M)((0,gi.q)((0,fi.I)(di((0,bi.Q)((0,yi.N)((0,mi.A)((0,a.M)((0,n.J)(h.Z)))))))))))){constructor(...e){super(...e),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=(0,l.Ds)((async(e,t,r)=>{const{save:s,saveAs:n}=await i.e(1641).then(i.bind(i,41641));switch(e){case Si.S.SAVE:return s(this,t);case Si.S.SAVE_AS:return n(this,r,t)}}))}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(l.r9).then((()=>this._fetchService(t)))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,t,i){const r="vector-field"===this.renderer?.type;t[i]=r?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){const t=this.rasterFields,i=this.title,r=new Set;let s=!1,n=!1;this.capabilities&&(s=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const o=new Set;s&&o.add("raster.itempixelvalue");for(const e of t){const t=e.name.toLowerCase();o.has(t)||t.includes("raster.servicepixelvalue.")||r.add(e.name)}n&&r.add("raster.magnitude").add("raster.direction");const a=(0,Ri.eZ)({fields:t,title:i},{...e,visibleFieldNames:r});return a?.fieldInfos&&this.rasterInfo?.pixelType.startsWith("f")&&a.fieldInfos.forEach((({format:e,fieldName:t})=>{e&&/^raster\.(item|service)pixelvalue/i.test(t)&&(e.places=2)})),a}queryFeatures(e,t){return this.queryRasters(e,t).then((e=>{if(e?.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryFeatureCount(e,t){return this.queryRasterCount(e,t)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(Si.S.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(Si.S.SAVE_AS,t,e)}serviceSupportsSpatialReference(e){return(0,_i.s)(this,e)}write(e,t){if(!this._isPreviewLayer)return super.write(e,t);if(t?.messages){const e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new o.Z("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}};(0,r._)([(0,u.Cb)(I.a)],Ci.prototype,"legendEnabled",null),(0,r._)([(0,u.Cb)({type:["show","hide"]})],Ci.prototype,"listMode",null),(0,r._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Ci.prototype,"isReference",void 0),(0,r._)([(0,u.Cb)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Ci.prototype,"operationalLayerType",void 0),(0,r._)([(0,m.w)("web-map","operationalLayerType")],Ci.prototype,"writeOperationalLayerType",null),(0,r._)([(0,u.Cb)(I.p)],Ci.prototype,"popupEnabled",void 0),(0,r._)([(0,u.Cb)({type:s.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Ci.prototype,"popupTemplate",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],Ci.prototype,"defaultPopupTemplate",null),(0,r._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],Ci.prototype,"type",void 0),(0,r._)([(0,u.Cb)({readOnly:!0})],Ci.prototype,"_isPreviewLayer",null),Ci=(0,r._)([(0,d.j)("esri.layers.ImageryLayer")],Ci);const Ii=Ci},1709:(e,t,i)=>{i.d(t,{Z:()=>d});var r=i(60991),s=i(12047),n=i(92143),o=i(91306),a=i(35154),l=i(14249),u=i(76131),p=i(36097);i(76506),i(31450),i(29768),i(21972),i(17533),i(86656),i(66396),i(22723),i(6540),i(34250),i(62062),i(6906),i(50406),i(66284),i(8925),i(57251),i(3482),i(87239),i(82058),i(88762),i(32101),i(73173),i(82426),i(72836),i(66106),i(29794),i(74569),i(21801),i(73796),i(97714),i(60947),i(53785),i(2906),i(91597),i(86787),i(35132),i(84069),i(44567),i(63685),i(89034),i(98380),i(92482),i(92896),i(22781),i(32422);const c=new Map;class d{static fromJSON(e){return new d(e.fields,e.timeZoneByFieldName)}static fromLayer(e){return new d(e.fields??[],g(e))}static fromLayerJSON(e){return new d(e.fields??[],g(e))}constructor(e=[],t){this._fieldsMap=new Map,this._normalizedFieldsMap=new Map,this._dateFieldsSet=new Set,this._numericFieldsSet=new Set,this._requiredFields=null,this.dateFields=[],this.numericFields=[],this.fields=e||[],this._timeZoneByFieldName=t?new Map(t):null;const i=[];for(const e of this.fields){const t=e?.name,r=h(t);if(t&&r){const s=m(t);this._fieldsMap.set(t,e),this._fieldsMap.set(s,e),this._normalizedFieldsMap.set(r,e),i.push(`${s}:${e.type}:${this._timeZoneByFieldName?.get(t)}`),(0,l.y2)(e)?(this.dateFields.push(e),this._dateFieldsSet.add(e)):(0,l.H7)(e)&&(this._numericFieldsSet.add(e),this.numericFields.push(e)),(0,l.Dl)(e)||(0,l.Se)(e)||(e.editable=null==e.editable||!!e.editable,e.nullable=null==e.nullable||!!e.nullable)}}i.sort(),this.uid=i.join()}get requiredFields(){if(!this._requiredFields){this._requiredFields=[];for(const e of this.fields)(0,l.Dl)(e)||(0,l.Se)(e)||e.nullable||void 0!==(0,l.os)(e)||this._requiredFields.push(e)}return this._requiredFields}equals(e){return this.uid===e?.uid}has(e){return null!=this.get(e)}get(e){if(!e)return;let t=this._fieldsMap.get(e);return t||(t=this._fieldsMap.get(m(e))??this._normalizedFieldsMap.get(h(e)),t&&this._fieldsMap.set(e,t),t)}getTimeZone(e){const t=this.get(e&&"string"!=typeof e?e.name:e);return t?this._timeZoneByFieldName?this._timeZoneByFieldName.get(t.name):"date"===t.type||"esriFieldTypeDate"===t.type?(n.L.getLogger("esri.layers.support.FieldsIndex").error(new r.Z("getTimeZone:no-timezone-information",`no time zone information for field '${t.name}'`)),u.u):y.has(t.type)?u.a:null:null}getLuxonTimeZone(e){const t=this.getTimeZone(e);return t?t===u.a?a.U.instance:t===u.u?p.F.utcInstance:(0,o.g)(c,t,(()=>p.I.create(t))):null}isDateField(e){return this._dateFieldsSet.has(this.get(e))}isTimeOnlyField(e){return(0,l.sX)(this.get(e))}isNumericField(e){return this._numericFieldsSet.has(this.get(e))}normalizeFieldName(e){return this.get(e)?.name??void 0}toJSON(){return{fields:this.fields.map((e=>(0,s.AK)(e)?e.toJSON():e)),timeZoneByFieldName:this._timeZoneByFieldName?Array.from(this._timeZoneByFieldName.entries()):null}}}function m(e){return e.trim().toLowerCase()}function h(e){return(0,l.q6)(e)?.toLowerCase()??""}const y=new Set(["time-only","date-only","timestamp-offset","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"]);function g(e){const t=new Map;if(!e.fields)return t;const i=!0===e.datesInUnknownTimezone,{timeInfo:r,editFieldsInfo:s}=e,n=(r?"startField"in r?r.startField:r.startTimeField:"")??"",o=(r?"endField"in r?r.endField:r.endTimeField:"")??"",a="dateFieldsTimeZone"in e?e.dateFieldsTimeZone??null:e.dateFieldsTimeReference?(0,u.f)(e.dateFieldsTimeReference):null,l=s?"timeZone"in s?s.timeZone??a:s.dateFieldsTimeReference?(0,u.f)(s.dateFieldsTimeReference):a??u.u:null,p=r?"timeZone"in r?r.timeZone??a:r.timeReference?(0,u.f)(r.timeReference):a:null,c=new Map([[m(s?.creationDateField??""),l],[m(s?.editDateField??""),l],[m(n),p],[m(o),p]]);for(const{name:r,type:s}of e.fields)if(y.has(s))t.set(r,u.a);else if("date"!==s&&"esriFieldTypeDate"!==s)t.set(r,null);else if(i)t.set(r,u.a);else{const e=c.get(m(r??""))??a;t.set(r,e)}return t}},53426:(e,t,i)=>{i.d(t,{Z:()=>c});var r,s=i(29768),n=i(12047),o=i(34250),a=i(91306),l=(i(76506),i(17533));i(21972),i(92143),i(31450),i(86656),i(66396),i(22723),i(62062),i(6540),i(6906),i(50406),i(60991);const u={1:{id:1,rotation:0,mirrored:!1},2:{id:2,rotation:0,mirrored:!0},3:{id:3,rotation:180,mirrored:!1},4:{id:4,rotation:180,mirrored:!0},5:{id:5,rotation:-90,mirrored:!0},6:{id:6,rotation:90,mirrored:!1},7:{id:7,rotation:90,mirrored:!0},8:{id:8,rotation:-90,mirrored:!1}};let p=r=class extends n.wq{constructor(e){super(e),this.contentType=null,this.exifInfo=null,this.id=null,this.globalId=null,this.keywords=null,this.name=null,this.parentGlobalId=null,this.parentObjectId=null,this.size=null,this.url=null}get orientationInfo(){const{exifInfo:e}=this,t=function(e){const{exifInfo:t,exifName:i,tagName:r}=e;if(!t||!i||!r)return null;const s=t.find((e=>e.name===i));return s?function(e){const{tagName:t,tags:i}=e;if(!i||!t)return null;const r=i.find((e=>e.name===t));return r?.value||null}({tagName:r,tags:s.tags}):null}({exifName:"Exif IFD0",tagName:"Orientation",exifInfo:e});return u[t]||null}clone(){return new r({contentType:this.contentType,exifInfo:this.exifInfo,id:this.id,globalId:this.globalId,keywords:this.keywords,name:this.name,parentGlobalId:this.parentGlobalId,parentObjectId:this.parentObjectId,size:this.size,url:this.url})}};(0,s._)([(0,o.Cb)({type:String})],p.prototype,"contentType",void 0),(0,s._)([(0,o.Cb)()],p.prototype,"exifInfo",void 0),(0,s._)([(0,o.Cb)({readOnly:!0})],p.prototype,"orientationInfo",null),(0,s._)([(0,o.Cb)({type:a.I})],p.prototype,"id",void 0),(0,s._)([(0,o.Cb)({type:String})],p.prototype,"globalId",void 0),(0,s._)([(0,o.Cb)({type:String})],p.prototype,"keywords",void 0),(0,s._)([(0,o.Cb)({type:String})],p.prototype,"name",void 0),(0,s._)([(0,o.Cb)({json:{read:!1}})],p.prototype,"parentGlobalId",void 0),(0,s._)([(0,o.Cb)({json:{read:!1}})],p.prototype,"parentObjectId",void 0),(0,s._)([(0,o.Cb)({type:a.I})],p.prototype,"size",void 0),(0,s._)([(0,o.Cb)({json:{read:!1}})],p.prototype,"url",void 0),p=r=(0,s._)([(0,l.j)("esri.layers.support.AttachmentInfo")],p);const c=p},34446:(e,t,i)=>{i.d(t,{Z:()=>d});var r,s=i(29768),n=i(12047),o=i(76506),a=i(34250),l=i(91306),u=i(17533),p=i(2906);i(21972),i(92143),i(31450),i(86656),i(66396),i(22723),i(62062),i(6540),i(6906),i(50406),i(60991);let c=r=class extends n.wq{constructor(e){super(e),this.attachmentTypes=null,this.attachmentsWhere=null,this.cacheHint=void 0,this.keywords=null,this.globalIds=null,this.name=null,this.num=null,this.objectIds=null,this.returnMetadata=!1,this.size=null,this.start=null,this.where=null}writeStart(e,t){t.resultOffset=this.start,t.resultRecordCount=this.num||10}clone(){return new r((0,o.d9)({attachmentTypes:this.attachmentTypes,attachmentsWhere:this.attachmentsWhere,cacheHint:this.cacheHint,keywords:this.keywords,where:this.where,globalIds:this.globalIds,name:this.name,num:this.num,objectIds:this.objectIds,returnMetadata:this.returnMetadata,size:this.size,start:this.start}))}};(0,s._)([(0,a.Cb)({type:[String],json:{write:!0}})],c.prototype,"attachmentTypes",void 0),(0,s._)([(0,a.Cb)({type:String,json:{read:{source:"attachmentsDefinitionExpression"},write:{target:"attachmentsDefinitionExpression"}}})],c.prototype,"attachmentsWhere",void 0),(0,s._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],c.prototype,"cacheHint",void 0),(0,s._)([(0,a.Cb)({type:[String],json:{write:!0}})],c.prototype,"keywords",void 0),(0,s._)([(0,a.Cb)({type:[Number],json:{write:!0}})],c.prototype,"globalIds",void 0),(0,s._)([(0,a.Cb)({json:{write:!0}})],c.prototype,"name",void 0),(0,s._)([(0,a.Cb)({type:Number,json:{read:{source:"resultRecordCount"}}})],c.prototype,"num",void 0),(0,s._)([(0,a.Cb)({type:[Number],json:{write:!0}})],c.prototype,"objectIds",void 0),(0,s._)([(0,a.Cb)({type:Boolean,json:{default:!1,write:!0}})],c.prototype,"returnMetadata",void 0),(0,s._)([(0,a.Cb)({type:[Number],json:{write:!0}})],c.prototype,"size",void 0),(0,s._)([(0,a.Cb)({type:Number,json:{read:{source:"resultOffset"}}})],c.prototype,"start",void 0),(0,s._)([(0,p.w)("start"),(0,p.w)("num")],c.prototype,"writeStart",null),(0,s._)([(0,a.Cb)({type:String,json:{read:{source:"definitionExpression"},write:{target:"definitionExpression"}}})],c.prototype,"where",void 0),c=r=(0,s._)([(0,u.j)("esri.rest.support.AttachmentQuery")],c),c.from=(0,l.e)(c);const d=c},46646:(e,t,i)=>{i.r(t),i.d(t,{default:()=>h});var r,s=i(29768),n=(i(74569),i(12047)),o=i(76506),a=i(34250),l=i(91306),u=i(17533),p=i(2906),c=i(69218),d=i(60947);i(21801),i(92143),i(31450),i(73796),i(97714),i(21972),i(86656),i(66396),i(22723),i(62062),i(6540),i(6906),i(50406),i(60991),i(53785),i(57251),i(73173),i(82058),i(88762),i(32101),i(91597),i(86787),i(35132),i(84069),i(44567),i(63685),i(89034),i(98380),i(92482),i(82426),i(72836),i(66106),i(29794),i(92896),i(22781),i(32422),i(59465),i(97546),i(9801),i(53523),i(42911),i(46826),i(45433),i(54732);let m=r=class extends n.wq{constructor(e){super(e),this.cacheHint=void 0,this.dynamicDataSource=void 0,this.gdbVersion=null,this.geometryPrecision=void 0,this.historicMoment=null,this.maxAllowableOffset=void 0,this.objectIds=null,this.orderByFields=null,this.outFields=null,this.outSpatialReference=null,this.relationshipId=void 0,this.start=void 0,this.num=void 0,this.returnGeometry=!1,this.returnM=void 0,this.returnZ=void 0,this.where=null}_writeHistoricMoment(e,t){t.historicMoment=e&&e.getTime()}writeStart(e,t){t.resultOffset=this.start,t.resultRecordCount=this.num||10,this.start>0&&null==this.where&&(t.definitionExpression="1=1")}clone(){return new r((0,o.d9)({cacheHint:this.cacheHint,dynamicDataSource:this.dynamicDataSource,gdbVersion:this.gdbVersion,geometryPrecision:this.geometryPrecision,historicMoment:this.historicMoment&&new Date(this.historicMoment.getTime()),maxAllowableOffset:this.maxAllowableOffset,objectIds:this.objectIds,orderByFields:this.orderByFields,outFields:this.outFields,outSpatialReference:this.outSpatialReference,relationshipId:this.relationshipId,start:this.start,num:this.num,returnGeometry:this.returnGeometry,where:this.where,returnZ:this.returnZ,returnM:this.returnM}))}};(0,s._)([(0,a.Cb)({type:Boolean,json:{write:!0}})],m.prototype,"cacheHint",void 0),(0,s._)([(0,a.Cb)({type:c.D,json:{write:!0}})],m.prototype,"dynamicDataSource",void 0),(0,s._)([(0,a.Cb)({type:String,json:{write:!0}})],m.prototype,"gdbVersion",void 0),(0,s._)([(0,a.Cb)({type:Number,json:{write:!0}})],m.prototype,"geometryPrecision",void 0),(0,s._)([(0,a.Cb)({type:Date})],m.prototype,"historicMoment",void 0),(0,s._)([(0,p.w)("historicMoment")],m.prototype,"_writeHistoricMoment",null),(0,s._)([(0,a.Cb)({type:Number,json:{write:!0}})],m.prototype,"maxAllowableOffset",void 0),(0,s._)([(0,a.Cb)({type:[Number],json:{write:!0}})],m.prototype,"objectIds",void 0),(0,s._)([(0,a.Cb)({type:[String],json:{write:!0}})],m.prototype,"orderByFields",void 0),(0,s._)([(0,a.Cb)({type:[String],json:{write:!0}})],m.prototype,"outFields",void 0),(0,s._)([(0,a.Cb)({type:d.Z,json:{read:{source:"outSR"},write:{target:"outSR"}}})],m.prototype,"outSpatialReference",void 0),(0,s._)([(0,a.Cb)({json:{write:!0}})],m.prototype,"relationshipId",void 0),(0,s._)([(0,a.Cb)({type:Number,json:{read:{source:"resultOffset"}}})],m.prototype,"start",void 0),(0,s._)([(0,p.w)("start"),(0,p.w)("num")],m.prototype,"writeStart",null),(0,s._)([(0,a.Cb)({type:Number,json:{read:{source:"resultRecordCount"}}})],m.prototype,"num",void 0),(0,s._)([(0,a.Cb)({json:{write:!0}})],m.prototype,"returnGeometry",void 0),(0,s._)([(0,a.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],m.prototype,"returnM",void 0),(0,s._)([(0,a.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],m.prototype,"returnZ",void 0),(0,s._)([(0,a.Cb)({type:String,json:{read:{source:"definitionExpression"},write:{target:"definitionExpression"}}})],m.prototype,"where",void 0),m=r=(0,s._)([(0,u.j)("esri.rest.support.RelationshipQuery")],m),m.from=(0,l.e)(m);const h=m},39210:(e,t,i)=>{i.d(t,{Z:()=>v});var r,s=i(29768),n=i(74569),o=i(93314),a=i(57251),l=i(12047),u=i(76506),p=i(34250),c=i(91306),d=i(17533),m=i(2906),h=i(32422),y=i(90549),g=i(60947);i(21801),i(92143),i(31450),i(73796),i(97714),i(21972),i(86656),i(66396),i(22723),i(62062),i(6540),i(6906),i(50406),i(60991),i(53785),i(73173),i(82058),i(88762),i(32101),i(91597),i(86787),i(35132),i(84069),i(44567),i(63685),i(89034),i(98380),i(92482),i(82426),i(72836),i(66106),i(29794),i(92896),i(22781),i(35197),i(8925),i(3482),i(76131),i(36097);const f=new a.J({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),b=new a.J({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"});let w=r=class extends l.wq{constructor(e){super(e),this.cacheHint=void 0,this.distance=void 0,this.geometry=null,this.geometryPrecision=void 0,this.maxAllowableOffset=void 0,this.num=void 0,this.objectIds=null,this.orderByFields=null,this.outFields=null,this.outSpatialReference=null,this.resultType=null,this.returnGeometry=!1,this.returnM=void 0,this.returnZ=void 0,this.start=void 0,this.spatialRelationship="intersects",this.timeExtent=null,this.topFilter=void 0,this.units=null,this.where="1=1"}writeStart(e,t){t.resultOffset=this.start,t.resultRecordCount=this.num||10}clone(){return new r((0,u.d9)({cacheHint:this.cacheHint,distance:this.distance,geometry:this.geometry,geometryPrecision:this.geometryPrecision,maxAllowableOffset:this.maxAllowableOffset,num:this.num,objectIds:this.objectIds,orderByFields:this.orderByFields,outFields:this.outFields,outSpatialReference:this.outSpatialReference,resultType:this.resultType,returnGeometry:this.returnGeometry,returnZ:this.returnZ,returnM:this.returnM,start:this.start,spatialRelationship:this.spatialRelationship,timeExtent:this.timeExtent,topFilter:this.topFilter,units:this.units,where:this.where}))}};(0,s._)([(0,p.Cb)({type:Boolean,json:{write:!0}})],w.prototype,"cacheHint",void 0),(0,s._)([(0,p.Cb)({type:Number,json:{write:{overridePolicy:e=>({enabled:e>0})}}})],w.prototype,"distance",void 0),(0,s._)([(0,p.Cb)({types:n.qM,json:{read:h.im,write:!0}})],w.prototype,"geometry",void 0),(0,s._)([(0,p.Cb)({type:Number,json:{write:!0}})],w.prototype,"geometryPrecision",void 0),(0,s._)([(0,p.Cb)({type:Number,json:{write:!0}})],w.prototype,"maxAllowableOffset",void 0),(0,s._)([(0,p.Cb)({type:Number,json:{read:{source:"resultRecordCount"}}})],w.prototype,"num",void 0),(0,s._)([(0,p.Cb)({json:{write:!0}})],w.prototype,"objectIds",void 0),(0,s._)([(0,p.Cb)({type:[String],json:{write:!0}})],w.prototype,"orderByFields",void 0),(0,s._)([(0,p.Cb)({type:[String],json:{write:!0}})],w.prototype,"outFields",void 0),(0,s._)([(0,p.Cb)({type:g.Z,json:{read:{source:"outSR"},write:{target:"outSR"}}})],w.prototype,"outSpatialReference",void 0),(0,s._)([(0,p.Cb)({type:String,json:{write:!0}})],w.prototype,"resultType",void 0),(0,s._)([(0,p.Cb)({json:{write:!0}})],w.prototype,"returnGeometry",void 0),(0,s._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],w.prototype,"returnM",void 0),(0,s._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],w.prototype,"returnZ",void 0),(0,s._)([(0,p.Cb)({type:Number,json:{read:{source:"resultOffset"}}})],w.prototype,"start",void 0),(0,s._)([(0,m.w)("start"),(0,m.w)("num")],w.prototype,"writeStart",null),(0,s._)([(0,p.Cb)({type:String,json:{read:{source:"spatialRel",reader:f.read},write:{target:"spatialRel",writer:f.write}}})],w.prototype,"spatialRelationship",void 0),(0,s._)([(0,p.Cb)({type:o.Z,json:{write:!0}})],w.prototype,"timeExtent",void 0),(0,s._)([(0,p.Cb)({type:y.Z,json:{write:!0}})],w.prototype,"topFilter",void 0),(0,s._)([(0,p.Cb)({type:String,json:{read:b.read,write:{writer:b.write,overridePolicy(e){return{enabled:null!=e&&null!=this.distance&&this.distance>0}}}}})],w.prototype,"units",void 0),(0,s._)([(0,p.Cb)({type:String,json:{write:!0}})],w.prototype,"where",void 0),w=r=(0,s._)([(0,d.j)("esri.rest.support.TopFeaturesQuery")],w),w.from=(0,c.e)(w);const v=w},90549:(e,t,i)=>{i.d(t,{Z:()=>u});var r,s=i(29768),n=i(12047),o=i(34250),a=(i(76506),i(92143),i(17533));i(21972),i(86656),i(66396),i(22723),i(62062),i(6540),i(6906),i(50406),i(60991),i(31450),i(91306);let l=r=class extends n.wq{constructor(e){super(e),this.groupByFields=void 0,this.topCount=void 0,this.orderByFields=void 0}clone(){return new r({groupByFields:this.groupByFields,topCount:this.topCount,orderByFields:this.orderByFields})}};(0,s._)([(0,o.Cb)({type:[String],json:{write:!0}})],l.prototype,"groupByFields",void 0),(0,s._)([(0,o.Cb)({type:Number,json:{write:!0}})],l.prototype,"topCount",void 0),(0,s._)([(0,o.Cb)({type:[String],json:{write:!0}})],l.prototype,"orderByFields",void 0),l=r=(0,s._)([(0,a.j)("esri.rest.support.TopFilter")],l);const u=l}}]);