"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[6458],{24083:(e,a,t)=>{t.d(a,{f:()=>u});var r=t(88762),n=t(82058),s=t(60991),i=t(50406),l=t(21132),c=t(49900),o=t(56420);async function u(e,a){const t=(0,l.p)(e);if(!t)throw new s.Z("invalid-url","Invalid scene service url");const u={...a,sceneServerUrl:t.url.path,layerId:t.sublayer??void 0};if(u.sceneLayerItem??=await async function(e){const a=(await y(e)).serviceItemId;if(!a)return null;const t=new o.default({id:a,apiKey:e.apiKey}),s=await async function(e){const a=r.id?.findServerInfo(e.sceneServerUrl);if(a?.owningSystemUrl)return a.owningSystemUrl;const t=e.sceneServerUrl.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const a=(await(0,n.Z)(t,{query:{f:"json"},responseType:"json",signal:e.signal})).data.owningSystemUrl;if(a)return a}catch(e){(0,i.r9)(e)}return null}(e);null!=s&&(t.portal=new c.Z({url:s}));try{return t.load({signal:e.signal})}catch(e){return(0,i.r9)(e),null}}(u),null==u.sceneLayerItem)return d(u.sceneServerUrl.replace("/SceneServer","/FeatureServer"),u);const m=await async function({sceneLayerItem:e,signal:a}){if(!e)return null;try{const t=(await e.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:a})).find((e=>"Feature Service"===e.type))||null;if(!t)return null;const r=new o.default({portal:t.portal,id:t.id});return await r.load(),r}catch(e){return(0,i.r9)(e),null}}(u);if(!m?.url)throw new s.Z("related-service-not-found","Could not find feature service through portal item relationship");u.featureServiceItem=m;const f=await d(m.url,u);return f.portalItem=m,f}async function y(e){if(e.rootDocument)return e.rootDocument;const a={query:{f:"json",...e.customParameters,token:e.apiKey},responseType:"json",signal:e.signal};try{const t=await(0,n.Z)(e.sceneServerUrl,a);e.rootDocument=t.data}catch{e.rootDocument={}}return e.rootDocument}async function d(e,a){const t=(0,l.p)(e);if(!t)throw new s.Z("invalid-feature-service-url","Invalid feature service url");const r=t.url.path,i=a.layerId;if(null==i)return{serverUrl:r};const c=y(a),o=a.featureServiceItem?await a.featureServiceItem.fetchData("json"):null,u=(o?.layers?.[0]||o?.tables?.[0])?.customParameters,d=e=>{const t={query:{f:"json",...u},responseType:"json",authMode:e,signal:a.signal};return(0,n.Z)(r,t)},m=d("anonymous").catch((()=>d("no-prompt"))),[f,h]=await Promise.all([m,c]),w=h?.layers,p=f.data&&f.data.layers;if(!Array.isArray(p))throw new Error("expected layers array");if(Array.isArray(w)){for(let e=0;e<Math.min(w.length,p.length);e++)if(w[e].id===i)return{serverUrl:r,layerId:p[e].id}}else if(null!=i&&i<p.length)return{serverUrl:r,layerId:p[i].id};throw new Error("could not find matching associated sublayer")}},67902:(e,a,t)=>{t.d(a,{l:()=>r});const r={BingMapsLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(7963)]).then(t.bind(t,37963))).default,BuildingSceneLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(2570),t.e(7035),t.e(1577),t.e(8532),t.e(7284),t.e(9143),t.e(9506),t.e(4245),t.e(5437),t.e(6598),t.e(7551),t.e(3439)]).then(t.bind(t,3439))).default,CatalogLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(1577),t.e(8532),t.e(7284),t.e(9214),t.e(708),t.e(1348),t.e(1779)]).then(t.bind(t,5061))).default,CSVLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(2570),t.e(7035),t.e(1577),t.e(8532),t.e(7284),t.e(9143),t.e(9506),t.e(3965)]).then(t.bind(t,44004))).default,DimensionLayer:async()=>(await Promise.all([t.e(1259),t.e(210)]).then(t.bind(t,90210))).default,ElevationLayer:async()=>(await Promise.all([t.e(1259),t.e(208),t.e(2204)]).then(t.bind(t,72204))).default,FeatureLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(2570),t.e(7035),t.e(1577),t.e(8532),t.e(7284),t.e(9143),t.e(9506),t.e(1741)]).then(t.bind(t,9506))).default,GeoJSONLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(2570),t.e(7035),t.e(1577),t.e(1192)]).then(t.bind(t,99039))).default,GeoRSSLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(6467),t.e(3797),t.e(2197)]).then(t.bind(t,92197))).default,GroupLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(9061)]).then(t.bind(t,59061))).default,ImageryLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(1292),t.e(9214),t.e(3864),t.e(2972),t.e(5688)]).then(t.bind(t,777))).default,ImageryTileLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(3864),t.e(2972),t.e(9023),t.e(2552)]).then(t.bind(t,32552)).then((e=>e.I))).default,IntegratedMeshLayer:async()=>(await Promise.all([t.e(1259),t.e(5437),t.e(156)]).then(t.bind(t,60156))).default,KMLLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(3296),t.e(1932),t.e(3365)]).then(t.bind(t,21903))).default,LineOfSightLayer:async()=>(await Promise.all([t.e(1259),t.e(5839)]).then(t.bind(t,25839))).default,LinkChartLayer:async()=>(await Promise.all([t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(2570),t.e(7035),t.e(2274),t.e(3580),t.e(1392)]).then(t.bind(t,1392))).default,MapImageLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(8532),t.e(9214),t.e(708),t.e(7263),t.e(605)]).then(t.bind(t,60605))).default,MapNotesLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(2570),t.e(7035),t.e(1577),t.e(8532),t.e(7284),t.e(9143),t.e(9506),t.e(2692)]).then(t.bind(t,41135))).default,MediaLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(2090)]).then(t.bind(t,22090))).default,OGCFeatureLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(2570),t.e(7035),t.e(1577),t.e(4351),t.e(3958)]).then(t.bind(t,63958))).default,OpenStreetMapLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(3799),t.e(6043)]).then(t.bind(t,16043))).default,OrientedImageryLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(2570),t.e(7035),t.e(1577),t.e(8532),t.e(7284),t.e(9143),t.e(9506),t.e(4379)]).then(t.bind(t,4064)).then((e=>e.O))).default,PointCloudLayer:async()=>(await Promise.all([t.e(1259),t.e(1074),t.e(5437),t.e(5032)]).then(t.bind(t,25032))).default,RouteLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(3296),t.e(1932),t.e(8654)]).then(t.bind(t,63435))).default,SceneLayer:async()=>(await Promise.all([t.e(1259),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(2570),t.e(4245),t.e(5437),t.e(4017),t.e(6598),t.e(260),t.e(7551),t.e(4580)]).then(t.bind(t,84580))).default,StreamLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(2570),t.e(7035),t.e(1577),t.e(3065)]).then(t.bind(t,58324))).default,SubtypeGroupLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(8532),t.e(7284),t.e(9143),t.e(9014),t.e(1605)]).then(t.bind(t,79014))).default,TileLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(8532),t.e(9214),t.e(708),t.e(208),t.e(7263),t.e(611)]).then(t.bind(t,90611))).default,IntegratedMesh3DTilesLayer:async()=>(await Promise.all([t.e(1259),t.e(3466)]).then(t.bind(t,63466))).default,UnknownLayer:async()=>(await t.e(3117).then(t.bind(t,63117))).default,UnsupportedLayer:async()=>(await t.e(8243).then(t.bind(t,88243))).default,VectorTileLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(9860),t.e(208),t.e(9878),t.e(3933)]).then(t.bind(t,83933))).default,VoxelLayer:async()=>(await Promise.all([t.e(1259),t.e(1074),t.e(5437),t.e(8528)]).then(t.bind(t,18528))).default,WFSLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(7512),t.e(9860),t.e(1292),t.e(3296),t.e(1932),t.e(1622),t.e(2570),t.e(7035),t.e(1577),t.e(4344),t.e(8783)]).then(t.bind(t,44797))).default,WMSLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(1074),t.e(6467),t.e(3797),t.e(3561)]).then(t.bind(t,73561))).default,WMTSLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(3799),t.e(2790)]).then(t.bind(t,82790))).default,WebTileLayer:async()=>(await Promise.all([t.e(1259),t.e(4350),t.e(3799)]).then(t.bind(t,3799)).then((e=>e.a))).default}},36458:(e,a,t)=>{t.r(a),t.d(a,{L:()=>u,a:()=>w,b:()=>p,c:()=>L,d:()=>S,e:()=>h,f:()=>y,g:()=>f,h:()=>m,i:()=>P,p:()=>d,s:()=>b});var r=t(60991),n=t(24083),s=t(51698),i=t(39855),l=t(67902),c=t(56420),o=t(60111);class u{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(e,a){const t=this._serviceMetadatas.get(e);if(t)return t;const r=await(0,s.f)(e,a);return this._serviceMetadatas.set(e,r),r}async fetchItemData(e){const{id:a}=e;if(!a)return null;const{_itemDatas:t}=this;if(t.has(a))return t.get(a);const r=await e.fetchData();return t.set(a,r),r}async fetchCustomParameters(e,a){const t=await this.fetchItemData(e);return t&&"object"==typeof t&&(a?a(t):t.customParameters)||null}}function y(e){const a={id:e.id,name:e.name};return"Oriented Imagery Layer"===e.type&&(a.layerType="OrientedImageryLayer"),a}async function d(e,a,t){if(null==e?.layers||null==e?.tables){const r=await t.fetchServiceMetadata(a,{customParameters:f(e)?.customParameters});(e=e||{}).layers=e.layers||r?.layers?.map(y),e.tables=e.tables||r?.tables?.map(y)}return e}function m(e){const{layers:a,tables:t}=e;return a?.length?a[0].id:t?.length?t[0].id:null}function f(e){if(!e)return null;const{layers:a,tables:t}=e;return a?.length?a[0]:t?.length?t[0]:null}function h(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function w(e){const a=[];return e?.layers?.forEach((e=>{"SubtypeGroupLayer"===e.layerType&&a.push(e.id)})),a}function p(e){return e?.layers?.filter((({layerType:e})=>"OrientedImageryLayer"===e)).map((({id:e})=>e))}function L(e){return e?.layers?.filter((({layerType:e})=>"CatalogLayer"===e)).map((({id:e})=>e))}async function S(e,a,t){if(!e?.url)return a??{};if(a??={},!a.layers){const r=await t.fetchServiceMetadata(e.url);a.layers=r.layers?.map(y)}const{serverUrl:r,portalItem:s}=await(0,n.f)(e.url,{sceneLayerItem:e,customParameters:f(a)?.customParameters}).catch((()=>({serverUrl:null,portalItem:null})));if(null==r)return a.tables=[],a;if(!a.tables&&s){const e=await s.fetchData();if(e?.tables)a.tables=e.tables.map(y);else{const n=await t.fetchServiceMetadata(r,{customParameters:f(e)?.customParameters});a.tables=n?.tables?.map(y)}}if(a.tables)for(const e of a.tables)e.url=`${r}/${e.id}`;return a}async function b(e,a){switch(e.type){case"Map Service":return async function(e,a){const t=await async function(e,a){const{tileInfo:t}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return t}(e,a);return t?{className:"TileLayer"}:{className:"MapImageLayer"}}(e,a);case"Feature Service":return async function(e,a){const t=await v(e,a);if("object"==typeof t){const{sourceJSON:e,className:a}=t,r={sourceJSON:e};return null!=t.id&&(r.layerId=t.id),{className:a||"FeatureLayer",properties:r}}return{className:"GroupLayer"}}(e,a);case"Feature Collection":return async function(e){await e.load();const a=(0,o.h)(e,"Map Notes"),t=(0,o.h)(e,"Markup");return a||t?{className:"MapNotesLayer"}:(0,o.h)(e,"Route Layer")?{className:"RouteLayer"}:1===h(await e.fetchData())?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Scene Service":return async function(e,a){const t=await v(e,a,(async()=>{try{if(!e.url)return[];const{serverUrl:t}=await(0,n.f)(e.url,{sceneLayerItem:e}),r=await a.fetchServiceMetadata(t);return r?.tables??[]}catch{return[]}}));if("object"==typeof t){const r={};let n;if(null!=t.id?(r.layerId=t.id,n=`${e.url}/layers/${t.id}`):n=e.url,e.typeKeywords?.length)for(const a of Object.keys(i.s))if(e.typeKeywords.includes(a))return{className:i.s[a]};const s=await a.fetchServiceMetadata(n,{customParameters:await a.fetchCustomParameters(e,(e=>f(e)?.customParameters))});return{className:i.s[s?.layerType]||"SceneLayer",properties:r}}if(!1===t){const t=await a.fetchServiceMetadata(e.url);if("Voxel"===t?.layerType)return{className:"VoxelLayer"}}return{className:"GroupLayer"}}(e,a);case"3DTiles Service":return{className:"IntegratedMesh3DTilesLayer"};case"Image Service":return async function(e,a){await e.load();const t=e.typeKeywords?.map((e=>e.toLowerCase()))??[];if(t.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(t.includes("tiled imagery"))return{className:"ImageryTileLayer"};const r=await a.fetchItemData(e),n=r?.layerType;if("ArcGISTiledImageServiceLayer"===n)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===n)return{className:"ImageryLayer"};const s=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),i=s.cacheType?.toLowerCase(),l=s.capabilities?.toLowerCase().includes("tilesonly");return"map"===i||l?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e,a);case"Stream Service":case"Feed":return{className:"StreamLayer"};case"Vector Tile Service":return{className:"VectorTileLayer"};case"GeoJson":return{className:"GeoJSONLayer"};case"CSV":return{className:"CSVLayer"};case"KML":return{className:"KMLLayer"};case"WFS":return{className:"WFSLayer"};case"WMTS":return{className:"WMTSLayer"};case"WMS":return{className:"WMSLayer"};case"Group Layer":return{className:"GroupLayer"};default:throw new r.Z("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function v(e,a,t){const{url:r,type:n}=e,s="Feature Service"===n;if(!r)return{};if(/\/\d+$/.test(r)){if(s){const t=await a.fetchServiceMetadata(r,{customParameters:await a.fetchCustomParameters(e,(e=>f(e)?.customParameters))});if("Oriented Imagery Layer"===t.type)return{id:t.id,className:"OrientedImageryLayer",sourceJSON:t}}return{}}await e.load();let i=await a.fetchItemData(e);if(s){const e=await d(i,r,a),t=I(e);if("object"==typeof t){const a=w(e),r=p(e),n=L(e);t.className=null!=t.id&&a.includes(t.id)?"SubtypeGroupLayer":null!=t.id&&r?.includes(t.id)?"OrientedImageryLayer":null!=t.id&&n?.includes(t.id)?"CatalogLayer":"FeatureLayer"}return t}if("Scene Service"===n&&(i=await S(e,i,a)),h(i)>0)return I(i);const l=await a.fetchServiceMetadata(r);return t&&(l.tables=await t()),I(l)}function I(e){return 1===h(e)&&{id:m(e)}}const P=Object.freeze(Object.defineProperty({__proto__:null,fromItem:async function(e){!e.portalItem||e.portalItem instanceof c.default||(e={...e,portalItem:new c.default(e.portalItem)});const a=await async function(e){await e.load();const a=new u;return async function(e){const a=e.className,t=l.l[a];return{constructor:await t(),properties:e.properties}}(await b(e,a))}(e.portalItem);return new(0,a.constructor)({portalItem:e.portalItem,...a.properties})},selectLayerClassPath:b},Symbol.toStringTag,{value:"Module"}))},51698:(e,a,t)=>{t.d(a,{f:()=>n});var r=t(82058);async function n(e,a){const{data:t}=await(0,r.Z)(e,{responseType:"json",query:{f:"json",...a?.customParameters,token:a?.apiKey}});return t}}}]);