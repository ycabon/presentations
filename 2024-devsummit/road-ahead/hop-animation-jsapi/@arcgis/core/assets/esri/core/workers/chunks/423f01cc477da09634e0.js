"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[1950],{85674:(e,t,r)=>{r.d(t,{O:()=>s,h:()=>o});class s{constructor(e=null,t={},r,s){this.geometry=e,this.attributes=t,this.centroid=r,this.objectId=s,this.displayId=0,this.geohashX=0,this.geohashY=0}weakClone(){const e=new s(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e.geohashX=this.geohashX,e.geohashY=this.geohashY,e}clone(){const e=this.geometry?.clone(),t=new s(e,{...this.attributes},this.centroid?.clone(),this.objectId);return t.displayId=this.displayId,t.geohashX=this.geohashX,t.geohashY=this.geohashY,t}}function o(e){return!!e.geometry?.coords?.length}},9006:(e,t,r)=>{r.d(t,{O:()=>s});class s{constructor(){this.objectIdFieldName=null,this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const e=new s;return e.objectIdFieldName=this.objectIdFieldName,e.globalIdFieldName=this.globalIdFieldName,e.geohashFieldName=this.geohashFieldName,e.geometryProperties=this.geometryProperties,e.geometryType=this.geometryType,e.spatialReference=this.spatialReference,e.hasZ=this.hasZ,e.hasM=this.hasM,e.features=this.features,e.fields=this.fields,e.transform=this.transform,e.exceededTransferLimit=this.exceededTransferLimit,e.uniqueIdField=this.uniqueIdField,e.queryGeometry=this.queryGeometry,e.queryGeometryType=this.queryGeometryType,e}}},81703:(e,t,r)=>{r.r(t),r.d(t,{createConnection:()=>C});var s,o,n=r(29768),i=(r(74569),r(82058)),a=r(60991),c=r(92143),l=r(50406),h=r(32101),u=(r(76506),r(17533)),d=r(34250),g=r(92847),f=r(85660),y=r(49214),m=r(31292),p=r(32422),_=r(60947);r(91306),r(21801),r(73796),r(12047),r(21972),r(86656),r(66396),r(22723),r(62062),r(6540),r(6906),r(97714),r(31450),r(53785),r(57251),r(73173),r(88762),r(2906),r(91597),r(86787),r(35132),r(84069),r(44567),r(63685),r(89034),r(98380),r(92482),r(82426),r(72836),r(66106),r(29794),r(92896),r(22781),r(75067),r(95533),r(94751),r(95307),r(20438),r(22572),r(76733),r(11385),r(55823),r(93314),r(35197),r(8925),r(3482),r(76131),r(36097),r(59465),r(69218),r(97546),r(9801),r(53523),r(42911),r(46826),r(45433),r(54732),r(32925),r(66122),r(12158),r(27207),(o=s||(s={}))[o.CONNECTING=0]="CONNECTING",o[o.OPEN=1]="OPEN",o[o.CLOSING=2]="CLOSING",o[o.CLOSED=3]="CLOSED";let w=class extends f.Z{constructor(e){super({}),this._outstandingMessages=[],this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:s}=e;this._config=e,this._featureZScaler=(0,g.g)(t,s,r),this._open()}normalizeCtorArgs(){return{}}async _open(){await this._tryCreateWebSocket(),this.destroyed||await this._handshake()}destroy(){super.destroy(),null!=this._websocket&&(this._websocket.onopen=null,this._websocket.onclose=null,this._websocket.onerror=null,this._websocket.onmessage=null,this._websocket.close()),this._websocket=null}get connectionStatus(){if(null==this._websocket)return"disconnected";switch(this._websocket.readyState){case s.CONNECTING:case s.OPEN:return"connected";case s.CLOSING:case s.CLOSED:return"disconnected"}}sendMessageToSocket(e){null!=this._websocket?this._websocket.send(JSON.stringify(e)):this._outstandingMessages.push(e)}sendMessageToClient(e){this._onMessage(e)}updateCustomParameters(e){this._config.customParameters=e,null!=this._websocket&&this._websocket.close()}async _tryCreateWebSocket(e=this._config.source.path,t=1e3,r=0){try{if(this.destroyed)return;const t=(0,h.fl)(e,this._config.customParameters??{});this._websocket=await this._createWebSocket(t),this.notifyChange("connectionStatus")}catch(s){const o=t/1e3;return this._config.maxReconnectionAttempts&&r>=this._config.maxReconnectionAttempts?(c.L.getLogger(this).error(new a.Z("websocket-connection","Exceeded maxReconnectionAttempts attempts. No further attempts will be made")),void this.destroy()):(c.L.getLogger(this).error(new a.Z("websocket-connection",`Failed to connect. Attempting to reconnect in ${o}s`,s)),await(0,l.e4)(t),this._tryCreateWebSocket(e,Math.min(1.5*t,1e3*this._config.maxReconnectionInterval),r+1))}}_setWebSocketJSONParseHandler(e){e.onmessage=e=>{try{const t=JSON.parse(e.data);this._onMessage(t)}catch(e){return void c.L.getLogger(this).error(new a.Z("websocket-connection","Failed to parse message, invalid JSON",{error:e}))}}}_createWebSocket(e){return new Promise(((t,r)=>{const s=new WebSocket(e);s.onopen=()=>{if(s.onopen=null,this.destroyed)return s.onclose=null,void s.close();s.onclose=e=>this._onClose(e),s.onerror=e=>this._onError(e),this._setWebSocketJSONParseHandler(s),t(s)},s.onclose=e=>{s.onopen=s.onclose=null,r(e)}}))}async _handshake(e=1e4){const t=this._websocket;if(null==t)return;const r=(0,l.hh)(),s=t.onmessage,{filter:o,outFields:n,spatialReference:i}=this._config;return r.timeout(e),t.onmessage=e=>{let l=null;try{l=JSON.parse(e.data)}catch(e){}l&&"object"==typeof l||(c.L.getLogger(this).error(new a.Z("websocket-connection","Protocol violation. Handshake failed - malformed message",e.data)),r.reject(),this.destroy()),l.spatialReference?.wkid!==i?.wkid&&(c.L.getLogger(this).error(new a.Z("websocket-connection",`Protocol violation. Handshake failed - expected wkid of ${i.wkid}`,e.data)),r.reject(),this.destroy()),"json"!==l.format&&(c.L.getLogger(this).error(new a.Z("websocket-connection","Protocol violation. Handshake failed - format is not set",e.data)),r.reject(),this.destroy()),o&&l.filter!==o&&c.L.getLogger(this).error(new a.Z("websocket-connection","Tried to set filter, but server doesn't support it")),n&&l.outFields!==n&&c.L.getLogger(this).error(new a.Z("websocket-connection","Tried to set outFields, but server doesn't support it")),t.onmessage=s;for(const e of this._outstandingMessages)t.send(JSON.stringify(e));this._outstandingMessages=[],r.resolve()},t.send(JSON.stringify({filter:o,outFields:n,format:"json",spatialReference:{wkid:i.wkid}})),r.promise}_onMessage(e){if(this.onMessage(e),"type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)null!=this._featureZScaler&&this._featureZScaler(t.geometry),this.onFeature(t)}}_onError(e){const t="Encountered an error over WebSocket connection";this._set("errorString",t),c.L.getLogger(this).error("websocket-connection",t)}_onClose(e){this._websocket=null,this.notifyChange("connectionStatus"),1e3!==e.code&&c.L.getLogger(this).error("websocket-connection",`WebSocket closed unexpectedly with error code ${e.code}`),this.destroyed||this._open()}};(0,n._)([(0,d.Cb)()],w.prototype,"connectionStatus",null),(0,n._)([(0,d.Cb)()],w.prototype,"errorString",void 0),w=(0,n._)([(0,u.j)("esri.layers.graphics.sources.connections.WebSocketConnection")],w);const b={maxQueryDepth:5,maxRecordCountFactor:3};let S=class extends w{constructor(e){super({...b,...e}),this._buddyServicesQuery=null,this._relatedFeatures=null}async _open(){const e=await this._fetchServiceDefinition(this._config.source);e.timeInfo.trackIdField||c.L.getLogger(this).warn("GeoEvent service was configured without a TrackIdField. This may result in certain functionality being disabled. The purgeOptions.maxObservations property will have no effect.");const t=this._fetchWebSocketUrl(e.streamUrls,this._config.spatialReference);this._buddyServicesQuery||(this._buddyServicesQuery=this._queryBuddyServices()),await this._buddyServicesQuery,await this._tryCreateWebSocket(t);const{filter:r,outFields:s}=this._config;this.destroyed||this._setFilter(r,s)}_onMessage(e){if("attributes"in e){let t;try{t=this._enrich(e),null!=this._featureZScaler&&this._featureZScaler(t.geometry)}catch(e){return void c.L.getLogger(this).error(new a.Z("geoevent-connection","Failed to parse message",e))}this.onFeature(t)}else this.onMessage(e)}async _fetchServiceDefinition(e){const t={f:"json",...this._config.customParameters},r=(0,i.Z)(e.path,{query:t,responseType:"json"}),s=(await r).data;return this._serviceDefinition=s,s}_fetchWebSocketUrl(e,t){const r=e[0],{urls:s,token:o}=r,n=this._inferWebSocketBaseUrl(s);return(0,h.fl)(`${n}/subscribe`,{outSR:""+t.wkid,token:o})}_inferWebSocketBaseUrl(e){if(1===e.length)return e[0];for(const t of e)if(t.includes("wss"))return t;return c.L.getLogger(this).error(new a.Z("geoevent-connection","Unable to infer WebSocket url",e)),null}async _setFilter(e,t){const r=this._websocket;if(null==r||null==e&&null==t)return;const s=JSON.stringify({filter:this._serializeFilter(e,t)});let o=!1;const n=(0,l.hh)();return r.onmessage=e=>{const t=JSON.parse(e.data);t.filter&&(t.error&&(c.L.getLogger(this).error(new a.Z("geoevent-connection","Failed to set service filter",t.error)),this._set("errorString",`Could not set service filter - ${t.error}`),n.reject(t.error)),this._setWebSocketJSONParseHandler(r),o=!0,n.resolve())},r.send(s),setTimeout((()=>{o||(this.destroyed||this._websocket!==r||c.L.getLogger(this).error(new a.Z("geoevent-connection","Server timed out when setting filter")),n.reject())}),1e4),n.promise}_serializeFilter(e,t){const r={};if(null==e&&null==t)return r;if(e?.geometry)try{const t=(0,p.im)(e.geometry);if("extent"!==t.type)throw new a.Z(`Expected extent but found type ${t.type}`);r.geometry=JSON.stringify(t.shiftCentralMeridian())}catch(e){c.L.getLogger(this).error(new a.Z("geoevent-connection","Encountered an error when setting connection geometryDefinition",e))}return e?.where&&"1 = 1"!==e.where&&"1=1"!==e.where&&(r.where=e.where),null!=t&&(r.outFields=t.join(",")),r}_enrich(e){if(!this._relatedFeatures)return e;const t=this._serviceDefinition.relatedFeatures.joinField,r=e.attributes[t],s=this._relatedFeatures.get(r);if(!s)return c.L.getLogger(this).warn("geoevent-connection","Feature join failed. Is the join field configured correctly?",e),e;const{attributes:o,geometry:n}=s;for(const t in o)e.attributes[t]=o[t];return n&&(e.geometry=n),e.geometry||e.centroid||c.L.getLogger(this).error(new a.Z("geoevent-connection","Found malformed feature - no geometry found",e)),e}async _queryBuddyServices(){try{const{relatedFeatures:e,keepLatestArchive:t}=this._serviceDefinition,r=this._queryRelatedFeatures(e),s=this._queryArchive(t);await r;const o=await s;if(!o)return;for(const e of o.features)this.onFeature(this._enrich(e))}catch(e){c.L.getLogger(this).error(new a.Z("geoevent-connection","Encountered an error when querying buddy services",{error:e}))}}async _queryRelatedFeatures(e){if(!e)return;const t=await this._queryBuddy(e.featuresUrl);this._addRelatedFeatures(t)}async _queryArchive(e){if(e)return this._queryBuddy(e.featuresUrl)}async _queryBuddy(e){const t=new((await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(7512),r.e(1932),r.e(1622),r.e(2570),r.e(7035),r.e(1577),r.e(8532),r.e(7284),r.e(9143),r.e(9506),r.e(7113)]).then(r.bind(r,9506))).default)({url:e}),{capabilities:s}=await t.load(),o=s.query.supportsMaxRecordCountFactor,n=s.query.supportsPagination,i=s.query.supportsCentroid,a=this._config.maxRecordCountFactor,c=t.capabilities.query.maxRecordCount,l=o?c*a:c,h=new m.Z;if(h.outFields=this._config.outFields??["*"],h.where=this._config.filter?.where??"1=1",h.returnGeometry=!0,h.returnExceededLimitFeatures=!0,h.outSpatialReference=_.Z.fromJSON(this._config.spatialReference),i&&(h.returnCentroid=!0),o&&(h.maxRecordCountFactor=a),n)return h.num=l,t.destroy(),this._queryPages(e,h);const u=await(0,y.e)(e,h,this._config.sourceSpatialReference);return t.destroy(),u.data}async _queryPages(e,t,r=[],s=0){t.start=null!=t.num?s*t.num:null;const{data:o}=await(0,y.e)(e,t,this._config.sourceSpatialReference);return o.exceededTransferLimit&&s<(this._config.maxQueryDepth??0)?(o.features.forEach((e=>r.push(e))),this._queryPages(e,t,r,s+1)):(r.forEach((e=>o.features.push(e))),o)}_addRelatedFeatures(e){const t=new Map,r=e.features,s=this._serviceDefinition.relatedFeatures.joinField;for(const e of r){const r=e.attributes[s];t.set(r,e)}this._relatedFeatures=t}};S=(0,n._)([(0,u.j)("esri.layers.graphics.sources.connections.GeoEventConnection")],S);const k=S;let v=class extends f.Z{constructor(e){super({}),this.connectionStatus="connected",this.errorString=null;const{geometryType:t,spatialReference:r,sourceSpatialReference:s}=e;this._featureZScaler=(0,g.g)(t,s,r)}normalizeCtorArgs(){return{}}updateCustomParameters(e){}sendMessageToSocket(e){}sendMessageToClient(e){if("type"in e)switch(e.type){case"features":case"featureResult":for(const t of e.features)null!=this._featureZScaler&&this._featureZScaler(t.geometry),this.onFeature(t)}this.onMessage(e)}};function F(e,t){if(null==e&&null==t)return null;const r={};return null!=t&&(r.geometry=t),null!=e&&(r.where=e),r}function C(e,t,r,s,o,n,i,a,c){const l={source:e,sourceSpatialReference:t,spatialReference:r,geometryType:s,filter:F(o,n),maxReconnectionAttempts:i,maxReconnectionInterval:a,customParameters:c};return e?e.path.startsWith("wss://")||e.path.startsWith("ws://")?new w(l):new k(l):new v(l)}(0,n._)([(0,d.Cb)()],v.prototype,"connectionStatus",void 0),(0,n._)([(0,d.Cb)()],v.prototype,"errorString",void 0),v=(0,n._)([(0,u.j)("esri.layers.support.ClientSideConnection")],v)},55823:(e,t,r)=>{r.d(t,{a:()=>o});var s=r(92847);function o(e,t,r){if(!r?.features||!r.hasZ)return;const o=(0,s.g)(r.geometryType,t,e.outSpatialReference);if(null!=o)for(const e of r.features)o(e.geometry)}},85660:(e,t,r)=>{r.d(t,{Z:()=>l});var s=r(29768),o=r(60991),n=r(75067),i=r(34250),a=(r(76506),r(92143),r(17533));r(31450),r(21972),r(86656),r(66396),r(22723),r(62062),r(6540),r(6906),r(50406),r(91306);let c=class extends n.Z.EventedAccessor{destroy(){this.emit("destroy")}get connectionError(){return this.errorString?new o.Z("stream-connection",this.errorString):null}onFeature(e){this.emit("data-received",e)}onMessage(e){this.emit("message-received",e)}};(0,s._)([(0,i.Cb)({readOnly:!0})],c.prototype,"connectionError",null),c=(0,s._)([(0,a.j)("esri.layers.support.StreamConnection")],c);const l=c}}]);