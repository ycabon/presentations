"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[2176,6458],{24083:(e,a,r)=>{r.d(a,{f:()=>o});var t=r(88762),n=r(82058),i=r(60991),s=r(50406),l=r(21132),c=r(49900),y=r(56420);async function o(e,a){const r=(0,l.p)(e);if(!r)throw new i.Z("invalid-url","Invalid scene service url");const o={...a,sceneServerUrl:r.url.path,layerId:r.sublayer??void 0};if(o.sceneLayerItem??=await async function(e){const a=(await u(e)).serviceItemId;if(!a)return null;const r=new y.default({id:a,apiKey:e.apiKey}),i=await async function(e){const a=t.id?.findServerInfo(e.sceneServerUrl);if(a?.owningSystemUrl)return a.owningSystemUrl;const r=e.sceneServerUrl.replace(/(.*\/rest)\/.*/i,"$1")+"/info";try{const a=(await(0,n.Z)(r,{query:{f:"json"},responseType:"json",signal:e.signal})).data.owningSystemUrl;if(a)return a}catch(e){(0,s.r9)(e)}return null}(e);null!=i&&(r.portal=new c.Z({url:i}));try{return r.load({signal:e.signal})}catch(e){return(0,s.r9)(e),null}}(o),null==o.sceneLayerItem)return d(o.sceneServerUrl.replace("/SceneServer","/FeatureServer"),o);const L=await async function({sceneLayerItem:e,signal:a}){if(!e)return null;try{const r=(await e.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:a})).find((e=>"Feature Service"===e.type))||null;if(!r)return null;const t=new y.default({portal:r.portal,id:r.id});return await t.load(),t}catch(e){return(0,s.r9)(e),null}}(o);if(!L?.url)throw new i.Z("related-service-not-found","Could not find feature service through portal item relationship");o.featureServiceItem=L;const m=await d(L.url,o);return m.portalItem=L,m}async function u(e){if(e.rootDocument)return e.rootDocument;const a={query:{f:"json",...e.customParameters,token:e.apiKey},responseType:"json",signal:e.signal};try{const r=await(0,n.Z)(e.sceneServerUrl,a);e.rootDocument=r.data}catch{e.rootDocument={}}return e.rootDocument}async function d(e,a){const r=(0,l.p)(e);if(!r)throw new i.Z("invalid-feature-service-url","Invalid feature service url");const t=r.url.path,s=a.layerId;if(null==s)return{serverUrl:t};const c=u(a),y=a.featureServiceItem?await a.featureServiceItem.fetchData("json"):null,o=(y?.layers?.[0]||y?.tables?.[0])?.customParameters,d=e=>{const r={query:{f:"json",...o},responseType:"json",authMode:e,signal:a.signal};return(0,n.Z)(t,r)},L=d("anonymous").catch((()=>d("no-prompt"))),[m,f]=await Promise.all([L,c]),p=f?.layers,S=m.data&&m.data.layers;if(!Array.isArray(S))throw new Error("expected layers array");if(Array.isArray(p)){for(let e=0;e<Math.min(p.length,S.length);e++)if(p[e].id===s)return{serverUrl:t,layerId:S[e].id}}else if(null!=s&&s<S.length)return{serverUrl:t,layerId:S[s].id};throw new Error("could not find matching associated sublayer")}},92176:(e,a,r)=>{r.d(a,{k:()=>b,populateOperationalLayers:()=>y});var t=r(15324),n=(r(76506),r(36458)),i=r(67902),s=r(56420),l=r(68714);function c(e,a){return!(!e.layerType||"ArcGISFeatureLayer"!==e.layerType)&&e.featureCollectionType===a}async function y(e,a,r){if(!a)return;const t=a.map((e=>async function(e,a){const r=await async function(e,a){const r=a.context,t=function(e){let a;switch(e.origin){case"web-scene":switch(e.layerContainerType){case"basemap":a=L;break;case"ground":a=u;break;case"tables":a=d;break;default:a=o}break;case"link-chart":switch(e.layerContainerType){case"basemap":a=h;break;case"tables":a=w;break;default:a=S}break;default:switch(e.layerContainerType){case"basemap":a=p;break;case"tables":a=f;break;default:a=m}}return a}(r);let l=e.layerType||e.type;!l&&a?.defaultLayerType&&(l=a.defaultLayerType);const y=t[l];let b=y?i.l[y]:i.l.UnknownLayer;if(g(e)){const a=r?.portal;if(e.itemId){const r=new s.default({id:e.itemId,portal:a});await r.load();const t=(await(0,n.s)(r,new n.L)).className||"UnknownLayer";b=i.l[t]}}else"ArcGISFeatureLayer"===l?function(e){return c(e,"notes")}(e)||function(e){return c(e,"markup")}(e)?b=i.l.MapNotesLayer:function(e){return c(e,"route")}(e)?b=i.l.RouteLayer:I(e)&&(b=i.l.GroupLayer):e.wmtsInfo?.url&&e.wmtsInfo.layerIdentifier?b=i.l.WMTSLayer:"WFS"===l&&"2.0.0"!==e.wfsInfo?.version&&(b=i.l.UnsupportedLayer);return b()}(e,a);return async function(e,a,r){const t=new e;return t.read(a,r.context),"group"===t.type&&("GroupLayer"===a.layerType?await b(t,a,r):g(a)?function(e,a,r){a.itemId&&(e.portalItem=new s.default({id:a.itemId,portal:r?.portal}),e.when((()=>{const t=t=>{const n=t.layerId;v(t,e,a,n,r);const i=a.featureCollection?.layers?.[n];i&&t.read(i,r)};e.layers?.forEach(t),e.tables?.forEach(t)})))}(t,a,r.context):I(a)&&await async function(e,a,r){const t=i.l.FeatureLayer,n=await t(),s=a.featureCollection,l=s?.showLegend,c=s?.layers?.map(((t,i)=>{const s=new n;s.read(t,r);const c={...r,ignoreDefaults:!0};return v(s,e,a,i,c),null!=l&&s.read({showLegend:l},c),s}));e.layers.addMany(c??[])}(t,a,r.context)),await(0,l.l)(t,r.context),t}(r,e,a)}(e,r))),y=await Promise.allSettled(t);for(const a of y)"rejected"===a.status||a.value&&e.add(a.value)}r(29768),r(21972),r(92143),r(31450),r(17533),r(86656),r(66396),r(22723),r(6540),r(91306),r(60991),r(34250),r(62062),r(6906),r(50406),r(75067),r(89914),r(24083),r(88762),r(32101),r(12047),r(82058),r(21132),r(38742),r(49900),r(81184),r(33101),r(97714),r(21801),r(73796),r(60947),r(53785),r(57251),r(73173),r(2906),r(91597),r(86787),r(35132),r(3482),r(58943),r(67477),r(78533),r(74653),r(91091),r(51698),r(39855),r(60111),r(1623),r(66106),r(84069),r(44567),r(63685),r(89034),r(98380),r(92482),r(82426),r(72836),r(29794),r(92896),r(50626),r(92624),r(92847),r(74742),r(28239),r(41864);const o={ArcGISDimensionLayer:"DimensionLayer",ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",PointCloudLayer:"PointCloudLayer",ArcGISSceneServiceLayer:"SceneLayer",IntegratedMeshLayer:"IntegratedMeshLayer",OGCFeatureLayer:"OGCFeatureLayer",BuildingSceneLayer:"BuildingSceneLayer",ArcGISTiledElevationServiceLayer:"ElevationLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",GroupLayer:"GroupLayer",GeoJSON:"GeoJSONLayer",WebTiledLayer:"WebTileLayer",CSV:"CSVLayer",VectorTileLayer:"VectorTileLayer",WFS:"WFSLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer",IntegratedMesh3DTilesLayer:"IntegratedMesh3DTilesLayer",KML:"KMLLayer",RasterDataLayer:"UnsupportedLayer",Voxel:"VoxelLayer",LineOfSightLayer:"LineOfSightLayer"},u={ArcGISTiledElevationServiceLayer:"ElevationLayer",DefaultTileLayer:"ElevationLayer",RasterDataElevationLayer:"UnsupportedLayer"},d={ArcGISFeatureLayer:"FeatureLayer"},L={ArcGISTiledMapServiceLayer:"TileLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",OpenStreetMap:"OpenStreetMapLayer",WebTiledLayer:"WebTileLayer",VectorTileLayer:"VectorTileLayer",ArcGISImageServiceLayer:"UnsupportedLayer",WMS:"UnsupportedLayer",ArcGISMapServiceLayer:"UnsupportedLayer",ArcGISSceneServiceLayer:"SceneLayer",DefaultTileLayer:"TileLayer"},m={ArcGISAnnotationLayer:"UnsupportedLayer",ArcGISDimensionLayer:"UnsupportedLayer",ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISStreamLayer:"StreamLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",CatalogLayer:"CatalogLayer",CSV:"CSVLayer",DefaultTileLayer:"TileLayer",GeoRSS:"GeoRSSLayer",GeoJSON:"GeoJSONLayer",GroupLayer:"GroupLayer",KML:"KMLLayer",KnowledgeGraphLayer:"UnsupportedLayer",MediaLayer:"MediaLayer",OGCFeatureLayer:"OGCFeatureLayer",OrientedImageryLayer:"OrientedImageryLayer",SubtypeGroupLayer:"SubtypeGroupLayer",VectorTileLayer:"VectorTileLayer",WFS:"WFSLayer",WMS:"WMSLayer",WebTiledLayer:"WebTileLayer"},f={ArcGISFeatureLayer:"FeatureLayer"},p={ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",OpenStreetMap:"OpenStreetMapLayer",VectorTileLayer:"VectorTileLayer",WebTiledLayer:"WebTileLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer"},S={...m,LinkChartLayer:"LinkChartLayer"},w={...f},h={...p};function I(e){return"ArcGISFeatureLayer"===e.layerType&&!g(e)&&(e.featureCollection?.layers?.length??0)>1}function g(e){return"Feature Collection"===e.type}async function b(e,a,r){const n=new t.Z,i=y(n,Array.isArray(a.layers)?a.layers:[],r);try{try{if(await i,"group"===e.type)return e.layers.addMany(n),e}catch(a){e.destroy();for(const e of n)e.destroy();throw a}}catch(e){throw e}}function v(e,a,r,t,n){e.read({id:`${a.id}-sublayer-${t}`,visibility:r.visibleLayers?.includes(t)??!0},n)}},67902:(e,a,r)=>{r.d(a,{l:()=>t});const t={BingMapsLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(7963)]).then(r.bind(r,37963))).default,BuildingSceneLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(2570),r.e(7035),r.e(1577),r.e(8532),r.e(7284),r.e(9143),r.e(9506),r.e(4245),r.e(5437),r.e(6598),r.e(7551),r.e(3439)]).then(r.bind(r,3439))).default,CatalogLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(1577),r.e(8532),r.e(7284),r.e(9214),r.e(708),r.e(1348),r.e(1779)]).then(r.bind(r,5061))).default,CSVLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(2570),r.e(7035),r.e(1577),r.e(8532),r.e(7284),r.e(9143),r.e(9506),r.e(3965)]).then(r.bind(r,44004))).default,DimensionLayer:async()=>(await Promise.all([r.e(1259),r.e(210)]).then(r.bind(r,90210))).default,ElevationLayer:async()=>(await Promise.all([r.e(1259),r.e(208),r.e(2204)]).then(r.bind(r,72204))).default,FeatureLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(2570),r.e(7035),r.e(1577),r.e(8532),r.e(7284),r.e(9143),r.e(9506),r.e(1741)]).then(r.bind(r,9506))).default,GeoJSONLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(2570),r.e(7035),r.e(1577),r.e(1192)]).then(r.bind(r,99039))).default,GeoRSSLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(6467),r.e(3797),r.e(2197)]).then(r.bind(r,92197))).default,GroupLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(9061)]).then(r.bind(r,59061))).default,ImageryLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(1292),r.e(9214),r.e(3864),r.e(2972),r.e(5688)]).then(r.bind(r,777))).default,ImageryTileLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(3864),r.e(2972),r.e(9023),r.e(2552)]).then(r.bind(r,32552)).then((e=>e.I))).default,IntegratedMeshLayer:async()=>(await Promise.all([r.e(1259),r.e(5437),r.e(156)]).then(r.bind(r,60156))).default,KMLLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(3296),r.e(1932),r.e(3365)]).then(r.bind(r,21903))).default,LineOfSightLayer:async()=>(await Promise.all([r.e(1259),r.e(5839)]).then(r.bind(r,25839))).default,LinkChartLayer:async()=>(await Promise.all([r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(2570),r.e(7035),r.e(2274),r.e(3580),r.e(1392)]).then(r.bind(r,1392))).default,MapImageLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(8532),r.e(9214),r.e(708),r.e(7263),r.e(605)]).then(r.bind(r,60605))).default,MapNotesLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(2570),r.e(7035),r.e(1577),r.e(8532),r.e(7284),r.e(9143),r.e(9506),r.e(2692)]).then(r.bind(r,41135))).default,MediaLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(2090)]).then(r.bind(r,22090))).default,OGCFeatureLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(2570),r.e(7035),r.e(1577),r.e(4351),r.e(3958)]).then(r.bind(r,63958))).default,OpenStreetMapLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(3799),r.e(6043)]).then(r.bind(r,16043))).default,OrientedImageryLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(2570),r.e(7035),r.e(1577),r.e(8532),r.e(7284),r.e(9143),r.e(9506),r.e(4379)]).then(r.bind(r,4064)).then((e=>e.O))).default,PointCloudLayer:async()=>(await Promise.all([r.e(1259),r.e(1074),r.e(5437),r.e(5032)]).then(r.bind(r,25032))).default,RouteLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(3296),r.e(1932),r.e(8654)]).then(r.bind(r,63435))).default,SceneLayer:async()=>(await Promise.all([r.e(1259),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(2570),r.e(4245),r.e(5437),r.e(4017),r.e(6598),r.e(260),r.e(7551),r.e(4580)]).then(r.bind(r,84580))).default,StreamLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(2570),r.e(7035),r.e(1577),r.e(3065)]).then(r.bind(r,58324))).default,SubtypeGroupLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(8532),r.e(7284),r.e(9143),r.e(9014),r.e(1605)]).then(r.bind(r,79014))).default,TileLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(8532),r.e(9214),r.e(708),r.e(208),r.e(7263),r.e(611)]).then(r.bind(r,90611))).default,IntegratedMesh3DTilesLayer:async()=>(await Promise.all([r.e(1259),r.e(3466)]).then(r.bind(r,63466))).default,UnknownLayer:async()=>(await r.e(3117).then(r.bind(r,63117))).default,UnsupportedLayer:async()=>(await r.e(8243).then(r.bind(r,88243))).default,VectorTileLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(9860),r.e(208),r.e(9878),r.e(3933)]).then(r.bind(r,83933))).default,VoxelLayer:async()=>(await Promise.all([r.e(1259),r.e(1074),r.e(5437),r.e(8528)]).then(r.bind(r,18528))).default,WFSLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(7512),r.e(9860),r.e(1292),r.e(3296),r.e(1932),r.e(1622),r.e(2570),r.e(7035),r.e(1577),r.e(4344),r.e(8783)]).then(r.bind(r,44797))).default,WMSLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(1074),r.e(6467),r.e(3797),r.e(3561)]).then(r.bind(r,73561))).default,WMTSLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(3799),r.e(2790)]).then(r.bind(r,82790))).default,WebTileLayer:async()=>(await Promise.all([r.e(1259),r.e(4350),r.e(3799)]).then(r.bind(r,3799)).then((e=>e.a))).default}},36458:(e,a,r)=>{r.r(a),r.d(a,{L:()=>o,a:()=>p,b:()=>S,c:()=>w,d:()=>h,e:()=>f,f:()=>u,g:()=>m,h:()=>L,i:()=>v,p:()=>d,s:()=>I});var t=r(60991),n=r(24083),i=r(51698),s=r(39855),l=r(67902),c=r(56420),y=r(60111);class o{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(e,a){const r=this._serviceMetadatas.get(e);if(r)return r;const t=await(0,i.f)(e,a);return this._serviceMetadatas.set(e,t),t}async fetchItemData(e){const{id:a}=e;if(!a)return null;const{_itemDatas:r}=this;if(r.has(a))return r.get(a);const t=await e.fetchData();return r.set(a,t),t}async fetchCustomParameters(e,a){const r=await this.fetchItemData(e);return r&&"object"==typeof r&&(a?a(r):r.customParameters)||null}}function u(e){const a={id:e.id,name:e.name};return"Oriented Imagery Layer"===e.type&&(a.layerType="OrientedImageryLayer"),a}async function d(e,a,r){if(null==e?.layers||null==e?.tables){const t=await r.fetchServiceMetadata(a,{customParameters:m(e)?.customParameters});(e=e||{}).layers=e.layers||t?.layers?.map(u),e.tables=e.tables||t?.tables?.map(u)}return e}function L(e){const{layers:a,tables:r}=e;return a?.length?a[0].id:r?.length?r[0].id:null}function m(e){if(!e)return null;const{layers:a,tables:r}=e;return a?.length?a[0]:r?.length?r[0]:null}function f(e){return(e?.layers?.length??0)+(e?.tables?.length??0)}function p(e){const a=[];return e?.layers?.forEach((e=>{"SubtypeGroupLayer"===e.layerType&&a.push(e.id)})),a}function S(e){return e?.layers?.filter((({layerType:e})=>"OrientedImageryLayer"===e)).map((({id:e})=>e))}function w(e){return e?.layers?.filter((({layerType:e})=>"CatalogLayer"===e)).map((({id:e})=>e))}async function h(e,a,r){if(!e?.url)return a??{};if(a??={},!a.layers){const t=await r.fetchServiceMetadata(e.url);a.layers=t.layers?.map(u)}const{serverUrl:t,portalItem:i}=await(0,n.f)(e.url,{sceneLayerItem:e,customParameters:m(a)?.customParameters}).catch((()=>({serverUrl:null,portalItem:null})));if(null==t)return a.tables=[],a;if(!a.tables&&i){const e=await i.fetchData();if(e?.tables)a.tables=e.tables.map(u);else{const n=await r.fetchServiceMetadata(t,{customParameters:m(e)?.customParameters});a.tables=n?.tables?.map(u)}}if(a.tables)for(const e of a.tables)e.url=`${t}/${e.id}`;return a}async function I(e,a){switch(e.type){case"Map Service":return async function(e,a){const r=await async function(e,a){const{tileInfo:r}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return r}(e,a);return r?{className:"TileLayer"}:{className:"MapImageLayer"}}(e,a);case"Feature Service":return async function(e,a){const r=await g(e,a);if("object"==typeof r){const{sourceJSON:e,className:a}=r,t={sourceJSON:e};return null!=r.id&&(t.layerId=r.id),{className:a||"FeatureLayer",properties:t}}return{className:"GroupLayer"}}(e,a);case"Feature Collection":return async function(e){await e.load();const a=(0,y.h)(e,"Map Notes"),r=(0,y.h)(e,"Markup");return a||r?{className:"MapNotesLayer"}:(0,y.h)(e,"Route Layer")?{className:"RouteLayer"}:1===f(await e.fetchData())?{className:"FeatureLayer"}:{className:"GroupLayer"}}(e);case"Scene Service":return async function(e,a){const r=await g(e,a,(async()=>{try{if(!e.url)return[];const{serverUrl:r}=await(0,n.f)(e.url,{sceneLayerItem:e}),t=await a.fetchServiceMetadata(r);return t?.tables??[]}catch{return[]}}));if("object"==typeof r){const t={};let n;if(null!=r.id?(t.layerId=r.id,n=`${e.url}/layers/${r.id}`):n=e.url,e.typeKeywords?.length)for(const a of Object.keys(s.s))if(e.typeKeywords.includes(a))return{className:s.s[a]};const i=await a.fetchServiceMetadata(n,{customParameters:await a.fetchCustomParameters(e,(e=>m(e)?.customParameters))});return{className:s.s[i?.layerType]||"SceneLayer",properties:t}}if(!1===r){const r=await a.fetchServiceMetadata(e.url);if("Voxel"===r?.layerType)return{className:"VoxelLayer"}}return{className:"GroupLayer"}}(e,a);case"3DTiles Service":return{className:"IntegratedMesh3DTilesLayer"};case"Image Service":return async function(e,a){await e.load();const r=e.typeKeywords?.map((e=>e.toLowerCase()))??[];if(r.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(r.includes("tiled imagery"))return{className:"ImageryTileLayer"};const t=await a.fetchItemData(e),n=t?.layerType;if("ArcGISTiledImageServiceLayer"===n)return{className:"ImageryTileLayer"};if("ArcGISImageServiceLayer"===n)return{className:"ImageryLayer"};const i=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),s=i.cacheType?.toLowerCase(),l=i.capabilities?.toLowerCase().includes("tilesonly");return"map"===s||l?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}(e,a);case"Stream Service":case"Feed":return{className:"StreamLayer"};case"Vector Tile Service":return{className:"VectorTileLayer"};case"GeoJson":return{className:"GeoJSONLayer"};case"CSV":return{className:"CSVLayer"};case"KML":return{className:"KMLLayer"};case"WFS":return{className:"WFSLayer"};case"WMTS":return{className:"WMTSLayer"};case"WMS":return{className:"WMSLayer"};case"Group Layer":return{className:"GroupLayer"};default:throw new t.Z("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function g(e,a,r){const{url:t,type:n}=e,i="Feature Service"===n;if(!t)return{};if(/\/\d+$/.test(t)){if(i){const r=await a.fetchServiceMetadata(t,{customParameters:await a.fetchCustomParameters(e,(e=>m(e)?.customParameters))});if("Oriented Imagery Layer"===r.type)return{id:r.id,className:"OrientedImageryLayer",sourceJSON:r}}return{}}await e.load();let s=await a.fetchItemData(e);if(i){const e=await d(s,t,a),r=b(e);if("object"==typeof r){const a=p(e),t=S(e),n=w(e);r.className=null!=r.id&&a.includes(r.id)?"SubtypeGroupLayer":null!=r.id&&t?.includes(r.id)?"OrientedImageryLayer":null!=r.id&&n?.includes(r.id)?"CatalogLayer":"FeatureLayer"}return r}if("Scene Service"===n&&(s=await h(e,s,a)),f(s)>0)return b(s);const l=await a.fetchServiceMetadata(t);return r&&(l.tables=await r()),b(l)}function b(e){return 1===f(e)&&{id:L(e)}}const v=Object.freeze(Object.defineProperty({__proto__:null,fromItem:async function(e){!e.portalItem||e.portalItem instanceof c.default||(e={...e,portalItem:new c.default(e.portalItem)});const a=await async function(e){await e.load();const a=new o;return async function(e){const a=e.className,r=l.l[a];return{constructor:await r(),properties:e.properties}}(await I(e,a))}(e.portalItem);return new(0,a.constructor)({portalItem:e.portalItem,...a.properties})},selectLayerClassPath:I},Symbol.toStringTag,{value:"Module"}))},51698:(e,a,r)=>{r.d(a,{f:()=>n});var t=r(82058);async function n(e,a){const{data:r}=await(0,t.Z)(e,{responseType:"json",query:{f:"json",...a?.customParameters,token:a?.apiKey}});return r}},68714:(e,a,r)=>{r.d(a,{l:()=>s});var t=r(41864),n=r(50406),i=r(17533);async function s(e,a,r){const s=e&&e.getAtOrigin&&e.getAtOrigin("renderer",a.origin);if(s&&"unique-value"===s.type&&s.styleOrigin){const l=await(0,t.r)(s.populateFromStyle());if((0,n.k_)(r),!1===l.ok){const r=l.error;a?.messages&&a.messages.push(new i.W("renderer:style-reference",`Failed to create unique value renderer from style reference: ${r.message}`,{error:r,context:a})),e.clear("renderer",a?.origin)}}}}}]);