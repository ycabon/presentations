"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[7113,8283,3250],{21132:(e,t,r)=>{r.d(t,{a:()=>p,b:()=>y,d:()=>f,e:()=>g,f:()=>v,i:()=>m,p:()=>c,s:()=>h,t:()=>d,w:()=>w});var o=r(32101),n=r(38742);const i={mapserver:"MapServer",imageserver:"ImageServer",featureserver:"FeatureServer",sceneserver:"SceneServer",streamserver:"StreamServer",vectortileserver:"VectorTileServer","3dtilesserver":"3DTilesServer"},s=Object.values(i),l=new RegExp(`^((?:https?:)?\\/\\/\\S+?\\/rest\\/services\\/(.+?)\\/(${s.join("|")}))(?:\\/(?:layers\\/)?(\\d+))?`,"i"),a=new RegExp(`^((?:https?:)?\\/\\/\\S+?\\/([^\\/\\n]+)\\/(${s.join("|")}))(?:\\/(?:layers\\/)?(\\d+))?`,"i"),u=/(.*?)\/(?:layers\/)?(\d+)\/?$/i;function p(e){return!!l.test(e)}function c(e){if(null==e)return null;const t=(0,o.mN)(e),r=t?.path.match(l)||t?.path.match(a);if(!r)return null;const[,n,s,u,p]=r,c=s.indexOf("/");return{title:f(-1!==c?s.slice(c+1):s),serverType:i[u.toLowerCase()],sublayer:null!=p&&""!==p?parseInt(p,10):null,url:{path:n}}}function y(e){const t=(0,o.mN)(e).path.match(u);return t?{serviceUrl:t[1],sublayerId:Number(t[2])}:null}function f(e){return(e=e.replaceAll(/\s*[/_]+\s*/g," "))[0].toUpperCase()+e.slice(1)}function d(e,t){const r=[];if(e){const t=c(e);null!=t&&t.title&&r.push(t.title)}if(t){const e=f(t);r.push(e)}if(2===r.length){if(r[0].toLowerCase().includes(r[1].toLowerCase()))return r[0];if(r[1].toLowerCase().includes(r[0].toLowerCase()))return r[1]}return r.join(" - ")}function m(e){if(!e)return!1;const t=(e=e.toLowerCase()).includes(".arcgis.com/"),r=e.includes("//services")||e.includes("//tiles")||e.includes("//features");return t&&r}function h(e,t){return e?(0,o.Qj)((0,o.Hu)(e,t)):e}function g(e){let{url:t}=e;if(!t)return{url:t};t=(0,o.Hu)(t,e.logger);const r=(0,o.mN)(t),n=c(r.path);let i;if(null!=n)null!=n.sublayer&&null==e.layer.layerId&&(i=n.sublayer),t=n.url.path;else if(e.nonStandardUrlAllowed){const e=y(r.path);null!=e&&(t=e.serviceUrl,i=e.sublayerId)}return{url:(0,o.Qj)(t),layerId:i}}function w(e,t,r,i,s){(0,n.w)(t,i,"url",s),i.url&&null!=e.layerId&&(i.url=(0,o.v_)(i.url,r,e.layerId.toString()))}function v(e){if(!e)return!1;const t=e.toLowerCase(),r=t.includes("/services/"),o=t.includes("/mapserver/wmsserver"),n=t.includes("/imageserver/wmsserver"),i=t.includes("/wmsserver");return r&&(o||n||i)}},60111:(e,t,r)=>{r.d(t,{a:()=>p,b:()=>s,g:()=>y,h:()=>l,i:()=>a,r:()=>u,t:()=>c});var o=r(1623),n=r(60947),i=r(35132);function s(e,t){if(!l(e,t)){const r=e.typeKeywords;r?r.push(t):e.typeKeywords=[t]}}function l(e,t){return!!e.typeKeywords?.includes(t)}function a(e){return l(e,c.HOSTED_SERVICE)}function u(e,t){const r=e.typeKeywords;if(r){const e=r.indexOf(t);e>-1&&r.splice(e,1)}}async function p(e){const t=e.clone().normalize();let r;if(t.length>1)for(const e of t)r?e.width>r.width&&(r=e):r=e;else r=t[0];return async function(e){const t=e.spatialReference;if(t.isWGS84)return e.clone();if(t.isWebMercator)return(0,i.Sx)(e);const r=n.Z.WGS84;return await(0,o.initializeProjection)(t,r),(0,o.project)(e,r)}(r)}const c={DEVELOPER_BASEMAP:"DeveloperBasemap",JSAPI:"ArcGIS API for JavaScript",METADATA:"Metadata",MULTI_LAYER:"Multilayer",SINGLE_LAYER:"Singlelayer",TABLE:"Table",HOSTED_SERVICE:"Hosted Service",LOCAL_SCENE:"ViewingMode-Local",TILED_IMAGERY:"Tiled Imagery",GROUP_LAYER_MAP:"Map"};function y(e){const{portal:t,isOrgItem:r,itemControl:o}=e,n=t.user?.privileges;let i=!n||n.includes("features:user:edit"),s=!!r&&!!n?.includes("features:user:fullEdit");const l="update"===o||"admin"===o;return l?s=i=!0:s&&(i=!0),{features:{edit:i,fullEdit:s},content:{updateItem:l}}}},46495:(e,t,r)=>{r.d(t,{Z:()=>c});var o=r(29768),n=r(66122),i=r(57251),s=r(12047),l=r(34250),a=(r(76506),r(92143),r(17533));r(21972),r(86656),r(66396),r(22723),r(62062),r(6540),r(6906),r(50406),r(60991),r(31450),r(91306);const u=new i.J({esriFeatureEditToolAutoCompletePolygon:"auto-complete-polygon",esriFeatureEditToolCircle:"circle",esriFeatureEditToolEllipse:"ellipse",esriFeatureEditToolFreehand:"freehand",esriFeatureEditToolLine:"line",esriFeatureEditToolNone:"none",esriFeatureEditToolPoint:"point",esriFeatureEditToolPolygon:"polygon",esriFeatureEditToolRectangle:"rectangle",esriFeatureEditToolArrow:"arrow",esriFeatureEditToolTriangle:"triangle",esriFeatureEditToolLeftArrow:"left-arrow",esriFeatureEditToolRightArrow:"right-arrow",esriFeatureEditToolUpArrow:"up-arrow",esriFeatureEditToolDownArrow:"down-arrow"});let p=class extends((0,n.J)(s.wq)){constructor(e){super(e),this.name=null,this.description=null,this.drawingTool=null,this.prototype=null,this.thumbnail=null}};(0,o._)([(0,l.Cb)({json:{write:!0}})],p.prototype,"name",void 0),(0,o._)([(0,l.Cb)({json:{write:!0}})],p.prototype,"description",void 0),(0,o._)([(0,l.Cb)({json:{read:u.read,write:u.write}})],p.prototype,"drawingTool",void 0),(0,o._)([(0,l.Cb)({json:{write:!0}})],p.prototype,"prototype",void 0),(0,o._)([(0,l.Cb)({json:{write:!0}})],p.prototype,"thumbnail",void 0),p=(0,o._)([(0,a.j)("esri.layers.support.FeatureTemplate")],p);const c=p},78303:(e,t,r)=>{r.d(t,{Z:()=>f});var o=r(29768),n=r(66122),i=r(12047),s=r(34250),l=(r(76506),r(92143),r(97714)),a=r(17533),u=r(2906),p=r(9801),c=r(46495);r(21972),r(86656),r(66396),r(22723),r(62062),r(6540),r(6906),r(50406),r(60991),r(31450),r(91306),r(53523),r(59465),r(57251),r(42911),r(46826),r(45433);let y=class extends((0,n.J)(i.wq)){constructor(e){super(e),this.id=null,this.name=null,this.domains=null,this.templates=null}readDomains(e){const t={};for(const r of Object.keys(e))t[r]=(0,p.f)(e[r]);return t}writeDomains(e,t){const r={};for(const t of Object.keys(e))e[t]&&(r[t]=e[t]?.toJSON());t.domains=r}};(0,o._)([(0,s.Cb)({json:{write:!0}})],y.prototype,"id",void 0),(0,o._)([(0,s.Cb)({json:{write:!0}})],y.prototype,"name",void 0),(0,o._)([(0,s.Cb)({json:{write:!0}})],y.prototype,"domains",void 0),(0,o._)([(0,l.r)("domains")],y.prototype,"readDomains",null),(0,o._)([(0,u.w)("domains")],y.prototype,"writeDomains",null),(0,o._)([(0,s.Cb)({type:[c.Z],json:{write:!0}})],y.prototype,"templates",void 0),y=(0,o._)([(0,a.j)("esri.layers.support.FeatureType")],y);const f=y},87258:(e,t,r)=>{r.d(t,{Z:()=>v});var o,n=r(29768),i=r(74569),s=r(23761),l=r(57251),a=r(12047),u=r(76506),p=r(34250),c=(r(92143),r(97714)),y=r(17533),f=r(2906),d=r(60947),m=r(32422),h=r(97546);r(91306),r(21801),r(73796),r(21972),r(86656),r(66396),r(22723),r(62062),r(6540),r(6906),r(50406),r(60991),r(31450),r(53785),r(73173),r(82058),r(88762),r(32101),r(91597),r(86787),r(35132),r(84069),r(44567),r(63685),r(89034),r(98380),r(92482),r(82426),r(72836),r(66106),r(29794),r(92896),r(22781),r(86748),r(66122),r(15324),r(75067),r(89914),r(14249),r(66284),r(8925),r(3482),r(76131),r(36097),r(87239),r(29107),r(30574),r(2157),r(25977),r(58076),r(98242),r(7471),r(54414),r(59465),r(1648),r(45154),r(16769),r(93603),r(15438),r(593),r(48027),r(54174),r(85699),r(55531),r(96055),r(47776),r(18033),r(6331),r(62048),r(56890),r(30493),r(4292),r(75626),r(72652),r(29641),r(70821),r(3296),r(34229),r(37029),r(96467),r(63571),r(30776),r(63130),r(25696),r(94216),r(42775),r(95834),r(34394),r(57150),r(76726),r(20444),r(76393),r(78548),r(2497),r(49906),r(46527),r(11799),r(48649),r(81731),r(9960),r(30823),r(53326),r(5853),r(39141),r(38742),r(48243),r(34635),r(10401),r(49900),r(81184),r(33101),r(58943),r(67477),r(78533),r(74653),r(91091),r(70737),r(36834),r(8487),r(17817),r(90814),r(15459),r(97189),r(61847),r(28212),r(16955),r(22401),r(48699),r(77894),r(55187),r(8586),r(44509),r(69814),r(11305),r(62259),r(44790),r(58085),r(41864),r(5909),r(60669),r(48208),r(51589),r(9801),r(53523),r(42911),r(46826),r(45433),r(54732);const g=new l.J({esriGeometryPoint:"point",esriGeometryMultipoint:"multipoint",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"extent",mesh:"mesh","":null});let w=o=class extends a.wq{constructor(e){super(e),this.displayFieldName=null,this.exceededTransferLimit=!1,this.features=[],this.fields=null,this.geometryType=null,this.hasM=!1,this.hasZ=!1,this.queryGeometry=null,this.spatialReference=null}readFeatures(e,t){const r=d.Z.fromJSON(t.spatialReference),o=[];for(let t=0;t<e.length;t++){const n=e[t],i=s.Z.fromJSON(n),l=n.geometry?.spatialReference;null==i.geometry||l||(i.geometry.spatialReference=r);const a=n.aggregateGeometries,u=i.aggregateGeometries;if(a&&null!=u)for(const e in u){const t=u[e],o=a[e],n=o?.spatialReference;null==t||n||(t.spatialReference=r)}o.push(i)}return o}writeGeometryType(e,t,r,o){if(e)return void g.write(e,t,r,o);const{features:n}=this;if(n)for(const e of n)if(null!=e?.geometry)return void g.write(e.geometry.type,t,r,o)}readQueryGeometry(e,t){if(!e)return null;const r=!!e.spatialReference,o=(0,m.im)(e);return o&&!r&&t.spatialReference&&(o.spatialReference=d.Z.fromJSON(t.spatialReference)),o}writeSpatialReference(e,t){if(e)return void(t.spatialReference=e.toJSON());const{features:r}=this;if(r)for(const e of r)if(e&&null!=e.geometry&&e.geometry.spatialReference)return void(t.spatialReference=e.geometry.spatialReference.toJSON())}clone(){return new o(this.cloneProperties())}cloneProperties(){return(0,u.d9)({displayFieldName:this.displayFieldName,exceededTransferLimit:this.exceededTransferLimit,features:this.features,fields:this.fields,geometryType:this.geometryType,hasM:this.hasM,hasZ:this.hasZ,queryGeometry:this.queryGeometry,spatialReference:this.spatialReference,transform:this.transform})}toJSON(e){const t=this.write();if(t.features&&Array.isArray(e)&&e.length>0)for(let r=0;r<t.features.length;r++){const o=t.features[r];if(o.geometry){const t=e?.[r];o.geometry=t?.toJSON()||o.geometry}}return t}quantize(e){const{scale:[t,r],translate:[o,n]}=e,i=this.features,s=this._getQuantizationFunction(this.geometryType,(e=>Math.round((e-o)/t)),(e=>Math.round((n-e)/r)));for(let e=0,t=i.length;e<t;e++)s?.(i[e].geometry)||(i.splice(e,1),e--,t--);return this.transform=e,this}unquantize(){const{geometryType:e,features:t,transform:r}=this;if(!r)return this;const{translate:[o,n],scale:[i,s]}=r;let l=null,a=null;if(this.hasZ&&null!=r?.scale?.[2]){const{translate:[,,e],scale:[,,t]}=r;l=r=>r*t+e}if(this.hasM&&null!=r?.scale?.[3]){const{translate:[,,,e],scale:[,,,t]}=r;a=r=>null==r?r:r*t+e}const u=this._getHydrationFunction(e,(e=>e*i+o),(e=>n-e*s),l,a);for(const{geometry:e}of t)null!=e&&u&&u(e);return this.transform=null,this}_quantizePoints(e,t,r){let o,n;const i=[];for(let s=0,l=e.length;s<l;s++){const l=e[s];if(s>0){const e=t(l[0]),s=r(l[1]);e===o&&s===n||(i.push([e-o,s-n]),o=e,n=s)}else o=t(l[0]),n=r(l[1]),i.push([o,n])}return i.length>0?i:null}_getQuantizationFunction(e,t,r){return"point"===e?e=>(e.x=t(e.x),e.y=r(e.y),e):"polyline"===e||"polygon"===e?e=>{const o=(0,m.oU)(e)?e.rings:e.paths,n=[];for(let e=0,i=o.length;e<i;e++){const i=o[e],s=this._quantizePoints(i,t,r);s&&n.push(s)}return n.length>0?((0,m.oU)(e)?e.rings=n:e.paths=n,e):null}:"multipoint"===e?e=>{const o=this._quantizePoints(e.points,t,r);return o&&o.length>0?(e.points=o,e):null}:"extent"===e?e=>e:null}_getHydrationFunction(e,t,r,o,n){return"point"===e?e=>{e.x=t(e.x),e.y=r(e.y),o&&(e.z=o(e.z))}:"polyline"===e||"polygon"===e?e=>{const i=(0,m.oU)(e)?e.rings:e.paths;let s,l;for(let e=0,o=i.length;e<o;e++){const o=i[e];for(let e=0,n=o.length;e<n;e++){const n=o[e];e>0?(s+=n[0],l+=n[1]):(s=n[0],l=n[1]),n[0]=t(s),n[1]=r(l)}}if(o&&n)for(let e=0,t=i.length;e<t;e++){const t=i[e];for(let e=0,r=t.length;e<r;e++){const r=t[e];r[2]=o(r[2]),r[3]=n(r[3])}}else if(o)for(let e=0,t=i.length;e<t;e++){const t=i[e];for(let e=0,r=t.length;e<r;e++){const r=t[e];r[2]=o(r[2])}}else if(n)for(let e=0,t=i.length;e<t;e++){const t=i[e];for(let e=0,r=t.length;e<r;e++){const r=t[e];r[2]=n(r[2])}}}:"extent"===e?e=>{e.xmin=t(e.xmin),e.ymin=r(e.ymin),e.xmax=t(e.xmax),e.ymax=r(e.ymax),o&&null!=e.zmax&&null!=e.zmin&&(e.zmax=o(e.zmax),e.zmin=o(e.zmin)),n&&null!=e.mmax&&null!=e.mmin&&(e.mmax=n(e.mmax),e.mmin=n(e.mmin))}:"multipoint"===e?e=>{const i=e.points;let s,l;for(let e=0,o=i.length;e<o;e++){const o=i[e];e>0?(s+=o[0],l+=o[1]):(s=o[0],l=o[1]),o[0]=t(s),o[1]=r(l)}if(o&&n)for(let e=0,t=i.length;e<t;e++){const t=i[e];t[2]=o(t[2]),t[3]=n(t[3])}else if(o)for(let e=0,t=i.length;e<t;e++){const t=i[e];t[2]=o(t[2])}else if(n)for(let e=0,t=i.length;e<t;e++){const t=i[e];t[2]=n(t[2])}}:null}};(0,n._)([(0,p.Cb)({type:String,json:{write:!0}})],w.prototype,"displayFieldName",void 0),(0,n._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],w.prototype,"exceededTransferLimit",void 0),(0,n._)([(0,p.Cb)({type:[s.Z],json:{write:!0}})],w.prototype,"features",void 0),(0,n._)([(0,c.r)("features")],w.prototype,"readFeatures",null),(0,n._)([(0,p.Cb)({type:[h.Z],json:{write:!0}})],w.prototype,"fields",void 0),(0,n._)([(0,p.Cb)({type:["point","multipoint","polyline","polygon","extent","mesh"],json:{read:{reader:g.read}}})],w.prototype,"geometryType",void 0),(0,n._)([(0,f.w)("geometryType")],w.prototype,"writeGeometryType",null),(0,n._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],w.prototype,"hasM",void 0),(0,n._)([(0,p.Cb)({type:Boolean,json:{write:{overridePolicy:e=>({enabled:e})}}})],w.prototype,"hasZ",void 0),(0,n._)([(0,p.Cb)({types:i.qM,json:{write:!0}})],w.prototype,"queryGeometry",void 0),(0,n._)([(0,c.r)("queryGeometry")],w.prototype,"readQueryGeometry",null),(0,n._)([(0,p.Cb)({type:d.Z,json:{write:!0}})],w.prototype,"spatialReference",void 0),(0,n._)([(0,f.w)("spatialReference")],w.prototype,"writeSpatialReference",null),(0,n._)([(0,p.Cb)({json:{write:!0}})],w.prototype,"transform",void 0),w=o=(0,n._)([(0,y.j)("esri.rest.support.FeatureSet")],w),w.prototype.toJSON.isDefaultToJSON=!0;const v=w}}]);