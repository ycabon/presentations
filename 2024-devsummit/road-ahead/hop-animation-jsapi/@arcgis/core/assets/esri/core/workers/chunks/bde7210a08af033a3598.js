"use strict";(self.webpackChunkRemoteClient=self.webpackChunkRemoteClient||[]).push([[611],{90611:(e,r,t)=>{t.r(r),t.d(r,{default:()=>N});var s,i=t(29768),a=t(82058),l=t(60991),n=t(91162),o=t(54179),p=t(50406),c=t(32101),u=t(34250),h=t(86787),d=(t(76506),t(97714)),y=t(17533),f=t(2906),_=t(60947),v=t(41617),g=t(96994),m=t(30208),b=t(97064),S=t(75025),T=t(80462),w=t(21471),C=t(11634),O=t(39241),R=t(68219),U=t(6416),W=t(93844),k=t(21132),M=t(43022),P=t(32966),Z=t(9530);t(31450),t(88762),t(92143),t(41864),t(21972),t(86656),t(66396),t(22723),t(62062),t(6540),t(6906),t(15324),t(75067),t(91306),t(89914),t(81184),t(33101),t(12047),t(53785),t(57251),t(73173),t(74569),t(21801),t(73796),t(91597),t(35132),t(84069),t(44567),t(63685),t(89034),t(98380),t(92482),t(82426),t(72836),t(66106),t(29794),t(92896),t(22781),t(32422),t(3296),t(43352),t(92817),t(89699),t(9411),t(13457),t(89241),t(91700),t(58085),t(10738),t(60111),t(1623),t(50626),t(92624),t(92847),t(38742),t(93314),t(35197),t(8925),t(3482),t(76131),t(36097),t(1557),t(47842),t(14249),t(66284),t(87239),t(17298),t(85557),t(34394),t(92200),t(65949),t(54174),t(59877),t(65775),t(5777),t(39855),t(49900),t(58943),t(67477),t(78533),t(74653),t(91091),t(56420),t(74742),t(28239),t(22203),t(20820),t(86748),t(66122),t(29107),t(30574),t(2157),t(25977),t(58076),t(98242),t(7471),t(54414),t(59465),t(1648),t(45154),t(16769),t(93603),t(15438),t(593),t(48027),t(85699),t(55531),t(96055),t(47776),t(18033),t(6331),t(62048),t(56890),t(30493),t(4292),t(75626),t(72652),t(29641),t(70821),t(34229),t(37029),t(55306),t(96467),t(63571),t(30776),t(63130),t(25696),t(94216),t(42775),t(95834),t(57150),t(76726),t(20444),t(76393),t(78548),t(2497),t(49906),t(46527),t(11799),t(48649),t(81731),t(9960),t(30823),t(53326),t(5853),t(39141),t(48243),t(34635),t(10401),t(70737),t(36834),t(8487),t(17817),t(90814),t(15459),t(97189),t(61847),t(28212),t(16955),t(22401),t(48699),t(77894),t(55187),t(8586),t(44509),t(69814),t(11305),t(62259),t(44790),t(5909),t(60669),t(48208),t(51589),t(65684),t(798),t(74864),t(63683),t(94479),t(45702),t(51127),t(26822),t(51723),t(23243),t(51669),t(6090),t(3977),t(36741),t(11253),t(90319),t(38822),t(52228),t(74057),t(23761),t(48190),t(94070),t(67541),t(16218),t(71206),t(1709),t(35154),t(74438),t(43916),t(7200),t(68681),t(30726),t(78537),t(13260),t(66992),t(70870),t(19124),t(82356),t(26897),t(2775),t(47880),t(87372),t(70766),t(30439),t(6941),t(71435),t(51979),t(32037),t(60698),t(90811),t(60045),t(53321),t(86758),t(95310),t(93939),t(62407),t(90033),t(97807),t(238),t(71831),t(20208),t(10708),t(69218),t(97546),t(9801),t(53523),t(42911),t(46826),t(45433),t(54732),t(20438),t(55402),t(49214),t(95533),t(94751),t(95307),t(22572),t(76733),t(11385),t(55823),t(31292),t(32925),t(12158),t(27207),t(82827),t(2845),t(87258),t(6502),t(40267),t(78303),t(46495),t(77807),t(50203),t(68653),t(2180),t(3663),t(34446),t(78893);const j=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let A=s=class extends((0,T.h)((0,U.M)((0,W.x)((0,m.Z)((0,b.O)((0,C.q)((0,O.I)((0,S.A)((0,o.M)((0,R.Q)((0,g.V)((0,w.N)(v.Z))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(p.r9).then((()=>this._fetchService(r)))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){return(e=e||r.tileInfo?.spatialReference)&&_.Z.fromJSON(e)}writeSublayers(e,r,t,s){if(!this.loaded||!e)return;const i=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray(),a=[],l={writeSublayerStructure:!1,...s};i.forEach((e=>{const r=e.write({},l);a.push(r)})),a.some((e=>Object.keys(e).length>1))&&(r.layers=a)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(e){return Array.isArray(e)?e.map((e=>(0,c.mN)(e).path)):null}fetchTile(e,r,t,s={}){const{signal:i}=s,l=this.getTileUrl(e,r,t),n={responseType:"image",signal:i,query:{...this.refreshParameters}};return(0,a.Z)(l,n).then((e=>e.data))}async fetchImageBitmapTile(e,r,t,i={}){const{signal:l}=i;if(this.fetchTile!==s.prototype.fetchTile){const s=await this.fetchTile(e,r,t,i);return(0,P.c)(s,e,r,t,l)}const n=this.getTileUrl(e,r,t),o={responseType:"blob",signal:l,query:{...this.refreshParameters}},{data:p}=await(0,a.Z)(n,o);return(0,P.c)(p,e,r,t,l)}getTileUrl(e,r,t){const s=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,i=(0,c.B7)({...this.parsedUrl?.query,blankTile:!s&&null,...this.customParameters,token:this.apiKey}),a=this.tileServers;return`${a&&a.length?a[r%a.length]:this.parsedUrl?.path}/tile/${e}/${r}/${t}${i?"?"+i:""}`}loadAll(){return(0,n.l)(this,(e=>{e(this.allSublayers)}))}_fetchService(e){return new Promise(((r,t)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new l.Z("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new l.Z("tile-layer:undefined-url","layer's url is not defined");const s=(0,k.p)(this.parsedUrl.path);if(null!=s&&"ImageServer"===s.serverType)throw new l.Z("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,a.Z)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)})).then((r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,k.i)(t))return this._fetchServerVersion(t,e).then((e=>{this.read({currentVersion:e})})).catch((()=>{}))}))}_fetchServerVersion(e,r){if(!(0,k.a)(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,a.Z)(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then((e=>{if(e.data&&e.data.currentVersion)return e.data.currentVersion;throw new l.Z("tile-layer:version-not-available")}))}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(null==e)return null;let r;e=e.toLowerCase();for(let t=0,s=j.length;t<s;t++)if(r=j[t],r.toLowerCase().includes(e))return(0,c.hF)("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(null==e)return[];const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),t=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[L]}};(0,i._)([(0,u.Cb)({readOnly:!0})],A.prototype,"attributionDataUrl",null),(0,i._)([(0,u.Cb)({type:["show","hide","hide-children"]})],A.prototype,"listMode",void 0),(0,i._)([(0,u.Cb)({json:{read:!0,write:!0}})],A.prototype,"blendMode",void 0),(0,i._)([(0,u.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],A.prototype,"isReference",void 0),(0,i._)([(0,u.Cb)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],A.prototype,"operationalLayerType",void 0),(0,i._)([(0,u.Cb)({type:Boolean})],A.prototype,"resampling",void 0),(0,i._)([(0,u.Cb)()],A.prototype,"sourceJSON",void 0),(0,i._)([(0,u.Cb)({type:_.Z})],A.prototype,"spatialReference",void 0),(0,i._)([(0,d.r)("spatialReference",["spatialReference","tileInfo"])],A.prototype,"readSpatialReference",null),(0,i._)([(0,u.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],A.prototype,"path",void 0),(0,i._)([(0,u.Cb)({readOnly:!0})],A.prototype,"sublayers",void 0),(0,i._)([(0,f.w)("sublayers",{layers:{type:[Z.Z]}})],A.prototype,"writeSublayers",null),(0,i._)([(0,u.Cb)({json:{read:!1,write:!1}})],A.prototype,"popupEnabled",void 0),(0,i._)([(0,u.Cb)()],A.prototype,"tileServers",null),(0,i._)([(0,h.p)("tileServers")],A.prototype,"castTileServers",null),(0,i._)([(0,u.Cb)({readOnly:!0,json:{read:!1}})],A.prototype,"type",void 0),(0,i._)([(0,u.Cb)(M.u)],A.prototype,"url",void 0),A=s=(0,i._)([(0,y.j)("esri.layers.TileLayer")],A);const L=Symbol("default-fetch-tile");A.prototype.fetchTile[L]=!0;const N=A}}]);