/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import t from"../Graphic.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import{h as r,clone as s,i as a}from"../core/lang.js";import{n as o,L as n}from"./Logger.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import"../geometry.js";import u from"../core/Collection.js";import{n as c}from"./compilerUtils.js";import p from"../core/Error.js";import{m as d}from"./handleUtils.js";import{d as f}from"./maybe.js";import{throwIfAborted as h,createResolver as m,debounce as y,isAbortError as g}from"../core/promiseUtils.js";import{watch as b,initial as S}from"../core/reactiveUtils.js";import{d as v}from"./diffUtils.js";import _ from"../core/Accessor.js";import{E as V}from"./EffectView.js";import w from"../layers/support/FeatureFilter.js";import{packFields as x}from"../layers/support/fieldUtils.js";import{g as j}from"./layerUtils2.js";import{r as I}from"./reader.js";import E from"../rest/support/FeatureSet.js";import F from"../geometry/SpatialReference.js";import R from"../rest/support/Query.js";import{D as O,g as C}from"./definitions.js";import{T,A as z}from"./TechniqueInstance.js";import{c as M}from"./UpdateTracking2D.js";import{L as U}from"./LayerView2D.js";import{U as P}from"./UpdatingHandles.js";import{W as A,F as N,r as k,b as L}from"./Container.js";import{c as D}from"./aaBoundingRect.js";import"./TileStrategy.js";import{T as B}from"./TileKey2.js";import{F as J}from"./WGLContainer.js";import{g as q}from"./tileUtils.js";import{open as H}from"../core/workers/workers.js";import $ from"../core/Evented.js";import{R as Q}from"./ReactiveMap.js";import{i as G}from"./arcgisLayerUrl.js";import{a as K}from"./screenUtils.js";import{g as W}from"./featureReductionUtils.js";import{c as X,f as Y}from"./mathUtils.js";import{m as Z}from"./lengthUtils.js";import{T as ee}from"./sizeVariableUtils.js";import{sqlAnd as te}from"../core/sql.js";import{O as ie}from"./OrderByInfo.js";import{v as re}from"./labelingInfo.js";import"../symbols.js";import{a as se}from"./heatmapUtils.js";import{C as ae,c as oe,d as ne}from"./CIMSymbolHelper.js";import{E as le}from"./enums2.js";import{g as ue}from"./SDFHelper.js";import{g as ce}from"./shapingUtils.js";import"./dataViewUtils.js";import{i as pe,T as de,j as fe,p as he,k as me,l as ye,n as ge,h as be,m as Se,o as ve,F as _e}from"./FeatureCommandQueue.js";import Ve from"../symbols/SimpleFillSymbol.js";import{g as we}from"./capabilities.js";import{H as xe}from"./HighlightCounter.js";import{F as je}from"./FeatureLayerView.js";import Ie from"../views/layers/LayerView.js";import{R as Ee}from"./RefreshableLayerView.js";import Fe from"../geometry/Extent.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"./utils.js";import"../core/Handles.js";import"./ensureType.js";import"./metadata.js";import"../config.js";import"./ObservableBase.js";import"./tracking.js";import"../core/scheduling.js";import"../core/JSONSupport.js";import"../core/accessorSupport/decorators/cast.js";import"./writer.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./jsonMap.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"./date.js";import"./locale.js";import"./timeZoneUtils.js";import"./datetime.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../Color.js";import"./colorUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"./shared.js";import"./SimpleObservable.js";import"../intl.js";import"./messages.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./assets.js";import"../geometry/Geometry.js";import"./unitUtils.js";import"../geometry/Point.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./Axis.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils4.js";import"../symbols/edges/Edges3D.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils5.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"./asyncUtils.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./parser.js";import"./utils3.js";import"./mat4.js";import"./_commonjsHelpers.js";import"../TimeExtent.js";import"./timeUtils.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./FullTextSearch.js";import"./spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"./HighlightOptions.js";import"./enums.js";import"./FramebufferObject.js";import"./BufferObject.js";import"./Texture.js";import"./TileContainer.js";import"./libtess.js";import"./earcut.js";import"./GeometryUtils.js";import"./OptimizedGeometry.js";import"./TurboLine.js";import"./BindType.js";import"./Util.js";import"./vec2f64.js";import"./vec4.js";import"./vec4f64.js";import"./Program.js";import"./mat2d.js";import"./mat2df32.js";import"./utils6.js";import"./vec2.js";import"./scaleUtils.js";import"./ClipRect.js";import"./mat3f32.js";import"./DisplayObject.js";import"./QueueProcessor.js";import"./Queue.js";import"../core/signal.js";import"./VertexArrayObject.js";import"./VertexElementDescriptor.js";import"./WGLBrushVTLSymbol.js";import"./vec4f32.js";import"./StyleDefinition.js";import"./vec2f32.js";import"./config.js";import"./ShaderCompiler.js";import"./ProgramTemplate.js";import"./TiledDisplayObject.js";import"./mat3.js";import"./featureConversionUtils.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"../core/workers/Connection.js";import"../core/workers/RemoteClient.js";import"../layers/support/LabelClass.js";import"./labelUtils.js";import"./defaults.js";import"./defaultsJSON.js";import"../symbols/support/jsonUtils.js";import"./BidiEngine.js";import"./fontUtils.js";import"./floatRGBA.js";import"./Rect.js";import"./BoundingBox.js";import"./heatmapTextureUtils.js";import"./constants.js";import"./commonProperties2.js";import"./layerContainerType.js";import"../support/timeUtils.js";import"./ElevationInfo.js";import"./unitConversionUtils.js";import"../layers/support/FeatureEffect.js";import"./jsonUtils.js";import"./floorFilterUtils.js";import"./popupUtils.js";let Re=class extends t{constructor(){super(...arguments),this.isAggregate=!0}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.sourceLayer?.featureReduction;return t&&"popupTemplate"in t&&t.popupEnabled?t.popupTemplate:null}getObjectId(){return this.attributes.aggregateId}};e([i({type:Boolean})],Re.prototype,"isAggregate",void 0),Re=e([l("esri.AggregateGraphic")],Re);const Oe=Re;let Ce=class extends _{constructor(e){super(e),this._filter=null,this.duration=r("mapview-transitions-duration"),this._excludedEffectView=new V(e),this._includedEffectView=new V(e)}get excludedEffects(){return this._excludedEffectView.effects}set featureEffect(e){this._get("featureEffect")!==e&&this._transitionTo(e)}get filter(){return this._filter||this.featureEffect?.filter||null}get hasEffects(){return this._excludedEffectView.hasEffects||this._includedEffectView.hasEffects}get includedEffects(){return this._includedEffectView.effects}set scale(e){this._set("scale",e),this._excludedEffectView.scale=e,this._includedEffectView.scale=e}get transitioning(){return this._excludedEffectView.transitioning||this._includedEffectView.transitioning}transitionStep(e,t){this._set("scale",t),this.transitioning?(this._includedEffectView.transitionStep(e,t),this._excludedEffectView.transitionStep(e,t),this.transitioning||(this._filter=null)):(this._excludedEffectView.scale=t,this._includedEffectView.scale=t)}endTransitions(){this._includedEffectView.endTransitions(),this._excludedEffectView.endTransitions(),this._filter=null}_transitionTo(e){const t=this._get("featureEffect"),i=e,r=i?.includedEffect,s=i?.excludedEffect,a=this._includedEffectView.canTransitionTo(r)&&this._excludedEffectView.canTransitionTo(s);this._includedEffectView.effect=r,this._excludedEffectView.effect=s,this._set("featureEffect",i),this._filter=i?.filter||t?.filter||null,a||this.endTransitions()}};e([i()],Ce.prototype,"_filter",void 0),e([i()],Ce.prototype,"_excludedEffectView",void 0),e([i()],Ce.prototype,"_includedEffectView",void 0),e([i()],Ce.prototype,"duration",void 0),e([i()],Ce.prototype,"excludedEffects",null),e([i()],Ce.prototype,"featureEffect",null),e([i()],Ce.prototype,"filter",null),e([i()],Ce.prototype,"hasEffects",null),e([i()],Ce.prototype,"includedEffects",null),e([i({value:0})],Ce.prototype,"scale",null),e([i()],Ce.prototype,"transitioning",null),Ce=e([l("esri.layers.effects.FeatureEffectView")],Ce);const Te=Ce;let ze=class extends E{constructor(){super(...arguments),this.features=[]}readFeatures(e,t){const i=F.fromJSON(t.spatialReference),r=[];for(let t=0;t<e.length;t++){const s=e[t],a=Oe.fromJSON(s),o=s.geometry?.spatialReference;null==a.geometry||o||(a.geometry.spatialReference=i);const n=s.aggregateGeometries,l=a.aggregateGeometries;if(n&&null!=l)for(const e in l){const t=l[e],r=n[e],s=r?.spatialReference;null==t||s||(t.spatialReference=i)}r.push(a)}return r}};e([i({type:[Oe],json:{write:!0}})],ze.prototype,"features",void 0),e([I("features")],ze.prototype,"readFeatures",null),ze=e([l("esri.rest.support.AggregateFeatureSet")],ze);const Me=ze;class Ue{constructor(){this._instanceById=new Map}destroy(){this._instanceById.clear()}get size(){return this._instanceById.size}updateStart(){this._instanceByIdNext=new Map}updateEnd(){if(!this._instanceByIdNext)throw new Error("InternalError: Found updateEnd call without corresponding updateStart");for(const e of this._instanceById.keys())this._instanceByIdNext.has(e)||this._instanceById.delete(e);for(const[e,t]of this._instanceByIdNext.entries()){const i=this._instanceById.get(e);i?i.setInput(t.getInput()):this._instanceById.set(e,t)}this._instanceByIdNext=null}values(){return this._instanceById.values()}ensureInstance(e,t,i){let r=`${e.registryName}`;for(const e in t){const i=t[e];if("object"==typeof i&&"geometry"===e)for(const t in i)r+=`.${e}.${t}.${null!=i[t]}`;else r+=`.${e}.${null!=t[e]}`}if(null!=i)for(const e in i)i[e]&&(r+=`-${e}`);const s=o(r);if(this._instanceByIdNext){const r=new T(M(s),e,e.meshWriter.name,t,i);return this._instanceByIdNext.set(s,r),r}if(!this._instanceById.has(s)){const r=new T(M(s),e,e.meshWriter.name,t,i);this._instanceById.set(s,r)}return this._instanceById.get(s)}getInstance(e){return this._instanceById.get(e)}}class Pe{constructor(e,t,i){this.stage=e,this.version=t,this._tileInfoView=i,this._tiles=new Map,this._pendingUpdates=[],this._locked=!1}destroy(){}tiles(){return this._tiles.values()}size(){return this._tiles.size}setTiles(e){this._tiles.clear();for(const t of e)this._tiles.set(t.key.id,t)}lockUploads(){this._locked=!0}unlockUploads(){this._locked=!1;for(const e of this._pendingUpdates)this.updateTile(e);this._pendingUpdates=[]}updateTile(e){if(this._locked)return void this._pendingUpdates.push(e);if(r("esri-2d-update-debug")){const t=e.debugInfo?.chunkId??"<EnsureEnd>";console.debug(`Version[${e.version}] Tile[${e.id}] Chunk[${t}] RenderState.updateTile [${e.type}]`,e)}const t=this._ensureTile(e.id);if("update"===e.type){const[i,...r]=e.modify;t.onMessage({type:"update",modify:i,remove:e.remove,end:e.end});for(const t of r){const i=this._tiles.get(t.tileId);i&&i.onMessage({type:"update",modify:t,remove:e.remove,end:!1,isPixelBuffer:!0})}return}if(null==e.append)return void t.onMessage({type:"append",clear:e.clear,debugInfo:e.debugInfo,end:e.end});const[i,...s]=e.append;t.onMessage({type:"append",clear:e.clear,append:i,debugInfo:e.debugInfo,end:e.end});for(const e of s){const t=this._tiles.get(e.tileId);t&&t.onMessage({type:"update",modify:e,remove:[],sort:!1,end:!1,isPixelBuffer:!0})}}removeTile(e){const t=this._tiles.get(e);r("esri-2d-update-debug")&&console.debug(`Tile[${e}] RenderState.removeTile`),t?.destroy(),this._tiles.delete(e)}isTileDone(e){const t=this._tiles.get(e.id);return!!t&&t.isReady}_ensureTile(e){if(!this._tiles.has(e)){const t=this._createTile(e);this._copyPixelBufferedEntitiesInto(t),this._tiles.set(e,t)}return this._tiles.get(e)}_createTile(e){r("esri-2d-update-debug")&&console.debug(`Version[${this.version}] Tile[${e}] RenderState.createTile`);const t=new B(e),i=this._tileInfoView.getTileBounds(D(),t),s=this._tileInfoView.getTileResolution(t.level),a=new J(t,s,i[0],i[3]);return a.stage=this.stage,a}_copyPixelBufferedEntitiesInto(e){let t=7;for(let i=-1;i<=1;i++)for(let r=-1;r<=1;r++){if(0===i&&0===r)continue;const s=this._tileInfoView.tileInfo.isWrappable,a=q(e.key,r,i,s).id,o=this._tiles.get(a);if(null!=o){const s=1<<t;e.copyPixelBufferedEntitesFrom(o,s,r,i)}t--}}}class Ae{constructor(e,t){this.id=e,this.version=t,this._resolver=m(),this._done=!1}get done(){return this._done}get promise(){return this._resolver.promise}end(){this._resolver.resolve(),this._done=!0}destroy(){this._resolver.reject()}}class Ne extends z{constructor(e){super(e.view.featuresTilingScheme),this.updatingHandles=new P,this._hitTestsRequests=[],this._visibleTiles=new Set,this._subscriptions=new Map,this._layerView=e}renderChildren(e){for(const t of this.children)t.setTransform(e.state);switch(super.renderChildren(e),this.attributeView.update(),this.hasAnimation&&e.painter.effects.integrate.draw(e,e.attributeView),e.drawPhase){case A.MAP:return this._renderMapPhase(e);case A.HIGHLIGHT:return this._renderHighlightPhase(e);case A.LABEL:return this._renderLabelPhase(e)}}subscriptions(){return this._subscriptions.values()}get _instanceStore(){return this._store}get layerView(){return this._layerView}get hasLabels(){return this._layerView.labelingCollisionInfos.length>0}get hasHighlight(){return this._layerView.hasHighlight()}get _layer(){return this._layerView.layer}_getExclusivePostprocessingInstance({drawPhase:e}){if(null==this._instanceStore)return null;let t=0,i=null;for(const r of this._instanceStore.values())r.techniqueRef.drawPhase&e&&(t++,r.techniqueRef.postProcessingEnabled&&(i=r));return t>1?null:i}_getOverrideStencilRef({drawPhase:e}){if(null==this._instanceStore)return null;let t=null;for(const i of this._instanceStore.values()){if(!(i.techniqueRef.drawPhase&e))continue;const{overrideStencilRef:r}=i.techniqueRef;if(null==t)t=r;else if(t!==r){t=null;break}}return t}get children(){return this._renderState?Array.from(this._renderState.tiles()).filter((e=>this._visibleTiles.has(e.key.id))):[]}initializeAttributeView(e){this.attributeView.initialize(e)}async updateAttributeView(e){await this.updatingHandles.addPromise(this.attributeView.requestUpdate(e)),this.hasLabels&&this._layerView.view.labelManager.requestUpdate()}updateSubscriptions(e){for(const{tileId:t,version:i}of e.subscribe)if(this._subscriptions.has(t))this._subscriptions.get(t).version=i;else{const e=new Ae(t,i);this._subscriptions.set(t,e),this.updatingHandles.addPromise(e.promise)}for(const t of e.unsubscribe){const e=this._subscriptions.get(t);e?.destroy(),this._subscriptions.delete(t),this.removeTile(t)}}isDone(e){return!!this._renderState&&this._renderState.isTileDone(e)}async updateRenderState(e){r("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureContainer.updateRenderState`),this._renderStateNext=new Pe(this._stage,e,this._tileInfoView)}getDisplayStatistics(e,t){const i=this._statisticsByLevel.get(e);return i?i.get(t):null}updateStatistics(e,t){let i=this._statisticsByLevel.get(e);i||(i=new Map,this._statisticsByLevel.set(e,i));for(const e of t)i.set(e.fieldName,{minValue:e.minValue,maxValue:e.maxValue})}editStart(){this.attributeView.lockTextureUpload(),this._renderState?.lockUploads()}editEnd(){this.attributeView.unlockTextureUpload(),this._renderState?.unlockUploads(),this.requestRender()}updateStart(){this.attributeView.lockTextureUpload()}updateEnd(e,t){this.attributeView.unlockTextureUpload(),r("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureContainer.update`),this.requestRender(),this._store=e,this._renderStateNext&&(r("esri-2d-update-debug")&&console.debug(`Version[${this._renderStateNext.version}] FeatureContainer.update.swapRenderState`),this._renderState?.destroy(),this._renderState=this._renderStateNext,this._renderStateNext=null)}setVisibleTiles(e){this._visibleTiles=e}async onMessage(e,t){if(h(t),!this._subscriptions.has(e.id))return;const i=this._subscriptions.get(e.id);if(i.version!==e.subscriptionVesrion){if(r("esri-2d-update-debug")){const t=`${e.subscriptionVesrion} != ${i.version}`;console.debug(`Version[${t}] Tile[${e.id}] FeatureContainer - Dropping message, outdated version]`,e)}return}const s=this._renderStateNext??this._renderState;if(!s)throw new Error("InternalError: No renderState defined");s.version!==e.version&&console.error(`InternalError: Version mismatch. [renderState: ${s.version}, message: ${e.version}]`),s.updateTile(e),e.end&&this._subscriptions.get(e.id).end(),this.requestRender(),this._layerView.view.labelManager.requestUpdate(),this._layerView.requestUpdate()}removeTile(e){(this._renderState||this._renderStateNext)&&(this._renderState&&this._renderState.removeTile(e),this._renderStateNext&&this._renderStateNext.removeTile(e))}hitTest(e){let t=this._hitTestsRequests.find((({x:t,y:i})=>t===e.x&&i===e.y));const i=m();return t?t.resolvers.push(i):(t={x:e.x,y:e.y,resolvers:[i]},this._hitTestsRequests.push(t)),this.requestRender(),i.promise}get hasAnimation(){return this.hasLabels}updateTransitionProperties(e,t){super.updateTransitionProperties(e,t),this._layerView.featureEffectView.transitionStep(e,t),this._layerView.featureEffectView.transitioning&&this.requestRender()}doRender(e){const{minScale:t,maxScale:i}=this._layer.effectiveScaleRange,r=e.state.scale;r<=(t||1/0)&&r>=i&&super.doRender(e)}afterRender(e){super.afterRender(e),this._hitTestsRequests.length&&this.requestRender()}setStencilReference(e){const t=this._getOverrideStencilRef(e);if(null==t)super.setStencilReference(e);else for(const e of this.children)e.stencilRef=t(e)}_renderMapPhase(e){this._layerView.featureEffectView.hasEffects?(this._renderOutsideEffect(e),this._renderInsideEffect(e)):this._renderFeatures(e,N.All),this._hitTestsRequests.length>0&&this._renderHittest(e)}_renderHighlightPhase(e){this.hasHighlight&&k(e,!1,(e=>{this._renderFeatures(e,N.Highlight)}))}_renderLabelPhase(e){this._renderFeatures(e,N.All)}_renderInsideEffect(e){const t=e.painter.effects.insideEffect;t.bind(e),this._renderFeatures(e,N.InsideEffect),t.draw(e,this._layerView.featureEffectView.includedEffects),t.unbind()}_renderOutsideEffect(e){const t=e.painter.effects.outsideEffect;t.bind(e),this._renderFeatures(e,N.OutsideEffect),t.draw(e,this._layerView.featureEffectView.excludedEffects),t.unbind()}_renderHittest(e){const{context:t}=e,i=e.painter.effects.hittest,r=t.getBoundFramebufferObject(),s=t.getViewport(),a=e.passOptions;i.bind(e),e.passOptions=i.createOptions(e,this._hitTestsRequests),this._renderFeatures(e,N.All),i.draw(e),i.unbind(),t.bindFramebuffer(r),t.restoreViewport(s),e.passOptions=a}_renderFeatures(e,t){for(const i of this.children){if(!i.visible)continue;const s=r("featurelayer-force-marker-text-draw-order")?L.STRICT_MARKERS_AND_TEXT:L.BATCHING,a=i.getDisplayList(e.drawPhase,this._instanceStore,s);e.selection=t,a?.render(e)}const i=this._getExclusivePostprocessingInstance(e);null!=i&&i.techniqueRef.postProcess(e,i)}}class ke{constructor(e){this._connection=e,this.pipeline=this._connection.createInvokeProxy(),this.features=this._connection.createInvokeProxy("features"),this.aggregates=this._connection.createInvokeProxy("aggregates"),this.processor=this._connection.createInvokeProxy("processor"),this.streamMessenger=this._connection.createInvokeProxy("streamMessenger")}destroy(){this._connection.destroy()}get closed(){return this._connection.closed}}let Le=class extends _{constructor(){super(...arguments),this.events=new $,this._updatingStrategy=!0,this._tileToEvent=new Q,this._fetchStatus={outstanding:0,done:0}}get hasAllFeatures(){return this._hasAllData()&&(this._strategyInfo?.willQueryAllFeatures??!1)}get hasAllFeaturesInView(){return this._hasAllData()}get hasFullGeometries(){return this._hasAllData()&&(this._strategyInfo?.willQueryFullResolutionGeometry??!1)}onEvent(e){switch(e.type){case"subscribe":case"unsubscribe":case"loaded":case"error":this._handleTileEvent(e);break;case"updateStrategyStart":this._updatingStrategy=!0,this._fetchStatus={done:0,outstanding:0},this._strategyInfo=e.about;break;case"updateStrategyEnd":this._updatingStrategy=!1;break;case"updateFieldsStart":this._fetchStatus={done:0,outstanding:0};break;case"updateFieldsEnd":break;case"updateFieldsError":this.events.emit("error",e);break;case"fetchStart":this._fetchStatus.outstanding+=1,this.events.emit("status",this._fetchStatus);break;case"fetchEnd":this._fetchStatus.done+=1,this.events.emit("status",this._fetchStatus),e.done&&(this._fetchStatus={done:0,outstanding:0})}}_hasAllData(){return!this._updatingStrategy&&this._hasAllTileData()}_hasAllTileData(){for(const e of this._tileToEvent.values())if("loaded"!==e[e.length-1].type)return!1;return!0}_handleTileEvent(e){switch(e.type){case"subscribe":this._tileToEvent.set(e.tile,[e]);break;case"unsubscribe":this._tileToEvent.delete(e.tile);break;case"loaded":{const t=this._tileToEvent.get(e.tile);if(!t)return;t.push(e),this._tileToEvent.set(e.tile,t);break}case"error":{const t=this._tileToEvent.get(e.tile);if(!t)return;t.push(e),this._tileToEvent.set(e.tile,t),this.events.emit("error",e);break}}}};function De(e){switch(e.geometryType){case"point":return"esriGeometryPoint";case"polyline":return"esriGeometryPolyline";case"polygon":case"multipatch":return"esriGeometryPolygon";case"multipoint":return"esriGeometryMultipoint";default:return null}}e([i({readOnly:!0})],Le.prototype,"hasAllFeatures",null),e([i({readOnly:!0})],Le.prototype,"hasAllFeaturesInView",null),e([i({readOnly:!0})],Le.prototype,"hasFullGeometries",null),e([i()],Le.prototype,"_updatingStrategy",void 0),e([i()],Le.prototype,"_strategyInfo",void 0),e([i()],Le.prototype,"_tileToEvent",void 0),Le=e([l("esri.views.2d.layers.features.FeatureSourceEventLog")],Le);const Be=Math.PI;function Je(e,t){switch(t.transformationType){case ee.Additive:return function(e,t){return e+(qe(t.minSize,e)||t.minDataValue)}(e,t);case ee.Constant:return function(e,t){const i=e.stops;let r=i?.length&&i[0].size;return null==r&&(r=e.minSize),qe(r,t)}(t,e);case ee.ClampedLinear:return function(e,t){const i=t.minDataValue,r=t.maxDataValue,s=(e-i)/(r-i),a=qe(t.minSize,e),o=qe(t.maxSize,e);return e<=i?a:e>=r?o:a+s*(o-a)}(e,t);case ee.Proportional:return function(e,t){const i=e/t.minDataValue,r=qe(t.minSize,e),s=qe(t.maxSize,e);let a=null;return a=i*r,X(a,r,s)}(e,t);case ee.Stops:return function(e,t){const[i,r,s]=function(e,t){if(!t)return;let i=0,r=t.length-1;return t.some(((t,s)=>e<t?(r=s,!0):(i=s,!1))),[i,r,(e-t[i])/(t[r]-t[i])]}(e,t.cache.ipData);if(i===r)return qe(t.stops[i].size,e);{const a=qe(t.stops[i].size,e);return a+(qe(t.stops[r].size,e)-a)*s}}(e,t);case ee.RealWorldSize:return function(e,t){const i=Z[t.valueUnit],r=qe(t.minSize,e),s=qe(t.maxSize,e),{valueRepresentation:a}=t;let o=null;return o="area"===a?2*Math.sqrt(e/Be)/i:"radius"===a||"distance"===a?2*e/i:e/i,X(o,r,s)}(e,t);case ee.Identity:return e;case ee.Unknown:return null}}function qe(e,t){return"number"==typeof e?e:Je(t,e)}function He(e){return(e.labelsVisible&&e.labelingInfo?.every((e=>"none"!==e.deconflictionStrategy)))??!1}function $e(e,t){const i=W(e,t);if(i?.labelsVisible&&i.labelingInfo?.length)return i.labelingInfo.every((e=>"none"!==e.deconflictionStrategy))}function Qe(e){return t=>K(Je(t,e))}function Ge(e){const t=null!=e&&"visualVariables"in e&&e.visualVariables;if(!t)return null;for(const e of t)if("size"===e.type)return Qe(e);return null}function Ke(e,t,i,r,s){const a=null!=t.subtypeCode?`${t.subtypeField} = ${t.subtypeCode}`:null,o=te(t.definitionExpression,a),n=t.customParameters??{};return s&&(n.token=s),{type:"feature",sourceRefreshVersion:r,service:e,tileInfoJSON:i.tileInfoJSON,availableFields:i.availableFields,dataFilter:{definitionExpression:o,gdbVersion:t.gdbVersion,historicMoment:t.historicMoment?.getTime(),outSpatialReference:i.outSpatialReference.toJSON(),timeExtent:t.timeExtent?.toJSON(),customParameters:n}}}function We(e,t,i=0){if(null==t)return e[i]=0,e[i+1]=0,e[i+2]=0,void(e[i+3]=0);const{r,g:s,b:a,a:o}=t;e[i]=r*o/255,e[i+1]=s*o/255,e[i+2]=a*o/255,e[i+3]=o}async function Xe(e,t){if(!e)return[];switch(e.type){case"simple-fill":return et(e,t);case"picture-fill":return function(e,t){const{outline:i}=e,{uniforms:r,schemaOptions:s}=t,{store:a}=s,o=[],n=ae.createPictureFillRasterizationParam(e);if(!n)return[];const{width:l,height:u,xoffset:c,yoffset:p,xscale:d,yscale:f}=e,h={color:[255,255,255,255],sprite:n,height:u,aspectRatio:l/u,offsetX:c,offsetY:p,scaleX:d,scaleY:f,angle:0,applyRandomOffset:!1,sampleAlphaOnly:!1,scaleProportionally:!1,effects:null,scaleInfo:null};if("solid"===i?.style)return[a.ensureInstance(de.complexOutlineFill,{geometry:{visualVariableColor:r.visualVariableColor,visualVariableOpacity:r.visualVariableOpacity,visualVariableSizeScaleStops:r.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null}},{zoomRange:!1}).createMeshInfo({params:{...h,...Ze(i,!!r.visualVariableSizeOutlineScaleStops)}})];const m=a.ensureInstance(de.complexFill,{geometry:{visualVariableColor:r.visualVariableColor,visualVariableOpacity:r.visualVariableOpacity}},{zoomRange:!1});return o.push(m.createMeshInfo({params:h})),i&&o.push(...tt(i,t,!0)),o}(e,t);case"simple-marker":return async function(e,t){const{uniforms:i,schemaOptions:r}=t,{store:s}=r;if("path"===e.style){const i=ae.fromSimpleMarker(e);return pe({type:"CIMSymbolReference",symbol:i},t)}const a=s.ensureInstance(de.marker,{geometry:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity,visualVariableSizeMinMaxValue:i.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:i.visualVariableSizeScaleStops,visualVariableSizeStops:i.visualVariableSizeStops,visualVariableSizeUnitValue:i.visualVariableSizeUnitValue,visualVariableRotation:i.visualVariableRotation}},{zoomRange:!1}),o=Ye(e);let n=e.color?.toArray()??[0,0,0,0];"CIMVectorMarker"===o.resource.type&&(n=[255,255,255,255]);const l="triangle"===e.style?124/116:1,u=e.size,c=u*l,p=null!=i.visualVariableColor&&("cross"===e.style||"x"===e.style);return[a.createMeshInfo({params:{type:"simple",color:n,height:u,width:c,offsetX:e.xoffset,offsetY:e.yoffset,angle:e.angle,outlineColor:e.outline?.color?.toArray()??[0,0,0,0],outlineSize:e.outline?.width??1,referenceSize:u,sprite:o,overrideOutlineColor:p,hasSizeVV:me(i),placement:null,effects:null,transforms:null,scaleInfo:null,minPixelBuffer:ye(i)}})]}(e,t);case"picture-marker":return function(e,t){const{uniforms:i,schemaOptions:r}=t,{store:s}=r,a=s.ensureInstance(de.marker,{geometry:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity,visualVariableSizeMinMaxValue:i.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:i.visualVariableSizeScaleStops,visualVariableSizeStops:i.visualVariableSizeStops,visualVariableSizeUnitValue:i.visualVariableSizeUnitValue,visualVariableRotation:i.visualVariableRotation}},{zoomRange:!1}),o=ae.createPictureMarkerRasterizationParam(e);return o?[a.createMeshInfo({params:{type:"picture",color:[255,255,255,255],height:e.height,width:e.width,offsetX:e.xoffset,offsetY:e.yoffset,angle:e.angle,outlineColor:null,outlineSize:0,referenceSize:e.height,sprite:o,overrideOutlineColor:!1,hasSizeVV:me(i),placement:null,effects:null,transforms:null,scaleInfo:null,minPixelBuffer:ye(i)}})]:[]}(e,t);case"simple-line":return tt(e,t,!1);case"text":return function(e,t){const{uniforms:i,schemaOptions:r}=t,{store:s}=r;return[s.ensureInstance(de.text,{geometry:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity,visualVariableRotation:i.visualVariableRotation,visualVariableSizeMinMaxValue:i.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:i.visualVariableSizeScaleStops,visualVariableSizeStops:i.visualVariableSizeStops,visualVariableSizeUnitValue:i.visualVariableSizeUnitValue}},{zoomRange:!1,clipAngle:!1,referenceSymbol:!1}).createMeshInfo({params:{boxBackgroundColor:e.backgroundColor?.toArray(),boxBorderLineColor:e.borderLineColor?.toArray(),boxBorderLineSize:e.borderLineSize??0,color:e.color?.toArray()??[0,0,0,0],offsetX:e.xoffset,offsetY:e.yoffset,postAngle:e.angle,fontSize:e.font.size,decoration:e.font.decoration,haloColor:e.haloColor?.toArray()??[0,0,0,0],haloFontSize:e.haloSize??0,lineWidth:e.lineWidth,lineHeightRatio:e.lineHeight,horizontalAlignment:e.horizontalAlignment,verticalAlignment:e.verticalAlignment,useCIMAngleBehavior:!1,glyphs:{type:"text-rasterization-param",resource:{type:"text",font:e.font.toJSON(),textString:e.text,symbol:ae.createCIMTextSymbolfromTextSymbol(e)},overrides:[]},referenceSize:null,effects:null,placement:null,scaleInfo:null,transforms:null,minPixelBuffer:ye(i),repeatLabel:null,repeatLabelDistance:null,allowOverrun:null,labelPosition:null,isLineLabel:!1}})]}(e,t);case"label":return function(e,t){const{schemaOptions:i,uniforms:r}=t,{store:s}=i,a=e.symbol,{allowOverrun:o,repeatLabel:n,repeatLabelDistance:l}=e,u={maxScale:e.maxScale??0,minScale:e.minScale??0},c=s.ensureInstance(de.label,{geometry:{visualVariableColor:null,visualVariableOpacity:null,visualVariableRotation:r.visualVariableRotation,visualVariableSizeMinMaxValue:r.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:r.visualVariableSizeScaleStops,visualVariableSizeStops:r.visualVariableSizeStops,visualVariableSizeUnitValue:r.visualVariableSizeUnitValue}},{zoomRange:!0,clipAngle:!0,referenceSymbol:!0}),p=e.labelPlacement,[d,f]=ce(p);return[c.createMeshInfo({params:{boxBackgroundColor:a.backgroundColor?.toArray(),boxBorderLineColor:a.borderLineColor?.toArray(),boxBorderLineSize:a.borderLineSize??0,color:a.color?.toArray()??[0,0,0,0],offsetX:a.xoffset,offsetY:a.yoffset,postAngle:a.angle,fontSize:a.font.size,decoration:a.font.decoration,haloColor:a.haloColor?.toArray()??[0,0,0,0],haloFontSize:a.haloSize??0,lineWidth:a.lineWidth,lineHeightRatio:a.lineHeight,horizontalAlignment:d,verticalAlignment:f,repeatLabel:n,repeatLabelDistance:K(l),allowOverrun:o,labelPosition:e.labelPosition,scaleInfo:u,minPixelBuffer:ye(r),useCIMAngleBehavior:!1,glyphs:{type:"text-rasterization-param",resource:{type:"text",font:a.font.toJSON(),textString:a.text,symbol:ae.createCIMTextSymbolfromTextSymbol(a),primitiveName:"label-override"},overrides:[{type:"CIMPrimitiveOverride",valueExpressionInfo:{type:"CIMExpressionInfo",expression:e.labelExpressionInfo?.expression??e.labelExpression,returnType:"String"},primitiveName:"label-override",propertyName:"textString",defaultValue:""}]},referenceSize:null,effects:null,placement:null,transforms:null,isLineLabel:!1}})]}(e,t);case"cim":return pe(e.data,t);case"web-style":{const i=await e.fetchCIMSymbol();return pe(i.data,t)}default:throw new Error(`symbol not supported ${e.type}`)}}function Ye(e){if("path"===e.style){if(null==e.path)throw new Error("Symbol with a style of type path must define a path");return{type:"sprite-rasterization-param",overrides:[],resource:{type:"path",path:e.path,asFill:!0}}}const t=ae.fromSimpleMarker(e);if("outline"in e&&e.outline){const i=e.outline.style;if("solid"!==i&&"none"!==i){if(!t||!t.symbolLayers)throw new Error("Error handling marker! ");return{type:"sprite-rasterization-param",resource:t.symbolLayers[0],overrides:[]}}}return{type:"sprite-rasterization-param",resource:ue(t),overrides:[]}}function Ze(e,t){const i=e.width;return{outlineColor:e.color?.toArray()||[0,0,0,1],width:i,referenceWidth:i,capType:e.cap??"round",joinType:e.join??"round",miterLimit:e.miterLimit,hasSizeVV:t}}function et(e,t){const{style:i}=e;return i&&"none"!==i&&"solid"!==i?function(e,t){const{uniforms:i,schemaOptions:r}=t,{store:s}=r,a=e.color?.toArray()??[0,0,0,0],o={type:"sprite-rasterization-param",resource:{type:"fill-style",style:e.style},overrides:[]};if("solid"===e.outline?.style)return[s.ensureInstance(de.patternOutlineFill,{geometry:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity,visualVariableSizeScaleStops:i.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null}},{zoomRange:!1}).createMeshInfo({params:{color:a,...Ze(e.outline,!!i.visualVariableSizeOutlineScaleStops),sprite:o,scaleInfo:null,effects:null}})];const n=[],l=s.ensureInstance(de.patternFill,{geometry:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity}},{zoomRange:!1}).createMeshInfo({params:{color:e.color?.toArray()??[0,0,0,0],sprite:o,scaleInfo:null,effects:null}});return n.push(l),e.outline&&n.push(...tt(e.outline,t,!0)),n}(e,t):function(e,t){const{uniforms:i,schemaOptions:r}=t,{store:s}=r,a=e.color?.toArray()??[0,0,0,0];if("solid"===e.outline?.style)return[s.ensureInstance(de.outlineFill,{geometry:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity,visualVariableSizeScaleStops:i.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null}},{zoomRange:!1}).createMeshInfo({params:{color:"none"!==e.style?a:[0,0,0,0],...Ze(e.outline,!!i.visualVariableSizeOutlineScaleStops),scaleInfo:null,effects:null}})];const o=[],n=s.ensureInstance(de.fill,{geometry:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity}},{zoomRange:!1}).createMeshInfo({params:{color:a,scaleInfo:null,effects:null}});return o.push(n),e.outline&&o.push(...tt(e.outline,t,!0)),o}(e,t)}function tt(e,t,i){const{color:r,style:s,width:a,cap:o,join:n}=e,{schemaOptions:l}=t,{store:u}=l,c=[],p=i?{...ge,visualVariableSizeScaleStops:t.uniforms.visualVariableSizeOutlineScaleStops}:t.uniforms,d={geometry:{visualVariableColor:p.visualVariableColor,visualVariableOpacity:p.visualVariableOpacity,visualVariableSizeMinMaxValue:p.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:p.visualVariableSizeScaleStops,visualVariableSizeStops:p.visualVariableSizeStops,visualVariableSizeUnitValue:p.visualVariableSizeUnitValue}},f={color:null!=r&&"none"!==s?r.toArray():[0,0,0,0],width:a,referenceWidth:a,capType:o,joinType:n,miterLimit:e.miterLimit,hasSizeVV:me(p),effects:null,scaleInfo:null};if(null==s||"solid"===s||"none"===s){const e=u.ensureInstance(de.line,d,{zoomRange:!1}).createMeshInfo({params:f});c.push(e)}else{const e=u.ensureInstance(de.texturedLine,d,{zoomRange:!1}).createMeshInfo({params:{...f,shouldScaleDash:!0,shouldSampleAlphaOnly:!1,isSDF:!0,sprite:{type:"sprite-rasterization-param",resource:{type:"dash",dashTemplate:oe(s,o),capStyle:ne(o)},overrides:[]}}});c.push(e)}return null!=e.marker&&c.push(...function(e,t,i){const{uniforms:r,schemaOptions:s}=i,{store:a}=s,o=a.ensureInstance(de.marker,{geometry:{visualVariableColor:r.visualVariableColor,visualVariableOpacity:r.visualVariableOpacity,visualVariableSizeMinMaxValue:r.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:r.visualVariableSizeScaleStops,visualVariableSizeStops:r.visualVariableSizeStops,visualVariableSizeUnitValue:r.visualVariableSizeUnitValue,visualVariableRotation:r.visualVariableRotation}},{zoomRange:!1}),n=Ye(e),l=6*t.width,u=l,c=e.color?.toArray()??t.color?.toArray()??[0,0,0,0],p="cross"===e.style||"x"===e.style;let d;switch(e.placement){case"begin-end":d=le.Both;break;case"begin":d=le.JustBegin;break;case"end":d=le.JustEnd;break;default:d=le.None}const f={type:"cim-marker-placement-info",placement:{type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,extremityPlacement:d,offsetAlongLine:0},overrides:[]};return[o.createMeshInfo({params:{type:"simple",color:c,height:u,width:l,offsetX:0,offsetY:0,angle:0,outlineColor:c,outlineSize:p?t.width:0,referenceSize:u/6,sprite:n,overrideOutlineColor:p&&null!=r.visualVariableColor,hasSizeVV:me(r),placement:f,transforms:null,effects:null,scaleInfo:null,minPixelBuffer:ye(r)}})]}(e.marker,e,t)),c}async function it(e,t,i){const r=t.labelsVisible&&t.labelingInfo||[],s=De(t),a=re(r,s),o=await Promise.all(a.map(((t,r)=>async function(e,t,i,r){const s=await Xe(t,{path:`${i}`,schemaOptions:e,uniforms:r});return{maxScale:t.maxScale,minScale:t.minScale,expression:t.labelExpressionInfo?.expression??t.labelExpression,where:t.where,meshes:s}}(e,t,r,i))));return{type:"label",classes:o}}async function rt(e,t){if(!t)return{type:"simple",meshes:[]};switch(t.type){case"simple":return async function(e,t){const i=t.getSymbols(),r=i.length?i[0]:null,s=fe(t);return{type:"simple",meshes:await Xe(r,{schemaOptions:e,uniforms:s,path:"renderer.symbol"})}}(e,t);case"dot-density":return async function(e,t){const i=fe(t),r=await async function(e,t){const{schemaOptions:i}=t,{store:r}=i,s=new Array(O),a=new Array(O/4);for(let t=0;t<O;t++){const i=t<e.attributes.length?e.attributes[t].color:null;s[t]=[0,0,0,0],We(s[t],i)}for(let t=0;t<O/4;t++)a[t]=[0,0,0,0],a[t][0]=4*t<e.attributes.length?1:0,a[t][1]=4*t+1<e.attributes.length?1:0,a[t][2]=4*t+2<e.attributes.length?1:0,a[t][3]=4*t+3<e.attributes.length?1:0;const o={isActive:a,colors:s,dotValue:e.dotValue,dotScale:e.referenceScale,blending:e.dotBlendingEnabled,dotSize:e.dotSize,seed:e.seed},n=r.ensureInstance(de.dotDensity,o,{}).createMeshInfo({params:{effects:null}}),l=[];if(e.backgroundColor){const i=new Ve({color:e.backgroundColor,outline:null}),r=await Xe(i,t);l.push(...r)}if(l.push(n),e.outline){const i=tt(e.outline,t,!0);l.push(...i)}return l}(t,{schemaOptions:e,uniforms:i,path:"renderer.symbol"});return{type:"dot-density",meshes:r}}(e,t);case"class-breaks":return async function(e,t){const i=fe(t),r=t.backgroundFillSymbol,s=t.normalizationType,a="log"===s?"esriNormalizeByLog":"percent-of-total"===s?"esriNormalizeByPercentOfTotal":"field"===s?"esriNormalizeByField":null,o=t.classBreakInfos.map((async t=>({meshes:await Xe(t.symbol,{path:`renderer-stop-${t.minValue}-${t.maxValue}`,schemaOptions:e,uniforms:i}),min:t.minValue,max:t.maxValue}))),n=(await Promise.all(o)).sort(((e,t)=>e.min-t.min)),l=await Xe(r,{schemaOptions:e,path:"renderer.backgroundFill",uniforms:{...ge,visualVariableSizeOutlineScaleStops:i.visualVariableSizeOutlineScaleStops}}),u=await Xe(t.defaultSymbol,{schemaOptions:e,path:"renderer.defaultSymbol",uniforms:i});return{type:"interval",field:t.field,expression:t.valueExpression,backgroundFill:l,defaultSymbol:u,intervals:n,normalizationField:t.normalizationField,normalizationTotal:t.normalizationTotal,normalizationType:a,isMaxInclusive:t.isMaxInclusive}}(e,t);case"unique-value":return async function(e,t){const i=[],r=fe(t),s=await Xe(t.backgroundFillSymbol,{schemaOptions:e,path:"renderer.backgroundFill",uniforms:{...ge,visualVariableSizeOutlineScaleStops:r.visualVariableSizeOutlineScaleStops}}),a=await Xe(t.defaultSymbol,{schemaOptions:e,path:"renderer.defaultSymbol",uniforms:r});for(const s of t.uniqueValueInfos??[]){const t=await Xe(s.symbol,{path:`renderer-unique-value-${s.value}`,schemaOptions:e,uniforms:r});i.push({value:""+s.value,symbol:t})}return{type:"map",field:t.field,expression:t.valueExpression,field2:t.field2,field3:t.field3,fieldDelimiter:t.fieldDelimiter,backgroundFill:s,defaultSymbol:a,map:i}}(e,t);case"dictionary":return function(e){const t=fe(e),i=e.scaleExpression,r=null!=i&&"1"!==i?{valueExpressionInfo:{type:"CIMExpressionInfo",expression:e.scaleExpression,returnType:"Numeric"},defaultValue:1}:void 0;return{type:"dictionary",fieldMap:e.fieldMap,scaleExpression:r,visualVariableUniforms:t}}(t);case"heatmap":return async function(e,t){const i=await async function(e,t){const{store:i}=t,{radius:r,minDensity:s,maxDensity:a,referenceScale:o,field:n,valueExpression:l,colorStops:u}=e,c=se(u);return[i.ensureInstance(de.heatmap,{radius:K(r),minDensity:s,maxDensity:a,referenceScale:o,isFieldActive:!(!n&&!l),gradient:c,gradientHash:c.join(",")},{}).createMeshInfo({params:{effects:null}})]}(t,e);return{type:"heatmap",meshes:i}}(e,t);case"pie-chart":return async function(e,t){const i=function(e,t){const{store:i}=t,r=e.outline?.width||1,s=fe(e),a=i.ensureInstance(de.pieChart,{geometry:{outlineWidth:Math.round(K(r)),defaultColor:he(e.defaultColor),outlineColor:he(e.outline?.color),othersColor:he(e.othersCategory?.color),donutRatio:e.holePercentage,sectorThreshold:e.othersCategory?.threshold||0,colors:e.attributes.map((e=>he(e.color))),visualVariableOpacity:s.visualVariableOpacity,visualVariableSizeMinMaxValue:s.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:s.visualVariableSizeScaleStops,visualVariableSizeStops:s.visualVariableSizeStops,visualVariableSizeUnitValue:s.visualVariableSizeUnitValue,hittestUniforms:null},numberOfFields:e.attributes.length},{}).createMeshInfo({params:{size:e.size,outlineWidth:r,effects:null,scaleInfo:null}});return[...e.backgroundFillSymbol?et(e.backgroundFillSymbol,{schemaOptions:t,path:"",uniforms:ge}):[],a]}(t,e);return{type:"pie-chart",meshes:i}}(e,t)}}async function st(e,t,i,r){const s=i.featureReduction;if(s)switch(s.type){case"binning":return async function(e,t,i,r,s){const a=at(e,r.fields),o=e.renderer,n=await rt(t,o),l=be(o,[null,null]),u=fe(o),c=await it(t,{geometryType:"polygon",labelingInfo:e.labelingInfo,labelsVisible:e.labelsVisible},u);return{storage:l,mesh:{displayRefreshVersion:s,strategy:{type:"binning",fields:a,fixedBinLevel:e.fixedBinLevel,featureFilter:i.filters[0]},factory:{labels:c,symbology:n},sortKey:null}}}(s,e,t,i,r);case"cluster":return async function(e,t,i,r,s){const a=at(e,r.fields),o=e.getEffectiveRenderer(),n={type:"cluster",feature:await rt(t,o),cluster:await rt(t,o)},l=fe(o),u={type:"cluster",feature:await it(t,r,l),cluster:await it(t,{geometryType:"point",labelingInfo:e.labelingInfo,labelsVisible:e.labelsVisible},l)};return{storage:be(o,[null,null]),mesh:{displayRefreshVersion:s,strategy:{type:"cluster",fields:a,featureFilter:i.filters[0],clusterRadius:K(e.clusterRadius/2)},factory:{labels:u,symbology:n},sortKey:null}}}(s,e,t,i,r)}const a=function(e,t,i){const r=null!=t&&"unique-value"===t.type&&t.orderByClassesEnabled;if("default"!==e||r||(e=[new ie({field:i,order:"descending"})]),"default"!==e&&e.length){e.length;const t=e[0],i="ascending"===t.order?"asc":"desc";return t.field?{field:t.field,order:i}:t.valueExpression?{expression:t.valueExpression,order:i}:null}return r?{byRenderer:!0,order:"asc"}:null}(i.orderBy,i.renderer,i.objectIdField),o=be(i.renderer,t.filters),n=await async function(e,t){const i=t.renderer,r=fe(i);return{symbology:await rt(e,i),labels:await it(e,t,r)}}(e,i);return{storage:o,mesh:{displayRefreshVersion:r,strategy:{type:"feature"},factory:n,sortKey:a}}}function at(e,t){return e.fields.map((e=>({...e.toJSON(),type:ot(e,t)})))}function ot(e,t){const{onStatisticExpression:i,onStatisticField:r,statisticType:s}=e;switch(s){case"min":case"max":case"avg":case"avg_angle":case"sum":case"count":return"esriFieldTypeDouble";case"mode":{if(i){const{returnType:e}=i;return e?"string"===e?"esriFieldTypeString":"esriFieldTypeDouble":"esriFieldTypeString"}const e=t.find((e=>e.name===r));return e?e.type:"esriFieldTypeString"}}}class nt{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=He(t);return[{vvEvaluators:{0:Ge(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,i=t.parent,r=j(i),{capabilities:a,editingInfo:o,objectIdField:n,globalIdField:l,datesInUnknownTimezone:u,orderBy:c,subtypeField:p,parsedUrl:d}=i,f=i.fieldsIndex.toJSON(),h=f.fields,m=t.fullExtent?.toJSON(),y=De(t),g=i.timeInfo?.toJSON(),b=t.spatialReference.toJSON(),S=s(d);let v=n;if(c?.length){const e=!c[0].valueExpression&&c[0].field;e&&(v=e)}return{type:"feature-service",isSourceHosted:G(S.path),timeReferenceUnknownClient:u,subtypeField:p,globalIdField:l,maxRecordCount:a.query.maxRecordCount,tileMaxRecordCount:a.query.tileMaxRecordCount,capabilities:a,effectiveCapabilities:r,fields:h,fieldsIndex:f,fullExtent:m,geometryType:y,objectIdField:n,source:S,timeInfo:g,spatialReference:b,orderByFields:v,lastEditDate:o?.lastEditDate?.getTime()}}createSourceSchema(e,t,i){const{definitionExpression:r,customParameters:s,timeExtent:a,apiKey:o}=this.layer.parent;return Ke(e,{definitionExpression:r,customParameters:s,timeExtent:a},t,i,o)}createProcessorSchema(e,t,i){const{parent:{fields:r,geometryType:s,orderBy:a,objectIdField:o},renderer:n,labelingInfo:l,labelsVisible:u}=this.layer;return st(e,t,{featureReduction:null,fields:r.map((e=>e.toJSON())),geometryType:s,labelingInfo:l,labelsVisible:u,objectIdField:o,orderBy:a??"default",renderer:n?.clone()},i)}get hasRequiredSupport(){return Se(this.layer.renderer)}getUpdateHashProperties(e){const t=this.layer,{parent:i,parent:{definitionExpression:r,apiKey:s},renderer:a}=t,o=this.layer.labelsVisible?this.layer.labelingInfo:null;return{apiKey:s,customParameters:JSON.stringify(i.customParameters),definitionExpression:r,labelingInfo:o,orderBy:JSON.stringify(i.orderBy),renderer:a}}setGraphicOrigin(e){e.origin={type:"catalog",layer:this.layer}}}function lt(e,t){const i=e.extent,s=t?.clone().intersection(i),a=null!=s?s.width*s.height:0,o=t?t.width*t.height:0,n=0===o?0:a/o,l=r("featurelayer-snapshot-point-coverage");return!isNaN(n)&&n>=l}function ut(e,t){return null!=e.floorInfo&&(e.floorInfo.viewAllLevelIds.length>0||t.floors.length>0)}function ct(e,t,i){const r=function(e,t,i){if(null==e.floorInfo||!i.floors?.length)return t;let r=i.floors;const{floorField:s,viewAllLevelIds:a}=e.floorInfo;a.length&&(r=a);const o=r.filter((e=>""!==e)).map((e=>"'"+e+"'"));if(o.push("''"),t?.includes(s)){let e=new RegExp("AND \\("+s+".*NULL\\)","g");t=t.replace(e,""),e=new RegExp("\\("+s+".*NULL\\)","g"),t=(t=t.replace(e,"")).replaceAll(/\s+/g," ").trim()}let n="("+s+" IN ({ids}) OR "+s+" IS NULL)";return n=n.replace("{ids}",o.join(", ")),te(t,n)}(e,t?.where,i);return r?(t??=new w,t.where=r,t):t}class pt{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=$e(t,e)??He(t);return[{vvEvaluators:{0:Ge(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,i=j(t),{capabilities:a,editingInfo:o,objectIdField:n,typeIdField:l,globalIdField:u,datesInUnknownTimezone:c,orderBy:p,subtypeField:d,refreshInterval:f}=t,h=t.fieldsIndex.toJSON(),m=h.fields,y=t.fullExtent?.toJSON(),g=De(t),b=t.timeInfo?.toJSON(),S=t.spatialReference.toJSON(),v=t.types?.map((e=>e.toJSON())),_=s(this.layer.parsedUrl);this.layer.dynamicDataSource&&(_.query={layer:JSON.stringify({source:this.layer.dynamicDataSource})});let V=this.layer.objectIdField;if(p?.length){const e=!p[0].valueExpression&&p[0].field;e&&(V=e)}const w=!(null!=o?.lastEditDate)&&f>0,x=r("featurelayer-snapshot-enabled")&&"point"===t.geometryType&&a?.query.supportsPagination&&!a?.operations.supportsEditing&&!w,I=x&&lt(e,t.fullExtent),E=G(_.path);return{type:"feature-service",supportsSnapshotMinThreshold:x,supportsSnapshotMaxThreshold:I,snapshotCountThresholds:{min:r("featurelayer-snapshot-point-min-threshold"),max:r("featurelayer-snapshot-point-max-threshold")},isSourceHosted:E,typeIdField:l??void 0,types:v,timeReferenceUnknownClient:c,subtypeField:d,globalIdField:u,maxRecordCount:a.query.maxRecordCount,tileMaxRecordCount:a.query.tileMaxRecordCount,capabilities:a,effectiveCapabilities:i,fields:m,fieldsIndex:h,fullExtent:y,geometryType:g,objectIdField:n,source:_,timeInfo:b,spatialReference:S,orderByFields:V,lastEditDate:o?.lastEditDate?.getTime()}}createSourceSchema(e,t,i){const{definitionExpression:r,customParameters:s,gdbVersion:a,historicMoment:o,subtypeCode:n,subtypeField:l,timeExtent:u,apiKey:c}=this.layer;return Ke(e,{definitionExpression:r,customParameters:s,gdbVersion:a,historicMoment:o,subtypeCode:n,subtypeField:l,timeExtent:u},t,i,c)}createProcessorSchema(e,t,i){const{fields:r,renderer:s,geometryType:a,labelingInfo:o,labelsVisible:n,orderBy:l,objectIdField:u}=this.layer;return st(e,t,{fields:r.map((e=>e.toJSON())),renderer:s?.clone(),featureReduction:W(this.layer,t),geometryType:a,labelingInfo:o,labelsVisible:n,objectIdField:u,orderBy:l??"default"},i)}get hasRequiredSupport(){return Se(this.layer.renderer)}hasFilters(e){return ut(this.layer,e)}addFilters(e,t){return ct(this.layer,e,t)}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,renderer:r,gdbVersion:s,apiKey:a,subtypeCode:o}=t,n=this.layer.labelsVisible?this.layer.labelingInfo:null,l=t.historicMoment?.getTime()??void 0,u=JSON.stringify(t.customParameters),c=W(t,e)?.toJSON(),p=JSON.stringify(t.orderBy);return{apiKey:a,customParameters:u,definitionExpression:i,featureReduction:c,floors:ut(this.layer,e)?e.floors:null,gdbVersion:s,historicMoment:l,labelingInfo:n,orderBy:p,renderer:r,subtypeCode:o}}}class dt{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=$e(t,e)??He(t);return[{vvEvaluators:{0:Ge(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,i=j(t),{capabilities:r,objectIdField:s}=t,a=t.fieldsIndex.toJSON(),o=a.fields,n=null!=t.fullExtent?t.fullExtent.toJSON():null,l=De(t),u=t.timeInfo?.toJSON(),c=t.spatialReference.toJSON();!function(e){if(!("openPorts"in e))throw new p("source-not-supported")}(t.source);const d=await t.source.openPorts(),f=s;return{type:"memory",maxRecordCount:r.query.maxRecordCount,tileMaxRecordCount:r.query.tileMaxRecordCount,capabilities:r,effectiveCapabilities:i,fields:o,fieldsIndex:a,fullExtent:n,geometryType:l,objectIdField:s,source:d,timeInfo:u,spatialReference:c,orderByFields:f}}createSourceSchema(e,t,i){const{definitionExpression:r,timeExtent:s}=this.layer;return Ke(e,{definitionExpression:r,timeExtent:s,customParameters:null},t,i,null)}createProcessorSchema(e,t,i){const{fields:r,renderer:s,geometryType:a,labelingInfo:o,labelsVisible:n,orderBy:l,objectIdField:u}=this.layer;return st(e,t,{fields:r.map((e=>e.toJSON())),renderer:s?.clone(),featureReduction:W(this.layer,t),geometryType:a,labelingInfo:o,labelsVisible:n,objectIdField:u,orderBy:l??"default"},i)}get hasRequiredSupport(){return Se(this.layer.renderer)}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,renderer:r}=t,s=this.layer.labelsVisible?this.layer.labelingInfo:null,a=W(t,e)?.toJSON();return{orderBy:JSON.stringify(t.orderBy),definitionExpression:i,renderer:r,labelingInfo:s,featureReduction:a}}}class ft{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=$e(t,e)??He(t);return[{vvEvaluators:{0:Ge(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,i=j(t),{capabilities:r,objectIdField:s}=t,a=t.fieldsIndex.toJSON(),o=a.fields,n=null!=t.fullExtent?t.fullExtent.toJSON():null,l=De(t),u=t.spatialReference.toJSON(),c=await t.source.openPorts(),p=s;return{type:"memory",maxRecordCount:r.query.maxRecordCount,tileMaxRecordCount:r.query.tileMaxRecordCount,capabilities:r,effectiveCapabilities:i,fields:o,fieldsIndex:a,fullExtent:n,geometryType:l,objectIdField:s,source:c,spatialReference:u,orderByFields:p}}createSourceSchema(e,t,i){const{definitionExpression:r}=this.layer;return Ke(e,{definitionExpression:r,customParameters:null},t,i,null)}createProcessorSchema(e,t,i){const{fields:r,renderer:s,geometryType:a,labelingInfo:o,labelsVisible:n,objectIdField:l}=this.layer;return st(e,t,{fields:r.map((e=>e.toJSON())),renderer:s?.clone(),featureReduction:W(this.layer,t),geometryType:a,labelingInfo:o,labelsVisible:n,objectIdField:l,orderBy:"default"},i)}get hasRequiredSupport(){return Se(this.layer.renderer)}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,renderer:r}=t,s=this.layer.labelsVisible?this.layer.labelingInfo:null,a=W(t,e)?.toJSON();return{definitionExpression:i,renderer:r,labelingInfo:s,featureReduction:a}}}class ht{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=$e(t,e)??He(t);return[{vvEvaluators:{0:Ge(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,i=j(t),{capabilities:r,objectIdField:a}=t,o=t.fieldsIndex.toJSON(),n=o.fields,l=t.fullExtent?.toJSON(),u=De(t),c=t.timeInfo?.toJSON(),p=t.spatialReference.toJSON(),d=t.source.getSource(),f=this.layer.objectIdField,h=s(r);return h.query.maxRecordCount=d.maxRecordCount,{type:"ogc",maxRecordCount:h.query.maxRecordCount,tileMaxRecordCount:h.query.tileMaxRecordCount,capabilities:h,effectiveCapabilities:i,fields:n,fieldsIndex:o,fullExtent:l,geometryType:u,objectIdField:a,source:d,timeInfo:c,spatialReference:p,orderByFields:f}}createSourceSchema(e,t,i){const{customParameters:r,timeExtent:s,apiKey:a}=this.layer;return Ke(e,{customParameters:r,timeExtent:s},t,i,a)}createProcessorSchema(e,t,i){const{fields:r,renderer:s,geometryType:a,labelingInfo:o,labelsVisible:n,orderBy:l,objectIdField:u}=this.layer;return st(e,t,{fields:r.map((e=>e.toJSON())),renderer:s?.clone(),featureReduction:W(this.layer,t),geometryType:a,labelingInfo:o,labelsVisible:n,objectIdField:u,orderBy:l??"default"},i)}get hasRequiredSupport(){return Se(this.layer.renderer)}getUpdateHashProperties(e){const t=this.layer,{renderer:i,apiKey:r}=t,s=this.layer.labelsVisible?this.layer.labelingInfo:null,a=JSON.stringify(t.customParameters),o=W(t,e)?.toJSON();return{apiKey:r,customParameters:a,featureReduction:o,labelingInfo:s,orderBy:JSON.stringify(t.orderBy),renderer:i}}}class mt{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=$e(t,e)??He(t);return[{vvEvaluators:{0:Ge(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,i=j(t),{capabilities:a,objectIdField:o,globalIdField:n,orderBy:l,refreshInterval:u}=t,c=t.fieldsIndex.toJSON(),p=c.fields,d=t.fullExtent?.toJSON(),f=De(t),h=t.timeInfo?.toJSON(),m=t.spatialReference.toJSON(),y=s(this.layer.parsedUrl);let g=this.layer.objectIdField;if(l?.length){const e=!l[0].valueExpression&&l[0].field;e&&(g=e)}const b=u>0,S=r("featurelayer-snapshot-enabled")&&"point"===t.geometryType&&a?.query.supportsPagination&&!a?.operations.supportsEditing&&!b,v=S&&lt(e,t.fullExtent),_=G(y.path);return{type:"feature-service",supportsSnapshotMinThreshold:S,supportsSnapshotMaxThreshold:v,snapshotCountThresholds:{min:r("featurelayer-snapshot-point-min-threshold"),max:r("featurelayer-snapshot-point-max-threshold")},isSourceHosted:_,globalIdField:n,maxRecordCount:a.query.maxRecordCount,tileMaxRecordCount:a.query.tileMaxRecordCount,capabilities:a,effectiveCapabilities:i,fields:p,fieldsIndex:c,fullExtent:d,geometryType:f,objectIdField:o,source:y,timeInfo:h,spatialReference:m,orderByFields:g,timeReferenceUnknownClient:!1}}createSourceSchema(e,t,i){const{definitionExpression:r,customParameters:s,timeExtent:a}=this.layer;return Ke(e,{definitionExpression:r,customParameters:s,timeExtent:a},t,i,null)}createProcessorSchema(e,t,i){const{fields:r,renderer:s,geometryType:a,labelingInfo:o,labelsVisible:n,orderBy:l,objectIdField:u}=this.layer;return st(e,t,{fields:r.map((e=>e.toJSON())),renderer:s?.clone(),featureReduction:W(this.layer,t),geometryType:a,labelingInfo:o,labelsVisible:n,objectIdField:u,orderBy:l??"default"},i)}get hasRequiredSupport(){return Se(this.layer.renderer)}hasFilters(e){return ut(this.layer,e)}addFilters(e,t){return ct(this.layer,e,t)}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,renderer:r}=t,s=this.layer.labelsVisible?this.layer.labelingInfo:null,a=JSON.stringify(t.customParameters),o=W(t,e)?.toJSON();return{orderBy:JSON.stringify(t.orderBy),definitionExpression:i,renderer:r,labelingInfo:s,featureReduction:o,customParameters:a,floors:ut(this.layer,e)?e.floors:null}}}class yt{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=$e(t,e)??He(t);return[{vvEvaluators:{0:Ge(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,{objectIdField:i}=t,r=t.fields.map((e=>e.toJSON())),s=De(t),a=t.timeInfo?.toJSON()||null,o=t.spatialReference?t.spatialReference.toJSON():null;return{fields:r,fieldsIndex:this.layer.fieldsIndex.toJSON(),geometryType:s,objectIdField:i,timeInfo:a,source:this.layer.parsedUrl,spatialReference:o}}createSourceSchema(e,t,i){const{definitionExpression:r,geometryDefinition:s,customParameters:a}=this.layer;return{type:"stream",sourceRefreshVersion:i,service:e,tileInfoJSON:t.tileInfoJSON,availableFields:t.availableFields,dataFilter:{geometryDefinition:s?.toJSON(),definitionExpression:r,outSpatialReference:t.outSpatialReference.toJSON(),customParameters:a??null,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,purgeOptions:this.layer.purgeOptions.toJSON()}}}createProcessorSchema(e,t,i){const{fields:r,renderer:s,geometryType:a,labelingInfo:o,labelsVisible:n,objectIdField:l}=this.layer;return st(e,t,{fields:r.map((e=>e.toJSON())),renderer:s?.clone(),featureReduction:W(this.layer,t),geometryType:a,labelingInfo:o,labelsVisible:n,objectIdField:l,orderBy:"default"},i)}get hasRequiredSupport(){return Se(this.layer.renderer)}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,renderer:r}=t,s=this.layer.labelsVisible?this.layer.labelingInfo:null,a=JSON.stringify(t.customParameters),o=W(t,e)?.toJSON();return{definitionExpression:i,renderer:r,labelingInfo:s,featureReduction:o,customParameters:a,streamFilter:`${JSON.stringify(t.geometryDefinition)}${t.definitionExpression}`}}}async function gt(e,{subtypeField:t,sublayers:i}){const r=await Promise.all(i.map((({renderer:t})=>rt(e,t))));return{type:"subtype",subtypeField:t,renderers:i.reduce(((e,{subtypeCode:t},i)=>({...e,[t]:r[i]})),{})}}function bt(e,t){const i=we();return{type:"subtype",filters:e.filters,capabilities:{maxTextureSize:i.maxTextureSize},subtypeField:t.subtypeField,target:"feature",bindings:t.sublayers.reduce(((e,{renderer:t,subtypeCode:i})=>({...e,[i]:ve(t)})),{})}}async function St(e,{subtypeField:t,sublayers:i}){const r=await Promise.all(i.map((t=>{const i=fe(t.renderer),r={...t,geometryType:t.geometryType??null};return it(e,r,i)})));return{type:"subtype",subtypeField:t,renderers:i.reduce(((e,{subtypeCode:t},i)=>({...e,[t]:r[i]})),{})}}class vt{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){return[{vvEvaluators:{},deconflictionEnabled:this.layer.sublayers.every((e=>He(e)))}]}async createServiceOptions(e){const t=this.layer,i=j(t),{capabilities:a,datesInUnknownTimezone:o,editingInfo:n,globalIdField:l,objectIdField:u,refreshInterval:c,subtypeField:p}=t,d=t.fieldsIndex.toJSON(),f=d.fields,h=t.fullExtent?.toJSON(),m=De(t),y=t.timeInfo?.toJSON(),g=t.spatialReference.toJSON(),b=s(this.layer.parsedUrl),S=u,v=!(null!=n?.lastEditDate)&&c>0,_=r("featurelayer-snapshot-enabled")&&"point"===t.geometryType&&a?.query.supportsPagination&&!a?.operations.supportsEditing&&!v,V=_&&lt(e,t.fullExtent),w=G(b.path);return{type:"feature-service",supportsSnapshotMinThreshold:_,supportsSnapshotMaxThreshold:V,snapshotCountThresholds:{min:r("featurelayer-snapshot-point-min-threshold"),max:r("featurelayer-snapshot-point-max-threshold")},isSourceHosted:w,timeReferenceUnknownClient:o,subtypeField:p,globalIdField:l,maxRecordCount:a.query.maxRecordCount,tileMaxRecordCount:a.query.tileMaxRecordCount,capabilities:a,effectiveCapabilities:i,fields:f,fieldsIndex:d,fullExtent:h,geometryType:m,objectIdField:u,source:b,timeInfo:y,spatialReference:g,orderByFields:S,lastEditDate:n?.lastEditDate?.getTime()}}createSourceSchema(e,t,i){const{definitionExpression:r,customParameters:s,gdbVersion:a,historicMoment:o,subtypeField:n,timeExtent:l,apiKey:u}=this.layer,c=this.layer.sublayers.map((e=>e.subtypeCode)).join(","),p=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${c})`:"1=2";return Ke(e,{definitionExpression:te(r,p),customParameters:s,gdbVersion:a,historicMoment:o,subtypeField:n,timeExtent:l},t,i,u)}createProcessorSchema(e,t,i){return async function(e,t,i,r){return{storage:bt(t,i),mesh:{displayRefreshVersion:r,strategy:{type:"feature"},factory:{symbology:await gt(e,i),labels:await St(e,i)},sortKey:null}}}(e,t,{subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers,(e=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:e.labelingInfo,labelsVisible:e.labelsVisible,renderer:e.renderer,subtypeCode:e.subtypeCode,orderBy:null})))},i)}hasFilters(e){return ut(this.layer,e)||function(e,t){return e.sublayers.some((e=>!_t(e,t)))}(this.layer,e)}addFilters(e,t){e=ct(this.layer,e,t);const i=this.layer.sublayers.filter((e=>!_t(e,t))).map((e=>e.subtypeCode));if(!i.length)return e;e??=new w;const r=`NOT ${this.layer.subtypeField} IN (${i.join(",")})`;return e.where=te(e.where,r),e}get hasRequiredSupport(){return!0}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,gdbVersion:r,apiKey:s}=t,a=t.historicMoment?.getTime()??void 0,o=JSON.stringify(t.customParameters),n=ut(this.layer,e)?e.floors:null;return{gdbVersion:r,definitionExpression:i,historicMoment:a,customParameters:o,apiKey:s,sublayerHash:"sublayers"in this.layer&&this.layer.sublayers.items.reduce(((e,t)=>e+`${t.visible?1:0}.${JSON.stringify(t.renderer)}.${t.labelsVisible}\n.${JSON.stringify(t.labelingInfo)}`),""),floors:n}}setGraphicOrigin(e){const t=this.layer.fieldsIndex.get(this.layer.subtypeField),i=e.attributes[t.name],r=this.layer.sublayers.find((e=>e.subtypeCode===i));e.layer=e.sourceLayer=r}}function _t(e,t){return e.visible&&(0===e.minScale||Y(t.scale,e.minScale)||t.scale<e.minScale)&&(0===e.maxScale||Y(t.scale,e.maxScale)||t.scale>e.maxScale)}function Vt(e,t){const i=new Set;for(const r of e instanceof Set?e.values():e.keys())t.has(r)||i.add(r);return i}class wt{constructor(e){this.version=e}}class xt{constructor(e){this._subscriptions=new Map,this._visible=new Set,this._paused=new Set,this._version=0,this._config=e}destroy(){}get _coverageSet(){const e=this._coverage?Array.from(this._coverage.keys()).map((e=>e.id)):[];return new Set(e)}suspend(){this._suspendedOverage=this._coverage,this._coverage=null,this._updateSubscriptions()}resume(){null==this._coverage&&(this._coverage=this._suspendedOverage,this._suspendedOverage=null,this._updateSubscriptions())}update(e){return this._version=this._version+1%Number.MAX_SAFE_INTEGER,this._updateCoverage(e),this._updateSubscriptions(),new Set(this._visible)}_updateCoverage(e){this._coverage=this._config.tileInfoView.getTileCoverage(e.state,0,!0,"closest")}_updateSubscriptions(){const e=this._coverageSet,t=this._updateVisibility(),i=Vt(t,e),r=Vt(this._subscriptions,t),s=Vt(e,this._subscriptions),a=Vt(r,e),o=Vt(i,a),n=Vt(o,this._paused);this._visible=t;for(const e of s.values())this._subscriptions.set(e,new wt(this._version));for(const e of n.values())this._paused.add(e);for(const e of a.values())this._subscriptions.delete(e),this._paused.delete(e);(s.size||a.size||n.size)&&this._sendUpdateSubscriptions(s,a,n)}_sendUpdateSubscriptions(e,t,i){const r=Array.from(e.values()).map((e=>({tileId:e,version:this._subscriptions.get(e).version})));this._config.updateSubscriptions({subscribe:r,unsubscribe:Array.from(t.values()),pause:Array.from(i.values()),tileInfoJSON:this._config.tileInfoView.tileInfo.toJSON()})}_updateVisibility(){const e=new Set;if(!this._coverage)return e;for(const t of this._coverage.keys())this._config.isDone(t)?e.add(t.id):this._addVisibleParent(e,t)||this._addVisibleChildren(e,t)||e.add(t.id);return e}_addVisibleParent(e,t){let i=!1;for(const r of this._visible.values())new B(r).containsChild(t)&&(e.add(r),i=!0);return i}_addVisibleChildren(e,t){let i=!1;for(const r of this._visible.values()){const s=new B(r);t.containsChild(s)&&(e.add(r),i=!0)}return i}}const jt=4294967294;let It=class extends(je(Ee(U(Ie)))){constructor(){super(...arguments),this._commandsQueue=new _e({process:e=>{switch(e.type){case"processed-edit":return this._doEdit(e);case"update":return this._doUpdate()}}}),this._visibilityOverrides=new Set,this._highlightCounter=new xe,this._updateHighlight=y((async()=>{const e=[];for(const t of this._highlightCounter.ids()){const i=this._highlightCounter.getHighestReason(t),r=C(i);e.push({objectId:t,highlightFlags:r})}this._worker.processor.setHighlight(e)})),this._lastAvailableFields=[],this._instanceStore=new Ue,this.eventLog=new Le,this._sourceRefreshVersion=1,this._displayRefreshVersion=1,this._pipelineUpdating=!1,this._fields=null,this.featureEffectView=new Te}destroy(){this._worker?.destroy(),this._commandsQueue.destroy()}initialize(){this.addResolvingPromise(this._initProxy()),this.featureEffectView.featureEffect=this.featureEffect,this.featureEffectView.endTransitions()}async _initProxy(){const e=this.layer;if("isTable"in e&&e.isTable)throw new p("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:e});if("mesh"===e.geometryType)throw new p("featurelayerview:geometry-type-not-supported",`Geometry type of ${e.geometryType} is not supported`,{layer:e});if(("feature"===e.type||"subtype-group"===e.type)&&!1===j(e)?.operations.supportsQuery)throw new p("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e});this._worker&&this._worker.destroy();const t=this._createClientOptions();this._worker=await async function(e){const t=await H("FeaturePipelineWorker",{client:e,strategy:"dedicated"});return new ke(t)}(t)}get hasAllFeatures(){return this.eventLog.hasAllFeatures}get hasAllFeaturesInView(){return this.eventLog.hasAllFeaturesInView}get hasFullGeometries(){return this.eventLog.hasFullGeometries}get labelingCollisionInfos(){const e=this.layerAdapter.getLabelingDeconflictionInfo(this.view),t=this.layer.geometryType,i=!this.suspended;return e.map((({vvEvaluators:e,deconflictionEnabled:r})=>({container:this.featureContainer,vvEvaluators:e,deconflictionEnabled:r,geometryType:t,visible:i})))}get layerAdapter(){switch(this.layer.type){case"feature":return"memory"===this.layer.source.type?new dt(this.layer):new pt(this.layer);case"geojson":case"csv":case"wfs":return new dt(this.layer);case"subtype-group":return new vt(this.layer);case"ogc-feature":return new ht(this.layer);case"stream":return new yt(this.layer);case"oriented-imagery":return new mt(this.layer);case"knowledge-graph-sublayer":return new ft(this.layer);case"catalog-footprint":return new nt(this.layer);default:c(this.layer)}return null}get updateHash(){if(!this.layerAdapter)return null;const{availableFields:e,_displayRefreshVersion:t,timeExtent:i,clips:r,filter:s,featureEffect:a,_sourceRefreshVersion:o,view:{timeZone:n}}=this,l=JSON.stringify(r),u=a?.toJSON(),c=s?.toJSON();return JSON.stringify({availableFields:e,clipsHash:l,displayRefreshVersion:t,effectHash:u,filterHash:c,sourceRefreshVersion:o,timeExtent:i,timeZone:n,...this.layerAdapter.getUpdateHashProperties(this.view)})}getDisplayStatistics(e,t){return this.featureContainer.getDisplayStatistics(e,t)}async queryHeatmapStatistics(e){return this._worker.pipeline.queryHeatmapStatistics(e)}highlight(e,i="highlight"){let r;e instanceof t?r=[e.getObjectId()]:"number"==typeof e||"string"==typeof e?r=[e]:u.isCollection(e)&&e.length>0?r=e.map((e=>e?.getObjectId())).toArray():Array.isArray(e)&&e.length>0&&(r="number"==typeof e[0]||"string"==typeof e[0]?e:e.map((e=>e?.getObjectId())));const s=r?.filter(a);return s?.length?(this._addHighlight(s,i),d((()=>this._removeHighlight(s,i)))):d()}hasHighlight(){return!this._highlightCounter.empty}async hitTest(e,i){const s=await this.featureContainer.hitTest(i);if(0===s.length)return null;r("featurelayer-force-marker-text-draw-order")&&s.sort(((e,t)=>e-t));const{features:a,aggregates:o}=await this._worker.processor.getDisplayFeatures(s);return[...o.map((t=>this._createGraphicHit(e,Oe.fromJSON(t)))),...a.map((i=>this._createGraphicHit(e,t.fromJSON(i))))]}queryStatistics(){return this._worker.pipeline.queryStatistics()}async querySummaryStatistics(e,t,i){const r={...t,scale:this.view.scale};return this._worker.features.executeQueryForSummaryStatistics(this._cleanUpQuery(e),r,i)}async queryAggregateSummaryStatistics(e,t,i){const r={...t,scale:this.view.scale};return this._worker.aggregates.executeQueryForSummaryStatistics(this._cleanUpAggregateQuery(e),r,i)}async queryUniqueValues(e,t,i){const r={...t,scale:this.view.scale};return this._worker.features.executeQueryForUniqueValues(this._cleanUpQuery(e),r,i)}async queryAggregateUniqueValues(e,t,i){const r={...t,scale:this.view.scale};return this._worker.aggregates.executeQueryForUniqueValues(this._cleanUpAggregateQuery(e),r,i)}async queryClassBreaks(e,t,i){const r={...t,scale:this.view.scale};return this._worker.features.executeQueryForClassBreaks(this._cleanUpQuery(e),r,i)}async queryAggregateClassBreaks(e,t,i){const r={...t,scale:this.view.scale};return this._worker.aggregates.executeQueryForClassBreaks(this._cleanUpAggregateQuery(e),r,i)}async queryHistogram(e,t,i){const r={...t,scale:this.view.scale};return this._worker.features.executeQueryForHistogram(this._cleanUpQuery(e),r,i)}async queryAggregateHistogram(e,t,i){const r={...t,scale:this.view.scale};return this._worker.aggregates.executeQueryForHistogram(this._cleanUpAggregateQuery(e),r,i)}queryFeatures(e,t){return this.queryFeaturesJSON(e,t).then((e=>{const t=E.fromJSON(e);return t.features.forEach((e=>this._setLayersForFeature(e))),t}))}async queryVisibleFeatures(e,t){const i=await this._worker.pipeline.queryVisibleFeatures(this._cleanUpQuery(e),t),r=E.fromJSON(i);return r.features.forEach((e=>this._setLayersForFeature(e))),r}async queryAggregates(e,t){const i=await this._worker.aggregates.executeQuery(this._cleanUpAggregateQuery(e),t),r=Me.fromJSON(i);return r.features.forEach((e=>this._setLayersForFeature(e))),r}queryAggregateIds(e,t){return this._worker.aggregates.executeQueryForIds(this._cleanUpAggregateQuery(e),t)}queryAggregateCount(e,t){return this._worker.aggregates.executeQueryForCount(this._cleanUpAggregateQuery(e),t)}queryAggregateJSON(e,t){return this._worker.aggregates.executeQuery(this._cleanUpAggregateQuery(e),t)}queryFeaturesJSON(e,t){return this._worker.features.executeQuery(this._cleanUpQuery(e),t)}queryObjectIds(e,t){return this._worker.features.executeQueryForIds(this._cleanUpQuery(e),t)}queryFeatureCount(e,t){return this._worker.features.executeQueryForCount(this._cleanUpQuery(e),t)}async queryExtent(e,t){const i=await this._worker.features.executeQueryForExtent(this._cleanUpQuery(e),t);return{count:i.count,extent:Fe.fromJSON(i.extent)}}async getSampleFeatures(e){return this._worker.pipeline.getSampleFeatures(e)}setVisibility(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()}update(e){if(!this._subscriptionManager)return;const t=this._subscriptionManager.update(e);this.featureContainer.setVisibleTiles(t)}attach(){r("esri-2d-update-debug")&&console.debug("FeatureLayerView2D.attach"),this.featureContainer=new Ne(this),this.container.addChild(this.featureContainer),this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._subscriptionManager=new xt({tileInfoView:this.view.featuresTilingScheme,updateSubscriptions:e=>{this.featureContainer.updateSubscriptions(e),this._worker.pipeline.updateSubscriptions(e)},isDone:e=>this.featureContainer.isDone(e)}),this.requestUpdate(),this.addAttachHandles([b((()=>this.updateHash),(()=>this._update()),S),b((()=>this.updateSuspended),(e=>{e||this._subscriptionManager.resume()}))]),"stream"!==this.layer.type&&"catalog-footprint"!==this.layer.type&&this.addAttachHandles(this.layer.on("edits",(e=>this._edit(e))))}detach(){r("esri-2d-update-debug")&&console.debug("FeatureLayerView2D.detach"),this._fields=null,this.featureContainer.destroy(),this._commandsQueue.clear(),this.container.removeAllChildren(),this._subscriptionManager=f(this._subscriptionManager),this._worker.pipeline.onDetach()}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}isUpdating(){const e="renderer"in this.layer&&null!=this.layer.renderer,t=this._commandsQueue.updateTracking.updating,i=null!=this._updatingRequiredFieldsPromise,s=this.featureContainer.updatingHandles.updating,a=e&&(t||i)||s||this._pipelineUpdating||this.dataUpdating;if(r("esri-2d-log-updating")){console.log(`Updating FLV2D (${this.layer.id}): ${a}\n  -> hasRenderer ${e}\n  -> updatingRequiredFields ${i}\n  -> hasPendingCommand ${t}\n  -> dataUpdating ${this.dataUpdating}\n  -> processing ${this._pipelineUpdating}\n  -> updatingContainer ${s}\n`);for(const e of this.featureContainer.subscriptions())console.log(`    -> Tile[${e.id}] Done: ${e.done}`)}return a}_createClientOptions(){const e=this;return{get container(){return e.featureContainer},setUpdating:e=>{this._set("_pipelineUpdating",e.pipeline),this._set("dataUpdating",e.data)},emitEvent:e=>{this.emit(e.name,e.event)},get eventLog(){return e.eventLog},fetch:t=>Promise.all(t.map((t=>e.view.stage.painter.textureManager.rasterizeItem(t)))),fetchDictionary:e=>Promise.all(e.map((e=>this._fetchDictionaryRequest(e))))}}async _fetchDictionaryRequest(e){try{if("subtype-group"===this.layer.type)throw new Error("InternalError: SubtypeGroupLayer does not support dictionary renderer");const t=this.layer.renderer;if(!t||"dictionary"!==t.type)throw new Error("InternalError: Expected layer to have a DictionaryRenderer");const i=this._lastSchema.processor.mesh.factory.symbology;if("dictionary"!==i.type)throw new Error("InternalError: Expected schema to be of type 'dictionary'");const r={cimAnalyzer:this.view.stage.cimAnalyzer,cimResourceManager:this.view.stage.painter.textureManager.resourceManager,store:this._instanceStore,scaleExpression:i.scaleExpression};this._fields||(this._fields=this.layer.fields.map((e=>e.toJSON())));const s=i.visualVariableUniforms,a=await t.getSymbolAsync(e.feature,{fields:this._fields});return a&&a.data?{type:"dictionary-response",meshes:await pe(a.data,{uniforms:s,path:"renderer",schemaOptions:r})}:{type:"dictionary-response",meshes:[]}}catch(e){return{type:"dictionary-response",meshes:[]}}}_cleanUpQuery(e){const t=R.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t.toJSON()}_cleanUpAggregateQuery(e){const t=R.from(e)||this.createAggregateQuery();t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference);const i=t.objectIds??[];for(const e of t.aggregateIds??[])i.push(e);return t.objectIds=i,t.aggregateIds=[],t.toJSON()}async _update(){return this._commandsQueue.push({type:"update"})}async _edit(e){if(!this.updateSuspended)return this._validateEdit(e)?this._commandsQueue.push({type:"edit",edits:e}):void 0;this._subscriptionManager.suspend()}async doRefresh(e){this.attached&&(this.updateSuspended&&e||(e?this.incrementSourceRefreshVersion():this.incrementDisplayRefreshVersion()))}incrementSourceRefreshVersion(){this._sourceRefreshVersion=(this._sourceRefreshVersion+1)%jt+1}incrementDisplayRefreshVersion(){this._displayRefreshVersion=(this._displayRefreshVersion+1)%jt+1}_validateEdit(e){const t="globalIdField"in this.layer&&this.layer.globalIdField,i=e.deletedFeatures.some((e=>-1===e.objectId||!e.objectId)),r=t&&this.availableFields.includes(t);return i&&!r?(n.getLogger(this).error(new p("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected on the map`)),null):e}async _doUpdate(){"featureReduction"in this.layer&&this.layer.featureReduction&&(this.layer.featureReduction=this.layer.featureReduction?.clone());try{if(await this._updateRequiredFields(),this.destroyed||!this.layerAdapter?.hasRequiredSupport||!this._subscriptionManager)return;const e=this._instanceStore;e.updateStart();const t=this.featureEffect,i={store:e,cimAnalyzer:this.view.stage.cimAnalyzer,cimResourceManager:this.view.stage.painter.textureManager.resourceManager,scaleExpression:void 0},s=await this.layerAdapter.createServiceOptions(this.view),a=this._createViewSchemaConfig(),o={source:this.layerAdapter.createSourceSchema(s,a,this._sourceRefreshVersion),processor:await this.layerAdapter.createProcessorSchema(i,a,this._displayRefreshVersion)},n=v(this._lastSchema,o);if(!n)return this.featureContainer.requestRender(),e.updateEnd(),void(this.featureEffectView.featureEffect=t);this._lastSchema=o,this._fields=null;const l=Math.round(performance.now());r("esri-2d-update-debug")&&console.debug(`Id[${this.layer.uid}] Version[${l}] FeatureLayerView2D._doUpdate`,{changes:n}),this.featureContainer.updateStart();let u=[];Array.isArray(s.source)&&(u=s.source),await this._worker.pipeline.updateSchema(o,l,{transferList:u}),e.updateEnd(),this.featureEffectView.featureEffect=t,this.featureEffectView.endTransitions(),this.featureContainer.updateEnd(e,l),r("esri-2d-update-debug")&&console.debug(`Version[${l}] FeatureLayerView2D.updateEnd`),this.requestUpdate()}catch(e){r("esri-2d-update-debug")&&console.error("Encountered an error during update",e)}}async _doEdit(e){try{this.featureContainer.editStart(),await this._worker.pipeline.onEdits(e),this.featureContainer.editEnd()}catch(e){g(e)}}get hasFilter(){const e=this.layerAdapter.hasFilters?.(this.view)??!1;return null!=this.filter||null!=this.timeExtent||this._visibilityOverrides.size>0||e}_getEffectiveAvailableFields(e){const t=function(e,t){const i=new Set;return e&&e.forEach((e=>i.add(e))),t&&t.forEach((e=>i.add(e))),i.has("*")?["*"]:Array.from(i)}(this._lastAvailableFields,e);return this._lastAvailableFields=t,x(this.layer.fieldsIndex,t)}_createViewSchemaConfig(){const e=[function(e,t,i,r,s){s&&(s=s.clone());const a=null!=s?s.timeExtent:null,o=null!=i&&null!=a?i.intersection(a):i||a;o&&(s??=new w,s.timeExtent=o),s=t.addFilters?.(s,e)??s;let n=s?.toJSON()??null;return r.size&&(n??=(new w).toJSON(),n.hiddenIds=Array.from(r)),n}(this.view,this.layerAdapter,this.timeExtent,this._visibilityOverrides,this.filter),this.featureEffect?.filter?.toJSON()??null];return{availableFields:this._getEffectiveAvailableFields(this.availableFields),filters:e,outSpatialReference:this.view.spatialReference,tileInfoJSON:this.view.featuresTilingScheme.tileInfo.toJSON(),scale:this.view.scale}}_addHighlight(e,t){this._highlightCounter.addReason(e,t),this._updateHighlight().catch((e=>{g(e)||n.getLogger(this).error(e)}))}_removeHighlight(e,t){this._highlightCounter.deleteReason(e,t),this._updateHighlight().catch((e=>{g(e)||n.getLogger(this).error(e)}))}_setLayersForFeature(e){e.layer=e.sourceLayer=this.layer,this.layerAdapter.setGraphicOrigin&&this.layerAdapter.setGraphicOrigin(e)}_createGraphicHit(e,t){return this._setLayersForFeature(t),null!=t.geometry&&(t.geometry.spatialReference=this.view.spatialReference),{type:"graphic",graphic:t,layer:this.layer,mapPoint:e}}};e([i()],It.prototype,"_worker",void 0),e([i()],It.prototype,"_commandsQueue",void 0),e([i()],It.prototype,"_sourceRefreshVersion",void 0),e([i()],It.prototype,"_displayRefreshVersion",void 0),e([i({readOnly:!0})],It.prototype,"_pipelineUpdating",void 0),e([i({readOnly:!0})],It.prototype,"hasAllFeatures",null),e([i({readOnly:!0})],It.prototype,"hasAllFeaturesInView",null),e([i({readOnly:!0})],It.prototype,"hasFullGeometries",null),e([i()],It.prototype,"featureEffectView",void 0),e([i()],It.prototype,"labelingCollisionInfos",null),e([i()],It.prototype,"layerAdapter",null),e([i()],It.prototype,"updateHash",null),e([i()],It.prototype,"updating",void 0),It=e([l("esri.views.2d.layers.FeatureLayerView2D")],It);const Et=It;export{Et as default};
