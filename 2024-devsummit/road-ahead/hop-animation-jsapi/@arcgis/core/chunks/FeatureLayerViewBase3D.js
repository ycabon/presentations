/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import r from"../core/Error.js";import{d as t}from"./maybe.js";import{watch as s,syncAndInitial as o,initial as i,when as a}from"../core/reactiveUtils.js";import{property as l}from"../core/accessorSupport/decorators/property.js";import{n}from"../core/lang.js";import"./Logger.js";import{subclass as u}from"../core/accessorSupport/decorators/subclass.js";import{f as c,g as p}from"./dehydratedFeatures.js";import{b as y}from"./hydratedFeatures.js";import{c as h,F as d,a as m}from"./FeatureLikeLayerView3D.js";import{L as f}from"./LayerViewPerformanceInfo.js";import{L as g}from"./LayerView3D.js";import F,{p as _}from"../core/Accessor.js";import{throwIfAborted as w,createAbortError as b}from"../core/promiseUtils.js";import{r as x,e as v}from"./query.js";import M from"../Graphic.js";import{W as C}from"./WorkerHandle.js";import O from"../geometry/SpatialReference.js";import q from"../layers/support/Field.js";import{E as S}from"./EventedSet.js";import{u as j}from"./EllipsoidMode.js";import{U as V}from"./RibbonLineMaterial.js";import{F as R}from"./FeatureLayerView.js";import D from"../views/layers/LayerView.js";import{R as T}from"./RefreshableLayerView.js";class P extends f{constructor(e,r,t,s,o,i){super(e.usedMemory,e.displayedFeatures,e.totalFeatures,e.maximumFeatures,e.nodes,e.core),this.storedFeatures=r,this.totalVertices=t,this.partial=s,this.mode=o,this.symbolComplexity=i}}class N{constructor(e){this._controller=e,this._handle=new L((r=>e.schedule(r)))}destroy(){this._handle.destroy()}invoke(e,r){return e.buffer&&0!==e.buffer.byteLength?(e.options.sourceSpatialReference&&e.options.sourceSpatialReference instanceof O&&(e.options={...e.options,sourceSpatialReference:e.options.sourceSpatialReference.toJSON()}),this._handle.invoke(e,r).then((e=>{let r=0,t=0;const s=O.fromJSON(e.spatialReference);e.spatialReference=s;const o=async i=>{const a=e.fields;if(a)for(;r<a.length;)if(a[r]=q.fromJSON(a[r]),r++,i.madeProgress())return this._controller.reschedule((e=>o(e)));const l=e.features;for(;t<l.length;){const e=l[t];++t,e.uid=M.generateUID();const r=e.geometry;if(null!=r&&(r.spatialReference=s,E(r),i.madeProgress()))return this._controller.reschedule((e=>o(e)))}return e};return this._controller.schedule((e=>o(e)))}))):Promise.resolve(null)}}function E(e){switch(e.type){case"polyline":e.paths.reduce(((e,r)=>e+r.length),0)<n&&(e.paths=e.hasZ||e.hasM?e.paths.map((e=>e.map((e=>[e[0],e[1],e[2]])))):e.paths.map((e=>e.map((e=>[e[0],e[1]])))));break;case"polygon":e.rings.reduce(((e,r)=>e+r.length),0)<n&&(e.rings=e.hasZ||e.hasM?e.rings.map((e=>e.map((e=>[e[0],e[1],e[2]])))):e.rings.map((e=>e.map((e=>[e[0],e[1]])))))}}class L extends C{constructor(e){super("PBFDecoderWorker","_parseFeatureQuery",{_parseFeatureQuery:e=>[e.buffer]},e)}}let Q=class extends F{constructor(e){super(e)}get implicitFields(){const e=this.layer.outFields?.includes("*");if(!e)return new Set;const r=new Set(this.layerView.requiredFields),t=new Set(this.layerView.availableFields);return _(t,r)}get queryFeaturesDehydrated(){const{layer:e}=this,r=e.capabilities,t=r&&r.query,s=t&&t.supportsFormatPBF,o=e.parsedUrl;if(s){null==this._decoder&&(this._decoder=new N(this.controller));const r={sourceSpatialReference:e.spatialReference?.toJSON()??null,applyTransform:!0,maxStringAttributeFields:this.implicitFields,maxStringAttributeLength:H};return(e,t)=>x(o,e,"pbf",this._createRequestOptions(t)).then((e=>(w(t),null!=this._decoder?this._decoder.invoke({buffer:e.data,options:r},t.signal):Promise.reject(b()))))}return(r,t)=>v(o,r,e.spatialReference,this._createRequestOptions(t)).then((e=>c(e.data,{maxStringAttributeFields:this.implicitFields,maxStringAttributeLength:H})))}queryFeatureCount(e,r){return this.layer.queryFeatureCount(e,r)}destroy(){this._decoder=t(this._decoder)}_createRequestOptions(e){return{...e,query:{...this.layer.customParameters,token:this.layer.apiKey,...e?.query}}}};e([l({constructOnly:!0})],Q.prototype,"layer",void 0),e([l({constructOnly:!0})],Q.prototype,"layerView",void 0),e([l({constructOnly:!0})],Q.prototype,"controller",void 0),e([l({readOnly:!0})],Q.prototype,"implicitFields",null),e([l({readOnly:!0})],Q.prototype,"queryFeaturesDehydrated",null),Q=e([u("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileServiceQuery3D")],Q);let I=class extends F{constructor(e){super(e)}queryFeaturesDehydrated(e,r){return this.layer.queryFeatures(e,r)}queryFeatureCount(e,r){return this.layer.queryFeatureCount(e,r)}};e([l({constructOnly:!0})],I.prototype,"layer",void 0),e([l({readOnly:!0})],I.prototype,"queryFeaturesDehydrated",null),I=e([u("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileServiceMeshQuery3D")],I);let Z=class extends F{constructor(e){super(e)}queryFeaturesDehydrated(e,r){return this.layer.queryFeatures(e,r)}};e([l({constructOnly:!0})],Z.prototype,"layer",void 0),Z=e([u("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileServiceQuery3D")],Z);let A=class extends F{constructor(e){super(e)}queryFeaturesDehydrated(e,r){return this.source.queryFeaturesJSON(e,r).then(c,(t=>{if(t&&"query-features-json:unsupported"===t.name)return this.layer.queryFeatures(e,r);throw t}))}queryFeatureCount(e,r){return this.layer.queryFeatureCount(e,r)}};e([l({constructOnly:!0})],A.prototype,"layer",void 0),e([l({constructOnly:!0})],A.prototype,"source",void 0),A=e([u("esri.views.3d.layers.support.featureTileQuery3D.FeatureTileClientQuery3D")],A);const H=1024;class k{constructor(e){this._memoryCache=null,this._capabilities=null;const r=e.layerView.layer;this._layerView=e.layerView,this.objectIdField=r.objectIdField,this.globalIdField="globalIdField"in r?r.globalIdField:null,this._returnZ=e.returnZ,this._returnM=e.returnM;const t=this._layerView.view.resourceController;this.query=function(e,r){const{layer:t}=e;return"feature"===t.type&&"feature-layer"===t.source.type?null!=t.infoFor3D?new I({layer:t}):new Q({layer:t,layerView:e,controller:r}):"feature"===t.type&&"memory"===t.source.type||"csv"===t.type||"geojson"===t.type||"oriented-imagery"===t.type||"wfs"===t.type?new A({layer:t,source:t.source}):"ogc-feature"===t.type?new Z({layer:t}):null}(this._layerView,t.normal),t&&this._memoryCacheEnabled&&(this._memoryCache=t.memoryController.newCache(`fl-${r.uid}`))}get _memoryCacheEnabled(){switch(this._layerView.layer.source.type){case"feature-layer":case"ogc-feature":case"oriented-imagery":return!0;case"csv":case"geojson":case"memory":case"wfs":return!1}}destroy(){this._memoryCache=t(this._memoryCache),this.query.destroy()}createQuery(){const e=this._layerView.layer.createQuery();return e.outFields=this._layerView.availableFields,e.returnZ=this._returnZ,e.returnM=this._returnM,e.outSpatialReference=this.tilingScheme.spatialReference,e}get memoryCache(){return this._memoryCache}get viewingMode(){return this._layerView.view.state.viewingMode}get tilingScheme(){return this._layerView.view.featureTiles.tilingScheme}get scheduler(){const e=this._layerView.view.resourceController;return e?e.scheduler:null}get geometryType(){return this._layerView.layer.geometryType}get fullExtent(){return this._layerView.layer.fullExtent}get tileMaxRecordCount(){return this._layerView.layer.capabilities.query.tileMaxRecordCount}get maxRecordCount(){return this._layerView.layer.capabilities.query.maxRecordCount}get capabilities(){return null!=this._capabilities||(this._capabilities=h(this._layerView.layer)),this._capabilities}logFetchError(e,r){e.error("#fetchTile()",this._layerView.layer,r?.message??r)}}let U=class extends(T(d(R(g(D))))){constructor(e){super(e),this._controllerTotal=0,this._processorTotal=0,this.suspendResumeExtentMode="data"}initialize(){this.addHandles(s((()=>this._updatingRequiredFieldsPromise),(e=>this._updatingHandles.addPromise(e)),o))}destroy(){this._updatingHandles.removeAll(),this._fetcherContext=t(this._fetcherContext)}get maximumNumberOfFeatures(){return this.controller?.maximumNumberOfFeatures??this._get("maximumNumberOfFeatures")}set maximumNumberOfFeatures(e){this._set("maximumNumberOfFeatures",e),this.controller&&(this.controller.maximumNumberOfFeatures=e)}get maximumNumberOfFeaturesExceeded(){return!!this.controller&&!(this.suspended||!this.controller.maximumNumberOfFeaturesExceeded)}get updatingProgressValue(){let e=0;if(this.controller?.updating){const r=this.controller.updatingRemaining,t=Math.max(this.controller.updatingTotal,this._controllerTotal);t>0&&(e=(t-r)/t,this._controllerTotal=t)}let r=0;if(this.processor?.updating){const e=this.processor.updatingRemaining,t=Math.max(e,this._processorTotal);t>0&&(r=(t-e)/t,this._processorTotal=t)}return.5*(e+r)}get updatePolicy(){if(!this.controller)return V.ASYNC;switch(this.controller.mode){case"snapshot":{const e=J.get(this.layer.geometryType);return null==e||this.controller.serviceDataCount>e?V.ASYNC:V.SYNC}case"tiles":return V.ASYNC}}get hasZ(){const e=this.layer,r=e.capabilities&&e.capabilities.data;return!(!r||!r.supportsZ)&&("returnZ"in e&&null!=e.returnZ?e.returnZ:r.supportsZ)}get hasM(){const e=this.layer,r=e.capabilities&&e.capabilities.data;return!(!r||!r.supportsM)&&"returnM"in e&&null!=e.returnM&&e.returnM}setVisibility(e,r){this.processor?.setObjectIdVisibility(e,r)}createQuery(){return super.createQuery()}queryFeatures(e,r){const t=()=>super.queryFeatures(e,r);return"mesh"===this.layer.geometryType?this._queryFeaturesMesh(this._ensureQuery(e),t):t()}beforeSetController(e){e.maximumNumberOfFeatures=this.maximumNumberOfFeatures}createController(){this._fetcherContext=new k({layerView:this,returnZ:this.hasZ,returnM:this.hasM});const e=new m({layerView:this,context:this._fetcherContext,graphics:new S,extent:this.clippingExtent});return this._updatingHandles.add((()=>e.serviceDataExtent),(e=>{this.processor&&(this.processor.dataExtent=e)}),i),this.addHandles(s((()=>this.suspended),(r=>{r?e.suspend():e.resume()}),o)),this._updatingHandles.add((()=>this.processor?.displayFeatureLimit),(r=>e.displayFeatureLimit=r),i),this.addHandles(a((()=>!this.updating),(()=>{this._controllerTotal=0,this._processorTotal=0}))),e}async doRefresh(e){e&&!this.suspended&&this.controller&&this.controller.refetch(),this.processor.refreshFilter()}_popupFeatureHasRequiredFields(e,r){if(!super._popupFeatureHasRequiredFields(e,r))return!1;const t=p(e,this.layer.objectIdField);if(null==t)return!0;const s=this.controller.getMissingAttributesForFeature(t);if(null==s)return!0;for(const e of r)if(s.has(e))return!1;return!0}get usedMemory(){return(this.processor?.usedMemory??0)+(this.controller?.memoryForUnusedFeatures??0)}get unloadedMemory(){const e=this.processor?.unprocessedMemoryEstimate??0,r=this.controller?.expectedFeatureDiff??0,t=this.processor?.loadedFeatures??0,s=t+r>0?t/(t+r):1;return e+r*(this.processor?.usedMemoryPerFeature??0)*s}get ignoresMemoryFactor(){return this.controller?.hasMaximumNumberOfFeaturesOverride}async _queryFeaturesMesh(e,r){await this._validateQueryFeaturesMesh(e);const t=await r();if(e?.outStatistics||null==this.graphics3DProcessor)return t;const s=this.layer.objectIdField,o=this.graphics3DProcessor.graphics3DGraphicsByObjectID,i=[];for(const e of t.features)if(e.geometry){const r=o.get(e.attributes[s]);r&&(e.geometry=y(r.graphic.geometry),i.push(e))}else i.push(e);return t.features=i,t}async _validateQueryFeaturesMesh(e){if(!e)return;const t=e=>{throw new r("feature-layer-view:unsupported-query",`Queries on Mesh feature collection layers do not support '${e}'`)},s=["quantizationParameters","geometryPrecision","maxAllowableOffset"];for(const r of s)null!=e[r]&&t(r);"returnM"in e&&e.returnM&&t("returnM"),"returnCentroid"in e&&e.returnCentroid&&t("returnCentroid"),null==e.outSpatialReference||e.outSpatialReference.equals(this.view.spatialReference)||t("outSpatialReference")}get performanceInfo(){const e=this.controller?.displayFeatureLimit,r=null!=e?e.averageSymbolComplexity:void 0,t=null!=r?`f:${r.verticesPerFeature},v:${r.verticesPerCoordinate}`:"n/a";return new P(super.performanceInfo,this.controller?.performanceInfo?.storedFeatures??0,this.controller?.performanceInfo?.totalVertices??0,this.maximumNumberOfFeaturesExceeded,this.controller?.mode??"n/a",t)}get test(){return{updatePolicy:this.updatePolicy,controller:this.controller,loadedGraphics:this.controller?.graphics,...this.getTest()}}};e([l()],U.prototype,"layer",void 0),e([l()],U.prototype,"controller",void 0),e([l()],U.prototype,"_controllerTotal",void 0),e([l()],U.prototype,"_processorTotal",void 0),e([l()],U.prototype,"maximumNumberOfFeatures",null),e([l()],U.prototype,"maximumNumberOfFeaturesExceeded",null),e([l(j)],U.prototype,"updatingProgress",void 0),e([l({readOnly:!0})],U.prototype,"updatingProgressValue",null),e([l({readOnly:!0})],U.prototype,"updatePolicy",null),e([l({readOnly:!0})],U.prototype,"hasZ",null),e([l({readOnly:!0})],U.prototype,"hasM",null),e([l()],U.prototype,"suspendResumeExtentMode",void 0),U=e([u("esri.views.3d.layers.FeatureLayerViewBase3D")],U);const J=new Map([["point",5e3],["polygon",500],["polyline",1e3]]),B=U;export{B as F};
