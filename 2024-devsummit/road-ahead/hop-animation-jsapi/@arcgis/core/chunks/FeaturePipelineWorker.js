/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{h as e}from"./handleUtils.js";import{h as t,R as s}from"../core/lang.js";import{n as r}from"../core/scheduling.js";import{ignoreAbortErrors as i,throwIfNotAbortError as n,throwIfAborted as a,onAbort as o,isAborted as c,createResolver as u}from"../core/promiseUtils.js";import{watch as h,once as l}from"../core/reactiveUtils.js";import{a as d}from"./screenUtils.js";import p from"../layers/support/TileInfo.js";import{T as _}from"./TileStrategy.js";import{T as g}from"./TileKey2.js";import{n as m}from"./definitions.js";import{d as f,b as y}from"./maybe.js";import{d as b,h as I,a as S,b as w}from"./diffUtils.js";import{U as v}from"./UpdatingHandles.js";import x from"../geometry/SpatialReference.js";import j from"../layers/support/FieldsIndex.js";import{M as F,a as T,D as k,F as C,C as M,b as q,d as O,i as A,R as E,A as R,e as P}from"./AttributeStore.js";import{g as U}from"./tileUtils.js";import{g as D,d as L,a as z}from"./geohashUtils.js";import{g as G,e as N,o as W,t as B,f as V,q as Q,c as Y,p as X,v as $}from"./featureConversionUtils.js";import{h as H,O as J}from"./OptimizedFeature.js";import{Q as K}from"./QueryEngine.js";import Z from"../core/Evented.js";import{c as ee}from"./aaBoundingBox.js";import{o as te}from"./optimizedFeatureQueryEngineAdapter.js";import{O as se}from"./OptimizedGeometry.js";import{g as re,Y as ie}from"./unitUtils.js";import{r as ne,T as ae}from"./Tile.js";import{p as oe}from"./projectionSupport.js";import{U as ce}from"./UpdateTracking2D.js";import{Q as ue}from"./QueueProcessor.js";import he from"../request.js";import{f as le,e as de,b as pe}from"./query.js";import _e from"../TimeExtent.js";import ge from"../rest/support/Query.js";import{_ as me}from"./tslib.es6.js";import fe from"../core/Accessor.js";import{property as ye}from"../core/accessorSupport/decorators/property.js";import{L as be}from"./Logger.js";import{subclass as Ie}from"../core/accessorSupport/decorators/subclass.js";import Se from"../core/Error.js";import we from"../core/workers/Connection.js";import{t as ve}from"./quantizationUtils.js";import{i as xe}from"./ogcFeatureUtils.js";import{P as je}from"./pbf.js";import{a as Fe,b as Te}from"./pbfQueryUtils.js";import{S as ke}from"./StreamFeatureManager.js";import{createConnection as Ce}from"./createConnection.js";import Me from"../core/Handles.js";import"../config.js";import"./asyncUtils.js";import"../core/Collection.js";import"./ensureType.js";import"./tracking.js";import"./utils.js";import"./shared.js";import"./SimpleObservable.js";import"./ObservableBase.js";import"./metadata.js";import"./jsonMap.js";import"../core/JSONSupport.js";import"./reader.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Geometry.js";import"./assets.js";import"../core/urlUtils.js";import"../kernel.js";import"../geometry/support/webMercatorUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"../geometry/Extent.js";import"../layers/support/LOD.js";import"./TileKey.js";import"./vec2.js";import"../Color.js";import"./colorUtils.js";import"./HighlightOptions.js";import"./UnknownTimeZone.js";import"./datetime.js";import"../layers/support/fieldUtils.js";import"../core/sql.js";import"../intl.js";import"./date.js";import"./locale.js";import"./timeZoneUtils.js";import"./messages.js";import"../geometry.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./Axis.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"./dataViewUtils.js";import"./enums2.js";import"./Texture.js";import"./enums.js";import"./FramebufferObject.js";import"./BufferObject.js";import"./Program.js";import"./_commonjsHelpers.js";import"./VertexElementDescriptor.js";import"./BoundingBox.js";import"./vec2f32.js";import"./TimeOnly.js";import"./CIMSymbolHelper.js";import"./BidiEngine.js";import"../symbols/Font.js";import"./fontUtils.js";import"./GeometryUtils.js";import"./utils6.js";import"./shapingUtils.js";import"./mat2d.js";import"./mat2df32.js";import"./Rect.js";import"./defaults.js";import"../symbols/SimpleFillSymbol.js";import"./enumeration.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/Symbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/MarkerSymbol.js";import"../symbols/TextSymbol.js";import"./defaultsJSON.js";import"./timeSupport.js";import"../geometry/projection.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"./utils7.js";import"./utils8.js";import"./OptimizedFeatureSet.js";import"./MemCache.js";import"./LRUCache.js";import"../core/sql/WhereClause.js";import"./fieldType.js";import"./QueryEngineCapabilities.js";import"./utils10.js";import"./timeUtils.js";import"./heatmapUtils.js";import"./vec4.js";import"./vec4f64.js";import"./utils2.js";import"./basemapUtils.js";import"../Basemap.js";import"./collectionUtils.js";import"../core/Loadable.js";import"../core/Promise.js";import"./loadAll.js";import"../portal/Portal.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"./persistableUrlUtils.js";import"../support/BasemapStyle.js";import"./writeUtils.js";import"./layerUtils2.js";import"./utils3.js";import"./mat4.js";import"./utils11.js";import"./generateRendererUtils.js";import"./SnappingCandidate.js";import"./Scheduler.js";import"../core/signal.js";import"./debugFlags.js";import"./RenderState.js";import"./quickselect.js";import"./json.js";import"./libtess.js";import"./earcut.js";import"./TurboLine.js";import"./BindType.js";import"./Util.js";import"./vec2f64.js";import"./ReactiveMap.js";import"./Queue.js";import"./queryZScale.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./FullTextSearch.js";import"../core/Clonable.js";import"./spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"../core/workers/RemoteClient.js";import"./geojson.js";import"./date2.js";import"./clientSideDefaults.js";import"./sourceUtils.js";import"./CircularArray.js";import"../layers/support/StreamConnection.js";class qe{constructor(e){this._client=e,this.layerView=this._client.createInvokeProxy(),this.container=this._client.createInvokeProxy("container"),this.eventLog=this._client.createInvokeProxy("eventLog")}}function Oe(e){switch(e){case 1:case 8:case 32:return-1;case 2:case 64:return 0;case 4:case 16:case 128:return 1}}function Ae(e){switch(e){case 1:case 2:case 4:return-1;case 8:case 16:return 0;case 32:case 64:case 128:return 1}}class Ee{constructor(e,t,s=0){this.tileKey=e,this._bufferingEnabled=t,this._sizeHint=s,this._meshes={self:new F(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0}get id(){return this.tileKey}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(e){this._meshes.self.indexEnsureSize(e)}entityStart(e,t=e){this._currentEntityOverlaps=0,this._meshes.self.entityStart(e,t)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled)for(let e=0;e<8;e++){const t=1<<e;this._currentEntityOverlaps&t&&this._meshes.neighbors[e].entityEnd()}}recordStart(e,t,s){this._currentRecordOverlaps=0,this._meshes.self.recordStart(e,t,s)}recordEnd(e=0){const t=this._meshes.self.recordEnd(this._currentRecordOverlaps);return t&&0!==this._currentRecordOverlaps?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):t}recordBounds(e,t,s,r){this._bufferingEnabled&&this._addOverlap(e,t,s,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(e){this._meshes.self.metricStart(e)}metricBoxWrite(e){this._meshes.self.metricBoxWrite(e)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(e){this._meshes.self.vertexWrite(e)}vertexWriteF32(e){this._meshes.self.vertexWriteF32(e)}vertexWriteRegion(e){this._meshes.self.vertexWriteRegion(e)}indexWrite(e){this._meshes.self.indexWrite(e)}serialize(e){const t={message:[],transferList:[]},s=this._meshes.self.serialize();return t.message.push({tileId:this.tileKey,...s.message}),t.transferList.push(...s.transferList),this._meshes.neighbors.forEach(((s,r)=>{const i=s.serialize(),n=1<<r,a=Oe(n),o=Ae(n),c=U(new g(this.tileKey),a,o,e);t.message.push({tileId:c.id,...i.message}),t.transferList.push(...i.transferList)})),t}_addOverlap(e,t,s,r){const i=255^((e<0+s?148:e>=m-s?41:189)|(t<0+r?224:t>=m-r?7:231));this._currentRecordOverlaps|=i}_copyIntoNeighbors(){for(let e=0;e<8;e++){const t=1<<e;if(this._currentRecordOverlaps&t){if(!this._meshes.neighbors[e]){const s=Math.floor(this._sizeHint/16);this._meshes.neighbors[e]=new F(t,s)}const s=this._meshes.neighbors[e],r=-Oe(t)*m,i=-Ae(t)*m;s.copyLastFrom(this._meshes.self,r,i)}}}}class Re{}class Pe{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t,s,r){const i=new Pe;return i.setDefault(await T(e,t,s.meshes,r)),i}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}match(e,t){const s=this.doMatch(e,t)||this.getDefault();if(s&&s.length>0){const e=this.getBackgroundFill();if(e)return[...e,...s]}return s}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}}class Ue extends Pe{static async fromDictionaryRenderer(e,t,s){return new Ue(e,t,s)}constructor(e,t,s){super(),this._storage=e,this._schema=t,this._viewParams=s,this._hashToGroup=new Map}get fieldMap(){return this._schema.fieldMap}async fetchResources(e,t){const s=t.getCursor(),r=[];for(;s.next();)r.push(this._updateMeshWriterGroup(e,s));await Promise.all(r)}match(e,t){const s=e.getAttributeHash();return this._hashToGroup.get(s)}async _updateMeshWriterGroup(e,t){const s=t.readLegacyFeatureForDisplay(),r=t.getAttributeHash();if(this._hashToGroup.has(r))return;this._hashToGroup.set(r,null);const i=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",feature:s});if(!i)return;const n=await T(this._storage,e,i.meshes,this._viewParams);this._hashToGroup.set(r,n)}}class De extends Pe{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t,s,r){const i=await e.createComputedField(s),n=new De(i,s.isMaxInclusive);await Promise.all(s.intervals.map((async s=>{const i=await T(e,t,s.meshes,r);n.add(s,i)})));const a=await T(e,t,s.defaultSymbol,r);n.setDefault(a);const o=await T(e,t,s.backgroundFill,r);return n.setBackgroundFill(o),n}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort(((e,t)=>e.interval.min-t.interval.min))}size(){return super.size()+this._intervals.length}doMatch(e,t){const s=this._field?.read(e,t);if(null==s||isNaN(s)||s===1/0||s===-1/0)return null;for(let e=0;e<this._intervals.length;e++){const{interval:t,result:r}=this._intervals[e],i=s>=t.min,n=this._isMaxInclusive?s<=t.max:s<t.max;if(i&&n)return r}return null}}class Le extends Pe{static async fromLabelSchema(e,t,s,r){const i=s.classes.map((async s=>{const i=await T(e,t,s.meshes,r);return{minScale:s.minScale,maxScale:s.maxScale,meshes:i,expression:null,where:await e.createWhereClause(s.where)}})),n=await Promise.all(i);return new Le(n)}constructor(e){super(),this._labels=e}match(e,t){if(!this._labels.length)return null;const s=this._getLabels(t.$view.scale),r=[];for(const t of s)t.where&&!t.where(e)||r.push(...t.meshes);return r}_getLabels(e){return this._labels.filter((t=>this._validForTileScale(t,e)))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}}class ze extends Pe{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t,s,r){const i=s.expression?[e.createComputedField({expression:s.expression})]:[s.field?e.createComputedField({field:s.field}):null,s.field2?e.createComputedField({field:s.field2}):null,s.field3?e.createComputedField({field:s.field3}):null],n=(await Promise.all(i)).filter((e=>!!e)),a=new ze(n,s.fieldDelimiter),o=await T(e,t,s.defaultSymbol,r);a.setDefault(o);const c=await T(e,t,s.backgroundFill,r);return a.setBackgroundFill(c),await Promise.all(s.map.map((async(s,i)=>{const n=await T(e,t,s.symbol,r);"<Null>"===s.value?a.setNullResult(n):a.add(s.value,n,i+1)}))),a}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(null==s||""===s||"<Null>"===s)return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}doMatch(e,t){const s=this._getValueFromFields(e,t);if(null!==this._nullResult&&(null==s||""===s||"<Null>"===s))return this._nullResult;if(null==s)return null;const r=s.toString();return this._resultsMap.get(r)?.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const i=r.read(e,t);null==i||""===i?s.push("<Null>"):s.push(i)}return s.join(this._separator)}}async function Ge(e,t,s,r){switch(s.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return Pe.from(e,t,s,r);case"interval":return De.fromIntervalSchema(e,t,s,r);case"dictionary":return Ue.fromDictionaryRenderer(e,s,r);case"label":return Le.fromLabelSchema(e,t,s,r);case"map":return ze.fromMatcherSchema(e,t,s,r);case"subtype":return Ne.fromSubtypes(e,t,s,r);case"cluster":return We.fromClusterSchema(e,t,s,r);default:throw new Error("Impl")}}class Ne extends Pe{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t,s,r){const i=new Map,n=[];for(const a in s.renderers){const o=parseInt(a,10),c=Ge(e,t,s.renderers[a],r).then((e=>i.set(o,e)));n.push(c)}return await Promise.all(n),new Ne(i,s.subtypeField)}match(e,t){const s=e.readAttribute(this._subtypeField),r=this._subMatchers.get(s);return r?r.match(e,t):null}}class We extends Pe{static async fromClusterSchema(e,t,s,r){const[i,n]=await Promise.all([Ge(e,t,s.feature,r),Ge(e,t,s.cluster,r)]);return new We(i,n)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t){return 1===e.readAttribute("cluster_count")?this._featureMatcher.match(e,t):this._clusterMatcher.match(e,t)}}class Be extends Re{static async create(e,t,s,r){const i=await Ge(e,t,s.symbology,r),n=s.labels?await Ge(e,t,s.labels,r):null;return new Be(i,n)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){await Promise.all([this._symbology.fetchResources(e,t),this._labels?.fetchResources(e,t)])}enqueueWriterRequests(e,t,s){const r=this._symbology.match(t,s);if(r){for(const i of r)i.enqueueRequest(e,t,s);if(this._labels){const r=this._labels.match(t,s);if(!r)return;for(const i of r)i.enqueueRequest(e,t,s)}}}write(e,t,s,r,i){const n=this._symbology.match(s,r);if(n){for(const a of n)a.write(e,t,s,r,i);if(e.entityRecordCount()>=1&&this._labels){const a=this._labels.match(s,r);if(!a)return;for(const o of a)o.setReferences(n),o.write(e,t,s,r,i)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}}class Ve{static async create(e,t){if("count"===t.statisticType){const e=new k(1);return new Ve(t.name,t.alias,t.type,t.statisticType,e)}const s=await e.createComputedField({expression:t.onStatisticExpression?.expression,field:t.onStatisticField});return new Ve(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,i){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=i}}class Qe{constructor(e){this.subscription=e,this.handledChunks=new Set}destroy(){}*features(){}}class Ye{constructor(e,t){this._source=e,this._attributeStore=t,this._sendStates=new Map,this.events=new Z,this.featureAdapter=te}destroy(){}onSubscribe(e){const t=this.createState(e);this._sendStates.set(e.key.id,t),this.updateChunks()}onUnsubscribe(e){this._sendStates.get(e.key.id)?.destroy(),this._sendStates.delete(e.key.id)}invalidate(){const e=Array.from(this._sendStates.values());this._sendStates.clear();for(const t of e)t.destroy(),this.onSubscribe(t.subscription)}invalidateAttributeData(){}getDisplayIds(e){const t=new Set(e),s=[];for(const e of this._sendStates.values())for(const r of e.features())t.has(r.objectId)&&(s.push(r.displayId),t.delete(r.objectId));return s}getFeatureObjectIdsForAggregate(e){throw new Error("InternalError: AggregateId lookup not supported")}forEach(e){for(const t of this._sendStates.values())for(const s of t.features())e(s)}forEachInBounds(e,t){}forEachBounds(e,t){const s=ee();for(const r of e){const e=G(s,r.geometry,!1,!1);e&&t(e)}}}class Xe extends Ye{constructor(e,t,s,r){super(e,t),this.spatialReference=s,this.aggregateFields=r}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new K({featureStore:this,fieldsIndex:new j(this.aggregateFields),geometryType:"esriGeometryPolygon",objectIdField:"aggregateId",hasM:!1,hasZ:!1,spatialReference:this.spatialReference,cacheSpatialQueries:!0})),this._aggregateQueryEngine}}class $e{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.clear=s,this.end=r,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(e,t){return{type:"append",clear:this.clear,id:this.id,append:e,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:t}}}class He{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.remove=s,this.end=r,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(e,t){return{type:"update",id:this.id,modify:e,debugInfo:this.debugInfo,remove:this.remove,version:t,subscriptionVesrion:this.subscription.version,end:this.end}}}class Je extends C{static fromFeatures(e,t){const{objectIdField:s,geometryType:r}=t,i=N([],e,r,!1,!1,s);for(let t=0;t<i.length;t++)i[t].displayId=e[t].displayId;return Je.fromOptimizedFeatures(i,t)}static fromFeatureSet(e,t){const s=W(e,t.objectIdField);return Je.fromOptimizedFeatureSet(s,t)}static fromOptimizedFeatureSet(e,t){const s=Je.fromOptimizedFeatures(e.features,t);return s._exceededTransferLimit=e.exceededTransferLimit,s._transform=e.transform,s._fieldsIndex=new j(e.fields),s}static fromOptimizedFeatures(e,t,s){const r=new Je(e,t);return r._fieldsIndex=t.fieldsIndex,r._transform=s,r}static empty(e){return new Je([],e)}constructor(e,t){super(t),this._exceededTransferLimit=!1,this._featureIndex=-1,this._fieldsIndex=null,this._geometryType=t.geometryType,this._features=e}get fields(){return this._fieldsIndex}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}get _current(){return this._features[this._featureIndex]}removeIds(e){const t=new Set(e);this._features=this._features.filter((e=>!(null!=e.objectId&&t.has(e.objectId))))}getSize(){return this._features.length}getCursor(){return this.copy()}getInTransform(){return this._transform}getAttributeHash(){let e="";for(const t in this._current.attributes)e+=this._current.attributes[t];return e}getIndex(){return this._featureIndex}setIndex(e){this._featureIndex=e}getObjectId(){return this._current?.objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){this._current.displayId=e}copy(){const e=new Je(this._features,this.metadata);return this.copyInto(e),e}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readGeometryArea(){return H(this._current)?B(this._current.geometry,2):0}_readX(){return H(this._current)?this._current.geometry.coords[0]:0}_readY(){return H(this._current)?this._current.geometry.coords[1]:0}_readGeometry(){return this._current.geometry??null}_readServerCentroid(){return this._current.centroid}_readAttribute(e,t){if(!this._fieldsIndex){const t=this._current.attributes[e];if(void 0!==t)return t;const s=e.toLowerCase();for(const e in this._current.attributes)if(e.toLowerCase()===s)return this._current.attributes[e];return}const s=this._fieldsIndex.get(e);if(!s)return;let r=this._current.attributes[s.name];return null==r?r:("esriFieldTypeTimestampOffset"===this.fields.get(e)?.type&&(r=this.parseTimestampOffset(r)),t&&this.fields.isDateField(e)?new Date(r):r)}_readAttributes(){return this._current.attributes}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._transform=this._transform,e._fieldsIndex=this._fieldsIndex}}class Ke extends Qe{constructor(e,t){super(e),this.bins=new Map,this.done=!1,this._store=t}reset(){this.destroy(),this.bins.clear(),this.done=!1,this.handledChunks.clear()}destroy(){for(const e of this.bins.values()){const t=e.cachedFeature?.objectId;null!=t&&this._store.releaseDisplayIdForObjectId(t)}}*features(){for(const e of this.bins.values())e.cachedFeature&&(yield e.cachedFeature)}getGeohashBounds(e,t){const s=this.subscription.tile;return D(s.extent,s.resolution,t,e)}}class Ze extends Xe{static async create(e,t,s,r){const i=new M({spatialReference:t}),n=e.fixedBinLevel,a=await Promise.all(e.fields.map((async e=>Ve.create(i,e)))),o=e.featureFilter?await q.create({geometryType:s.service.geometryType,hasM:!1,hasZ:!1,timeInfo:s.service.timeInfo,fieldsIndex:new j(s.service.fields),spatialReference:t,filterJSON:e.featureFilter}):null;return new Ze({fields:a,geohashLevel:n,spatialReference:t,featureFilter:o},s,r)}constructor(e,t,s){super(t,s,e.spatialReference,e.fields),this._indexOptions=e,this._metadata=new O({geometryType:this.geometryType,objectIdField:"aggregateId",fields:this._indexOptions.fields})}get geometryType(){return"esriGeometryPolygon"}createState(e){return new Ke(e,this._attributeStore)}async*applyOverride(e){this._attributeStore.incrementDisplayIdGeneration();for(const e of this._sendStates.values())e.reset()}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const e of this._sendStates.values())for(const i of e.features())t.has(i.displayId)&&!s.has(i.objectId)&&(r.push(V(i,this.geometryType,!1,!1)),s.add(i.objectId));return{features:[],aggregates:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.objectIds);return[]}async*updateChunks(){if(this._source.chunks().length)for(const e of this._sendStates.values())yield*this._update(e,this._source)}async*_update(e,s){const{handledChunks:r,subscription:i,bins:n}=e,{spatialReference:a,geohashLevel:o}=this._indexOptions,c=i.tile;if(e.done)return;for(const t of s.chunks()){if(r.has(t.chunkId))continue;r.add(t.chunkId);const s=t.queryInfo;if("tileId"in s){const e=new g(s.tileId);if(e.level!==c.level||e.world!==c.key.world)continue}const i=t.getGeohashIndex(this._indexOptions),u=e.getGeohashBounds(a,o);i.putBins(n,u)}const u=[],h=i.tile.transform;for(const e of n.values()){if(e.cachedFeature)e.cachedFeature.attributes=e.getAttributes();else{const t=e.getGeometry(this.spatialReference,h),s=new J(t,e.getAttributes(),null);t||(s.centroid=e.getGeometryCentroid(this.spatialReference,h)),s.objectId=e.id,s.displayId=this._attributeStore.createDisplayIdForObjectId(e.id),e.cachedFeature=s}u.push(e.cachedFeature)}this.events.emit("changed"),e.done=!s.updateTracking.updating;const l=Je.fromOptimizedFeatures(u,this._metadata,h),d=l.getCursor(),p=e.subscription.tile.arcadeEvaluationOptions;for(;d.next();)this._attributeStore.setAttributeData(d.getDisplayId(),d,p);if(t("esri-2d-update-debug")){const e=i.tile;console.debug(`Tile[${e.key.id}] BinningStrategy.sendUpdates`)}if(this._attributeStore.sendUpdates(),t("esri-2d-update-debug")){const e=i.tile;console.debug(`Tile[${e.key.id}] BinningStrategy._sendUpdates.await`)}const _=new $e(e.subscription,l,!0,e.done,{});yield _}}const et=Math.PI/180;class tt{static create(e){return new tt(e.map((e=>function(e){switch(e.statisticType){case"min":return new rt(e);case"max":return new it(e);case"avg":return new at(e);case"avg_angle":return new ot(e);case"sum":case"count":return new nt(e);case"mode":return new ct(e)}}(e))))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const s of this._statistics)s.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const s=this._statistics[t],r=e._statistics[t];if(s.field!==r.field)throw new Error("InternalError: Tried to merge incompatible statistics");s.merge(r)}}clone(){return new tt(this._statistics.map((e=>e.clone())))}}class st{constructor(e){this.field=e}insert(e,t){if(!this.field.computed)return;const s=this.field.computed.read(e,t);A(s)||this._insertValue(s)}}class rt extends st{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const e=new rt(this.field);return e.value=this.value,e}}class it extends st{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const e=new it(this.field);return e.value=this.value,e}}class nt extends st{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const e=new nt(this.field);return e.value=this.value,e}}class at extends st{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const e=new at(this.field);return e._total=this._total,e._count=this._count,e}}class ot extends st{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,s=180/Math.PI;return Math.atan2(t,e)*s}_insertValue(e){this._x=this._x+Math.cos(e*et),this._y=this._y+Math.sin(e*et),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const e=new ot(this.field);return e._x=this._x,e._y=this._y,e._count=this._count,e}}class ct extends st{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[s,r]of this._frequencies.entries())r>t&&(t=r,e=s);return e}_insertValue(e){const t=this._frequencies.get(e);null!=t?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,s]of e._frequencies.entries()){const e=this._frequencies.get(t);null!=e?this._frequencies.set(t,e+s):this._frequencies.set(t,s)}}clone(){const e=new ct(this.field);return e._frequencies=new Map(this._frequencies),e}}class ut{static createId(e,t){return`${e}.${t}`}static create(e,t,s,r){return new ut(e,t,tt.create(s),r)}constructor(e,t,s,r){this.gridX=e,this.gridY=t,this._statistics=s,this._worldUnitsPerCell=r,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return ut.createId(this.gridX,this.gridY)}get count(){return this._count}get statistics(){return this._statistics}get objectIds(){return this._objectIds}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const e=new ut(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._firstFeatureAttributes=this._firstFeatureAttributes,e._objectIds=new Set(this._objectIds),e}insert(e,t){0===this._count?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=e.readXWorldSpace(),this._yWorldTotal+=e.readYWorldSpace(),this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(0!==e._count){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroid(e){const t=new se([],[this.centroidXWorld,this.centroidYWorld]);if(null!=e){const s=new se;return Q(s,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e){const t=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,s=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,r=new se([],[t,s]);if(null!=e){const t=new se;return Q(t,r,!1,!1,"esriGeometryPoint",e)}return r}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return null!=this._firstFeatureAttributes?{...e,...this._firstFeatureAttributes}:e}}function ht(e,t){return re(e)*ie*96/t}class lt{constructor(e){this._options=e,this._cells=new Map,this._pixelsPerMapUnit=ht(e.spatialReference,e.scale)}insert(e){const t=e.getCursor(),s={$view:{scale:this._options.scale}};for(;t.next();)this._insertFeature(t,s)}putCellsInBounds(e,t){const[s,r,i,n]=t,a=Math.floor(s*this._pixelsPerMapUnit/this._options.cellSize),o=Math.floor(r*this._pixelsPerMapUnit/this._options.cellSize),c=Math.ceil(i*this._pixelsPerMapUnit/this._options.cellSize),u=Math.ceil(n*this._pixelsPerMapUnit/this._options.cellSize);for(let t=o;t<=u;t++)for(let s=a;s<=c;s++){const r=`${s}.${t}`,i=this._cells.get(r);if(!i)continue;const n=e.get(i.id);n?i&&!e.has(i.id)&&n.merge(i):e.set(i.id,i.clone())}}putCells(e){for(const t of this._cells.values()){const s=e.get(t.id);s?t&&!e.has(t.id)&&s.merge(t):e.set(t.id,t.clone())}}_insertFeature(e,t){const{featureFilter:s}=this._options;if(null!==s&&!s.check(e))return;const r=e.readXWorldSpace()*this._pixelsPerMapUnit,i=e.readYWorldSpace()*this._pixelsPerMapUnit,n=Math.floor(r/this._options.cellSize),a=Math.floor(i/this._options.cellSize);this._getCellOrCreate(n,a).insert(e,t)}_getCellOrCreate(e,t){const s=ut.createId(e,t);let r=this._cells.get(s);if(!r){const i=1*this._options.cellSize/this._pixelsPerMapUnit;r=ut.create(e,t,this._options.fields,i),this._cells.set(s,r)}return r}}class dt{constructor(e,t){this.inner=e,this.displayId=t}}class pt extends Qe{constructor(e){super(e),this.didSend=!1,this.done=!1}}class _t{constructor(e,t,s,r,i){this._level=e,this._scale=t,this._indexOptions=s,this._clusterRadius=r,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const e of this._clusters.values())this._store.releaseDisplayIdForObjectId(e.inner.id);this._clusters.clear()}clusters(){return this._clusters.values()}updateChunks(e){let t=!1;for(const s of e)this._handledChunks.has(s.chunkId)||(this._handledChunks.add(s.chunkId),t=!0,s.getGridIndex({...this._indexOptions,scale:this._scale}).putCells(this._cells));return t&&this._clusterCells(),t}async updateStatistics(e){let t=!1;for(const e of this._clusters.values())e.inner.count>1&&(t=this._updateAggregateStatistics(this._statistics,e.inner)||t);if(t){const t=Array.from(this._statistics.entries()).map((([e,t])=>({fieldName:e,minValue:t.minValue,maxValue:t.maxValue})));await e.container.updateStatistics(this._level,t)}}createAggregateFeatures(e,t){const s=e.subscription,r=[],i=s.tile.transform;for(const e of this._clusters.values()){const t=e.inner.getCentroid(i),s=new J(t,e.inner.getAttributes(),null);s.objectId=e.inner.id,s.displayId=e.displayId;const[n,a]=s.geometry.coords;n<m&&n>=0&&a<m&&a>=0&&r.push(s)}return Je.fromOptimizedFeatures(r,t,s.tile.transform)}_clusterCells(){let e=Array.from(this._cells.values());e=e.sort(((e,t)=>t.count-e.count)),this._clusters.clear();const t=new Set;for(const s of e){if(t.has(s.id))continue;const e=this._store.createDisplayIdForObjectId(s.id),r=new dt(s.clone(),e);t.add(s.id),this._clusters.set(s.id,r);const i=this._clusterRadius*(1/ht(this._indexOptions.spatialReference,this._scale)),n=1+this._clusterRadius/this._indexOptions.cellSize,a=s.centroidXWorld,o=s.centroidYWorld;for(let e=s.gridY-n;e<=s.gridY+n;e++)for(let c=s.gridX-n;c<=s.gridX+n;c++){if(0===e&&0===c)continue;const s=this._cells.get(ut.createId(c,e));if(!s||t.has(s.id))continue;const n=Math.abs(s.centroidXWorld-a),u=Math.abs(s.centroidYWorld-o);n<i&&u<i&&(r.inner.merge(s),t.add(s.id))}}}_updateAggregateStatistics(e,t){let s=!1;for(const r of t.statistics.values()){if("esriFieldTypeString"===r.field.type)continue;const t=r.value,i=r.field,n=e.get(i.name);if(n){const{minValue:e,maxValue:r}=n,i=Math.min(n.minValue,t),a=Math.max(n.maxValue,t);e===i&&r===a||(n.minValue=i,n.maxValue=a,s=!0)}else e.set(i.name,{minValue:t,maxValue:t}),s=!0}return s}}class gt extends Xe{static async create(e,t,s,r,i){const n=new M({spatialReference:s}),a={fields:await Promise.all(t.fields.map((async e=>Ve.create(n,e)))),spatialReference:s,featureFilter:t.featureFilter?await q.create({geometryType:r.service.geometryType,hasM:!1,hasZ:!1,timeInfo:r.service.timeInfo,fieldsIndex:new j(r.service.fields),spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4};return new gt(e,t.clusterRadius,a,r,i)}constructor(e,t,s,r,i){super(r,i,s.spatialReference,s.fields),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._metadata=new O({geometryType:this.geometryType,objectIdField:"aggregateId",fields:[...this._indexOptions.fields,...this._source.service.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}]}),this._aggregateStatistics=new Map,this._cellsPerScale=new Map}get geometryType(){return"esriGeometryPoint"}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new pt(e)}async*applyOverride(e){this._aggregateStatistics.clear()}getDisplayIds(e){const t=new Set(e),s=[],r=this._getClusterState(this._requiredLevel,this._requiredScale);for(const e of r.clusters())t.has(e.inner.id)?(s.push(e.displayId),t.delete(e.inner.id)):1===e.inner.count&&t.has(e.inner.firstObjectId)&&(s.push(e.displayId),t.delete(e.inner.firstObjectId));return s}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const e of n.clusters())if(t.has(e.displayId)&&!s.has(e.displayId)){const t=e.inner.getCentroid(null),n=new J(t,e.inner.getAttributes(),null);n.objectId=e.inner.id,n.displayId=e.displayId;const a=V(n,this.geometryType,!1,!1);if(s.add(n.displayId),1===a.attributes.cluster_count){r.push(a);continue}i.push(a)}return{features:r,aggregates:i}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.objectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);if(t.updateChunks(e)||!this._source.updateTracking.updating)for(const e of this._sendStates.values())e.subscription.tile.level===this._requiredLevel&&(e.didSend=!1);const s=Array.from(this._sendStates.values()).filter((e=>e.done)).map((e=>e.subscription.tile.key)),r=new Set(s);for(const e of this._sendStates.values()){if(this._source.updateTracking.updating){if(s.some((t=>t.containsChild(e.subscription.tile.key))))continue;if(e.subscription.tile.key.getChildKeys().every((e=>r.has(e))))continue}e.didSend||e.subscription.tile.level!==this._requiredLevel||(e.didSend=!0,yield*this._update(e,t,this._source))}await t.updateStatistics(this._connection)}_getClusterState(e,t){if(null==e||null==t)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new _t(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,s,r){const{subscription:i}=e;if(e.done)return;const n=s.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!r.updateTracking.updating;const a=n.getCursor(),o=e.subscription.tile.arcadeEvaluationOptions;for(;a.next();)this._attributeStore.setAttributeData(a.getDisplayId(),a,o);if(t("esri-2d-update-debug")){const e=i.tile;console.debug(`Tile[${e.key.id}] ClusterStrategy.sendUpdates`)}if(this._attributeStore.sendUpdates(),t("esri-2d-update-debug")){const e=i.tile;console.debug(`Tile[${e.key.id}] ClusterStrategy._sendUpdates.await`)}const c=new He(e.subscription,n,[],e.done,{});yield c}}class mt{static fromReader(e){const t=[],s=e.copy(),r=ee();for(;s.next();)s.getBounds(r)&&t.push(s.getIndex());const i=ne(9,(e=>(s.setIndex(e),{minX:s.getBoundsXMin(),minY:s.getBoundsYMin(),maxX:s.getBoundsXMax(),maxY:s.getBoundsYMax()})));return i.load(t),new mt(i)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}}class ft{static create(e,t,s,r){const i=tt.create(e),n=new Array(32);for(let e=0;e<n.length;e++)n[e]=null;return new ft(i,t,s,r,n)}constructor(e,t,s,r,i){this._statistics=e,this.xNode=t,this.yNode=s,this.depth=r,this.children=i,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get objectIds(){return this._objectIds}clone(){const e=new ft(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._xGeohashTotal=this._xGeohashTotal,e._yGeohashTotal=this._yGeohashTotal,e.next=this.next,e.cachedFeature=this.cachedFeature,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r,i,n){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=s,this._xGeohashTotal+=r,this._yGeohashTotal+=i,this._statistics.insert(e,n),this._objectIds.add(e.getObjectId())}merge(e){if(0!==e._count){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getGeometry(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,o=oe({rings:[[[r,i],[r,a],[n,a],[n,i],[r,i]]]},x.WGS84,e),c=Y(new se,o,!1,!1);return null!=t?Q(new se,c,!1,!1,"esriGeometryPolygon",t,!1,!1):c}getGeometryCentroid(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,o=oe({x:(r+n)/2,y:(i+a)/2},x.WGS84,e),c=X(new se,o);return null!=t?Q(new se,c,!1,!1,"esriGeometryPoint",t,!1,!1):c}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s),n=this.xNode<<r,a=this.yNode<<i;return L({geohashX:n,geohashY:a},this.depth)}}class yt{constructor(e){this._fields=e,this._root=ft.create(this._fields,0,0,0)}destroy(){}insert(e,t,s,r,i,n,a){let o=this._root,c=0,u=0,h=0;for(;null!==o;){if(o.insert(e,t,s,r,i,a),c>=n)return;const l=Math.ceil((c+1)/2),d=Math.floor((c+1)/2),p=1-c%2,_=30-(3*l+2*d),g=30-(2*l+3*d),m=(r&7*p+3*(1-p)<<_)>>_,f=(i&3*p+7*(1-p)<<g)>>g,y=m+f*(8*p+4*(1-p));u=u<<3*p+2*(1-p)|m,h=h<<2*p+3*(1-p)|f,null==o.children[y]&&(o.children[y]=ft.create(this._fields,u,h,c+1)),c+=1,o=o.children[y]}}putBins(e,t){for(const s of this.getNodes(t)){const t=e.get(s.id);t?t.merge(s):e.set(s.id,s.clone())}}getNodes(e){const t=[],{geohashBounds:s,level:r}=e;let i=this._root;for(;null!==i;){const e=i.depth,n=i.xNode,a=i.yNode;if(e>=r){t.push(i),i=i.next;continue}const o=Math.ceil((e+1)/2),c=Math.floor((e+1)/2),u=1-e%2,h=30-(3*o+2*c),l=30-(2*o+3*c),d=~((1<<h)-1),p=~((1<<l)-1),_=(s.xLL&d)>>h,g=(s.yLL&p)>>l,m=(s.xTR&d)>>h,f=(s.yTR&p)>>l,y=n<<3*u+2*(1-u),b=a<<2*u+3*(1-u),I=y+8*u+4*(1-u),S=b+4*u+8*(1-u),w=Math.max(y,_),v=Math.max(b,g),x=Math.min(I,m),j=Math.min(S,f);let F=null,T=null;for(let e=v;e<=j;e++)for(let t=w;t<=x;t++){const s=t-y+(e-b)*(8*u+4*(1-u)),r=i.children[s];r&&(F||(F=r,F.next=i.next),T&&(T.next=r),T=r,r.next=i.next)}i=F||i.next}return t}}class bt{constructor(e){this._options=e,this._tree=new yt(e.fields)}insert(e){const t=e.getCursor(),s={$view:{scale:0}};for(;t.next();)this._insertFeature(t,s)}putBins(e,t){this._tree.putBins(e,t)}_insertFeature(e,t){const{featureFilter:s,geohashLevel:r,spatialReference:i}=this._options;if(null!==s&&!s.check(e))return;const n=e.readXWorldSpace(),a=e.readYWorldSpace(),o=z(n,a,r,i);o&&this._tree.insert(e,n,a,o[0],o[1],r,t)}}class It extends C{static from(e,t){return new It(e.copy(),t)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTranslationX=0,this._displayTranslationY=0,this._displayScaleX=1,this._displayScaleY=1,this._reader=e,this._indices=t,this._isPoint="esriGeometryPoint"===e.geometryType}setTransformForDisplay(e){const t=this._reader.getInTransform();if(null==t){const[t,s]=e.scale,[r,i]=e.translate;return this._displayTranslationX=-r/t,this._displayScaleX=1/t,this._displayTranslationY=i/s,this._displayScaleY=1/-s,void(this._displayTransform=e)}const[s,r]=t.scale,[i,n]=t.translate,[a,o]=e.scale,[c,u]=e.translate;if(this._displayScaleX=s/a,this._displayTranslationX=(i-c)/a,this._displayScaleY=r/o,this._displayTranslationY=(-n+u)/o,!this._isPoint&&t)throw new Error("InternalError: Relative transformations not supported for non-point features");this._displayTransform=e}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const e=new It(this._reader.copy(),this._indices);return e._currentIndex=this._currentIndex,e._displayTransform=this._displayTransform,e._displayTranslationX=this._displayTranslationX,e._displayTranslationY=this._displayTranslationY,e._displayScaleX=this._displayScaleX,e._displayScaleY=this._displayScaleY,e}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._reader.readXForDisplay()*this._displayScaleX+this._displayTranslationX}readYForDisplay(){return this._reader.readYForDisplay()*this._displayScaleY+this._displayTranslationY}readGeometryForDisplay(){const e=this._reader.readGeometryForDisplay();if(!this._displayTransform)return e;const t=new se;return Q(t,e,this.hasZ,this.hasM,this.geometryType,this._displayTransform),t.deltaDecode()}readCentroidForDisplay(){const e=this._reader.readCentroidForDisplay()?.clone();if(e){const[t,s]=e.coords;e.coords[0]=t*this._displayScaleX+this._displayTranslationX,e.coords[1]=s*this._displayScaleY+this._displayTranslationY}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){return this._reader.readAttribute(e,t)}readAttributes(){return this._reader.readAttributes()}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){return this._reader.readLegacyFeatureForDisplay()}readLegacyGeometryForDisplay(){return this._reader.readLegacyGeometryForDisplay()}readGeometryArea(){return this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this.readAttribute(e,!0)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}}class St{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._geohashIndex=null,this._geohashIndexHash=null,this._spatialIndex=null,this._gridIndex=null,this._gridIndexHash=null}queryFeaturesInBounds(e){const t=this._getSpatialIndex().search(e);return It.from(this.reader,t)}getGeohashIndex(e){const t=JSON.stringify(e);return t!==this._geohashIndexHash&&(this._geohashIndexHash=t,this._geohashIndex=new bt(e),this._geohashIndex.insert(this.reader)),this._geohashIndex}getGridIndex(e){const t=JSON.stringify(e);return t!==this._gridIndexHash&&(this._gridIndexHash=t,this._gridIndex=new lt(e),this._gridIndex.insert(this.reader)),this._gridIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=mt.fromReader(this.reader)),this._spatialIndex}}class wt extends St{constructor(){super(...arguments),this.chunkId="override",this.removed=new Set,this.overridenIds=new Set,this._features=[]}get reader(){return Je.fromOptimizedFeatures(this._features,this._layerSchema??{fields:[]})}get queryInfo(){return{}}get first(){return!1}get end(){return!1}applyOverrides(e){super.invalidate(),this._layerSchema||(this._layerSchema=e.reader.fullSchema());const{reader:t,removed:s}=e,r=[],i=new Set,n=t.getCursor(),a=new Set(s);for(this.overridenIds.clear();n.next();){const e=n.readOptimizedFeatureWorldSpace(),t=e.objectId;r.push(e),i.add(t),this.overridenIds.add(t),this.removed.delete(t)}for(const e of this._features){const t=e.objectId;a.has(t)||i.has(t)||(r.push(e),this.overridenIds.add(t))}this._features=r;for(const e of i.values())this.removed.delete(e);for(const e of s)this.removed.add(e),this.overridenIds.add(e)}getTileReader(e){if(!this._features.length)return null;const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}class vt extends Qe{}class xt extends Ye{constructor(e,t){super(e,t),this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._handle=e.store.events.on("remove",(e=>{this.handledChunks.delete(e.chunkId),this.handledChunksForAttributeData.delete(e.chunkId),this.handledChunksForIdCreation.delete(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const e=t.getObjectId();this._attributeStore.releaseDisplayIdForObjectId(e)}}))}destroy(){super.destroy(),this._handle.remove();for(const e of this._source.chunks()){const t=e.reader.getCursor();for(;t.next();){const e=t.getObjectId();this._attributeStore.releaseDisplayIdForObjectId(e)}}}invalidateAttributeData(){this.handledChunksForAttributeData.clear()}onSubscribe(e){super.onSubscribe(e),this._evalOptions=e.tile.arcadeEvaluationOptions}createState(e){return new vt(e)}get aggregateQueryEngine(){throw new Error("InternalError: FeatureUpdateStrategy does not support aggregations")}getDisplayIds(e){const t=new Set(e),s=[];for(const e of this._source.chunks()){const r=e.reader.getCursor();for(;r.next();)t.has(r.getObjectId())&&s.push(r.getDisplayId())}return s}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const e of this._source.chunks()){const i=e.reader.getCursor();for(;i.next();){const e=i.getObjectId();t.has(i.getDisplayId())&&!s.has(e)&&(r.push(i.readLegacyFeatureWorldSpace()),s.add(e))}}return{features:r,aggregates:[]}}async*applyOverride(e){const t=[],s=e.reader.getCursor();for(;s.next();){const e=s.getObjectId();t.push(e);const r=this._attributeStore.createDisplayIdForObjectId(e);s.setDisplayId(r),this._attributeStore.setAttributeData(r,s,this._evalOptions)}const r=this.getDisplayIds(t),i=this.getDisplayIds(e.removed);this._attributeStore.sendUpdates();const n=new wt;n.applyOverrides(e);for(const e of this._sendStates.values())yield new He(e.subscription,null,r,!1,n.queryInfo);for(const e of this._sendStates.values()){const t=n.getTileReader(e.subscription.tile);yield new He(e.subscription,t,i,!1,n.queryInfo)}for(const t of e.removed)this._attributeStore.releaseDisplayIdForObjectId(t);for(const e of t)this._attributeStore.releaseDisplayIdForObjectId(e)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const e of this._sendStates.values())yield*this._update(e)}}async _updateAttributeData(){for(const e of this._source.chunks()){const{chunkId:t,reader:s}=e;if(!this.handledChunksForIdCreation.has(t)){this.handledChunksForIdCreation.add(t);const e=s.getCursor();for(;e.next();){const t=this._attributeStore.createDisplayIdForObjectId(e.getObjectId());e.setDisplayId(t)}}}for(const e of this._source.chunks())if(!this.handledChunksForAttributeData.has(e.chunkId)){this.handledChunksForAttributeData.add(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const e=t.getDisplayId();this._attributeStore.setAttributeData(e,t,this._evalOptions)}}this._attributeStore.sendUpdates()}*_update(e){const{subscription:t,handledChunks:s}=e;for(const r of this._source.chunks()){const{chunkId:i}=r;if(s.has(i))continue;s.add(i);const n=r.getTileReader(t.tile);n&&(yield new $e(e.subscription,n,!1,r.end,r.queryInfo))}}}class jt{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._updatingHandles=new v,this._queue=new ue({concurrency:1,process:e=>this._process(e)}),this._proxy=new E({fetch:(e,t)=>this._connection.layerView.fetch(e,t),fetchDictionary:(e,t)=>this._connection.layerView.fetchDictionary(e,t)}),this._attributeStore=new R({type:"remote",initialize:e=>i(this._connection.container.initializeAttributeView(e)),update:e=>i(this._connection.container.updateAttributeView(e)),render:()=>i(this._connection.container.requestRender())}),this._updateTracking=new ce({debugName:"Processor"}),this._updateTracking.addUpdateTracking("AttributeStore",this._attributeStore.updateTracking)}destroy(){this._proxy.destory(),this._strategy?.destroy(),this._attributeStore.destroy(),this._updateTracking.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}get updateTracking(){return this._updateTracking}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[]}}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}setHighlight(e){this._strategy?this._attributeStore.setHighlight(e.map((({objectId:e,highlightFlags:t})=>({objectId:e,highlightFlags:t,displayId:this._strategy?.getDisplayIds([e])[0]})))):this._attributeStore.setHighlight(e.map((({objectId:e,highlightFlags:t})=>({objectId:e,highlightFlags:t,displayId:-1}))))}onSubscribe(e){this._strategy?.onSubscribe(e)}onUnsubscribe(e){this._strategy?.onUnsubscribe(e)}async update(e,s,r,i,n){const a=e.processor,o=b(this._schema,a);if(!o&&!i)return;t("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:o,schema:a}),this._schema=a;const c=e.source.service,u=x.fromJSON(e.source.dataFilter.outSpatialReference),h=new M({fields:new j,spatialReference:u});return await this._attributeStore.update(a.storage,h,c,u,s),this._strategy?.invalidateAttributeData(),i||I(o,"mesh")?(I(o,"mesh.strategy")&&await this._updateStrategy(a.mesh.strategy,u,n),this._updateSortKey(h,"sortKey"in a.mesh?a.mesh.sortKey:null),(I(o,"mesh.factory")||"dictionary"===a.mesh.factory.symbology.type)&&(this._factory=await Be.create(h,this._proxy,a.mesh.factory,r)),this._invalidate(),this._version=s,this._attributeStore.incrementDisplayIdGeneration(),this._connection.container.updateRenderState(this._version)):void 0}async applyOverride(e){if(!this._strategy)return;const t=this._strategy.applyOverride(e);for await(const e of t)try{await this._process(e)}catch(e){}this._source.applyOverride(e)}async updateChunks(){return this._updatingHandles.addPromise(this._doUpdateChunks())}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[];for await(const s of e){const e=this._queue.push(s).catch((e=>n(e)));t.push(e)}try{await Promise.all(t)}catch(e){}}async _updateStrategy(e,t,s){switch(this._strategy?.destroy(),e.type){case"feature":this._strategy=new xt(this._source,this._attributeStore);break;case"binning":this._strategy=await Ze.create(e,t,this._source,this._attributeStore);break;case"cluster":this._strategy=await gt.create(this._connection,e,t,this._source,this._attributeStore)}for(const e of s)this._strategy.onSubscribe(e)}async _updateSortKey(e,t){if(this._sortInfo=f(this._sortInfo?.computed),null!=t){const s=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:s}}}_invalidate(){this._strategy&&this._strategy.invalidate()}async _process(e){const s=e.subscription;if(t("esri-2d-update-debug")){const t=s.tile;console.debug(`Version[${this._version}] Tile[${t.key.id}, end=${e.end}] Processor._process`)}await this._fetchResources(e),a(s.signal);const r=await this._write(e,s.tile.arcadeEvaluationOptions),i=s.tile.tileInfoView.tileInfo.isWrappable,{message:n,transferList:o}=r.serialize(i),c=e.createMessage(n,this._version);if(a(s.signal),await this._connection.container.onMessage(c,{signal:s.signal,transferList:o}),t("esri-2d-update-debug")){const t=s.tile;console.debug(`Version[${this._version}] Tile[${t.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e){await this._fetchMatcherResources(e),await this._fetchWriterResources(e)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e){if(!e.reader)return;const t=e.reader.getCursor(),s=e.subscription.tile.arcadeEvaluationOptions;for(;t.next();)this._factory.enqueueWriterRequests(this._proxy,t,s);await this._proxy.fetchEnqueuedResources()}async _write(e,t){const s=e.subscription.tile,r=e.reader?.getCursor(),i=r?.getSize()??0,n=new Ee(s.key.id,!0,i);if(!r)return n;const a=s.arcadeEvaluationOptions;for(;r.next();){const e=this._getSortKeyValue(r,t);n.entityStart(r.getDisplayId(),e),this._factory.write(n,this._proxy,r,a,s.level),n.entityEnd()}return n}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:i}=this._sortInfo,n=i?this._factory.getSortKey(e,t):s?.read(e,t);return null==n||isNaN(n)?0:n*("asc"===r?-1:1)}}class Ft{static from(e){let t=0,s=0,r=0;return e.forEach((e=>{const i=e._readGeometry();i&&(s+=i.isPoint?1:i.lengths.reduce(((e,t)=>e+t),0),r+=i.isPoint?1:i.lengths.length,t+=1)})),new Ft(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}}class Tt{static fromSchema(e){return new Tt(function(e){const t=e.service,s="orderByFields"in t&&t.orderByFields?t.orderByFields:t.objectIdField+" ASC",r={returnCentroid:"esriGeometryPolygon"===t.geometryType,returnGeometry:!0,timeReferenceUnknownClient:"timeReferenceUnknownClient"in t&&t.timeReferenceUnknownClient,outSpatialReference:x.fromJSON(e.dataFilter.outSpatialReference),orderByFields:[s],where:e.dataFilter.definitionExpression??"1=1",outFields:e.availableFields};if("feature"===e.type){const{gdbVersion:t,historicMoment:s,timeExtent:i}=e.dataFilter;return{...r,gdbVersion:t,historicMoment:s?new Date(s):null,timeExtent:i?_e.fromJSON(i):null,outFields:e.availableFields}}return r}(e),e.dataFilter.customParameters,e.service.geometryType,"capabilities"in e.service?e.service.capabilities:null)}constructor(e,t,s,r){this._queryParams=e,this._customParameters=t,this._geometryType=s,this._capabilities=r}get pageSize(){if(null==this._capabilities)throw new Error("InternalError: Service does not support paged queries");const{query:e}=this._capabilities,t=e.supportsMaxRecordCountFactor?4:null,s=(e.maxRecordCount??8e3)*(t??1);return Math.min(8e3,s)}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t){const s=e.clone();if("*"===this._queryParams.outFields[0]){if("*"===(s.outFields??[])[0])return null;s.outFields=this._queryParams.outFields}else{const e=new Set(this._queryParams.outFields),r=[];for(const s of e)t.has(s)||r.push(s);if(0===r.length)return null;s.outFields=r}return s.returnGeometry=!1,s.returnCentroid=!1,s.quantizationParameters=null,s.cacheHint=!0,{inner:s,customParameters:this._customParameters}}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new ge({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,s){if(null==this._capabilities)throw new Error("InternalError: Service does not support tile queries");const r=this.createQuery(s),i=r.inner;return i.quantizationParameters=s.quantizationParameters??e.getQuantizationParameters(),i.resultType="tile",i.geometry=e.extent,this._capabilities.query.supportsQuantization?"esriGeometryPolyline"===this._geometryType&&(i.maxAllowableOffset=e.resolution*t("feature-polyline-generalization-factor")):"esriGeometryPolyline"!==this._geometryType&&"esriGeometryPolygon"!==this._geometryType||(i.maxAllowableOffset=e.resolution,"esriGeometryPolyline"===this._geometryType&&(i.maxAllowableOffset*=t("feature-polyline-generalization-factor"))),i.defaultSpatialReferenceEnabled=this._capabilities.query.supportsDefaultSpatialReference,i.compactGeometryEnabled=this._capabilities.query.supportsCompactGeometry,this._capabilities.query.supportsMaxRecordCountFactor&&(i.maxRecordCountFactor=4),r}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:4})}}let kt=class extends fe{constructor(e){super(),this._connection=e,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this.addHandles([h((()=>this._strategy?.connectionStatus??"disconnected"),(e=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:e})}),{initial:!0}),h((()=>this._strategy?.errorString||null),(e=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:e})),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(e){null==this._strategy&&this._resetUpdateInfo(performance.now());const t="event-handles";this.removeHandles(t),null!=e&&this.addHandles([e.events.on("data-received",(e=>this._onFeature(e))),e.events.on("message-received",(e=>this._onWebSocketMessage(e))),e.events.on("features-updated",(e=>this._onUpdate(e))),e.events.on("tick",(()=>this._onTick()))],t),this._strategy=e}updateCustomParameters(e){null!=e&&this._strategy?.updateCustomParameters(e)}sendMessageToSocket(e){this._strategy?.sendMessageToSocket(e)}sendMessageToClient(e){this._strategy?.sendMessageToClient(e)}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(e){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:e})}_onFeature(e){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}})}_onUpdate(e){this._updateInfo.client+=e}_onTick(){const e=performance.now(),t=e-this._lastTime;if(t>2500){const s=Math.round(this._updateInfo.client/(t/1e3)),r=Math.round(this._updateInfo.websocket/(t/1e3));this._resetUpdateInfo(e),this._layerView.emitEvent({name:"update-rate",event:{client:s,websocket:r}})}}_resetUpdateInfo(e){this._lastTime=e,this._updateInfo.client=0,this._updateInfo.websocket=0}};me([ye()],kt.prototype,"_strategy",void 0),kt=me([Ie("esri.views.2d.layers.features.sources.StreamMessenger")],kt);class Ct{constructor(e){this._store=e,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}async queryOverride(e){throw new Error("InternalError: LoadStrategy does not support fetching")}}const Mt=268435455;class qt{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}}const Ot=268435455,At=128e3,Et={small:{delta:new Int32Array(128),decoded:new Int32Array(128)},large:{delta:new Int32Array(At),decoded:new Int32Array(At)}};function Rt(e){return e<=Et.small.delta.length?Et.small:(e<=Et.large.delta.length||(Et.large.delta=new Int32Array(Math.round(1.25*e)),Et.large.decoded=new Int32Array(Math.round(1.25*e))),Et.large)}function Pt(e){for(;e.next();){if(1===e.tag())return e.getMessage();e.skip()}return null}function Ut(e,t,s,r,i,n){return.5*Math.abs(e*r+s*n+i*t-e*n-s*t-i*r)}function Dt(e,t,s,r){return 0==e*r-s*t&&e*s+t*r>0}class Lt extends C{static fromBuffer(e,t,s=!1){const r=t.geometryType,i=function(e){try{const t=2,s=new je(new Uint8Array(e),new DataView(e));for(;s.next();){if(s.tag()===t)return Pt(s.getMessage());s.skip()}}catch(e){const t=new Se("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});be.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}(e),n=function(e,t,s=!1){const r=e.asUnsafe(),i=r.pos(),n=new qt;let a=0,o=0,c=null,u=null,h=null,l=!1;const d=[];for(;r.next();)switch(r.tag()){case 1:c=r.getString();break;case 3:u=r.getString();break;case 12:h=r.processMessage(Te);break;case 9:if(n.exceededTransferLimit=r.getBool(),n.exceededTransferLimit){n.offsets.geometry=s?new Float64Array(8e3):new Int32Array(8e3),n.centroid=s?new Float64Array(16e3):new Int32Array(16e3);for(let e=0;e<n.centroid.length;e++)n.centroid[e]=Mt}break;case 13:{const e=r.processMessage(Fe);e.index=a++,d.push(e);break}case 15:{const e=r.getLength(),i=r.pos()+e;if(!n.exceededTransferLimit){const e=n.offsets.geometry,t=n.centroid;e.push(0),t.push(Mt),t.push(Mt)}!l&&n.exceededTransferLimit&&(l=!0,n.offsets.attributes=s?new Float64Array(8e3*a):new Uint32Array(8e3*a));let c=o*a;for(;r.pos()<i&&r.next();)switch(r.tag()){case 1:{l?n.offsets.attributes[c++]=r.pos():n.offsets.attributes.push(r.pos());const e=r.getLength();r.skipLen(e);break}case 2:if(t){const e=r.getLength(),t=r.pos()+e;for(;r.pos()<t&&r.next();)switch(r.tag()){case 3:{r.getUInt32();const e=r.getSInt64(),t=r.getSInt64();n.centroid[2*o]=e,n.centroid[2*o+1]=t;break}default:r.skip()}}else{n.offsets.geometry[o]=r.pos();const e=r.getLength();n.vertexCount+=e,r.skipLen(e)}break;case 4:{const e=r.getLength(),t=r.pos()+e;for(;r.pos()<t&&r.next();)switch(r.tag()){case 3:{r.getUInt32();const e=r.getSInt64(),t=r.getSInt64();n.centroid[2*o]=e,n.centroid[2*o+1]=t;break}default:r.skip()}break}default:r.skip()}o++,n.hasFeatures=!0;break}default:r.skip()}const p=c||u;if(!p)throw new Se("FeatureSet has no objectId or globalId field name");return n.fields=new j(d),n.featureCount=o,n.fieldCount=a,n.objectIdFieldIndex=n.fields.get(p)?.index,n.transform=h,n.displayIds=new Uint32Array(n.featureCount),n.groupIds=new Uint16Array(n.featureCount),r.move(i),n}(i,"esriGeometryPoint"===r,s);return new Lt(i,n,t)}constructor(e,t,s){super(s),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints="esriGeometryPoint"===s.geometryType}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new Lt(e,this._header,this.metadata);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===Ot?null:new se([],[e,t])}_readGeometry(e=!1){if(void 0===this._cache.geometry){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===Ot)return null;const e=this._header.centroid[2*this._featureIndex],s=this._header.centroid[2*this._featureIndex+1];t=new se([],[e,s])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(0===s)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch(e){return console.error("Failed to parse geometry!",e),null}}return this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(null==s)return;let r=this._readAttributeAtIndex(s.index);"esriFieldTypeTimestampOffset"===this.fields.get(e)?.type&&(r=this.parseTimestampOffset(r));const i=this._header.fields.isDateField(s.name);return t?null==r?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext}_readAttributeAtIndex(e){const t=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],s=this._reader;return s.move(t),function(e){const t=e.getLength(),s=e.pos()+t;for(;e.pos()<s&&e.next();)switch(e.tag()){case 1:return e.getString();case 2:return e.getFloat();case 3:return e.getDouble();case 4:return e.getSInt32();case 5:return e.getUInt32();case 6:return e.getInt64();case 7:return e.getUInt64();case 8:return e.getSInt64();case 9:return e.getBool();default:return e.skip(),null}return null}(s)}_readGeometryDeltaDecoded(e=!1){if(void 0===this._cache.unquantGeometry){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=Rt(t.coords.length).decoded,r=t.clone(s),i=r.coords;let n=0;for(const e of r.lengths){for(let t=1;t<e;t++){const e=2*(n+t),s=2*(n+t-1);i[e]+=i[s],i[e+1]+=i[s+1]}n+=e}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i=[],n=[];for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),s=t.pos()+e;for(;t.pos()<s;)n.push(t.getUInt32());break}case 3:{const e=t.getUInt32(),s=t.pos()+e;for(i.push(t.getSInt64()),i.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();t.pos()<s;)i.push(t.getSInt64()),i.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();break}default:t.skip()}return new se(n,i)}_parseGeometryForDisplay(e){const t=e.asUnsafe(),s=t.getLength(),r=t.pos()+s,i=[],n=[];let a=0,o=0,c=null,u=0;const h="esriGeometryPolygon"===this.geometryType;for(;t.pos()<r&&t.next();)switch(t.tag()){case 2:{const e=t.getUInt32(),s=t.pos()+e;for(;t.pos()<s;){const e=t.getUInt32();i.push(e),a+=e}c=Rt(2*a).delta;break}case 3:{t.getUInt32();const e=2+(this.hasZ?1:0)+(this.hasM?1:0);y(c);for(const s of i)if(o+e*s>c.length)for(let e=0;e<s;e++)t.getSInt32(),t.getSInt32(),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();else if(h){const e=this.getAreaSimplificationThreshold(s,this._header.vertexCount);let r=2,i=1;const a=!1;let h=t.getSInt32(),l=t.getSInt32();c[o++]=h,c[o++]=l,this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();let d=t.getSInt32(),p=t.getSInt32();for(this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();r<s;){let s=t.getSInt32(),n=t.getSInt32();this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();const a=h+d,_=l+p;Ut(h,l,a,_,a+s,_+n)>=e?(u+=-.5*(a-h)*(_+l),i>1&&Dt(c[o-2],c[o-1],d,p)?(c[o-2]+=d,c[o-1]+=p):(c[o++]=d,c[o++]=p,i++),h=a,l=_):(s+=d,n+=p),d=s,p=n,r++}i<3||a?o-=2*i:(u+=-.5*(h+d-h)*(l+p+l),Dt(c[o-2],c[o-1],d,p)?(c[o-2]+=d,c[o-1]+=p,n.push(i)):(c[o++]=d,c[o++]=p,n.push(++i)))}else{let e=0,r=t.getSInt32(),i=t.getSInt32();this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32(),c[o++]=r,c[o++]=i,e+=1;for(let n=1;n<s;n++){const s=t.getSInt32(),a=t.getSInt32(),h=r+s,l=i+a;u+=-.5*(h-r)*(l+i),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32(),n>2&&Dt(c[o-2],c[o-1],s,a)?(c[o-2]+=s,c[o-1]+=a):(c[o++]=s,c[o++]=a,e+=1),r=h,i=l}n.push(e)}break}default:t.skip()}return this._cache.area=u,n.length?new se(n,c):null}}class zt{constructor(e,t){this.service=e,this._metadata=t}destroy(){}}class Gt extends zt{constructor(e,t){super(e,t),this._portsOpen=async function(e){const t=new we;return await t.open(e,{}),t}(e.source).then((e=>this.client=e))}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return Je.fromFeatureSet(s,this._metadata)}}class Nt extends zt{async executeQuery(e,t){const{data:s}=await le(this.service.source,e,t),r=!e.quantizationParameters;return Lt.fromBuffer(s,this._metadata,r)}}class Wt extends zt{async executeQuery(e,t){const{source:s,capabilities:r,spatialReference:i,objectIdField:n,geometryType:a}=this.service;if(null!=e.quantizationParameters&&!r.query.supportsQuantization){const r=e.clone(),a=ve(r.quantizationParameters);r.quantizationParameters=null;const{data:o}=await de(s,r,i,t),c=W(o,n);return $(a,c),Je.fromOptimizedFeatureSet(c,this._metadata)}const{data:o}=await de(s,e,this.service.spatialReference,t);return"esriGeometryPoint"===a&&(o.features=o.features?.filter((e=>{if(null!=e.geometry){const t=e.geometry;return Number.isFinite(t.x)&&Number.isFinite(t.y)}return!0}))),Je.fromFeatureSet(o,this._metadata)}}class Bt extends zt{async executeQuery(e,t){const{capabilities:s}=this.service;if(e.quantizationParameters&&!s.query.supportsQuantization){const s=e.clone(),r=ve(s.quantizationParameters);s.quantizationParameters=null;const i=await xe(this.service.source,e,t);return $(r,i),Je.fromOptimizedFeatureSet(i,this._metadata)}const r=await xe(this.service.source,e,t);return Je.fromOptimizedFeatureSet(r,this._metadata)}}class Vt extends Ct{constructor(e,s,r,i,n){super(r),this._serviceInfo=e,this._queryInfo=s,this._metadata=i,this._eventLog=n,this._queue=new ue({concurrency:8,process:async e=>{const t={signal:e.options?.signal,query:e.query.customParameters};return this._adapter.executeQuery(e.query.inner,t)}}),this._adapter=function(e,s){switch(e.type){case"memory":return new Gt(e,s);case"ogc":return new Bt(e,s);case"feature-service":return e.capabilities.query.supportsFormatPBF&&t("featurelayer-pbf")?new Nt(e,s):new Wt(e,s)}}(e,i)}async updateFields(e){this._queryInfo.updateFields(e);const t=Array.from(this._store.chunks()).map((async e=>{const t=ge.fromJSON(e.queryInfo.queryJSON);if(t)try{return await this._tryUpdateFields(e.reader,t),null}catch(e){return e}})),s=(await Promise.all(t)).filter((e=>e));if(s.length)throw new Se("featurelayer-query","Encountered errors when downloading fields",{errors:s})}async queryOverride({edits:e}){const t=[],s=[];for(const r of e.removed)null!=r.objectId&&-1!==r.objectId?t.push(r.objectId):s.push(r.globalId);s.length&&t.push(...this._mapGlobalIdsToObjectIds(s));const r=e.addOrModified.map((({objectId:e})=>e)),i=this._queryInfo.createQuery({objectIds:r});return{reader:await this._fetch(i),removed:t}}_mapGlobalIdsToObjectIds(e){const t=new Set(e),s="globalIdField"in this._serviceInfo?this._serviceInfo.globalIdField:null;if(null==s)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");const r=[];return this._store.forEachUnsafe((e=>{const i=e.readAttribute(s);t.has(i)&&r.push(e.getObjectId())})),r}async _fetch(e,t){const s=await this._enqueue(e,t);return await this._tryUpdateFields(s,e.inner),s}async _tryUpdateFields(e,t){const s=this._queryInfo.createPatchFieldsQuery(t,e.fields);if(!s)return;const r=await this._enqueue(s,this._options);e.joinAttributes(r)}async _enqueue(e,t){return this._eventLog.onEvent({type:"fetchStart"}),this._queue.push({query:e,options:t}).finally((()=>{this._eventLog.onEvent({type:"fetchEnd",done:0===this._queue.length})}))}}class Qt extends Vt{constructor(){super(...arguments),this._chunksById=new Map}unload(e){this._removeChunks(e.tile)}_addChunk(e){const s=e.tile.id;this._chunksById.has(s)||this._chunksById.set(s,[]);const r=e.size();(r||e.first||e.end)&&(t("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${r}]`),this._chunksById.get(s).push(e),this._store.insert(e))}_removeChunks(e){const s=this._chunksById.get(e.key.id)??[];for(const r of s)t("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${r.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(r);this._chunksById.delete(e.key.id)}}class Yt extends St{constructor(e,t,s,r,i,n){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=i,this._end=n,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return 0===this._sourceTileDepth}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}}class Xt{constructor(e,t){this.subscription=e,this._tileIdToResult=new Map,this._controller=new AbortController,o(e.options,(()=>this._controller.abort())),o(t,(()=>this._controller.abort()))}get(e){return this._tileIdToResult.get(e)}set(e,t){this._tileIdToResult.set(e,t)}get options(){return{signal:this._controller.signal}}}class $t extends Qt{constructor(){super(...arguments),this._loadStates=new Map}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new Xt(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{for await(const s of this._fetchChunkInfos(t,e.tile,0)){const{queryJSON:t,reader:r,sourceTile:i,sourceTileDepth:n,tile:o}=s,c=new Yt(r,t,o,i,n,!1);a(e.options),this._addChunk(c)}}catch(e){s=e}const r=new Yt(Je.empty(this._metadata),null,e.tile,null,-1,!0);if(this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.delete(e.key.id)}async*_fetchChunkInfos(e,s,r){let i=e.get(s.id);const n=!!i;if(i||(i=await this._fetchChunkInfo(e,s,r),e.set(s.id,i)),i.reader.exceededTransferLimit&&r<t("featurelayer-query-max-depth"))for(const t of s.createChildTiles())yield*this._fetchChunkInfos(e,t,r+1);else n||(yield i)}async _fetchChunkInfo(e,t,s){const r=e.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(t,{returnExceededLimitFeatures:!1,quantizationParameters:r});return{reader:await this._fetch(i,e.subscription.options),queryJSON:i.inner.toJSON(),tile:e.subscription.tile,sourceTile:t,sourceTileDepth:s}}}class Ht extends St{constructor(e,t,s,r,i){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return 0===this._page}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}}class Jt{constructor(e,t){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,o(e.options,(()=>this._controller.abort())),o(t,(()=>this._controller.abort()))}resetAbortController(){this._controller=new AbortController}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}}class Kt extends Qt{constructor(){super(...arguments),this._loadStates=new Map}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new Jt(e,this._options));const t=this._loadStates.get(e.key.id);let s;t.resetAbortController();try{await this._fetchPages(t)}catch(e){s=e}const r=new Ht(Je.empty(this._metadata),null,e.tile,-1,!0);if(c(t.options)||this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.delete(e.key.id)}async _fetchPages(e){let t=0,s=e.pageStart,r=1;for(;t<20&&!e.done;){const i=[];for(let t=0;t<r;t++)i.push(this._fetchChunk(e,s++));const n=await Promise.all(i);for(const t of n)(0!==t.size()||t.first)&&(e.add(t.page,!t.reader.exceededTransferLimit),a(e.options),this._addChunk(t));t++,r=Math.min(r+1,4)}}async _fetchChunk(e,t){const s=e.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,t),i=await this._fetch(r,e.options);return new Ht(i,r.inner.toJSON(),s,t,!1)}}class Zt extends St{constructor(e,t,s,r){super(),this._reader=e,this._queryJSON=t,this._page=s,this._end=r,this.chunkId=`${this._page}${this.end?"e":""}`}get reader(){return this._reader}get first(){return 0===this._page}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}class es extends Vt{constructor(e,t,r,i,n,a){super(e,t,r,n,a),this._random=new s(1e3),this._promise=this._downloadPages(i)}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return this._promise}unload(e){}async _downloadPages(e){const t=Math.ceil(e/this._queryInfo.pageSize),s=Array.from({length:t},((e,t)=>t)).sort(((e,t)=>this._random.getInt()-this._random.getInt())),r=await Promise.all(s.map((e=>this._downloadPage(e)))),i=new Zt(Je.empty(this._metadata),null,-1,!0);this._store.insert(i);const n=r.filter((e=>e));if(n.length)throw new Se("featurelayer-query","Encountered errors when downloading data",{errors:n})}async _downloadPage(e){try{const t=this._queryInfo.createPagedQuery(e),s=await this._fetch(t,this._options),r=new Zt(s,t.inner.toJSON(),e,!1);return a(this._options),this._store.insert(r),null}catch(e){return e}}}let ts=class extends fe{constructor(e){super(e)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};me([ye()],ts.prototype,"connection",void 0),me([ye()],ts.prototype,"connectionStatus",null),me([ye()],ts.prototype,"errorString",null),ts=me([Ie("esri.views.2d.layers.features.sources.StreamConnectionState")],ts);class ss{constructor(e,t){this._metadata=e,this._onUpdate=t,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return Je.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(e){this._objectIdToFeature.set(e.objectId,e)}forEach(e){this._objectIdToFeature.forEach(e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),t):null}clear(){this._objectIdToFeature=new Map}update(e,t){this._onUpdate(e?.length??0)}}class rs extends St{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}class is extends Ct{constructor(e,t,s,r,i){super(s),this._service=e,this._dataFilter=t,this._streamOptions=r,this._connectionState=new ts,this.events=new Z;const{objectIdField:n,timeInfo:a}=e,{purgeOptions:o}=t;this._stagingStore=new ss(i,(e=>this.events.emit("features-updated",e))),this._manager=new ke(this._stagingStore,n,a,o),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){this._manager.checkForUpdates(),this._chunk&&this._store.remove(this._chunk),this._chunk=new rs(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick")}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){this._connection=f(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(null!=this._connection)return;const{geometryType:t,source:s,spatialReference:r}=this._service,{maxReconnectionAttempts:i,maxReconnectionInterval:n,geometryDefinition:a,definitionExpression:o,customParameters:c}=this._dataFilter;this._connection=Ce(s,r,this._streamOptions.outSR,t,o,a,i,n,c),this._handlesGroup=e([this._connection.on("data-received",(e=>this._onFeature(e))),this._connection.on("message-received",(e=>this._onWebSocketMessage(e)))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear()}updateCustomParameters(e){this._connection?.updateCustomParameters(e)}sendMessageToSocket(e){this._connection?.sendMessageToSocket(e)}sendMessageToClient(e){this._connection?.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch(e){}}}class ns{constructor(e){this._onChange=e,this._chunks=new Map,this._overrideChunk=new wt,this.events=new Z,this.featureAdapter=new P}destroy(){this.clear()}clear(){for(const e of this.chunks())this.events.emit("remove",e);this._chunks.clear()}*chunks(){this._overrideChunk&&(yield this._overrideChunk),yield*this._chunks.values()}insert(e){t("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._overrideChunk.overridenIds.size&&e.reader.removeIds(this._overrideChunk.overridenIds),this._chunks.set(e.chunkId,e),this.events.emit("changed"),this._onChange()}remove(e){t("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this.events.emit("remove",e)}applyOverrides(e){this._overrideChunk.applyOverrides(e);for(const e of this._chunks.values())e.reader.removeIds(this._overrideChunk.overridenIds)}forEach(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const s=r.getObjectId();t.has(s)||(e(r.copy()),t.add(s))}}}forEachUnsafe(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const s=r.getObjectId();t.has(s)||(e(r),t.add(s))}}}forEachInBounds(e,t){const s=new Set;for(const r of this.chunks()){const i=r.queryFeaturesInBounds(e);for(;i.next();){const e=i.getObjectId();s.has(e)||(t(i.copy()),s.add(e))}}}forEachBounds(e,t){const s=ee();for(const r of e)r.getBounds(s)&&t(s)}}class as{constructor(e,t,s,r){this._aggregateAdapter=e,this._subscriptions=t,this._onChange=s,this._connection=r,this._updateTracking=new ce({debugName:"FeatureSource"}),this._store=new ns(this._onChange)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy()}get _eventLog(){return this._connection.eventLog}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get service(){return this._schema.service}get store(){return this._store}get streamMessenger(){return null==this._streamMessenger&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return Ft.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){const{dataFilter:e}=this._schema,{objectIdField:t,geometryType:s,timeInfo:r}=this._schema.service,i=this._schema.availableFields;this._queryEngine=new K({featureStore:this._store,fieldsIndex:j.fromJSON(this._schema.service.fieldsIndex),geometryType:s,objectIdField:t,hasM:!1,hasZ:!1,spatialReference:e.outSpatialReference,cacheSpatialQueries:!0,aggregateAdapter:this._aggregateAdapter,timeInfo:r,definitionExpression:e.definitionExpression,availableFields:i})}return this._queryEngine}get isStream(){return"stream"===this._schema.type}chunks(){return Array.from(this._store.chunks())}onSubscribe(e){this._eventLog.onEvent({type:"subscribe",tile:e.tile.id});const t=this._strategy?.load(e);t&&(t.then((()=>this._eventLog.onEvent({type:"loaded",tile:e.tile.id}))).catch((t=>this._eventLog.onEvent({type:"error",tile:e.tile.id,error:t}))),this._updateTracking.addPromise(t))}onResume(e){this._updateTracking.addPromise(i(this._strategy?.load(e)))}onUnsubscribe(e){this._eventLog.onEvent({type:"unsubscribe",tile:e.tile.id}),this._strategy?.unload(e)}getOverride(e){return this._updateTracking.addPromise(this._doGetOverride(e))}applyOverride(e){this._store.applyOverrides(e)}async update(e,s){const r=e.source,i=b(this._schema,r);if(!i)return!1;if(t("esri-2d-update-debug")&&console.debug(`Version[${s}] FeatureSource.update`,{changes:i}),this._schema=r,this._metadata=new O(this._schema.service),this._queryEngine?.destroy(),this._queryEngine=null,null==this._lastEditDate&&"lastEditDate"in this._schema.service&&(this._lastEditDate=this._schema.service.lastEditDate),null==this._streamMessenger&&"stream"===this._schema.type&&this._initStreamMessenger(),S(i,"sourceRefreshVersion")&&this._strategy?.refresh)return await this._strategy.refresh(),!0;if("feature"===r.type&&S(i,"availableFields")&&!await this._queryLastEditDateChanged()){this._eventLog.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(r.availableFields),this._eventLog.onEvent({type:"updateFieldsEnd"})}catch(e){this._eventLog.onEvent({type:"updateFieldsError",error:e})}return!1}return!(!w(i,"dataFilter")&&!w(i,"sourceRefreshVersion")||(await this._updateStrategy(s),0))}_initStreamMessenger(){null==this._streamMessenger&&(this._streamMessenger=new kt(this._connection))}async _doGetOverride(e){return this._strategy.queryOverride(e)}async _queryLastEditDateChanged(){if(null==this._lastEditDate)return!1;const e=this._schema.service.source,t={...e.query,f:"json"},s=(await he(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e=this.service,t="isSourceHosted"in e&&e.isSourceHosted,s=Array.isArray(e.source),r=e.source&&"collection"in e.source,i=t||s||r,n=Tt.fromSchema(this._schema);if("stream"===this._schema.type){const e=new is(this._schema.service,this._schema.dataFilter,this._store,{outSR:this._schema.dataFilter.outSpatialReference},this.metadata);return this._streamMessenger.strategy=e,e}const a=await this._supportSnapshotMode(n);return a?new es(this._schema.service,n,this._store,a.featureCount,this.metadata,this._eventLog):i?new Kt(this._schema.service,n,this._store,this.metadata,this._eventLog):new $t(this._schema.service,n,this._store,this.metadata,this._eventLog)}async _updateStrategy(e){const s=await this._createStrategy();this._eventLog.onEvent({type:"updateStrategyStart",about:s.about});const r=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=s,t("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:s});const i=Array.from(this._subscriptions.values());if(!i.length)return void this._eventLog.onEvent({type:"updateStrategyEnd"});const a=Promise.all(i.map((e=>this._strategy.load(e).then((()=>this._eventLog.onEvent({type:"loaded",tile:e.tile.id}))).catch((t=>this._eventLog.onEvent({type:"error",tile:e.tile.id,error:t}))))));this._updateTracking.addPromise(a);try{r&&await a}catch(e){n(e)}this._eventLog.onEvent({type:"updateStrategyEnd"}),t("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:s})}async _supportSnapshotMode(e){const t=this._schema.service;if(!("supportsSnapshotMinThreshold"in t)||!t.supportsSnapshotMinThreshold||!t.snapshotCountThresholds)return null;const s=t.source,r=e.createQuery();r.inner.orderByFields=[],r.inner.returnGeometry=!1;const i=(await pe(s,r.inner,{query:r.customParameters})).data.count,{min:n,max:a}=t.snapshotCountThresholds;return i<=n||t.supportsSnapshotMaxThreshold&&i<a?{featureCount:i}:null}}class os{constructor(e,t){this._handles=new Me,this._abortController=new AbortController,this._resolver=u(),this._isDone=!1,this._aborted=!1,this.tile=e,this._version=t,this._handles.add([])}destroy(){this.pause(),this._handles.destroy()}get key(){return this.tile.key}get version(){return this._version}set version(e){this._version=e}get signal(){return this._abortController.signal}get options(){return{signal:this._abortController.signal}}get done(){return this._resolver.promise}get isDone(){return this._isDone}resolve(){this._isDone=!0,this._resolver.resolve()}get paused(){return this._aborted}resume(){this._abortController=new AbortController,this._aborted=!1}pause(){this._aborted||(this._aborted=!0,this._abortController.abort())}}class cs{constructor(e){this.edit=e,this.resolver=u()}}class us{constructor(e,t){this.schema=e,this.version=t,this.resolver=u()}}class hs{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._updateRequested=!1,this._updateSubscriptionRequests=[]}destroy(){this._subscriptions.clear(),this._processor.destroy(),this._source.destroy(),this._handles.remove(),this._editState=null,this._tileInfoView=null}onDetach(){this.destroy(),this._initialize(this._connection)}_initialize(t){this._source=new as(this._aggregateAdapter,this._subscriptions,(()=>this._requestUpdate()),t),this._processor=new jt(t,this._source),this._handles=e([h((()=>this._source.updateTracking.updating),(()=>{this._requestUpdate(),this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0})}))])}set remoteClient(e){this._connection=new qe(e),this._initialize(this._connection)}get features(){return this._source.queryEngine}get aggregates(){return this._processor.aggregateQueryEngine}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}async updateSchema(e,s){return t("esri-2d-update-debug")&&this._updateSchemaState&&console.error("InternalError: Schema already updating"),this._updateSchemaState=new us(e,s),this._requestUpdate(),this._updateSchemaState.resolver.promise}updateSubscriptions(e){this._updateSubscriptionRequests.push(e),this._requestUpdate()}async onEdits(e){if(null!=this._editState)throw new Error("InternalError - Already processing an edit");this._editState=new cs(e);const t=this._editState.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(d(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const i="string"==typeof e.fieldOffset,n=e.fieldOffset??0,a=Array.from(this._subscriptions.values()),o=this._source.chunks(),c=t**2,u=3/(Math.PI*c),h=2*t,l=Math.ceil(m/h);for(const t of a){const a=t.tile,d=new Float64Array(l*l);for(const t of o){const s=t.getTileReader(a);if(!s)continue;const r=s.getCursor();for(;r.next();){let t=1;if(null!=e.field){const s=r.readAttribute(e.field);t=i?-1*+s:+s+n}const s=r.readXForDisplay()/h,a=r.readYForDisplay()/h,o=Math.floor(s),p=Math.floor(a);if(o<0||p<0||o>=l||p>=l)continue;const _=((.5+o-s)*h)**2+((.5+p-a)*h)**2;if(_>c)continue;const g=t*(u*(1-_/c)**2);d[p+o*l]+=g}}for(let e=0;e<d.length;e++)s=Math.min(s,d[e]),r=Math.max(r,d[e])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce(((e,t)=>e+t.size()),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const e=[];return this._source.store.forEachUnsafe((t=>e.push(t.readLegacyFeatureWorldSpace()))),e}return null}const r=new Set,i=[],n=t.map((e=>e.reader.getCursor())),a=new s,o=3*e.sampleSize;for(let s=0;s<o&&i.length<e.sampleSize;s++){const e=n[a.getIntRange(0,t.length-1)];if(0===e.getSize())continue;const s=a.getIntRange(0,e.getSize()-1);e.setIndex(s);const o=e.getObjectId();r.has(o)||(r.add(o),i.push(e.readLegacyFeatureWorldSpace()))}return i.length>=e.sampleSize?i:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,r((()=>this._scheduleNextUpdate())))}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=this._doUpdate().finally((()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()})),this._updateRequested=!1))}_subscribe(e){const s=e.tileId;if(this._subscriptions.has(s)){const r=this._subscriptions.get(s);return void(r.paused&&(t("esri-2d-update-debug")&&console.debug(`Tile[${s}] Pipeline.resume`),r.resume(),r.version=e.version,this._source.onResume(r)))}t("esri-2d-update-debug")&&console.debug(`Tile[${s}] Pipeline.subscribe`);const r=new ae(this._tileInfoView,s),i=new os(r,e.version);this._subscriptions.set(s,i),this._source.onSubscribe(i),this._processor.onSubscribe(i)}_unsubscribe(e){const s=this._subscriptions.get(e);s&&(t("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),this._source.onUnsubscribe(s),this._processor.onUnsubscribe(s),this._subscriptions.delete(s.key.id),s.destroy())}_pauseSubscription(e){const s=this._subscriptions.get(e);s&&(t("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.pause`),s.pause())}async _doUpdate(){if(await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const e=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const t of e)this._doUpdateSubscriptions(t)}if(null!=this._updateSchemaState){const{schema:e,version:t}=this._updateSchemaState;await this._doUpdateSchema(e,t)}if(null!=this._editState){t("esri-2d-update-debug")&&console.debug("Pipeline.handleEdit",this._editState.edit);const e=this._editState,s=await this._source.getOverride(e.edit);await this._processor.applyOverride(s)}try{this._subscriptions.size&&await this._processor.updateChunks()}catch(e){n(e)}null!=this._editState&&(this._editState.resolver.resolve(),this._editState=null),null!=this._updateSchemaState&&(this._updateSchemaState.resolver.resolve(),this._updateSchemaState=null),this._updateRequested?await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}):(this._processor.updateTracking.updating&&await l((()=>!this._processor.updateTracking.updating)),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,s){if(t("esri-2d-update-debug")&&console.debug(`Version[${s}] Pipeline.updateStart`,{schema:e}),!this._tileInfoView){const t=p.fromJSON(e.source.tileInfoJSON);this._tileInfoView=new _(t)}const r={tileInfo:this._tileInfoView?.tileInfo};try{const t=await this._source.update(e,s),i=Array.from(this._subscriptions.values());await this._processor.update(e,s,r,t,i)}catch(e){console.error(e)}t("esri-2d-update-debug")&&console.debug(`Version[${s}] Pipeline.updateEnd`)}_doUpdateSubscriptions(e){if(t("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e),!this._tileInfoView){const t=p.fromJSON(e.tileInfoJSON);this._tileInfoView=new _(t)}for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t);if(t("featurelayer-query-pausing-enabled"))for(const t of e.pause)this._pauseSubscription(t)}}export{hs as default};
