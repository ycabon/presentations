/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import e from"../request.js";import{c as t}from"./asyncUtils.js";import s from"../core/Error.js";import{L as i}from"./Logger.js";import{isAbortError as r}from"../core/promiseUtils.js";import{getJsonType as o}from"../geometry/support/jsonUtils.js";import{w as a,f as n}from"./unitUtils.js";import{d as p,b as l,e as m,f as u,h as d}from"./featureConversionUtils.js";import{F as c}from"./FeatureStore.js";import{c as y,p as j}from"./projectionSupport.js";import{Q as h}from"./QueryEngine.js";import{i as f,c as g,v as _}from"./geojson.js";import{c as F,a as b,b as E}from"./clientSideDefaults.js";import{l as I,m as T,c as S,a as w,s as q}from"./sourceUtils.js";import x from"../layers/support/FieldsIndex.js";import{k as R}from"./fieldType.js";import{getFieldDefaultValue as U,getFieldDefaultLength as O}from"../layers/support/fieldUtils.js";import{u as P}from"./timeZoneUtils.js";import"../config.js";import"../core/lang.js";import"../kernel.js";import"../core/urlUtils.js";import"../core/JSONSupport.js";import"./tslib.es6.js";import"../core/Accessor.js";import"../core/Handles.js";import"./maybe.js";import"../core/accessorSupport/decorators/subclass.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./tracking.js";import"./ensureType.js";import"../core/accessorSupport/decorators/property.js";import"./ObservableBase.js";import"../core/scheduling.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"./jsonMap.js";import"./assets.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./Axis.js";import"./extentUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"../geometry/Polyline.js";import"./aaBoundingBox.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"./OptimizedGeometry.js";import"../core/Evented.js";import"./BoundsStore.js";import"./PooledRBush.js";import"./quickselect.js";import"./_commonjsHelpers.js";import"./timeSupport.js";import"../geometry/projection.js";import"./SimpleObservable.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"../geometry.js";import"./typeUtils.js";import"./utils7.js";import"./utils8.js";import"./optimizedFeatureQueryEngineAdapter.js";import"./json.js";import"./MemCache.js";import"./LRUCache.js";import"../core/sql/WhereClause.js";import"./TimeOnly.js";import"./UnknownTimeZone.js";import"./datetime.js";import"./locale.js";import"./QueryEngineCapabilities.js";import"./quantizationUtils.js";import"./utils10.js";import"./screenUtils.js";import"./timeUtils.js";import"./date.js";import"./heatmapUtils.js";import"./vec4.js";import"./vec4f64.js";import"./utils2.js";import"./basemapUtils.js";import"../Basemap.js";import"../core/Collection.js";import"./shared.js";import"./collectionUtils.js";import"../core/Loadable.js";import"../core/Promise.js";import"./loadAll.js";import"../portal/Portal.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"./persistableUrlUtils.js";import"./messages.js";import"../support/BasemapStyle.js";import"./writeUtils.js";import"./layerUtils2.js";import"./utils3.js";import"./colorUtils.js";import"./mat4.js";import"./utils11.js";import"./generateRendererUtils.js";import"./enumeration.js";import"./SnappingCandidate.js";import"./Scheduler.js";import"../core/reactiveUtils.js";import"../core/signal.js";import"./debugFlags.js";import"./RenderState.js";import"./date2.js";import"./defaultsJSON.js";import"../core/sql.js";import"../intl.js";const C={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};class k{constructor(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e,t={}){this._loadOptions={url:e.url,customParameters:e.customParameters};const i=[],[r]=await Promise.all([e.url?this._fetch(t?.signal):null,this._checkProjection(e.spatialReference)]),o=f(r,{geometryType:e.geometryType}),n=e.fields||o.fields||[],p=null!=e.hasZ?e.hasZ:o.hasZ,l=o.geometryType;let m=e.objectIdField||o.objectIdFieldName||"__OBJECTID";const u=e.spatialReference||a;let d=e.timeInfo;n===o.fields&&o.unknownFields.length>0&&i.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:o.unknownFields}});const y=new x(n);let j=y.get(m);j?("esriFieldTypeString"!==j.type&&(j.type="esriFieldTypeOID"),j.editable=!1,j.nullable=!1,m=j.name):(j={alias:m,name:m,type:"string"===o.objectIdFieldType?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},n.unshift(j));const g={};for(const e of n){if(null==e.name&&(e.name=e.alias),null==e.alias&&(e.alias=e.name),!e.name)throw new s("geojson-layer:invalid-field-name","field name is missing",{field:e});if(!R.jsonValues.includes(e.type))throw new s("geojson-layer:invalid-field-type",`invalid type for field "${e.name}"`,{field:e});if(e.name!==j.name){const t=U(e);void 0!==t&&(g[e.name]=t)}null==e.length&&(e.length=O(e))}if(d){if(d.startTimeField){const e=y.get(d.startTimeField);e?(d.startTimeField=e.name,e.type="esriFieldTypeDate"):d.startTimeField=null}if(d.endTimeField){const e=y.get(d.endTimeField);e?(d.endTimeField=e.name,e.type="esriFieldTypeDate"):d.endTimeField=null}if(d.trackIdField){const e=y.get(d.trackIdField);e?d.trackIdField=e.name:(d.trackIdField=null,i.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:d}}))}d.startTimeField||d.endTimeField||(i.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:d}}),d=null)}const _=l?F(l):void 0,I=y.dateFields.length?{timeZoneIANA:P}:null,T={warnings:i,featureErrors:[],layerDefinition:{...C,drawingInfo:_??void 0,templates:b(g),extent:void 0,geometryType:l,objectIdField:m,fields:n,hasZ:!!p,timeInfo:d,dateFieldsTimeReference:I}};this._queryEngine=new h({fieldsIndex:x.fromLayerJSON({fields:n,timeInfo:d,dateFieldsTimeReference:I}),geometryType:l,hasM:!1,hasZ:p,objectIdField:m,spatialReference:u,timeInfo:d,featureStore:new c({geometryType:l,hasM:!1,hasZ:p}),cacheSpatialQueries:!0});const S=this._queryEngine.fieldsIndex.requiredFields.indexOf(j);S>-1&&this._queryEngine.fieldsIndex.requiredFields.splice(S,1),this._createDefaultAttributes=E(g,m);const w=await this._createFeatures(r);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,w);const q=this._normalizeFeatures(w,T.featureErrors);this._queryEngine.featureStore.addMany(q);const{fullExtent:k,timeExtent:v}=await this._queryEngine.fetchRecomputedExtents();if(T.layerDefinition.extent=k,v){const{start:e,end:t}=v;T.layerDefinition.timeInfo.timeExtent=[e,t]}return T}async applyEdits(e){const{spatialReference:t,geometryType:s}=this._queryEngine;return await Promise.all([I(t,s),y(e.adds,t),y(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=t(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)}),(e=>{this._queryEngine.featureStore.clear(),r(e)||i.getLogger("esri.layers.GeoJSONLayer").error(new s("geojson-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:o,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:o,timeExtent:a}}async _createFeatures(e){if(null==e)return[];const{geometryType:t,hasZ:s,objectIdField:i}=this._queryEngine,r=g(e,{geometryType:t,hasZ:s,objectIdField:i});if(!n(this._queryEngine.spatialReference,a))for(const e of r)null!=e.geometry&&(e.geometry=p(j(l(e.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),a,this._queryEngine.spatialReference)));return r}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _fetch(t){const{url:s,customParameters:i}=this._loadOptions,r=(await e(s,{responseType:"json",query:{...i},signal:t})).data;return _(r),r}_normalizeFeatures(e,t){const{objectIdField:s,fieldsIndex:i}=this._queryEngine,r=[];for(const o of e){const e=this._createDefaultAttributes(),a=T(i,e,o.attributes,!0);a?t?.push(a):(this._assignObjectId(e,o.attributes,!0),o.attributes=e,o.objectId=e[s],r.push(o))}return r}async _applyEdits(e){const{adds:t,updates:s,deletes:i}=e,r={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t?.length&&this._applyAddEdits(r,t),s?.length&&this._applyUpdateEdits(r,s),i?.length){for(const e of i)r.deleteResults.push(S(e));this._queryEngine.featureStore.removeManyById(i)}const{fullExtent:o,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:o,timeExtent:a,featureEditResults:r}}_applyAddEdits(e,t){const{addResults:s}=e,{geometryType:i,hasM:r,hasZ:a,objectIdField:n,spatialReference:p,featureStore:l,fieldsIndex:u}=this._queryEngine,d=[];for(const r of t){if(r.geometry&&i!==o(r.geometry)){s.push(w("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),a=T(u,t,r.attributes);if(a)s.push(a);else{if(this._assignObjectId(t,r.attributes),r.attributes=t,null!=r.uid){const t=r.attributes[n];e.uidToObjectId[r.uid]=t}if(null!=r.geometry){const e=r.geometry.spatialReference??p;r.geometry=j(q(r.geometry,e),e,p)}d.push(r),s.push(S(r.attributes[n]))}}l.addMany(m([],d,i,a,r,n))}_applyUpdateEdits({updateResults:e},t){const{geometryType:s,hasM:i,hasZ:r,objectIdField:a,spatialReference:n,featureStore:p,fieldsIndex:l}=this._queryEngine;for(const m of t){const{attributes:t,geometry:c}=m,y=t?.[a];if(null==y){e.push(w(`Identifier field ${a} missing`));continue}if(!p.has(y)){e.push(w(`Feature with object id ${y} missing`));continue}const h=u(p.getFeature(y),s,r,i);if(null!=c){if(s!==o(c)){e.push(w("Incorrect geometry type."));continue}const t=c.spatialReference??n;h.geometry=j(q(c,t),t,n)}if(t){const s=T(l,h.attributes,t);if(s){e.push(s);continue}}p.add(d(h,s,r,i,a)),e.push(S(y))}}_createObjectIdGenerator(e,t){const s=e.fieldsIndex.get(e.objectIdField);if("esriFieldTypeString"===s.type)return()=>s.name+"-"+Date.now().toString(16);let i=Number.NEGATIVE_INFINITY;for(const e of t)e.objectId&&(i=Math.max(i,e.objectId));return i=Math.max(0,i)+1,()=>i++}_assignObjectId(e,t,s=!1){const i=this._queryEngine.objectIdField;e[i]=s&&i in t?t[i]:this._objectIdGenerator()}async _checkProjection(e){try{await y(a,e)}catch{throw new s("geojson-layer","Projection not supported")}}}export{k as default};
