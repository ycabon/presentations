/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{j as t}from"./coordsUtils.js";var i,s;!function(t){t[t.Unknown=0]="Unknown",t[t.Point=1]="Point",t[t.LineString=2]="LineString",t[t.Polygon=3]="Polygon"}(i||(i={}));class h{constructor(t,i){this.x=t,this.y=i}clone(){return new h(this.x,this.y)}equals(t,i){return t===this.x&&i===this.y}isEqual(t){return t.x===this.x&&t.y===this.y}setCoords(t,i){return this.x=t,this.y=i,this}normalize(){const t=this.x,i=this.y,s=Math.sqrt(t*t+i*i);return this.x/=s,this.y/=s,this}rightPerpendicular(){const t=this.x;return this.x=this.y,this.y=-t,this}leftPerpendicular(){const t=this.x;return this.x=-this.y,this.y=t,this}move(t,i){return this.x+=t,this.y+=i,this}assign(t){return this.x=t.x,this.y=t.y,this}assignAdd(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}assignSub(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}rotate(t,i){const s=this.x,h=this.y;return this.x=s*t-h*i,this.y=s*i+h*t,this}scale(t){return this.x*=t,this.y*=t,this}length(){const t=this.x,i=this.y;return Math.sqrt(t*t+i*i)}sub(t){return this.x-=t.x,this.y-=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}static distance(t,i){const s=i.x-t.x,h=i.y-t.y;return Math.sqrt(s*s+h*h)}static add(t,i){return new h(t.x+i.x,t.y+i.y)}static sub(t,i){return new h(t.x-i.x,t.y-i.y)}}class n{constructor(t,i,s){this.ratio=t,this.x=i,this.y=s}}class e{constructor(t,i,s,h=8,n=8){this._lines=[],this._starts=[],this.validateTessellation=!0,this._pixelRatio=h,this._pixelMargin=n,this._tileSize=512*h,this._dz=t,this._yPos=i,this._xPos=s}setPixelMargin(t){t!==this._pixelMargin&&(this._pixelMargin=t,this.setExtent(this._extent))}setExtent(t){this._extent=t,this._finalRatio=this._tileSize/t*(1<<this._dz);let i=this._pixelRatio*this._pixelMargin;i/=this._finalRatio;const s=t>>this._dz;i>s&&(i=s),this._margin=i,this._xmin=s*this._xPos-i,this._ymin=s*this._yPos-i,this._xmax=this._xmin+s+2*i,this._ymax=this._ymin+s+2*i}reset(t){this._type=t,this._lines=[],this._starts=[],this._line=null,this._start=0}moveTo(t,i){this._pushLine(),this._prevIsIn=this._isIn(t,i),this._moveTo(t,i,this._prevIsIn),this._prevPt=new h(t,i),this._firstPt=new h(t,i),this._dist=0}lineTo(t,i){const s=this._isIn(t,i),e=new h(t,i),_=h.distance(this._prevPt,e);let l,x,a,r,o,y,u,m;if(s)this._prevIsIn?this._lineTo(t,i,!0):(l=this._prevPt,x=e,a=this._intersect(x,l),this._start=this._dist+_*(1-this._r),this._lineTo(a.x,a.y,!0),this._lineTo(x.x,x.y,!0));else if(this._prevIsIn)x=this._prevPt,l=e,a=this._intersect(x,l),this._lineTo(a.x,a.y,!0),this._lineTo(l.x,l.y,!1);else{const t=this._prevPt,i=e;if(t.x<=this._xmin&&i.x<=this._xmin||t.x>=this._xmax&&i.x>=this._xmax||t.y<=this._ymin&&i.y<=this._ymin||t.y>=this._ymax&&i.y>=this._ymax)this._lineTo(i.x,i.y,!1);else{const s=[];if((t.x<this._xmin&&i.x>this._xmin||t.x>this._xmin&&i.x<this._xmin)&&(r=(this._xmin-t.x)/(i.x-t.x),m=t.y+r*(i.y-t.y),m<=this._ymin?y=!1:m>=this._ymax?y=!0:s.push(new n(r,this._xmin,m))),(t.x<this._xmax&&i.x>this._xmax||t.x>this._xmax&&i.x<this._xmax)&&(r=(this._xmax-t.x)/(i.x-t.x),m=t.y+r*(i.y-t.y),m<=this._ymin?y=!1:m>=this._ymax?y=!0:s.push(new n(r,this._xmax,m))),(t.y<this._ymin&&i.y>this._ymin||t.y>this._ymin&&i.y<this._ymin)&&(r=(this._ymin-t.y)/(i.y-t.y),u=t.x+r*(i.x-t.x),u<=this._xmin?o=!1:u>=this._xmax?o=!0:s.push(new n(r,u,this._ymin))),(t.y<this._ymax&&i.y>this._ymax||t.y>this._ymax&&i.y<this._ymax)&&(r=(this._ymax-t.y)/(i.y-t.y),u=t.x+r*(i.x-t.x),u<=this._xmin?o=!1:u>=this._xmax?o=!0:s.push(new n(r,u,this._ymax))),0===s.length)o?y?this._lineTo(this._xmax,this._ymax,!0):this._lineTo(this._xmax,this._ymin,!0):y?this._lineTo(this._xmin,this._ymax,!0):this._lineTo(this._xmin,this._ymin,!0);else if(s.length>1&&s[0].ratio>s[1].ratio)this._start=this._dist+_*s[1].ratio,this._lineTo(s[1].x,s[1].y,!0),this._lineTo(s[0].x,s[0].y,!0);else{this._start=this._dist+_*s[0].ratio;for(let t=0;t<s.length;t++)this._lineTo(s[t].x,s[t].y,!0)}this._lineTo(i.x,i.y,!1)}}this._dist+=_,this._prevIsIn=s,this._prevPt=e}close(){if(this._line.length>2){const t=this._firstPt,i=this._prevPt;t.x===i.x&&t.y===i.y||this.lineTo(t.x,t.y);const s=this._line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(t=!0){return this._pushLine(),0===this._lines.length?null:(this._type===i.Polygon&&t&&l.simplify(this._tileSize,this._margin*this._finalRatio,this._lines),this._lines)}resultWithStarts(){if(this._type!==i.LineString)throw new Error("Only valid for lines");this._pushLine();const t=this._lines,s=t.length;if(0===s)return null;const h=[];for(let i=0;i<s;i++)h.push({line:t[i],start:this._starts[i]||0});return h}_isIn(t,i){return t>=this._xmin&&t<=this._xmax&&i>=this._ymin&&i<=this._ymax}_intersect(t,i){let s,n,e;if(i.x>=this._xmin&&i.x<=this._xmax)n=i.y<=this._ymin?this._ymin:this._ymax,e=(n-t.y)/(i.y-t.y),s=t.x+e*(i.x-t.x);else if(i.y>=this._ymin&&i.y<=this._ymax)s=i.x<=this._xmin?this._xmin:this._xmax,e=(s-t.x)/(i.x-t.x),n=t.y+e*(i.y-t.y);else{n=i.y<=this._ymin?this._ymin:this._ymax,s=i.x<=this._xmin?this._xmin:this._xmax;const h=(s-t.x)/(i.x-t.x),_=(n-t.y)/(i.y-t.y);h<_?(e=h,n=t.y+h*(i.y-t.y)):(e=_,s=t.x+_*(i.x-t.x))}return this._r=e,new h(s,n)}_pushLine(){this._line&&(this._type===i.Point?this._line.length>0&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===i.LineString?this._line.length>1&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===i.Polygon&&this._line.length>3&&(this._lines.push(this._line),this._starts.push(this._start))),this._line=[],this._start=0}_moveTo(t,s,n){this._type!==i.Polygon?n&&(t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.push(new h(t,s))):(n||(t<this._xmin&&(t=this._xmin),t>this._xmax&&(t=this._xmax),s<this._ymin&&(s=this._ymin),s>this._ymax&&(s=this._ymax)),t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.push(new h(t,s)),this._isH=!1,this._isV=!1)}_lineTo(t,s,n){let e,_;if(this._type!==i.Polygon)if(n){if(t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line.length>0&&(e=this._line[this._line.length-1],e.equals(t,s)))return;this._line.push(new h(t,s))}else this._line&&this._line.length>0&&this._pushLine();else if(n||(t<this._xmin&&(t=this._xmin),t>this._xmax&&(t=this._xmax),s<this._ymin&&(s=this._ymin),s>this._ymax&&(s=this._ymax)),t=Math.round((t-(this._xmin+this._margin))*this._finalRatio),s=Math.round((s-(this._ymin+this._margin))*this._finalRatio),this._line&&this._line.length>0){e=this._line[this._line.length-1];const i=e.x===t,n=e.y===s;if(i&&n)return;this._isH&&i||this._isV&&n?(e.x=t,e.y=s,_=this._line[this._line.length-2],_.x===t&&_.y===s?(this._line.pop(),this._line.length<=1?(this._isH=!1,this._isV=!1):(_=this._line[this._line.length-2],this._isH=_.x===t,this._isV=_.y===s)):(this._isH=_.x===t,this._isV=_.y===s)):(this._line.push(new h(t,s)),this._isH=i,this._isV=n)}else this._line.push(new h(t,s))}}class _{setExtent(t){this._ratio=4096===t?1:4096/t}get validateTessellation(){return this._ratio<1}reset(t){this._lines=[],this._line=null}moveTo(t,i){this._line&&this._lines.push(this._line),this._line=[];const s=this._ratio;this._line.push(new h(t*s,i*s))}lineTo(t,i){const s=this._ratio;this._line.push(new h(t*s,i*s))}close(){const t=this._line;t&&!t[0].isEqual(t[t.length-1])&&t.push(t[0])}result(){return this._line&&this._lines.push(this._line),0===this._lines.length?null:this._lines}}!function(t){t[t.sideLeft=0]="sideLeft",t[t.sideRight=1]="sideRight",t[t.sideTop=2]="sideTop",t[t.sideBottom=3]="sideBottom"}(s||(s={}));class l{static simplify(t,i,h){if(!h)return;const n=-i,e=t+i,_=-i,x=t+i,a=[],r=[],o=h.length;for(let t=0;t<o;++t){const i=h[t];if(!i||i.length<2)continue;let l,o=i[0];const y=i.length;for(let h=1;h<y;++h)l=i[h],o.x===l.x&&(o.x<=n&&(o.y>l.y?(a.push(t),a.push(h),a.push(s.sideLeft),a.push(-1)):(r.push(t),r.push(h),r.push(s.sideLeft),r.push(-1))),o.x>=e&&(o.y<l.y?(a.push(t),a.push(h),a.push(s.sideRight),a.push(-1)):(r.push(t),r.push(h),r.push(s.sideRight),r.push(-1)))),o.y===l.y&&(o.y<=_&&(o.x<l.x?(a.push(t),a.push(h),a.push(s.sideTop),a.push(-1)):(r.push(t),r.push(h),r.push(s.sideTop),r.push(-1))),o.y>=x&&(o.x>l.x?(a.push(t),a.push(h),a.push(s.sideBottom),a.push(-1)):(r.push(t),r.push(h),r.push(s.sideBottom),r.push(-1)))),o=l}if(0===a.length||0===r.length)return;l.fillParent(h,r,a),l.fillParent(h,a,r);const y=[];l.calcDeltas(y,r,a),l.calcDeltas(y,a,r),l.addDeltas(y,h)}static fillParent(t,i,h){const n=h.length,e=i.length;for(let _=0;_<e;_+=4){const e=i[_],l=i[_+1],a=i[_+2],r=t[e][l-1],o=t[e][l];let y=8092,u=-1;for(let i=0;i<n;i+=4){if(h[i+2]!==a)continue;const n=h[i],e=h[i+1],_=t[n][e-1],l=t[n][e];switch(a){case s.sideLeft:case s.sideRight:if(x(r.y,_.y,l.y)&&x(o.y,_.y,l.y)){const t=Math.abs(l.y-_.y);t<y&&(y=t,u=i)}break;case s.sideTop:case s.sideBottom:if(x(r.x,_.x,l.x)&&x(o.x,_.x,l.x)){const t=Math.abs(l.x-_.x);t<y&&(y=t,u=i)}}}i[_+3]=u}}static calcDeltas(t,i,s){const h=i.length;for(let n=0;n<h;n+=4){const h=[],e=l.calcDelta(n,i,s,h);t.push(i[n]),t.push(i[n+1]),t.push(i[n+2]),t.push(e)}}static calcDelta(t,i,s,h){const n=i[t+3];if(-1===n)return 0;const e=h.length;return e>1&&h[e-2]===n?0:(h.push(n),l.calcDelta(n,s,i,h)+1)}static addDeltas(t,i){const h=t.length;let n=0;for(let i=0;i<h;i+=4){const s=t[i+3];s>n&&(n=s)}for(let e=0;e<h;e+=4){const h=i[t[e]],_=t[e+1],l=n-t[e+3];switch(t[e+2]){case s.sideLeft:h[_-1].x-=l,h[_].x-=l,1===_&&(h[h.length-1].x-=l),_===h.length-1&&(h[0].x-=l);break;case s.sideRight:h[_-1].x+=l,h[_].x+=l,1===_&&(h[h.length-1].x+=l),_===h.length-1&&(h[0].x+=l);break;case s.sideTop:h[_-1].y-=l,h[_].y-=l,1===_&&(h[h.length-1].y-=l),_===h.length-1&&(h[0].y-=l);break;case s.sideBottom:h[_-1].y+=l,h[_].y+=l,1===_&&(h[h.length-1].y+=l),_===h.length-1&&(h[0].y+=l)}}}}const x=(t,i,s)=>t>=i&&t<=s||t>=s&&t<=i,a=Number.POSITIVE_INFINITY,r=Math.PI,o=2*r,y=128/r,u=r/180,m=1/Math.LN2;function c(t,i){return(t%=i)>=0?t:t+i}function p(t){return c(t*y,256)}function g(t){return c(.7111111111111111*t,256)}function f(t){return Math.log(t)*m}function d(t,i,s){return t*(1-s)+i*s}function P(t){return 8+Math.max(16*(t-14),0)}function T(t,i,s){let h,n,e,_=0;for(const l of s){h=l.length;for(let s=1;s<h;++s)n=l[s-1],e=l[s],n.y>i!=e.y>i&&((e.x-n.x)*(i-n.y)-(e.y-n.y)*(t-n.x)>0?_++:_--)}return 0!==_}function w(i,s,h,n){let e,_,l,x;const a=n*n;for(const n of h){const h=n.length;if(!(h<2)){e=n[0].x,_=n[0].y;for(let r=1;r<h;++r){if(l=n[r].x,x=n[r].y,t(i,s,e,_,l,x)<a)return!0;e=l,_=x}}}return!1}function M(t,i,s,h,n,e,_){const l=Math.max(h,Math.min(i,e))-i,x=Math.max(n,Math.min(s,_))-s;return l*l+x*x<=t*t}function v(t,i){if(0===i||Number.isNaN(i))return t;const s=[],n=new h(0,0),e=new h(0,0),_=new h(0,0);for(let l=0;l<t.length;l++){const x=t[l],a=[];for(let t=0;t<x.length;t++){const s=x[t-1],l=x[t],r=x[t+1];0===t?n.setCoords(0,0):n.assignSub(l,s).normalize().rightPerpendicular(),t===x.length-1?e.setCoords(0,0):e.assignSub(r,l).normalize().rightPerpendicular(),_.assignAdd(n,e).normalize();const o=_.x*e.x+_.y*e.y;0!==o&&_.scale(1/o),a.push(h.add(l,_.scale(i)))}s.push(a)}return s}function I(t,i,s,n){const e=new h(t[0],t[1]);if(e.scale(n),"viewport"===i){const t=-s*(Math.PI/180),i=Math.cos(t),h=Math.sin(t);e.rotate(i,h)}return e}export{i as G,h as P,_ as S,e as T,d as a,r as b,u as c,w as d,a as e,c as f,P as g,o as h,M as i,g as j,f as l,v as o,T as p,p as r,I as t};
