/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{tryProjectWithZConversion as e}from"../geometry/projection.js";import{g as t}from"./ElevationProvider.js";import{f as r}from"./mat4.js";import{c as s}from"./mat4f64.js";import{s as o,g as i}from"./vec3.js";import{Z as a,c as n}from"./vec3f64.js";import{f as l,a as m}from"./vec4f64.js";import{O as p}from"./Object3DVisualElement.js";import{l as h,c as d}from"./line.js";import{R as f}from"./Material.js";import{R as u}from"./RibbonLineMaterial.js";function c(r,s,o,i=!1){const a=e(r,s);return null==a?null:(a.hasZ&&!i||null==o||(a.z=t(o,a)??0),a)}function g(e,t,r){r.warnOnce(`Failed to project analysis geometry (id: '${e.id}'), projection from spatial reference (wkid: '${t.wkid}') to view spatial reference is not supported. Projection may be possible after calling projection.load().`)}class y extends p{constructor(e,t){super(e),this._hasExternalMaterial=!1,this._hasExternalMaterial=null!=t,this._material=null!=t?t:new u({width:1,color:l(1,0,1,1),stippleOffColor:null,stipplePattern:null,stipplePreferContinuous:!0,isClosed:!1,falloff:0,innerColor:null,innerWidth:1,hasPolygonOffset:!1,renderOccluded:f.OccludeAndTransparent,isDecoration:!!e.isDecoration,writeDepth:!0}),this.applyProperties(e)}setGeometryFromRenderSpacePoint(e,t=1e3){this.geometry=[[[e[0]-t,e[1],e[2]],[e[0]+t,e[1],e[2]]],[[e[0],e[1]-t,e[2]],[e[0],e[1]+t,e[2]]],[[e[0],e[1],e[2]-t],[e[0],e[1],e[2]+t]]]}setGeometryFromExtent(e){const t=this.view.spatialReference,r=n(),s=n(),i=100,a=[];o(r,e[0],e[1],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),a.push([s[0],s[1],s[2]]),o(r,e[2],e[1],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),a.push([s[0],s[1],s[2]]),o(r,e[2],e[3],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),a.push([s[0],s[1],s[2]]),o(r,e[0],e[3],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),a.push([s[0],s[1],s[2]]),o(r,e[0],e[1],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),a.push([s[0],s[1],s[2]]),o(r,e[0],e[1],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),a.push([s[0],s[1],s[2]]),this.geometry=[a]}setGeometryFromFrustum(e){const t=[];e.lines.forEach((e=>{t.push([e.origin[0],e.origin[1],e.origin[2]]),t.push([e.endpoint[0],e.endpoint[1],e.endpoint[2]])})),this.geometry=[t]}setGeometryFromBoundedPlane(e){const t=[],r=e.origin,s=e.basis1,o=e.basis2,i=.5,a=n(),l=n(),m=n(),p=n();a[0]=r[0]-s[0]*i-o[0]*i,a[1]=r[1]-s[1]*i-o[1]*i,a[2]=r[2]-s[2]*i-o[2]*i,l[0]=r[0]-s[0]*i+o[0]*i,l[1]=r[1]-s[1]*i+o[1]*i,l[2]=r[2]-s[2]*i+o[2]*i,m[0]=r[0]+s[0]*i+o[0]*i,m[1]=r[1]+s[1]*i+o[1]*i,m[2]=r[2]+s[2]*i+o[2]*i,p[0]=r[0]+s[0]*i-o[0]*i,p[1]=r[1]+s[1]*i-o[1]*i,p[2]=r[2]+s[2]*i-o[2]*i,t.push([a[0],a[1],a[2]]),t.push([l[0],l[1],l[2]]),t.push([m[0],m[1],m[2]]),t.push([p[0],p[1],p[2]]),t.push([a[0],a[1],a[2]]),this.geometry=[t]}setGeometryFromSegment(e){const t=e.endRenderSpace;this.transform=r(_,t);const{points:s}=e.createRenderGeometry(t,this.view.renderCoordsHelper);this.geometry=[s]}setGeometryFromSegments(e,t=a){this.transform=r(_,t),this.geometry=e.map((e=>e.createRenderGeometry(t,this.view.renderCoordsHelper).points))}getTransformedGeometry(){return null==this._geometry?null:this._geometry.map((e=>e.map((e=>i(n(),e,this.transform)))))}get renderOccluded(){return this._material.parameters.renderOccluded}set renderOccluded(e){this._material.setParameters({renderOccluded:e})}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get width(){return this._material.parameters.width}set width(e){this._material.setParameters({width:e})}get color(){return this._material.parameters.color}set color(e){const t=1===e[3];this._material.setParameters({color:m(e),writeDepth:t})}get innerWidth(){return this._material.parameters.innerWidth}set innerWidth(e){this._material.setParameters({innerWidth:e})}get innerColor(){return this._material.parameters.innerColor}set innerColor(e){this._material.setParameters({innerColor:null!=e?m(e):null})}get stipplePattern(){return this._material.parameters.stipplePattern}set stipplePattern(e){null!=this._material&&this._material.setParameters({stipplePattern:e})}get stippleOffColor(){return this._material.parameters.stippleOffColor}set stippleOffColor(e){this._material.setParameters({stippleOffColor:null!=e?m(e):null})}get stipplePreferContinuous(){return this._material.parameters.stipplePreferContinuous}set stipplePreferContinuous(e){this._material.setParameters({stipplePreferContinuous:e})}get falloff(){return this._material.parameters.falloff}set falloff(e){this._material.setParameters({falloff:e})}get polygonOffset(){return this._material.parameters.hasPolygonOffset}set polygonOffset(e){this._material.setParameters({hasPolygonOffset:e})}createExternalResources(){}destroyExternalResources(){}createGeometries(e){for(const t of h(this.geometry)){const r=d(this._material,t);e.addGeometry(r)}}forEachExternalMaterial(e){this._hasExternalMaterial||e(this._material)}}const _=s();export{y as L,c as a,g as l};
