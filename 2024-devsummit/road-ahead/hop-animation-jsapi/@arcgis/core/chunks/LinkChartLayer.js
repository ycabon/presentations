/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import"../geometry.js";import t from"../core/Collection.js";import i from"../core/Error.js";import{L as r}from"./Logger.js";import{throwIfAborted as o}from"../core/promiseUtils.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{subclass as a}from"../core/accessorSupport/decorators/subclass.js";import{e as n}from"./geohashUtils.js";import p from"../layers/Layer.js";import{d as l}from"./featureConversionUtils.js";import{O as m}from"./OptimizedGeometry.js";import h,{K as u,g as c,m as d,a as y,b as j,c as g,d as f}from"../layers/knowledgeGraph/KnowledgeGraphSublayer.js";import{BlendLayer as C}from"../layers/mixins/BlendLayer.js";import{ScaleRangeLayer as b}from"../layers/mixins/ScaleRangeLayer.js";import{g as k}from"./assets.js";import{fetchKnowledgeGraph as L}from"../rest/knowledgeGraphService.js";import M from"../rest/knowledgeGraph/EntityType.js";import w from"../rest/knowledgeGraph/RelationshipType.js";import D from"../geometry/Extent.js";import E from"../geometry/Point.js";import x from"../geometry/Polyline.js";import"./ensureType.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./maybe.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./ObservableBase.js";import"./tracking.js";import"../core/scheduling.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"../config.js";import"./writer.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/support/webMercatorUtils.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./Axis.js";import"./extentUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"../core/Evented.js";import"./shared.js";import"./SimpleObservable.js";import"./projectionSupport.js";import"../geometry/projection.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./json.js";import"../core/Identifiable.js";import"../core/Loadable.js";import"../core/Promise.js";import"./aaBoundingBox.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../layers/support/fieldUtils.js";import"../core/sql.js";import"../intl.js";import"./date.js";import"./locale.js";import"./timeZoneUtils.js";import"./datetime.js";import"./messages.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../Color.js";import"./colorUtils.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"../renderers/ClassBreaksRenderer.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils4.js";import"../symbols/edges/Edges3D.js";import"./screenUtils.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils5.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../core/reactiveUtils.js";import"./asyncUtils.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/SimpleMarkerSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"../renderers/Renderer.js";import"../renderers/support/AuthoringInfo.js";import"../renderers/support/AuthoringInfoVisualVariable.js";import"./colorRamps.js";import"../rest/support/AlgorithmicColorRamp.js";import"../rest/support/ColorRamp.js";import"../rest/support/MultipartColorRamp.js";import"../renderers/mixins/VisualVariablesMixin.js";import"../renderers/visualVariables/ColorVariable.js";import"../renderers/visualVariables/VisualVariable.js";import"./LegendOptions.js";import"../renderers/visualVariables/support/ColorStop.js";import"../renderers/visualVariables/OpacityVariable.js";import"../renderers/visualVariables/support/OpacityStop.js";import"../renderers/visualVariables/RotationVariable.js";import"../renderers/visualVariables/SizeVariable.js";import"../renderers/visualVariables/support/SizeStop.js";import"./sizeVariableUtils.js";import"./visualVariableUtils.js";import"../Graphic.js";import"./compilerUtils.js";import"./lengthUtils.js";import"../renderers/support/ClassBreakInfo.js";import"./commonProperties.js";import"../symbols/support/jsonUtils.js";import"./layerUtils2.js";import"../renderers/DictionaryRenderer.js";import"./LRUCache.js";import"./MemCache.js";import"./Version.js";import"../layers/support/FieldsIndex.js";import"./UnknownTimeZone.js";import"./OverrideHelper.js";import"./colorUtils2.js";import"./vec4.js";import"./vec4f64.js";import"./CIMSymbolHelper.js";import"./BidiEngine.js";import"./fontUtils.js";import"./GeometryUtils.js";import"./enums2.js";import"./utils6.js";import"./definitions.js";import"./HighlightOptions.js";import"./shapingUtils.js";import"./mat2d.js";import"./mat2df32.js";import"./vec2.js";import"./vec2f32.js";import"./Rect.js";import"./BoundingBox.js";import"./defaults.js";import"./defaultsJSON.js";import"./quantizationUtils.js";import"../renderers/DotDensityRenderer.js";import"../renderers/support/AttributeColorInfo.js";import"../renderers/HeatmapRenderer.js";import"../renderers/support/HeatmapColorStop.js";import"./heatmapUtils.js";import"../renderers/PieChartRenderer.js";import"../renderers/SimpleRenderer.js";import"../renderers/UniqueValueRenderer.js";import"./diffUtils.js";import"../renderers/support/UniqueValue.js";import"../renderers/support/UniqueValueClass.js";import"../renderers/support/UniqueValueGroup.js";import"../renderers/support/UniqueValueInfo.js";import"./styleUtils.js";import"../renderers/support/jsonUtils.js";import"../core/workers/workers.js";import"../core/workers/Connection.js";import"./Queue.js";import"../core/workers/RemoteClient.js";import"./FeatureStore.js";import"./BoundsStore.js";import"./PooledRBush.js";import"./quickselect.js";import"./_commonjsHelpers.js";import"./timeSupport.js";import"../geometry/support/normalizeUtils.js";import"./normalizeUtilsCommon.js";import"./simplify.js";import"./utils7.js";import"./utils8.js";import"./optimizedFeatureQueryEngineAdapter.js";import"./QueryEngine.js";import"../core/sql/WhereClause.js";import"./TimeOnly.js";import"./fieldType.js";import"./QueryEngineCapabilities.js";import"./utils10.js";import"./timeUtils.js";import"./utils2.js";import"./basemapUtils.js";import"../Basemap.js";import"./loadAll.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../support/BasemapStyle.js";import"./writeUtils.js";import"./utils3.js";import"./mat4.js";import"./utils11.js";import"./generateRendererUtils.js";import"./SnappingCandidate.js";import"./Scheduler.js";import"../core/signal.js";import"./debugFlags.js";import"./RenderState.js";import"./clientSideDefaults.js";import"../rest/knowledgeGraph/GraphQueryStreaming.js";import"../rest/knowledgeGraph/GraphQuery.js";import"../rest/support/Query.js";import"../TimeExtent.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./FullTextSearch.js";import"./spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"./fieldProperties.js";import"../layers/mixins/FeatureReductionLayer.js";import"../layers/support/AggregateField.js";import"../layers/support/ExpressionInfo.js";import"./layerContainerType.js";import"./FeatureReduction.js";import"../layers/support/FeatureReductionBinning.js";import"./commonProperties2.js";import"../support/timeUtils.js";import"./ElevationInfo.js";import"./unitConversionUtils.js";import"./featureLayerUtils.js";import"./featureQueryAll.js";import"../rest/support/AttachmentQuery.js";import"../rest/support/RelationshipQuery.js";import"../layers/support/LabelClass.js";import"./labelUtils.js";import"../layers/support/FeatureReductionCluster.js";import"../layers/support/FeatureReductionSelection.js";import"./clusterUtils.js";import"./MD5.js";import"../layers/mixins/RefreshableLayer.js";import"../rest/support/FeatureSet.js";import"../support/popupUtils.js";import"./jsonUtils.js";import"./parser.js";import"../rest/knowledgeGraph/GraphQueryResult.js";import"../rest/knowledgeGraph/GraphQueryStreamingResult.js";import"../rest/knowledgeGraph/KnowledgeGraph.js";import"../rest/knowledgeGraph/DataModel.js";import"../rest/knowledgeGraph/GraphObjectType.js";import"../rest/knowledgeGraph/FieldIndex.js";import"../rest/knowledgeGraph/GraphProperty.js";import"../rest/knowledgeGraph/ServiceDefinition.js";import"../rest/knowledgeGraph/Entity.js";import"../rest/knowledgeGraph/GraphNamedObject.js";import"../rest/knowledgeGraph/GraphObject.js";import"../rest/knowledgeGraph/Relationship.js";import"../rest/knowledgeGraph/SearchIndex.js";import"../rest/knowledgeGraph/Path.js";import"../rest/knowledgeGraph/GraphApplyEditsResult.js";let T,S=null;var R,I,G,U,v,A,N,P,_,F;function V(e,t,i,r,o,s){const a=i.length,n=o.length,p=Float64Array.BYTES_PER_ELEMENT,l=Uint32Array.BYTES_PER_ELEMENT,m=Uint8Array.BYTES_PER_ELEMENT,h=15+a*(m+2*p)+n*(2*l),u=S._malloc(h);try{const m=u+16-u%16,h=m+a*p,c=h+a*p,d=c+n*l,y=d+n*l,j=()=>[S.HEAPF64.subarray(m>>3,(m>>3)+a),S.HEAPF64.subarray(h>>3,(h>>3)+a),S.HEAPU32.subarray(c>>2,(c>>2)+n),S.HEAPU32.subarray(d>>2,(d>>2)+n),S.HEAPU8.subarray(y,y+a)],[g,f,C,b,k]=j();g.set(i),f.set(r),C.set(o),b.set(s),k.set(t);const L=e(a,y,m,h,n,c,d);let M=null;if(L){const e=S.getLayoutLinksTypes(),t=S.getLayoutLinksVerticesEndIndices(),i=S.getLayoutLinksVertices(),r=S.countLayoutLinksVertices();M={types:S.HEAPU8.subarray(e,e+n),vertexEndIndex:S.HEAPU32.subarray(t>>2,(t>>2)+n),vertices:S.HEAPF64.subarray(i>>3,(i>>3)+2*r)}}const[w,D,E,x,T]=j();return i.set(w),r.set(D),o.set(E),s.set(x),t.set(T),{success:L,links:M}}finally{S._free(u),S.cleanupLayout()}}!function(e){e[e.None=0]="None",e[e.IsMovable=1]="IsMovable",e[e.IsGeographic=2]="IsGeographic",e[e.IsRoot=4]="IsRoot"}(R||(R={})),function(e){e[e.Regular=0]="Regular",e[e.Orthogonal=1]="Orthogonal",e[e.Curved=2]="Curved",e[e.Recursive=3]="Recursive"}(I||(I={})),function(e){e.getMinIdealEdgeLength=function(){return S.getMinIdealEdgeLength()},e.apply=function(e,t,i,r,o,s=2,a=1,n=-1){return V(((e,t,i,r,o,p,l)=>S.applyForceDirectedLayout(e,t,i,r,o,p,l,s,a,n)),e,t,i,r,o)}}(G||(G={})),function(e){e.apply=function(e,t,i,r,o,s=2,a=1,n=-1){return V(((e,t,i,r,o,p,l)=>S.applyCommunityLayout(e,t,i,r,o,p,l,s,a,n)),e,t,i,r,o)}}(U||(U={})),function(e){e.apply=function(e,t,i,r,o){return V(S.applySimpleLayout,e,t,i,r,o)}}(v||(v={})),function(e){e.apply=function(e,t,i,r,o){return V(S.applyHierarchicalLayout,e,t,i,r,o)}}(A||(A={})),function(e){e.apply=function(e,t,i,r,o){return V(S.applyRadialTreeLayout,e,t,i,r,o)}}(N||(N={})),function(e){e.apply=function(e,t,i,r,o){return V(S.applySmartTreeLayout,e,t,i,r,o)}}(P||(P={})),function(e){e[e.Undirected=0]="Undirected",e[e.Directed=1]="Directed",e[e.Reversed=2]="Reversed"}(_||(_={})),function(e){e[e.ByCC_Raw=0]="ByCC_Raw",e[e.ByCC_NormalizeGlobally=1]="ByCC_NormalizeGlobally",e[e.ByCC_NormalizeByCC=2]="ByCC_NormalizeByCC"}(F||(F={}));let O=class extends(C(b(p))){constructor(e){if(super(e),this.dataPreloadedInLocalCache=!1,this.defaultLinkChartConfig=null,this._currentLinkChartConfig={layoutMode:"RADIAL_TREE",xScaleFactor:1,yScaleFactor:1},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new t,this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new D({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.linkChartGeohashLookup=new Map,this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.sublayerIdsCache=new Map,this.tables=new t,this.type="link-chart",this._originalInclusionList=e.inclusionModeDefinition,e.dataPreloadedInLocalCache&&!e.inclusionModeDefinition)throw new i("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it")}normalizeCtorArgs(e){return{url:e.url,title:e.title,dataPreloadedInLocalCache:e.dataPreloadedInLocalCache,defaultLinkChartConfig:e.defaultLinkChartConfig}}_initializeLayerProperties(e){if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2]}const t=new Set;let o=[],s=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new i("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.inclusionModeDefinition?.generateAllSublayers?(o=e.knowledgeGraph.dataModel.entityTypes??[],s=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((i,a)=>{if(!this._graphTypeLookup.get(a))return r.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(a);this._graphTypeLookup.get(a)instanceof w||"strictOrigin"in this._graphTypeLookup.get(a)?t.has(a)||(t.add(a),s.push(this._graphTypeLookup.get(a))):this._graphTypeLookup.get(a)instanceof M||"properties"in this._graphTypeLookup.get(a)?t.has(a)||(t.add(a),o.push(this._graphTypeLookup.get(a))):(r.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(a))})):(o=e.knowledgeGraph.dataModel.entityTypes??[],s=e.knowledgeGraph.dataModel.relationshipTypes??[]);const a=new u({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=o,this.memberRelationshipTypes=s,this.dataManager=a}load(e){return this.addResolvingPromise(new Promise((t=>{L(this.url).then((i=>{if(this._initializeLayerProperties({knowledgeGraph:i,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})})),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})}))),this.dataPreloadedInLocalCache)this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e=>{e.useAllData=!1,e.members?.forEach((e=>{let t;t=e.linkChartLocation instanceof m?e.linkChartLocation:e.linkChartLocation?l(e.linkChartLocation):null,t&&2===t.coords.length&&0===t.lengths.length?(this.linkChartGeohashLookup.set(e.id,n(t.coords[1],t.coords[0],f)),this.entityLinkChartDiagramLookup.set(e.id,t)):(this.linkChartGeohashLookup.set(e.id,""),this.relationshipLinkChartDiagramLookup.set(e.id,t))})),this.addResolvingPromise(this._initializeDiagram().then((async()=>{this.layers.forEach((async e=>{await e.refreshCachedQueryEngine()})),this.tables.forEach((async e=>{await e.refreshCachedQueryEngine()}))})))}));else{const t="GEOGRAPHIC"===this.defaultLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,t,!0).then((async()=>{o(e);const t=[],i=[];this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach((e=>{e.useAllData=!1}))),await this._initializeDiagram(),this.layers.forEach((e=>{i.push(e.refreshCachedQueryEngine()),t.push(new Promise((t=>{e.on("layerview-create",(()=>{t(null)}))})))})),this.tables.forEach((e=>{i.push(e.refreshCachedQueryEngine())})),await Promise.all(i)})))}t(null)}))}))),Promise.resolve(this)}async addRecords(e,t){let i=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(i=await c(e,this.dataManager.knowledgeGraph));const r=e.concat(i).filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));await this._handleNewRecords(r)}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:i=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1}){let r=[];for(const t of e)!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.members?.has(t.id)&&r.push(t);if(t){const e=new Set,t=[];for(const t of r)if(this.dataManager.nodeConnectionsLookup.has(t.id))for(const i of this.dataManager.nodeConnectionsLookup.get(t.id))e.add(i);for(const i of e)if(this.dataManager.memberIdTypeLookup.has(i))for(const e of this.dataManager.memberIdTypeLookup.get(i))this.dataManager.relationshipTypeNames.has(e)&&t.push({id:i,typeName:e});r=r.concat(t)}this.dataManager.removeFromLayer(r);for(const e of r)this.sublayerIdsCache.get(e.typeName)?.delete(e.id),this.dataManager.relationshipTypeNames.has(e.typeName)?this.relationshipLinkChartDiagramLookup.delete(e.id):this.entityLinkChartDiagramLookup.delete(e.id);i&&await this.calculateLinkChartLayout(this._currentLinkChartConfig.layoutMode,{xScaleFactor:this._currentLinkChartConfig.xScaleFactor,yScaleFactor:this._currentLinkChartConfig.xScaleFactor});const o=[];return this.layers.forEach((e=>{o.push(e.refreshCachedQueryEngine())})),await Promise.all(o),this._refreshNamedTypes(),r}async expand(e,t){const i=await this.dataManager.getConnectedRecordIds(e,t),r=i.filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));return await this._handleNewRecords(i),{records:r}}loadLayerAssumingLocalCache(){this.memberRelationshipTypes.forEach((e=>{const t=new h({objectType:e,parentCompositeLayer:this,graphType:"relationship",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.memberEntityTypes.forEach((e=>{const t=new h({objectType:e,parentCompositeLayer:this,graphType:"entity",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{const i=((e,t,i)=>(e.has(t)||e.set(t,new Set),e.get(t)))(this.sublayerIdsCache,t);e.members?.forEach((e=>{if(i.add(e.id),e.linkChartLocation)if(e.linkChartLocation instanceof m)this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e.id,e.linkChartLocation):this.entityLinkChartDiagramLookup.set(e.id,e.linkChartLocation),2===e.linkChartLocation.coords.length&&0===e.linkChartLocation.lengths.length?this.linkChartGeohashLookup.set(e.id,n(e.linkChartLocation.coords[1],e.linkChartLocation.coords[0],f)):this.linkChartGeohashLookup.set(e.id,"");else{const i=l(e.linkChartLocation);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(e.id,e.linkChartLocation?i:null):this.entityLinkChartDiagramLookup.set(e.id,e.linkChartLocation?i:null),"x"in e.linkChartLocation&&"y"in e.linkChartLocation?this.linkChartGeohashLookup.set(e.id,n(e.linkChartLocation.x,e.linkChartLocation.y,f)):this.linkChartGeohashLookup.set(e.id,"")}}))}))}async calculateLinkChartLayout(e="RADIAL_TREE",t){const o=[],s=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{o.push({typeName:t,feature:e})})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{s.push({typeName:t,feature:e})}))})),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const a=new Map,p=new Map,m=new Map,h=new Map,u=new Uint8Array(o.length),c=new Float64Array(o.length),C=new Float64Array(o.length),b=new Uint32Array(s.length),L=new Uint32Array(s.length),M=[],w=t?.xScaleFactor??1,I=t?.yScaleFactor??1,_=new D({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let F,V="FORCE_DIRECTED",O=0,B=0;switch(V="GEOGRAPHIC"===e?"FORCE_DIRECTED":e,V){case"FORCE_DIRECTED":F=G.apply;break;case"COMMUNITY":F=U.apply;break;case"HIERARCHICAL":F=A.apply;break;case"RADIAL_TREE":F=N.apply;break;case"SMART_TREE":F=P.apply;break;default:F=v.apply}o.forEach((({typeName:i,feature:r})=>{if(t?.lockedNodeLocations?.has(r.attributes[d])){"GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(i)?u[O]=R.IsGeographic:u[O]=R.None;const o=t.lockedNodeLocations.get(r.attributes[d]);c[O]=o.x,C[O]=o.y}else if("GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(i)){u[O]=R.IsGeographic;let e=null;const t=r.attributes[this.dataManager.geographicLookup.get(i).name],o=this.dataManager.geographicLookup.get(i)?.geometryType;switch(o){case"esriGeometryPoint":c[O]=t?.x,C[O]=t?.y;break;case"esriGeometryPolygon":e=t?.centroid,null!=e?.x&&null!=e?.y?(c[O]=e.x,C[O]=e.y):u[O]=R.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(c[O]=e.x,C[O]=e.y):u[O]=R.IsMovable;break;default:u[O]=R.IsMovable}(null==c[O]||null==C[O]||Number.isNaN(c[O])||Number.isNaN(C[O]))&&(u[O]=R.IsMovable,c[O]=0,C[O]=0)}else u[O]=R.IsMovable,c[O]=0,C[O]=0;h.set(r.attributes[d],O),M[O]={feature:r,typeName:i},O++}));let z=!1;s.forEach((e=>{const t=h.get(e.feature.attributes[y]),i=h.get(e.feature.attributes[j]);void 0!==t&&void 0!==i?(b[B]=t,L[B]=i,B++):(z=!0,this.relationshipLinkChartDiagramLookup.set(e.feature.attributes[y],null),this.linkChartGeohashLookup.set(e.feature.attributes[y],null))})),z&&r.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null"),await(T||(T=import("./lclayout.js").then((e=>e.l)).then((({default:e})=>e({locateFile:e=>k(`esri/libs/linkchartlayout/${e}`)}))).then((e=>{S=e})),T));const{success:H}=F(u,c,C,b,L);if(!H)throw new i("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(let e=0;e<M.length;e++){if(u[e]===R.IsMovable&&(c[e]=c[e]*w,C[e]=C[e]*I),C[e]>84.9999&&(C[e]=84.9999),C[e]<-84.9999&&(C[e]=-84.9999),c[e]>179.9999&&(c[e]=179.9999),c[e]<-179.9999&&(c[e]=-179.9999),M[e].feature.attributes[g]=new E(c[e],C[e]),a.has(M[e].typeName)){const t=a.get(M[e].typeName);t?.set(M[e].feature.attributes[d],M[e].feature)}else{const t=new Map;t.set(M[e].feature.attributes[d],M[e].feature),a.set(M[e].typeName,t)}m.set(M[e].feature.attributes[d],M[e].feature);const t=l(M[e].feature.attributes[g]);this.entityLinkChartDiagramLookup.set(M[e].feature.attributes[d],M[e].feature.attributes[g]?t:null),this.linkChartGeohashLookup.set(M[e].feature.attributes[d],n(M[e].feature.attributes[g].y,M[e].feature.attributes[g].x,f)),M[e].feature.attributes[g].x<_.xmin&&(_.xmin=M[e].feature.attributes[g].x),M[e].feature.attributes[g].x>_.xmax&&(_.xmax=M[e].feature.attributes[g].x),M[e].feature.attributes[g].y<_.ymin&&(_.ymin=M[e].feature.attributes[g].y),M[e].feature.attributes[g].y>_.ymax&&(_.ymax=M[e].feature.attributes[g].y)}return this.linkChartExtent.xmin=_.xmin,this.linkChartExtent.xmax=_.xmax,this.linkChartExtent.ymin=_.ymin,this.linkChartExtent.ymax=_.ymax,s.forEach((e=>{const t=M[h.get(e.feature.attributes[y])]?.feature.attributes[g],i=M[h.get(e.feature.attributes[j])]?.feature.attributes[g];if(!t||!i)return;const r=new x({paths:[[t.x,t.y],[i.x,i.y]]});if(e.feature.attributes[g]=r,p.has(e.typeName)){const t=p.get(e.typeName);t?.set(e.feature.attributes[d],e.feature)}else{const t=new Map;t.set(e.feature.attributes[d],e.feature),p.set(e.typeName,t)}m.set(e.feature.attributes[d],e.feature);const o=l(e.feature.attributes[g]);this.relationshipLinkChartDiagramLookup.set(e.feature.attributes[d],e.feature.attributes[g]?o:null),this.linkChartGeohashLookup.set(e.feature.attributes[d],"")})),this._currentLinkChartConfig={layoutMode:e,xScaleFactor:w,yScaleFactor:I},{nodes:a,links:p,idMap:m}}async applyNewLinkChartLayout(e="RADIAL_TREE",t){const i=[];await this.calculateLinkChartLayout(e,t),this.layers.forEach((e=>{i.push(e.refreshCachedQueryEngine())})),await Promise.all(i),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;return this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((t=>{t?.members?.forEach((t=>{const i=t.linkChartLocation;let r;const o=t.id;i&&(r="x"in i?{x:i.x,y:i.y}:{x:i.coords[0],y:i.coords[1]},e.set(o,new E({x:r.x,y:r.y})))}))})),e}async synchronizeInclusionListWithCache(){return new Promise((e=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{if(e.useAllData=!1,e.members&&e.members.size>0){if(!this.dataManager.sublayerCaches.get(t))return;const i=new Set(Array.from(this.dataManager.sublayerCaches.get(t).keys()));Array.from(e.members.keys()).filter((e=>!i.has(e))).forEach((t=>{e.members?.delete(t)}))}})),e()}))}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t),this._refreshNamedTypes()}async _handleNewRecords(e){const t=[];this.dataManager.addToLayer(e);for(const i of e)this.sublayerIdsCache.has(i.typeName)||(this.sublayerIdsCache.set(i.typeName,new Set),t.push(i.typeName)),this.sublayerIdsCache.get(i.typeName).add(i.id);for(const e of t)if(this._graphTypeLookup.has(e)){const t=this._graphTypeLookup.get(e),i="endPoints"in t?"relationship":"entity",r=new h({objectType:t,parentCompositeLayer:this,graphType:i,title:e});"entity"===i?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),r.geometryType?this.layers.push(r):this.tables.push(r),this.dataManager.sublayerCaches.set(e,new Map)}await this.dataManager.refreshCacheContent(e.map((e=>e.id))),await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,{xScaleFactor:this._currentLinkChartConfig.xScaleFactor,yScaleFactor:this._currentLinkChartConfig.xScaleFactor})}async _initializeDiagram(){this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(((e,t)=>{e?.members?.forEach((e=>{const i=e.linkChartLocation;let r;const o=e.id;if(!i)return;r="x"in i?{x:i.x,y:i.y}:{x:i.coords[0],y:i.coords[1]};const s=l(r);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(o,s):this.entityLinkChartDiagramLookup.set(o,s),this.linkChartGeohashLookup.set(o,n(r.x,r.y,f)),this.linkChartExtent.xmin>r.x&&(this.linkChartExtent.xmin=r.x),this.linkChartExtent.xmax<r.x&&(this.linkChartExtent.xmax=r.x),this.linkChartExtent.ymin>r.y&&(this.linkChartExtent.ymin=r.y),this.linkChartExtent.ymax<r.y&&(this.linkChartExtent.ymax=r.y)}))})),this.memberRelationshipTypes.forEach((e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach((e=>{const t=this.relationshipLinkChartDiagramLookup.get(e.attributes[y]),i=this.relationshipLinkChartDiagramLookup.get(e.attributes[j]);if(t&&i){const r=l(new x({paths:[[t.coords[0],t.coords[1]],[i.coords[0],i.coords[1]]]}));this.relationshipLinkChartDiagramLookup.set(e.attributes[d],r)}else this.relationshipLinkChartDiagramLookup.set(e.attributes[d],null);this.linkChartGeohashLookup.set(e.attributes[d],"")}))}))):await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode,{xScaleFactor:this.defaultLinkChartConfig.xScaleFactor,yScaleFactor:this.defaultLinkChartConfig.yScaleFactor,lockedNodeLocations:this.getCurrentNodeLocations()}):await this.calculateLinkChartLayout("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}};e([s()],O.prototype,"dataPreloadedInLocalCache",void 0),e([s()],O.prototype,"defaultLinkChartConfig",void 0),e([s()],O.prototype,"dataManager",void 0),e([s()],O.prototype,"knowledgeGraph",void 0),e([s()],O.prototype,"layers",void 0),e([s()],O.prototype,"entityLinkChartDiagramLookup",void 0),e([s()],O.prototype,"relationshipLinkChartDiagramLookup",void 0),e([s()],O.prototype,"linkChartExtent",void 0),e([s()],O.prototype,"linkChartGeohashLookup",void 0),e([s()],O.prototype,"memberEntityTypes",void 0),e([s()],O.prototype,"memberRelationshipTypes",void 0),e([s()],O.prototype,"sublayerIdsCache",void 0),e([s()],O.prototype,"tables",void 0),e([s({json:{read:!1}})],O.prototype,"type",void 0),O=e([a("esri.layers.LinkChartLayer")],O);const B=O;export{B as default};
