/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import e from"../Color.js";import{i as r}from"./colorUtils2.js";import{clone as i}from"../core/lang.js";import{k as t}from"../layers/support/fieldUtils.js";import{r as s}from"./CIMSymbolHelper.js";import{u as o,d as a,e as n,f as c}from"./utils6.js";import l from"../core/Error.js";import{L as p}from"./Logger.js";import{b as f,u as m,a as y,c as u}from"./quantizationUtils.js";function d(e,r,i,t,s){if(null==e)return null;const o=e.referencesGeometry()&&s?function(e,r,i){const{transform:t,hasZ:s,hasM:o}=i;v.has(r)||v.set(r,function(e){const r={};switch(e){case"esriGeometryPoint":return(e,i,t,s)=>u(i,r,e,t,s);case"esriGeometryPolygon":return(e,i,t,s)=>y(i,r,e,t,s);case"esriGeometryPolyline":return(e,i,t,s)=>m(i,r,e,t,s);case"esriGeometryMultipoint":return(e,i,t,s)=>f(i,r,e,t,s);default:return p.getLogger("esri.views.2d.support.arcadeOnDemand").error(new l("mapview-arcade",`Unable to handle geometryType: ${e}`)),e=>e}}(r));const a=v.get(r)(e.geometry,t,s,o);return{...e,geometry:a}}(r,t,s):r,a=e.repurposeFeature(o);try{return e.evaluate({...i,$feature:a},e.services)}catch(e){return p.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",e),null}}const v=new Map;class b{static findApplicableOverrides(e,r,i){if(e&&r){if(e.primitiveName){let t=!1;for(const r of i)if(r.primitiveName===e.primitiveName){t=!0;break}if(!t)for(const t of r)t.primitiveName===e.primitiveName&&i.push(t)}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const t of e.effects)b.findApplicableOverrides(t,r,i);if(e.symbolLayers)for(const t of e.symbolLayers)b.findApplicableOverrides(t,r,i);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMPictureStroke":case"CIMGradientStroke":case"CIMSolidFill":case"CIMPictureFill":case"CIMHatchFill":case"CIMGradientFill":case"CIMVectorMarker":case"CIMCharacterMarker":case"CIMPictureMarker":if(e.effects)for(const t of e.effects)b.findApplicableOverrides(t,r,i);if(e.markerPlacement&&b.findApplicableOverrides(e.markerPlacement,r,i),"CIMVectorMarker"===e.type){if(e.markerGraphics)for(const t of e.markerGraphics)b.findApplicableOverrides(t,r,i),b.findApplicableOverrides(t.symbol,r,i)}else"CIMCharacterMarker"===e.type?b.findApplicableOverrides(e.symbol,r,i):"CIMHatchFill"===e.type?b.findApplicableOverrides(e.lineSymbol,r,i):"CIMPictureMarker"===e.type&&b.findApplicableOverrides(e.animatedSymbolProperties,r,i)}}}static findEffectOverrides(e,r){if(!e)return null;if(!r||!e.primitiveName)return{type:"cim-effect-info",effect:e,overrides:[]};const i=e.primitiveName,t=[];for(const e of r)e.primitiveName===i&&t.push({...e,propertyName:o(e.propertyName)});return{type:"cim-effect-info",effect:e,overrides:t}}static async resolveSymbolOverrides(e,r,t,s,o,n,c){if(!e?.symbol)return null;let{symbol:l,primitiveOverrides:p}=e;const f=!!p;if(!f&&!s)return l;l=i(l),p=i(p);let m=!0;if(r||(r={attributes:{}},m=!1),f){if(m||(p=p.filter((e=>!e.valueExpressionInfo?.expression.includes("$feature")))),c||(p=p.filter((e=>!e.valueExpressionInfo?.expression.includes("$view")))),p.length>0){const e={spatialReference:t,fields:a(r.attributes),geometryType:o};await b.createRenderExpressions(p,e),b.evaluateOverrides(p,r,o??"esriGeometryPoint",n,c)}b.applyOverrides(l,p)}return s&&b.applyDictionaryTextOverrides(l,r,s),l}static async createRenderExpressions(e,r){const i=[];for(const s of e){const e=s.valueExpressionInfo;if(!e||b._expressionToRenderExpression.has(e.expression))continue;const o=t(e.expression,r.spatialReference,r.fields);i.push(o),o.then((r=>b._expressionToRenderExpression.set(e.expression,r)))}i.length>0&&await Promise.all(i)}static evaluateOverrides(e,i,t,o,a){const n={$view:{scale:a?.scale}};for(const a of e){a.value&&"object"==typeof a.value&&r(a.value)&&("Color"===a.propertyName||"StrokeColor"===a.propertyName)&&(a.value=s(a.value));const e=a.valueExpressionInfo;if(!e)continue;const c=b._expressionToRenderExpression.get(e.expression);c&&(a.value=d(c,i,n,t,o))}}static applyDictionaryTextOverrides(e,r,i,t="Normal"){if(e?.type)switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":case"CIMTextSymbol":{const s=e.symbolLayers;if(!s)return;for(const o of s)o&&"CIMVectorMarker"===o.type&&b.applyDictionaryTextOverrides(o,r,i,"CIMTextSymbol"===e.type?e.textCase:t)}break;case"CIMVectorMarker":{const t=e.markerGraphics;if(!t)return;for(const e of t)e&&b.applyDictionaryTextOverrides(e,r,i)}break;case"CIMMarkerGraphic":{const s=e.textString;if(s&&s.includes("[")){const o=n(s,i);e.textString=c(r,o,t)}}}}static applyOverrides(e,r,i,t){if(e.primitiveName)for(const s of r)if(s.primitiveName===e.primitiveName){const r=o(s.propertyName);if(t&&t.push({cim:e,nocapPropertyName:r,value:e[r]}),i){let r=!1;for(const t of i)t.primitiveName===e.primitiveName&&(r=!0);r||i.push(s)}null!=s.value&&(e[r]=s.value)}switch(e.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(e.effects)for(const s of e.effects)b.applyOverrides(s,r,i,t);if(e.symbolLayers)for(const s of e.symbolLayers)b.applyOverrides(s,r,i,t);break;case"CIMTextSymbol":break;case"CIMSolidStroke":case"CIMSolidFill":case"CIMVectorMarker":if(e.effects)for(const s of e.effects)b.applyOverrides(s,r,i,t);if("CIMVectorMarker"===e.type&&e.markerGraphics)for(const s of e.markerGraphics)b.applyOverrides(s,r,i,t),b.applyOverrides(s.symbol,r,i,t)}}static restoreOverrides(e){for(const r of e)r.cim[r.nocapPropertyName]=r.value}static buildOverrideKey(e){let r="";for(const i of e)void 0!==i.value&&(r+=`${i.primitiveName}${i.propertyName}${JSON.stringify(i.value)}`);return r}static toValue(r,i){if("DashTemplate"===r)return i.split(" ").map((e=>Number(e)));if("Color"===r){const r=new e(i).toRgba();return r[3]*=255,r}return i}}b._expressionToRenderExpression=new Map;export{b as O,d as c};
