/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as t}from"./tslib.es6.js";import"../geometry.js";import e from"../Graphic.js";import{c as i}from"./asyncUtils.js";import s from"../core/Collection.js";import o from"../core/Error.js";import r from"../core/Evented.js";import{L as p}from"./Logger.js";import{d as n,a}from"./maybe.js";import{z as l}from"./quantityUtils.js";import{when as c,pausable as h,watch as m,syncAndInitial as d,initial as y}from"../core/reactiveUtils.js";import{c as u}from"./screenUtils.js";import{property as v}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{subclass as j}from"../core/accessorSupport/decorators/subclass.js";import{f as g,g as _,h as f}from"./coordsUtils.js";import b from"../layers/GraphicsLayer.js";import x from"../symbols/SimpleMarkerSymbol.js";import{V as S}from"./ViewingMode.js";import{S as G}from"./SnappingVisualizer2D.js";import{c as M}from"./drawUtils.js";import V from"./GraphicMover.js";import w from"../views/draw/support/HighlightHelper.js";import{a as I}from"./layerUtils.js";import{s as U}from"./settings2.js";import{V as k}from"./InputManager.js";import{s as E}from"./keybindings.js";import{E as C}from"./EditGeometryOperations.js";import{S as T}from"../widgets/Sketch/SketchViewModel.js";import{S as O}from"./SnappingContext.js";import{T as R}from"./Tooltip.js";import{T as D,a as L}from"./TranslateTooltipInfos.js";import{a as F}from"./automaticAreaMeasurementUtils.js";import{a as P,b as H}from"./automaticLengthMeasurementUtils.js";import A from"../geometry/Polyline.js";import z from"../geometry/Point.js";import"./ensureType.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./ObservableBase.js";import"./tracking.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"../config.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"./writer.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/Polygon.js";import"./extentUtils.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"./typeUtils.js";import"../geometry/support/jsonUtils.js";import"./Axis.js";import"../PopupTemplate.js";import"../core/Clonable.js";import"../layers/support/fieldUtils.js";import"../core/sql.js";import"../intl.js";import"./date.js";import"./locale.js";import"./timeZoneUtils.js";import"./datetime.js";import"./messages.js";import"../popup/content.js";import"../popup/content/AttachmentsContent.js";import"../popup/content/Content.js";import"../popup/content/CustomContent.js";import"../popup/content/ExpressionContent.js";import"../popup/ElementExpressionInfo.js";import"../popup/content/FieldsContent.js";import"../popup/FieldInfo.js";import"./enumeration.js";import"../popup/support/FieldInfoFormat.js";import"../popup/content/MediaContent.js";import"../popup/content/BarChartMediaInfo.js";import"../popup/content/mixins/ChartMediaInfo.js";import"../popup/content/mixins/MediaInfo.js";import"../popup/content/support/ChartMediaInfoValue.js";import"../Color.js";import"./colorUtils.js";import"../popup/content/support/ChartMediaInfoValueSeries.js";import"./chartMediaInfoUtils.js";import"../popup/content/ColumnChartMediaInfo.js";import"../popup/content/ImageMediaInfo.js";import"../popup/content/support/ImageMediaInfoValue.js";import"../popup/content/LineChartMediaInfo.js";import"../popup/content/PieChartMediaInfo.js";import"../popup/content/RelationshipContent.js";import"../popup/support/RelatedRecordsInfoFieldOrder.js";import"../popup/content/TextContent.js";import"../popup/ExpressionInfo.js";import"../popup/LayerOptions.js";import"../popup/RelatedRecordsInfo.js";import"../support/actions/ActionBase.js";import"../core/Identifiable.js";import"../support/actions/ActionButton.js";import"../support/actions/ActionToggle.js";import"./shared.js";import"./SimpleObservable.js";import"../symbols.js";import"../symbols/CIMSymbol.js";import"../symbols/Symbol.js";import"../symbols/ExtrudeSymbol3DLayer.js";import"../symbols/Symbol3DLayer.js";import"./utils4.js";import"../symbols/edges/Edges3D.js";import"./materialUtils.js";import"./opacityUtils.js";import"../symbols/edges/SketchEdges3D.js";import"../symbols/edges/SolidEdges3D.js";import"./Symbol3DMaterial.js";import"../symbols/FillSymbol.js";import"../symbols/SimpleLineSymbol.js";import"../symbols/LineSymbol.js";import"../symbols/LineSymbolMarker.js";import"./lineMarkers.js";import"../symbols/FillSymbol3DLayer.js";import"../symbols/patterns/LineStylePattern3D.js";import"../symbols/patterns/StylePattern3D.js";import"./utils5.js";import"./colors.js";import"./symbolLayerUtils3D.js";import"./aaBoundingBox.js";import"../symbols/Font.js";import"../symbols/IconSymbol3DLayer.js";import"./persistableUrlUtils.js";import"../symbols/LabelSymbol3D.js";import"../symbols/Symbol3D.js";import"./collectionUtils.js";import"../portal/Portal.js";import"../core/Loadable.js";import"../core/Promise.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../symbols/LineSymbol3DLayer.js";import"../symbols/LineStyleMarker3D.js";import"../symbols/ObjectSymbol3DLayer.js";import"../symbols/PathSymbol3DLayer.js";import"../symbols/TextSymbol3DLayer.js";import"../symbols/WaterSymbol3DLayer.js";import"../symbols/support/StyleOrigin.js";import"./Thumbnail.js";import"./calloutUtils.js";import"../symbols/callouts/Callout3D.js";import"../symbols/callouts/LineCallout3D.js";import"../symbols/support/Symbol3DVerticalOffset.js";import"../symbols/LineSymbol3D.js";import"../symbols/MarkerSymbol.js";import"../symbols/MeshSymbol3D.js";import"../symbols/PictureFillSymbol.js";import"./urlUtils.js";import"../symbols/PictureMarkerSymbol.js";import"../symbols/PointSymbol3D.js";import"../symbols/PolygonSymbol3D.js";import"../symbols/SimpleFillSymbol.js";import"../symbols/TextSymbol.js";import"../symbols/WebStyleSymbol.js";import"./GraphicsCollection.js";import"../layers/Layer.js";import"../layers/mixins/BlendLayer.js";import"./jsonUtils.js";import"./parser.js";import"./utils3.js";import"./mat4.js";import"./_commonjsHelpers.js";import"../layers/mixins/ScaleRangeLayer.js";import"./ElevationInfo.js";import"./unitConversionUtils.js";import"./lengthUtils.js";import"./vec2.js";import"./vec2f64.js";import"./enums2.js";import"./normalizedPoint.js";import"./dehydratedPoint.js";import"./elevationInfoUtils.js";import"./Settings.js";import"./SnappingVisualizer.js";import"./RightAngleSnappingHint.js";import"./PointSnappingHint.js";import"./GraphicManipulator.js";import"../geometry/projection.js";import"./projectBuffer.js";import"./geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"./zscale.js";import"./projectPointToVector.js";import"./defaults.js";import"./defaultsJSON.js";import"./drapedUtils.js";import"./screenUtils2.js";import"./layerViewUtils.js";import"./featureUtils.js";import"./layerUtils2.js";import"./utils2.js";import"./basemapUtils.js";import"../Basemap.js";import"./loadAll.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../support/BasemapStyle.js";import"./writeUtils.js";import"./colorUtils2.js";import"./vec4.js";import"./vec4f64.js";import"./Queue.js";import"./PropertiesPool.js";import"../core/signal.js";import"./plane.js";import"./mat3f64.js";import"./mat4f64.js";import"./quatf64.js";import"./mathUtils2.js";import"./geometry2dUtils.js";import"../geometry/Circle.js";import"../geometry/support/geodesicUtils.js";import"../views/interactive/sketch/SketchLabelOptions.js";import"../views/interactive/sketch/SketchTooltipOptions.js";import"../views/interactive/sketch/SketchValueOptions.js";import"./angularMeasurementUtils.js";import"./Cyclical.js";import"./projectVectorToVector.js";import"./SnappingManager.js";import"./UpdatingHandles.js";import"./snappingUtils.js";import"./sphere.js";import"./timeUtils.js";import"../rest/support/Query.js";import"../TimeExtent.js";import"./DataLayerSource.js";import"../layers/support/Field.js";import"./domains.js";import"../layers/support/CodedValueDomain.js";import"../layers/support/Domain.js";import"../layers/support/InheritedDomain.js";import"../layers/support/RangeDomain.js";import"./fieldType.js";import"./FullTextSearch.js";import"./spatialRelationships.js";import"../rest/support/StatisticDefinition.js";import"../layers/support/FeatureFilter.js";import"./floorFilterUtils.js";import"./viewUtils.js";import"../geometry/geometryEngine.js";import"./geometryEngineBase.js";import"./hydrated.js";import"./projectVectorToWGS84ComparableLonLat.js";import"./geodesicMeasurementUtils.js";import"../views/interactive/snapping/SnappingOptions.js";import"../views/interactive/snapping/FeatureSnappingLayerSource.js";import"./hitTestSelectUtils.js";import"./compilerUtils.js";import"./themeUtils.js";import"../widgets/Widget.js";import"./domUtils.js";import"./uuid.js";import"./projector.js";import"./widgetUtils.js";import"./jsxWidgetSupport.js";import"./legacyIcon.js";import"./jsxFactory.js";import"./a11yUtils.js";import"./memoize.js";import"./quantityFormatUtils.js";import"./unitFormatUtils.js";import"./ByteSizeUnit.js";import"./getDefaultUnitForView.js";import"./messageBundle.js";import"./directionModeIcons.js";import"./euclideanAreaMeasurementUtils.js";import"./earcut.js";import"./triangle.js";import"./lineSegment.js";import"./measurementUtils2.js";import"./spatialReferenceEllipsoidUtils.js";class B{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape-start"}}class q{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape"}}class W{constructor(t,e,i){this.graphic=t,this.mover=e,this.selected=i,this.type="reshape-stop"}}class Q{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move-start"}}class N{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move"}}class J{constructor(t,e,i){this.mover=t,this.dx=e,this.dy=i,this.type="move-stop"}}class K{constructor(t){this.added=t,this.type="vertex-select"}}class Z{constructor(t){this.removed=t,this.type="vertex-deselect"}}class X{constructor(t,e,i,s){this.added=t,this.graphic=e,this.oldGraphic=i,this.vertices=s,this.type="vertex-add"}}class Y{constructor(t,e,i,s){this.removed=t,this.graphic=e,this.oldGraphic=i,this.vertices=s,this.type="vertex-remove"}}const $=U.reshapeGraphics,tt={vertices:{default:new x({style:"circle",size:$.vertex.size,color:$.vertex.color,outline:{color:$.vertex.outlineColor,width:1}}),hover:new x({style:"circle",size:$.vertex.hoverSize,color:$.vertex.hoverColor,outline:{color:$.vertex.hoverOutlineColor,width:1}}),selected:new x({style:"circle",size:$.selected.size,color:$.selected.color,outline:{color:$.selected.outlineColor,width:1}})},midpoints:{default:new x({style:"circle",size:$.midpoint.size,color:$.midpoint.color,outline:{color:$.midpoint.outlineColor,width:1}}),hover:new x({style:"circle",size:$.midpoint.size,color:$.midpoint.color,outline:{color:$.midpoint.outlineColor,width:1}})}};let et=class extends r.EventedAccessor{constructor(t){super(t),this._activeOperationInfo=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this.tooltip=null,this._translateGraphicTooltipInfo=null,this._translateVertexTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.layer=null,this.midpointGraphics=new s,this.midpointSymbol=new x({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=[],this.snappingManager=null,this.symbols=tt,this.sketchOptions=new T,this.type="reshape",this.vertexGraphics=new s,this.view=null}initialize(){const t=this.view;this._highlightHelper=new w({view:t}),this._setup(),this.addHandles([c((()=>t?.ready),(()=>{const{layer:t,view:e}=this;I(e,t),this.addHandles(e.on("key-down",(t=>this._keyDownHandler(t)),k.TOOL))}),{once:!0,initial:!0}),h((()=>this.graphic),(()=>this.refresh())),h((()=>this.layer),((t,e)=>{e&&(this._clearSelection(),this._resetGraphics(e)),this.refresh()})),h((()=>this.enableMidpoints),(()=>this.refresh())),m((()=>this.sketchOptions.tooltips.effectiveEnabled),(t=>{this.tooltip=t?new R({view:this.view}):n(this.tooltip)}),d),m((()=>this.view.effectiveTheme.accentColor),(()=>this._updateSymbolsForTheme()),y)])}destroy(){this._reset(),this._mover?.destroy(),this._mover=null,this.tooltip=n(this.tooltip)}set highlightsEnabled(t){this._highlightHelper?.removeAll(),this._set("highlightsEnabled",t),this._setUpHighlights()}get state(){const t=this.view.ready,e=!(!this.graphic||!this.layer);return t&&e?"active":t?"ready":"disabled"}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.vertexGraphics.items,this.midpointGraphics.items),e.length>0&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_setup(){const{graphic:t,layer:e}=this;if(!e||null==t?.geometry)return;const i=t.geometry;"mesh"!==i.type&&"extent"!==i.type?("polygon"===i.type&&g(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover()):this._logGeometryTypeError()}_setUpHighlights(){this.highlightsEnabled&&this.graphic&&this._highlightHelper?.add(this.graphic)}_setUpGeometryHelper(){const t=this.graphic.geometry;if(null==t||"mesh"===t.type||"extent"===t.type)return void this._logGeometryTypeError();const e="multipoint"===t.type?new A({paths:t.points,spatialReference:t.spatialReference}):t;this._editGeometryOperations=C.fromGeometry(e,S.Local)}_saveSnappingContextForHandle(t,e){this._snappingGraphicsLayer=new b({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer),this._snappingContext=new O({editGeometryOperations:this._editGeometryOperations,elevationInfo:{mode:"on-the-ground",offset:0},pointer:e.viewEvent?.pointerType||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new G(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){this._clearSelection(),this._highlightHelper?.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){null!=this.snappingManager&&this.snappingManager.doneSnapping(),null!=this._snappingGraphicsLayer&&(this.view?.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=n(this._editGeometryOperations),this._snappingTask=a(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(t){this._removeMidpointGraphics(t),this._removeVertexGraphics(t),this._set("selectedVertices",[])}_removeMidpointGraphics(t){const e=t||this.layer;e&&e.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach((t=>t.destroy())),this.midpointGraphics.removeAll()}_removeVertexGraphics(t){const e=t||this.layer;e&&e.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach((t=>t.destroy())),this.vertexGraphics.removeAll()}_getCoordinatesForUI(t){const e=_(t.clone());if("polygon"===t.type)for(const t of e){const e=t[t.length-1];t[0][0]===e[0]&&t[0][1]===e[1]&&t.length>2&&t.pop()}return e}_setupGraphics(){const t=this.graphic.geometry;if(null!=t&&("polyline"===t.type||"polygon"===t.type)){const e=this._getCoordinatesForUI(t);this.enableMidpoints&&this._setUpMidpointGraphics(e),this.enableVertices&&this._setUpVertexGraphics(e)}}_setUpMidpointGraphics(t){this._removeMidpointGraphics();const e=this._createMidpointGraphics(t);this.midpointGraphics.addMany(e),this.layer.addMany(e)}_setUpVertexGraphics(t){this._removeVertexGraphics();const e=this._createVertexGraphics(t);this.vertexGraphics.addMany(e),this._storeRelatedVertexIndices(),this.layer.addMany(e)}_createVertexGraphics(t){const{_graphicAttributes:i,symbols:s,view:{spatialReference:o}}=this,r=[];return t?.forEach(((t,p)=>{t.forEach(((t,n)=>{const[a,l,c]=t;r.push(new e({geometry:new z({x:a,y:l,z:c,spatialReference:o}),symbol:s?.vertices?.default,attributes:{...i,pathIndex:p,pointIndex:n}}))}))})),r}_createMidpointGraphics(t){const{_graphicAttributes:i,symbols:s,view:{spatialReference:o}}=this,r=[];return t?.forEach(((t,p)=>{t.forEach(((n,a)=>{const[l,c,h]=n,m=t[a+1]?a+1:0;if("polygon"===this.graphic.geometry?.type||0!==m){const[n,d,y]=t[m],[u,v,j]=f([l,c,h],[n,d,y]);r.push(new e({geometry:new z({x:u,y:v,z:j,spatialReference:o}),symbol:s.midpoints.default,attributes:{...i,pathIndex:p,pointIndexStart:a,pointIndexEnd:m}}))}}))})),r}_updateSymbolsForTheme(){const t=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",t),hover:this.symbols.vertices.hover?.clone().set("color",t)},midpoints:{...this.symbols.midpoints}};for(const t of this.vertexGraphics)this._isSelected(t)?t.symbol=this.symbols.vertices.selected:this._hoverGraphic===t?t.symbol=this.symbols.vertices.hover:t.symbol=this.symbols.vertices.default}_storeRelatedVertexIndices(){const t=this.vertexGraphics.items;if(!t)return;const e=t.map((({geometry:t})=>({x:t.x,y:t.y})));for(let i=0;i<e.length;i++){const s=[];for(let t=0;t<e.length;t++){if(i===t)continue;const o=e[i],r=e[t];o.x===r.x&&o.y===r.y&&s.push(t)}t[i].attributes.relatedGraphicIndices=s}}_setupMover(){const{enableMovement:t,graphic:e,midpointGraphics:i,vertexGraphics:s,view:o}=this,r=s.concat(i).items;t&&r.push(e),this._mover=new V({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:r,view:o,callbacks:{onGraphicClick:t=>this._onGraphicClickCallback(t),onGraphicMoveStart:t=>this._onGraphicMoveStartCallback(t),onGraphicMove:t=>this._onGraphicMoveCallback(t),onGraphicMoveStop:t=>this._onGraphicMoveStopCallback(t),onGraphicPointerOver:t=>this._onGraphicPointerOverCallback(t),onGraphicPointerOut:t=>this._onGraphicPointerOutCallback(t)}})}_onGraphicClickCallback(t){t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(t);else if(this._isMidpoint(e)){if(2===t.viewEvent.button)return;const i=this.graphic.clone(),s=this._createVertexFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],i,s)}else this._isVertex(e)&&(t.viewEvent.stopPropagation(),2===t.viewEvent.button?this._removeVertices(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_setUpOperation(t){const{graphic:e,dx:i,dy:s}=t,o=e===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._activeOperationInfo={target:this.graphic,mover:e,operationType:o?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(t){const{dx:e,dy:i,graphic:s}=t;if(s===this.graphic){const{geometry:o}=s;return this._setUpOperation(t),this._emitMoveStartEvent(e,i),void(null!=o&&"point"===o.type&&this._onHandleMove(s,e,i,t,(()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)})))}if(!this.selectedVertices.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const t=this.graphic.clone(),e=this._createVertexFromMidpoint(s);this._emitVertexAddEvent([s],t,e)}this._addToSelection(s)}this._setUpOperation(t),this._emitReshapeStartEvent(s),this._onHandleMove(s,e,i,t,(()=>{this._updateTooltip(s,t.viewEvent),this._emitReshapeEvent(s)}))}_onGraphicMoveCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:o}=t;e.totalDx+=i,e.totalDy+=s;const{operationType:r}=e,{geometry:p}=o;if(null!=p)if("move"!==r)this._onHandleMove(o,i,s,t,(()=>{this._updateTooltip(o,t.viewEvent),this._emitReshapeEvent(o)}));else if("point"===p.type)this._onHandleMove(o,i,s,t,(()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)}));else if("polyline"===p.type||"polygon"===p.type){const e=this._getCoordinatesForUI(p);this._updateVertexGraphicLocations(e),this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)}}_onGraphicMoveStopCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:o}=t,{operationType:r}=e;e.totalDx+=i,e.totalDy+=s,this._onHandleMove(o,i,s,t,(()=>"move"===r?this._emitMoveStopEvent():this._emitReshapeStopEvent(o))),this._isMidpoint(o)?this.refresh():(this._updateTooltip(this._isVertex(o)?o:null),this._resetSnappingStateVars(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(t){const e=this.view.spatialReference;for(const i of this.vertexGraphics){const{pathIndex:s,pointIndex:o}=i.attributes,[r,p,n]=t[s][o];i.geometry=new z({x:r,y:p,z:n,spatialReference:e})}this._updateMidpointGraphicLocations(t)}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:o}=e.attributes,[r,p,n]=t[i][s],[a,l,c]=t[i][o],[h,m,d]=f([r,p,n],[a,l,c]);e.geometry=new z({x:h,y:m,z:d,spatialReference:this.view.spatialReference})}}_getIndicesForVertexGraphic({attributes:t}){return[t?.pathIndex||0,t?.pointIndex||0]}_getVertexFromEditGeometry(t){const[e,i]=this._getIndicesForVertexGraphic(t);return this._editGeometryOperations.data.components[e].vertices[i]}_onHandleMove(t,e,s,o,r){a(this._snappingTask);const p=this._snappingContext;if(!p)return;const n=t.geometry,l="graphic-move-stop"===o.type;if(null!=this.snappingManager&&this.selectedVertices.length<2&&!l){const o=this.snappingManager;this._stagedVertex=o.update({point:n,context:p}),this._syncGeometryAfterVertexMove(t,new z(this._stagedVertex),e,s,l),r(),this._snappingTask=i((async i=>{const a=await o.snap({point:n,context:p,signal:i});a.valid&&(this._stagedVertex=a.apply(),this._syncGeometryAfterVertexMove(t,new z(this._stagedVertex),e,s,l),r())}))}else{const i=null!=this._stagedVertex?new z(this._stagedVertex):n;this._syncGeometryAfterVertexMove(t,i,e,s,l),r()}}async _syncGeometryAfterVertexMove(t,e,i,s,o=!1){const r=this._editGeometryOperations.data.geometry;if("point"===r.type)t.geometry=e;else if("mesh"===r.type)t.geometry=r.centerAt(e),t.notifyGeometryChanged();else{const{x:p,y:n,z:a}=e,[l,c]=this._getIndicesForVertexGraphic(t);let h=_(r);const m=h[l].length-1,d=null!=a?[p,n,a]:[p,n];h[l][c]=d,"polygon"===r.type&&(0===c?h[l][m]=d:c===m&&(h[l][0]=d)),this._isVertex(t)&&(h=this._moveRelatedCoordinates(h,t,d),h=this._moveSelectedHandleCoordinates(h,t,i,s,"polygon"===r.type),this._updateMidpointGraphicLocations(h)),this.graphic.geometry=r.clone();const y=this._getVertexFromEditGeometry(t),u=p-y.pos[0],v=n-y.pos[1];this._editGeometryOperations.moveVertices([y],u,v,0),o&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(t),e):t.geometry=e)}}_moveRelatedCoordinates(t,e,i){const{relatedGraphicIndices:s}=e.attributes;for(const o of s){const s=this.vertexGraphics.at(o),{pathIndex:r,pointIndex:p}=s.attributes;t[r][p]=i,s.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,i,s,o){for(const r of this.selectedVertices)if(r!==e){const{pathIndex:e,pointIndex:p,relatedGraphicIndices:n}=r.attributes,a=M(r.geometry,i,s,this.view),l=t[e].length-1;t[e][p]=[a.x,a.y],r.geometry=a,o&&(0===p?t[e][l]=[a.x,a.y]:p===l&&(t[e][0]=[a.x,a.y]));for(const e of n){const i=this.vertexGraphics.at(e),{pathIndex:s,pointIndex:o}=i.attributes;t[s][o]=[a.x,a.y],i.geometry=a}}return t}_onGraphicPointerOverCallback(t){const e=t.graphic;this._hoverGraphic=e;const i=this._isVertex(e);i&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateTooltip(i?e:null),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._hoverGraphic=null,this._isVertex(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(t){const{_graphicAttributes:e,graphic:i}=this,s=i.geometry;if(null==s||"polygon"!==s.type&&"polyline"!==s.type)return[];const o=s.clone(),r=[],{pathIndex:p,pointIndexStart:n,pointIndexEnd:a}=t.attributes,{x:l,y:c,z:h}=t.geometry,m=0===a?n+1:a,d=_(o);return d[p].splice(m,0,null!=h?[l,c,h]:[l,c]),t.attributes={...e,pathIndex:p,pointIndex:m,relatedGraphicIndices:[]},r.push({coordinates:d[p][m],componentIndex:p,vertexIndex:m}),this.graphic.geometry=o,r}_addToSelection(t){t instanceof e&&(t=[t]);for(const e of t)e.symbol=this.symbols.vertices.selected;this._set("selectedVertices",this.selectedVertices.concat(t)),this._emitSelectEvent(t)}_removeFromSelection(t,i){const{vertices:s}=this.symbols,o=i?s.hover:s.default;t instanceof e&&(t=[t]);for(const e of t)this.selectedVertices.splice(this.selectedVertices.indexOf(e),1),this._set("selectedVertices",this.selectedVertices),e.set("symbol",o);this._emitDeselectEvent(t)}_clearSelection(){if(this.selectedVertices.length){const t=this.selectedVertices;for(const t of this.selectedVertices)t.set("symbol",this.symbols.vertices.default);this._set("selectedVertices",[]),this._emitDeselectEvent(t)}}_keyDownHandler(t){E.delete.includes(t.key)&&!t.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(t){const i=this.graphic.geometry;if(null==i||"polygon"!==i.type&&"polyline"!==i.type)return;if("polygon"===i.type&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;t instanceof e&&(t=[t]);const s=this.graphic.clone(),o=i.clone();let r=_(o);const p=[];t instanceof e&&(t=[t]);for(const e of t){const{x:t,y:i}=e.geometry;for(let e=0;e<r.length;e++){const s=r[e];for(let o=0;o<s.length;o++){const[n,a]=s[o];t===n&&i===a&&(p.push({coordinates:r[e][o],componentIndex:e,vertexIndex:o}),r[e].splice(Number(o),1))}}}if("polygon"===o.type)r=r.filter((t=>{if(t.length<2)return!1;const[e,i]=t[0],[s,o]=t[t.length-1];return(2!==t.length||e!==s||i!==o)&&(e===s&&i===o||t.push(t[0]),!0)})),o.rings=r;else{for(const t of r)1===t.length&&r.splice(r.indexOf(t),1);o.paths=r}this.graphic.geometry=o,this.refresh(),this._emitVertexRemoveEvent(t,s,p)}_isVertex(t){return this.vertexGraphics.includes(t)}_isSelected(t){return this._isVertex(t)&&this.selectedVertices.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_updateTooltip(t,e){null!=this.tooltip&&(t?t===this.graphic?this._updateMoveGraphicTooltip(e):this._updateMoveVertexTooltip(e):this.tooltip.clear())}_updateMoveGraphicTooltip(t){const{tooltip:e,sketchOptions:i,view:s}=this;if(null==e)return;const o=this._translateGraphicTooltipInfo??=new D({sketchOptions:i});if(o.clear(),o.sketchOptions=i,t){const{x:e,y:i}=t.origin,r=s.toMap(t),p=s.toMap(u(e,i)),n=P(p,r);o.distance=null!=n?n:l}e.info=o}_updateMoveVertexTooltip(t){const{tooltip:e,graphic:{geometry:i},sketchOptions:s,view:o}=this;if(null==e)return;const r=this._translateVertexTooltipInfo??=new L({sketchOptions:s});if(r.clear(),r.sketchOptions=s,"polygon"===i?.type?r.area=F(i):"polyline"===i?.type&&(r.totalLength=H(i)),t){const{x:e,y:i}=t.origin,s=o.toMap(t),p=o.toMap(u(e,i)),n=P(p,s);r.distance=null!=n?n:l}e.info=r}_emitMoveStartEvent(t,e){const i=new Q(this.graphic,t,e);this.emit("move-start",i),this.callbacks.onMoveStart&&this.callbacks.onMoveStart(i)}_emitMoveEvent(t,e){const i=new N(this.graphic,t,e);this.emit("move",i),this.callbacks.onMove&&this.callbacks.onMove(i)}_emitMoveStopEvent(){const t=this._activeOperationInfo;if(!t)return;const{totalDx:e,totalDy:i}=t,s=new J(this.graphic,e,i);this.emit("move-stop",s),this.callbacks.onMoveStop&&this.callbacks.onMoveStop(s)}_emitReshapeStartEvent(t){const e=new B(this.graphic,t,this.selectedVertices);this.emit("reshape-start",e),this.callbacks.onReshapeStart&&this.callbacks.onReshapeStart(e)}_emitReshapeEvent(t){const e=new q(this.graphic,t,this.selectedVertices);this.emit("reshape",e),this.callbacks.onReshape&&this.callbacks.onReshape(e)}_emitReshapeStopEvent(t){const e=new W(this.graphic,t,this.selectedVertices);this.emit("reshape-stop",e),this.callbacks.onReshapeStop&&this.callbacks.onReshapeStop(e)}_emitSelectEvent(t){const e=new K(t);this.emit("select",e),this.callbacks.onVertexSelect&&this.callbacks.onVertexSelect(e)}_emitDeselectEvent(t){const e=new Z(t);this.emit("deselect",e),this.callbacks.onVertexDeselect&&this.callbacks.onVertexDeselect(e)}_emitVertexAddEvent(t,e,i){const s=new X(t,this.graphic,e,i);this.emit("vertex-add",s),this.callbacks.onVertexAdd&&this.callbacks.onVertexAdd(s)}_emitVertexRemoveEvent(t,e,i){const s=new Y(t,this.graphic,e,i);this.emit("vertex-remove",s),this.callbacks.onVertexRemove&&this.callbacks.onVertexRemove(s)}_logGeometryTypeError(){p.getLogger(this).error(new o("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};t([v()],et.prototype,"tooltip",void 0),t([v()],et.prototype,"_translateGraphicTooltipInfo",void 0),t([v()],et.prototype,"_translateVertexTooltipInfo",void 0),t([v()],et.prototype,"callbacks",void 0),t([v()],et.prototype,"enableMidpoints",void 0),t([v()],et.prototype,"enableMovement",void 0),t([v()],et.prototype,"enableVertices",void 0),t([v()],et.prototype,"graphic",void 0),t([v({value:!0})],et.prototype,"highlightsEnabled",null),t([v()],et.prototype,"layer",void 0),t([v({readOnly:!0})],et.prototype,"midpointGraphics",void 0),t([v()],et.prototype,"midpointSymbol",void 0),t([v({readOnly:!0})],et.prototype,"selectedVertices",void 0),t([v()],et.prototype,"snappingManager",void 0),t([v({readOnly:!0})],et.prototype,"state",null),t([v()],et.prototype,"symbols",void 0),t([v({type:T})],et.prototype,"sketchOptions",void 0),t([v({readOnly:!0})],et.prototype,"type",void 0),t([v({readOnly:!0})],et.prototype,"vertexGraphics",void 0),t([v()],et.prototype,"view",void 0),et=t([j("esri.views.draw.support.Reshape")],et);const it=et;export{it as default};
