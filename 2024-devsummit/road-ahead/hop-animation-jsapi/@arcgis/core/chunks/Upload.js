/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as r}from"./tslib.es6.js";import o from"../core/Accessor.js";import{c as e}from"./asyncUtils.js";import s from"../core/Error.js";import{throwIfAborted as t,createResolver as i,o as l}from"../core/promiseUtils.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"./Logger.js";import{subclass as p}from"../core/accessorSupport/decorators/subclass.js";import n from"../geometry/Point.js";import{m as c,u as m,e as u}from"./progressUtils.js";import{e as d}from"./infoFor3D.js";import"../core/Handles.js";import"./maybe.js";import"./metadata.js";import"./utils.js";import"./handleUtils.js";import"./ObservableBase.js";import"./tracking.js";import"../core/scheduling.js";import"../config.js";import"./ensureType.js";import"../core/accessorSupport/decorators/cast.js";import"./reader.js";import"./writer.js";import"../geometry/Geometry.js";import"../core/JSONSupport.js";import"../geometry/SpatialReference.js";import"./unitUtils.js";import"./jsonMap.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../geometry/support/webMercatorUtils.js";let j=class extends o{constructor(){super({}),this.files=[],this.progress=0,this._uploadTask=null,this._layer=null}destroy(){this.cancel(),this.files=[],this._layer=null,this._uploadTask=null}get state(){const r=this._uploadTask;return r&&0!==this.files.length?r.finished?r.error?"error":"success":"pending":"default"}get result(){return this._uploadTask?.value??null}get error(){return this._uploadTask?.error??null}uploadTo(r){this.cancel(),this.files=[],this._layer=r,this._uploadTask=e((async o=>{const e=await async function(r){const{resolve:o,promise:e}=i(),s=document.createElement("input");s.type="file",s.multiple=!1,s.accept=[...d(r.infoFor3D),".zip"].join(","),s.style.display="none",document.body.appendChild(s);const t=l(s,"change",(()=>o(s.files?Array.from(s.files):[])));return s.click(),e.finally((()=>{t.remove(),s.remove()}))}(r);t(o),this.progress=0,this.files=e;const a=c(m.upload,(r=>{this.progress=r}),"Upload.uploadTo");if(0===e.length)return null;t(o);const p=await r.extractAndFilterFiles(e);t(o),p.length>0&&(this.files=p);const j=new n({x:0,y:0,z:0,spatialReference:r.spatialReference}),h=await r.convertMesh(p,{location:j,signal:o,onProgress:a.makeOnProgress("createFromFiles")});if(t(o),!h)throw new s("editor:upload","could not upload or convert model");const y=p.reduce(((r,o)=>r+o.size),0),f=a.simulate("loadMesh",u(y));try{await h.load()}finally{f.remove()}return h}))}retry(){this._layer&&this.uploadTo(this._layer)}cancel(){this._uploadTask?.abort()}};r([a()],j.prototype,"files",void 0),r([a()],j.prototype,"progress",void 0),r([a()],j.prototype,"state",null),r([a()],j.prototype,"result",null),r([a()],j.prototype,"error",null),r([a()],j.prototype,"_uploadTask",void 0),r([a()],j.prototype,"_layer",void 0),j=r([p("esri.widgets.Editor.Upload")],j);export{j as Upload};
