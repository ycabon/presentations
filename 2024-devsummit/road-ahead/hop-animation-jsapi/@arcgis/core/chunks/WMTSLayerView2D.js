/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"./tslib.es6.js";import{L as t}from"./Logger.js";import{isAbortError as i}from"../core/promiseUtils.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import{subclass as r}from"../core/accessorSupport/decorators/subclass.js";import{f as o}from"./unitUtils.js";import{B as a,r as p}from"./imageUtils2.js";import{L as l}from"./LayerView2D.js";import{T as m,a as n,b as c}from"./TileStrategy.js";import{T as h}from"./TileKey2.js";import j from"../views/layers/LayerView.js";import{R as u}from"./RefreshableLayerView.js";import"../config.js";import"./handleUtils.js";import"../core/Error.js";import"./maybe.js";import"./ensureType.js";import"./utils.js";import"./metadata.js";import"./tracking.js";import"./jsonMap.js";import"./assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"./ObservableBase.js";import"../core/scheduling.js";import"./aaBoundingRect.js";import"./mathUtils.js";import"./vec3.js";import"./vec3f64.js";import"./common.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"./reader.js";import"../geometry/SpatialReference.js";import"./writer.js";import"../geometry/Point.js";import"../core/accessorSupport/decorators/cast.js";import"../geometry/support/webMercatorUtils.js";import"./mat3f32.js";import"./Bitmap.js";import"./mat3.js";import"./vec2f32.js";import"./DisplayObject.js";import"../core/Evented.js";import"./enums.js";import"./Texture.js";import"./TiledDisplayObject.js";import"./VertexElementDescriptor.js";import"./WGLContainer.js";import"./definitions.js";import"../Color.js";import"./colorUtils.js";import"./HighlightOptions.js";import"./dataViewUtils.js";import"./enums2.js";import"./FramebufferObject.js";import"./BufferObject.js";import"./Program.js";import"./_commonjsHelpers.js";import"./BoundingBox.js";import"./VertexArrayObject.js";import"./WGLBrushVTLSymbol.js";import"./vec4f32.js";import"./StyleDefinition.js";import"./config.js";import"./ShaderCompiler.js";import"./ProgramTemplate.js";import"./mat2df32.js";import"./mat2d.js";import"./Container.js";import"./EffectView.js";import"./parser.js";import"./utils3.js";import"./screenUtils.js";import"./mat4.js";import"../core/reactiveUtils.js";import"./asyncUtils.js";import"../core/Collection.js";import"./shared.js";import"./SimpleObservable.js";import"./earcut.js";import"./vec2.js";import"./vec2f64.js";import"./featureConversionUtils.js";import"./aaBoundingBox.js";import"../geometry/support/jsonUtils.js";import"../geometry/Multipoint.js";import"./zmUtils.js";import"../geometry/Polygon.js";import"./coordsUtils.js";import"./Axis.js";import"./extentUtils.js";import"../geometry/Polyline.js";import"./OptimizedFeature.js";import"./OptimizedFeatureSet.js";import"./OptimizedGeometry.js";import"./TileContainer.js";import"./collectionUtils.js";import"./scaleUtils.js";import"./ClipRect.js";import"../geometry.js";import"./typeUtils.js";import"./QueueProcessor.js";import"./Queue.js";import"./ReactiveMap.js";import"../core/signal.js";import"../core/Identifiable.js";import"../core/Promise.js";import"./UpdatingHandles.js";const f=new Set([102113,102100,3857,3785,900913]),d=[0,0];let y=class extends(u(a(l(j)))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}get tileMatrixSet(){const e=this._getTileMatrixSetBySpatialReference(this.layer.activeLayer);return e?(e.id!==this.layer.activeLayer.tileMatrixSetId&&(this.layer.activeLayer.tileMatrixSetId=e.id),e):null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume()}attach(){const e=this.tileMatrixSet?.tileInfo;e&&(this._tileInfoView=new m(e),this._fetchQueue=new n({tileInfoView:this._tileInfoView,concurrency:16,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new c({cachePolicy:"keep",resampling:!0,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.addAttachHandles(this._updatingHandles.add((()=>[this.layer?.activeLayer?.styleId,this.tileMatrixSet]),(()=>this.doRefresh()))),super.attach())}detach(){super.detach(),this._tileStrategy?.destroy(),this._fetchQueue?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){return this.layer.activeLayer.tileMatrixSets?.some((t=>o(t.tileInfo?.spatialReference,e)))??!1}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh((e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e))))}}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(d,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate()}async fetchTile(e,t={}){const s="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:r,resamplingLevel:o=0}=t;if(!s)return this._fetchImage(e,r);const a=new h(0,0,0,0);let l;try{await s.fetchAvailabilityUpsample(e.level,e.row,e.col,a,{signal:r}),l=await this._fetchImage(a,r)}catch(s){if(i(s))throw s;if(o<3){const i=this._tileInfoView.getTileParentId(e.id);if(i){const s=new h(i),r=await this.fetchTile(s,{...t,resamplingLevel:o+1});return p(this._tileInfoView,r,s,e)}}throw s}return p(this._tileInfoView,l,a,e)}canResume(){const e=super.canResume();return e?null!==this.tileMatrixSet:e}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()))}catch(e){i(e)||t.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}_getTileMatrixSetBySpatialReference(e){const t=this.view.spatialReference;if(!e.tileMatrixSets)return null;let i=e.tileMatrixSets.find((e=>o(e.tileInfo?.spatialReference,t)));return!i&&t.isWebMercator&&(i=e.tileMatrixSets.find((e=>f.has(e.tileInfo?.spatialReference.wkid??-1)))),i}};e([s({readOnly:!0})],y.prototype,"tileMatrixSet",null),y=e([r("esri.views.2d.layers.WMTSLayerView2D")],y);const g=y;export{g as default};
