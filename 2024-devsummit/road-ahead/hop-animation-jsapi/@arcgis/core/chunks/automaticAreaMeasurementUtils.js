/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{c as e,e as r,a as t}from"./euclideanAreaMeasurementUtils.js";import"../geometry.js";import{b as s}from"./quantityUtils.js";import{geodesicArea as o}from"../geometry/geometryEngine.js";import{s as n}from"./vec3.js";import{c as a}from"./vec3f64.js";import{g as u}from"./projectBuffer.js";import{geodesicAreas as i}from"../geometry/support/geodesicUtils.js";import{g as c}from"./geodesicMeasurementUtils.js";import m from"../geometry/SpatialReference.js";const f=a();function p(e){return s(Math.abs(i([e],"square-meters")[0]),"square-meters")}function l(e){try{return s(Math.abs(o(e,"square-meters")),"square-meters")}catch(e){return null}}function g(e){const r=[];return function({hasZ:e,spatialReference:r,rings:t},s,o=0){const a=u(r);if(null==a)return!1;const i=e?e=>e:e=>n(f,e[0],e[1],o);for(const e of t){const r=[];for(const t of e){const e=[0,0,o];a(i(t),0,e,0),r.push(e)}s.push(r)}return!0}(e,r)?s(Math.abs(i([{type:"polygon",rings:r,spatialReference:m.WGS84}],"square-meters")[0]),"square-meters"):null}function j(s,o=e()){return function(s,o,n=e()){if("on-the-ground"===o){const e=function(e){const{spatialReference:r}=e;return c(r,p,l,g,e)}(s);return null!=e?e:r(s,n)}return t(s,n)}(s,"on-the-ground",o)}export{j as a};
