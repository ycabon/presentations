/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{n as t,L as e}from"./Logger.js";import r from"../core/Error.js";import"./enums2.js";import"../core/lang.js";import{d as s,a as n,T as o}from"./Texture.js";import{P as i,D as a}from"./enums.js";import"./FramebufferObject.js";import"./Program.js";import{V as c}from"./VertexElementDescriptor.js";import{B as u}from"./BoundingBox.js";function f(e){const r=e.map((({name:t,count:e,type:r})=>`${t}.${e}.${r}`)).join(",");return t(r)}function l(t,e,r,s,n,o,i){if(t.primitiveName===e)for(const e in t)if(e===r){let r=s?.readWithDefault(n,o,t[e]&&i);return"text"===t.type&&(r=r.toString()),void(t[e]=r)}if("type"in t&&null!=t.type)switch(t.type){case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":if(t.symbolLayers)for(const a of t.symbolLayers)l(a,e,r,s,n,o,i);break;case"CIMHatchFill":t.lineSymbol&&l(t.lineSymbol,e,r,s,n,o,i);break;case"CIMSolidStroke":case"CIMSolidFill":case"CIMVectorMarker":if("CIMVectorMarker"===t.type&&t.markerGraphics)for(const a of t.markerGraphics)l(a,e,r,s,n,o,i),l(a.symbol,e,r,s,n,o,i)}}const h=()=>e.getLogger("esri.views.2d.engine.webgl.Utils");function p(t){switch(t){case i.UNSIGNED_BYTE:return 1;case i.UNSIGNED_SHORT_4_4_4_4:return 2;case i.FLOAT:return 4;default:return void h().error(new r("webgl-utils",`Unable to handle type ${t}`))}}function E(t){switch(t){case i.UNSIGNED_BYTE:return Uint8Array;case i.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case i.FLOAT:return Float32Array;default:return void h().error(new r("webgl-utils",`Unable to handle type ${t}`))}}const d=new Map,m=(t,e)=>{if(!d.has(t)){const r=function(t){const e={};for(const r in t){const n=t[r];let o=0;e[r]=n.map((t=>{const e=new c(t.name,t.count,t.type,o,0,t.normalized||!1);return o+=t.count*s(t.type),e})),e[r]?.forEach((t=>t.stride=o))}return e}(e),n=(t=>{const e={};for(const r in t){const s=t[r];e[r]=s?.length?s[0].stride:0}return e})(r),o=(t=>{const e=new Map;for(const r in t)for(const s of t[r])e.set(s.name,s.location);return e})(e),i={strides:n,bufferLayouts:r,attributes:o};d.set(t,i)}return d.get(t)},y=t=>t.includes("data:image/svg+xml");function T(t){const e=[];for(let r=0;r<t.length;r++)e.push(t.charCodeAt(r));return e}function I(t,e,r){const s=new n(e.width,e.height);return s.dataType=e.dataType,e.depth&&(s.depth=e.depth),e.flipped&&(s.flipped=e.flipped),e.hasMipmap&&(s.hasMipmap=e.hasMipmap),s.internalFormat=e.internalFormat,e.isImmutable&&(s.isImmutable=e.isImmutable),e.isOpaque&&(s.isOpaque=e.isOpaque),e.maxAnisotropy&&(s.maxAnisotropy=e.maxAnisotropy),s.pixelFormat=e.pixelFormat,e.preMultiplyAlpha&&(s.preMultiplyAlpha=e.preMultiplyAlpha),e.samplingMode&&(s.samplingMode=e.samplingMode),e.target&&(s.target=e.target),s.uniform=e.uniform,e.unpackAlignment&&(s.unpackAlignment=e.unpackAlignment),e.wrapMode&&(s.wrapMode=e.wrapMode),new o(t,s,r)}class S{constructor(t,e,r,s,n,o,i){this.instanceId=t,this.textureKey=e,this.indexStart=r,this.indexCount=s,this.vertexStart=n,this.vertexCount=o,this.overlaps=i}updateBaseOffsets(t){this.vertexStart+=t.vertexFrom,this.indexStart+=t.indexFrom}clone(){return new S(this.instanceId,this.textureKey,this.indexStart,this.indexCount,this.vertexStart,this.vertexCount,this.overlaps)}static write(t,e,r,s,n,o,i,a){t.push(e),t.push(r),t.push(s),t.push(n),t.push(o),t.push(i),t.push(a)}serialize(t){return t.push(this.instanceId),t.push(this.textureKey),t.push(this.indexStart),t.push(this.indexCount),t.push(this.vertexStart),t.push(this.vertexCount),t.push(this.overlaps),t}static deserialize(t){const e=t.readInt32(),r=t.readInt32(),s=t.readInt32(),n=t.readInt32(),o=t.readInt32(),i=t.readInt32(),a=t.readInt32();return new S(e,r,s,n,o,i,a)}}function _(t,e){if(null!==e){t.push(e.length);for(const r of e)r.serialize(t);return t}t.push(0)}function g(t,e,r){const s=t.readInt32(),n=new Array(s);for(let s=0;s<n.length;s++)n[s]=e.deserialize(t,r);return n}S.byteSizeHint=7*Uint32Array.BYTES_PER_ELEMENT;class N{constructor(t,e){this.id=t,this.sortKey=e,this.records=[]}serialize(t){return t.push(this.id),t.push(this.sortKey),_(t,this.records),t}static deserialize(t){const e=t.readInt32(),r=t.readInt32(),s=new N(e,r);return s.records=g(t,S)??[],s}}N.byteSizeHint=2*Uint32Array.BYTES_PER_ELEMENT+S.byteSizeHint;class F{constructor(t,e,r,s,n,o,i,a,c=[]){this.entityTexel=t,this.anchorX=e,this.anchorY=r,this.directionX=s,this.directionY=n,this.maxScale=o,this.minScale=i,this.referenceBounds=a,this.bounds=c}serialize(t){t.push(this.entityTexel),t.writeF32(this.anchorX),t.writeF32(this.anchorY),t.writeF32(this.directionX),t.writeF32(this.directionY),t.writeF32(this.maxScale),t.writeF32(this.minScale),t.writeF32(this.referenceBounds.size),t.writeF32(this.referenceBounds.offsetX),t.writeF32(this.referenceBounds.offsetY),_(t,this.bounds)}static deserialize(t){const e=t.readInt32(),r=t.readF32(),s=t.readF32(),n=t.readF32(),o=t.readF32(),i=t.readF32(),a=t.readF32(),c=t.readF32(),f=t.readF32(),l=t.readF32(),h=g(t,u)??[];return new F(e,r,s,n,o,i,a,{size:c,offsetX:f,offsetY:l},h)}}const M=new Float32Array(1);function w(t,e){return 65535&t|e<<16}function A(t,e,r,s){const n=r.packPrecisionFactor??1;switch(r.type){case a.BYTE:if(1===r.count)t.setInt8(s+r.offset,e*n);else for(let o=0;o<r.count;o++){const i=o*Int8Array.BYTES_PER_ELEMENT;t.setInt8(s+r.offset+i,e[o]*n)}break;case a.UNSIGNED_BYTE:if(1===r.count)t.setUint8(s+r.offset,e*n);else for(let o=0;o<r.count;o++){const i=o*Uint8Array.BYTES_PER_ELEMENT;t.setUint8(s+r.offset+i,e[o]*n)}break;case a.SHORT:if(1===r.count)t.setInt16(s+r.offset,e*n,!0);else for(let o=0;o<r.count;o++){const i=o*Int16Array.BYTES_PER_ELEMENT;t.setInt16(s+r.offset+i,e[o]*n,!0)}break;case a.UNSIGNED_SHORT:if(1===r.count)t.setUint16(s+r.offset,e*n,!0);else for(let o=0;o<r.count;o++){const i=o*Uint16Array.BYTES_PER_ELEMENT;t.setUint16(s+r.offset+i,e[o]*n,!0)}break;case a.INT:if(1===r.count)t.setInt32(s+r.offset,e*n,!0);else for(let o=0;o<r.count;o++){const i=o*Int32Array.BYTES_PER_ELEMENT;t.setInt32(s+r.offset+i,e[o]*n,!0)}break;case a.UNSIGNED_INT:if(1===r.count)t.setUint32(s+r.offset,e*n,!0);else for(let o=0;o<r.count;o++){const i=o*Uint32Array.BYTES_PER_ELEMENT;t.setUint32(s+r.offset+i,e[o]*n,!0)}break;case a.FLOAT:if(1===r.count)t.setFloat32(s+r.offset,e*n,!0);else for(let o=0;o<r.count;o++){const i=o*Float32Array.BYTES_PER_ELEMENT;t.setFloat32(s+r.offset+i,e[o]*n,!0)}}}function U(t,e,r){switch(e.type){case a.BYTE:{if(1===e.count)return t.getInt8(r+e.offset);const s=[];for(let n=0;n<e.count;n++){const o=n*Int8Array.BYTES_PER_ELEMENT;s.push(t.getInt8(r+e.offset+o))}return s}case a.UNSIGNED_BYTE:{if(1===e.count)return t.getUint8(r+e.offset);const s=[];for(let n=0;n<e.count;n++){const o=n*Uint8Array.BYTES_PER_ELEMENT;s.push(t.getUint8(r+e.offset+o))}return s}case a.SHORT:{if(1===e.count)return t.getInt16(r+e.offset,!0);const s=[];for(let n=0;n<e.count;n++){const o=n*Int16Array.BYTES_PER_ELEMENT;s.push(t.getInt16(r+e.offset+o,!0))}return s}case a.UNSIGNED_SHORT:{if(1===e.count)return t.getUint16(r+e.offset,!0);const s=[];for(let n=0;n<e.count;n++){const o=n*Uint16Array.BYTES_PER_ELEMENT;s.push(t.getUint16(r+e.offset+o,!0))}return s}case a.INT:{if(1===e.count)return t.getInt32(r+e.offset,!0);const s=[];for(let n=0;n<e.count;n++){const o=n*Int32Array.BYTES_PER_ELEMENT;s.push(t.getInt32(r+e.offset+o,!0))}return s}case a.UNSIGNED_INT:{if(1===e.count)return t.getUint32(r+e.offset,!0);const s=[];for(let n=0;n<e.count;n++){const o=n*Uint32Array.BYTES_PER_ELEMENT;s.push(t.getUint32(r+e.offset+o,!0))}return s}case a.FLOAT:{if(1===e.count)return t.getFloat32(r+e.offset,!0);const s=[];for(let n=0;n<e.count;n++){const o=n*Float32Array.BYTES_PER_ELEMENT;s.push(t.getFloat32(r+e.offset+o,!0))}return s}}}new Uint32Array(M.buffer);export{N as D,F as L,p as a,S as b,m as c,g as d,l as e,T as f,E as g,y as h,w as i,I as j,A as p,U as u,f as v};
