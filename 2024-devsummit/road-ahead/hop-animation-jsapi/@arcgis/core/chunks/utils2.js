/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{c as t,f as e,a as r,b as s,d as a}from"./date.js";import{isDateField as i,isDateOnlyField as n,isTimestampOffsetField as o,l as c}from"../layers/support/fieldUtils.js";import{g}from"./basemapUtils.js";import{g as l,u as d}from"./timeZoneUtils.js";const m=",",u={light:["streets","gray","topo","terrain","oceans","osm","gray-vector","streets-vector","topo-vector","streets-relief-vector","streets-navigation-vector","topo-3d","navigation-3d","streets-3d","osm-3d","gray-3d","arcgis-light-gray","arcgis-navigation","arcgis-streets","arcgis-streets-relief","arcgis-topographic","arcgis-oceans","osm-standard","osm-standard-relief","osm-streets","osm-streets-relief","osm-light-gray","arcgis-terrain","arcgis-charted-territory","arcgis-community","arcgis-colored-pencil","arcgis-modern-antique","arcgis-midcentury","arcgis-newspaper","arcgis-hillshade-light"],dark:["satellite","hybrid","dark-gray","dark-gray-vector","streets-night-vector","navigation-dark-3d","streets-dark-3d","dark-gray-3d","arcgis-imagery","arcgis-imagery-standard","arcgis-dark-gray","arcgis-navigation-night","arcgis-streets-night","osm-dark-gray","arcgis-nova","arcgis-hillshade-dark"]},f={years:365,months:30,days:1,hours:1/24,minutes:1/1440,seconds:1/86400,milliseconds:1/864e5},p=new Set(["integer","small-integer"]);let y=null;const h=["date","date-only","timestamp-offset"];function v(t){return i(t)||n(t)||o(t)}async function T(t){const{field:e,field2:r,field3:s,normalizationField:a,valueExpression:i}=t;let n=[];if(i){if(!y){const{arcadeUtils:t}=await c();y=t}n=y.extractFieldNames(i)}return e&&n.push(e),r&&n.push(r),s&&n.push(s),a&&n.push(a),n}function Z(t){let e=t.normalizationType;return e||(t.normalizationField?e="field":null!=t.normalizationTotal&&(e="percent-of-total")),e??void 0}function $(t){return String(t).padStart(2,"0")}function k(t,e,r){let s;return"date"===e||"number"===e?("number"===e&&(t=new Date(t)),s=`TIMESTAMP'${r?t.getFullYear():t.getUTCFullYear()}-${$((r?t.getMonth():t.getUTCMonth())+1)}-${$(r?t.getDate():t.getUTCDate())} ${$(r?t.getHours():t.getUTCHours())}:${$(r?t.getMinutes():t.getUTCMinutes())}:${$(r?t.getSeconds():t.getUTCSeconds())}'`):s=t,s}function w(t,e,r,s){const{hasQueryEngine:a}=t,i=`(${k(r,U(t,r),a)} - ${k(e,U(t,e),a)})`;let n=f[s],o="/";return n<1&&(n=1/n,o="*"),{sqlExpression:1===n?i:`(${i} ${o} ${n})`,sqlWhere:null}}function U(t,e){if(e instanceof Date)return"date";if("number"==typeof e)return"number";if("string"==typeof e){const r=t.getField(e);if("<now>"===e.toLowerCase())return;if(i(r))return"field"}}function b(t,e=u){for(const r in e)if(e[r].includes(t))return r}function S(t,e,r=!0){let s=null;return t&&("string"==typeof t?e.includes(t)&&(s=t):s=g(t)),r?s||"gray":s}function C(t,e){const r=e&&t.getField(e);return!!r&&p.has(r.type)}function D(t){return`cast(${t} as float)`}function F(i,n){const{format:o,timeZoneOptions:c,fieldType:g}=n??{};let m,u;if(c&&({timeZone:m,timeZoneName:u}=l(c.layerTimeZone,c.datesInUnknownTimezone,c.viewTimeZone,t(o||"short-date-short-time"),g)),"string"==typeof i&&isNaN(Date.parse("time-only"===g?`1970-01-01T${i}Z`:i)))return i;switch(g){case"date-only":{const r=t(o||"short-date");return"string"==typeof i?a(i,{...r}):e(i,{...r,timeZone:d})}case"time-only":{const r=t(o||"short-time");return"string"==typeof i?s(i,r):e(i,{...r,timeZone:d})}case"timestamp-offset":{if(!m&&"string"==typeof i&&new Date(i).toISOString()!==i)return i;const s=o||c?t(o||"short-date-short-time"):void 0,a=s?{...s,timeZone:m,timeZoneName:u}:void 0;return"string"==typeof i?r(i,a):e(i,a)}default:{const r=o||c?t(o||"short-date-short-time"):void 0;return e("string"==typeof i?new Date(i):i,r?{...r,timeZone:m,timeZoneName:u}:void 0)}}}export{C as a,Z as b,D as c,T as d,h as e,F as f,w as g,u as h,v as i,U as j,m as k,S as l,b as m,f as u};
