/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
const e={color:[128,128,128,1],outlinecolor:[0,0,0,1],backgroundcolor:[128,128,128,1],borderLineColor:[0,0,0,1]},t={CIMVectorMarker:{scalesymbolsproportionally:!1,respectframe:!0,anchorpointunits:"Relative",offsetX:0,offsetY:0,rotateclockwise:!1,rotation:0,size:10,enable:!0,colorlocked:!1},CIMPictureMarker:{scalex:1,texturefilter:"Draft",anchorpointunits:"Relative",offsetx:0,offsety:0,rotateclockwise:!1,rotation:0,size:10,enable:!0,colorlocked:!1},CIMTextSymbol:{angle:0,anglex:0,angley:0,halosize:1,height:10,horizontalalignment:"Left",kerning:!0,letterspacing:0,letterwidth:100,ligatures:!0,linegap:0,offsetx:0,offsety:0,strikethrough:!1,textcase:"Normal",textstring:"",underline:!1,verticalalignment:"Bottom",enable:!0,colorlocked:!1},CIMSolidStroke:{capstyle:"Round",joinstyle:"Round",miterlimit:4,width:4,enable:!0,colorlocked:!1},CIMPictureStroke:{texturefilter:"Draft",capstyle:"Round",joinstyle:"Round",miterlimit:4,width:4,enable:!0,colorlocked:!1},CIMSolidFill:{enable:!0,colorocked:!1},CIMPictureFill:{offsetx:0,offsety:0,rotation:0,scalex:1,height:10,texturefilter:"Draft",enable:!0,colorlocked:!1},CIMHatchFill:{offsetx:0,offsety:0,rotation:0,separation:4,enable:!0,colorlocked:!1},CIMGeometricEffectAddControlPoints:{angletolerance:120},CIMGeometricEffectArrow:{arrowtype:"OpenEnded",width:5},CIMGeometricEffectBuffer:{size:1},CIMGeometricEffectCut:{begincut:1,endcut:1,middlecut:0,invert:!1},CIMGeometricEffectDashes:{customendingoffset:0,linedashending:"NoConstraint",offsetalongline:0},CIMGeometricEffectDonut:{method:"Mitered",option:"Accurate",width:2},CIMGeometricEffectJog:{angle:225,length:20,position:50},CIMGeometricEffectControlMeasureLine:{rule:"FullGeometry"},CIMGeometricEffectMove:{offsetx:1,offsety:-1},CIMGeometricEffectOffset:{method:"Square",offset:1,option:"Fast"},CIMGeometricEffectRotate:{angle:15},CIMGeometricEffectScale:{xscalefactor:1.15,yscalefactor:1.15},CIMGeometricEffectWave:{amplitude:2,period:3,seed:1,waveform:"Sinus"},CIMMarkerPlacementAlongLine:{customendingoffset:0,endings:"WithHalfGap",offsetalongline:0,placeperpart:!0,angletoline:!0,offset:0},CIMMarkerPlacementAtExtremities:{extremityplacement:"Both",offsetalongline:0,angletoline:!0,offset:0},CIMMarkerPlacementAtRatioPositions:{beginposition:0,endposition:0,flipfirst:!0,angletoline:!0,offset:0},CIMMarkerPlacementInsidePolygon:{gridangle:0,gridtype:"Fixed",offsetx:0,offsety:0,randomness:100,seed:0,shiftoddrows:!1,stepx:16,stepy:16,clipping:"ClipAtBoundary"},CIMMarkerPlacementOnLine:{relativeto:"LineMiddle",startpointoffset:0,angletoline:!0,offset:0},CIMMarkerPlacementOnVertices:{placeperpart:!0,placeoncontrolpoints:!0,placeonendpoints:!0,placeonregularvertices:!0,angletoline:!0,offset:0},CIMMarkerPlacementPolygonCenter:{method:"OnPolygon",offsetx:0,offsety:0,clipatboundary:!1},CIMAnimatedSymbolProperties:{playanimation:!1,reverseanimation:!1,randomizestarttime:!1,randomizestartseed:0,starttimeoffset:0,duration:3,endingduration:3,useendingduration:!1,repeattype:"Loop",repeatdelay:0}};function r(e,t,r,o){return function(e){return"function"==typeof e}(e)?e(t,r,o):e}function o(e){return[e.r,e.g,e.b,e.a]}const n=" /-,\n";function i(e){let t=e.length;for(;t--;)if(!n.includes(e.charAt(t)))return!1;return!0}function a(e,t){const r=[];let o=0,n=-1;do{if(n=e.indexOf("[",o),n>=o){if(n>o){const t=e.substr(o,n-o);r.push([t,null,i(t)])}if(o=n+1,n=e.indexOf("]",o),n>=o){if(n>o){const i=t[e.substr(o,n-o)];i&&r.push([null,i,!1])}o=n+1}}}while(-1!==n);if(o<e.length-1){const t=e.substr(o);r.push([t,null,i(t)])}return r}function l(e,t,r){let o="",n=null;for(const r of t){const[t,i,a]=r;if(t)a?n=t:(n&&(o+=n,n=null),o+=t);else{const t=e.attributes[i];t&&(n&&(o+=n,n=null),o+=t)}}return function(e,t){switch("string"!=typeof e&&(e=String(e)),t){case"LowerCase":return e.toLowerCase();case"Allcaps":return e.toUpperCase();default:return e}}(o,r)}function s(e,t,r,o,n,i,a=!0){const l=t/n,s=r/i,c=Math.ceil(l/2),f=Math.ceil(s/2);for(let r=0;r<i;r++)for(let u=0;u<n;u++){const m=4*(u+(a?i-r-1:r)*n);let y=0,M=0,d=0,C=0,p=0,I=0,h=0;const g=(r+.5)*s;for(let o=Math.floor(r*s);o<(r+1)*s;o++){const r=Math.abs(g-(o+.5))/f,n=(u+.5)*l,i=r*r;for(let r=Math.floor(u*l);r<(u+1)*l;r++){let a=Math.abs(n-(r+.5))/c;const l=Math.sqrt(i+a*a);l>=-1&&l<=1&&(y=2*l*l*l-3*l*l+1,y>0&&(a=4*(r+o*t),h+=y*e[a+3],d+=y,e[a+3]<255&&(y=y*e[a+3]/250),C+=y*e[a],p+=y*e[a+1],I+=y*e[a+2],M+=y))}}o[m]=C/M,o[m+1]=p/M,o[m+2]=I/M,o[m+3]=h/d}}function c(e){return e?[e[0],e[1],e[2],e[3]/255]:[0,0,0,0]}function f(e){return e.data?.symbol??null}function u(e){return"CIMVectorMarker"===e.type||"CIMPictureMarker"===e.type||"CIMBarChartMarker"===e.type||"CIMCharacterMarker"===e.type||"CIMPieChartMarker"===e.type||"CIMStackedBarChartMarker"===e.type}function m(e){return"CIMGradientStroke"===e.type||"CIMPictureStroke"===e.type||"CIMSolidStroke"===e.type}function y(e){return null!=e&&("CIMGradientFill"===e.type||"CIMHatchFill"===e.type||"CIMPictureFill"===e.type||"CIMSolidFill"===e.type||"CIMWaterFill"===e.type)}function M(e){return null!=e&&("CIMMarkerPlacementAlongLineRandomSize"===e.type||"CIMMarkerPlacementAlongLineSameSize"===e.type||"CIMMarkerPlacementAlongLineVariableSize"===e.type||"CIMMarkerPlacementAtExtremities"===e.type||"CIMMarkerPlacementAtMeasuredUnits"===e.type||"CIMMarkerPlacementAtRatioPositions"===e.type||"CIMMarkerPlacementOnLine"===e.type||"CIMMarkerPlacementOnVertices"===e.type)}const d=(e,t=0)=>null==e||isNaN(e)?t:e,C=e=>e.tintColor?c(e.tintColor):[255,255,255,1],p=e=>{if(!e)return!1;for(const t of e)switch(t.type){case"CIMGeometricEffectBuffer":case"CIMGeometricEffectOffset":case"CIMGeometricEffectDonut":return!0}return!1};function I(){return import("./geometryEngineJSON.js").then((e=>e.g))}function h(e){if(!e)return"normal";switch(e.toLowerCase()){case"italic":return"italic";case"oblique":return"oblique";default:return"normal"}}function g(e){if(!e)return"normal";switch(e.toLowerCase()){case"bold":return"bold";case"bolder":return"bolder";case"lighter":return"lighter";default:return"normal"}}function b(e){let t="normal",r="normal";if(e){const o=e.toLowerCase();o.includes("italic")?t="italic":o.includes("oblique")&&(t="oblique"),o.includes("bold")?r="bold":o.includes("light")&&(r="lighter")}return{style:t,weight:r}}function k(e){return e.underline?"underline":e.strikethrough?"line-through":"none"}function S(e){if(!e)return null;switch(e.type){case"CIMPolygonSymbol":if(e.symbolLayers)for(const t of e.symbolLayers){const e=S(t);if(null!=e)return e}break;case"CIMTextSymbol":return S(e.symbol);case"CIMSolidFill":return e.color}return null}function P(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":{const t=e.symbolLayers;if(t)for(const e of t){const t=P(e);if(null!=t)return t}break}case"CIMTextSymbol":return P(e.symbol);case"CIMSolidStroke":return e.color}}function w(e){if(e)switch(e.type){case"CIMPolygonSymbol":case"CIMLineSymbol":if(e.symbolLayers)for(const t of e.symbolLayers){const e=w(t);if(void 0!==e)return e}break;case"CIMTextSymbol":return w(e.symbol);case"CIMSolidStroke":case"CIMGradientStroke":case"CIMPictureStroke":return e.width}}function x(e){switch(e){case"Left":default:return"left";case"Right":return"right";case"Center":case"Justify":return"center"}}function L(e){switch(e){case"Top":default:return"top";case"Center":return"middle";case"Baseline":return"baseline";case"Bottom":return"bottom"}}function G(e){return(e?Object.keys(e):[]).map((t=>({name:t,alias:t,type:"string"==typeof e[t]?"esriFieldTypeString":"esriFieldTypeDouble"})))}const E=e=>e.includes("data:image/svg+xml");function A(e){if(!e)return null;switch(e.type){case"CIMPointSymbol":case"CIMTextSymbol":return"esriGeometryPoint";case"CIMLineSymbol":return"esriGeometryPolyline";case"CIMPolygonSymbol":return"esriGeometryPolygon";default:return null}}function v(e){return e?e.charAt(0).toLowerCase()+e.substring(1):e}function F(e,t,r,o,n,i){const{infos:a}=i;let l=1,s=0,c=0,f=0;for(const{offsetX:e,offsetY:t,rotation:r,size:o,frameHeight:n,rotateClockWise:i}of a)c=B(e,t,s,l,c),f=R(e,t,s,l,f),n&&(l*=o/n),s=T(r,i,s);const u=B(o,n,s,l,c),m=R(o,n,s,l,f);return{size:e*l,rotation:T(t,r,s),offsetX:u,offsetY:m}}function z(e){if(null==e)return!1;if(Array.isArray(e))return e.every((e=>z(e)));switch(typeof e){case"string":return!!e;case"number":return!isNaN(e)}}function N(r,o){if("color"===o||"outlinecolor"===o||"backgroundcolor"===o||"borderLineColor"===o)return[...e[o]];const n=t[r];if(!n||"boolean"==typeof n[o])throw new Error(`InternalError: default value for type ${r}.`);return n[o]}function O(e){if(null==e)return"Normal";switch(e.type){case"CIMTextSymbol":return e.textCase??"Normal";case"CIMPointSymbol":case"CIMLineSymbol":case"CIMPolygonSymbol":{const t=e.symbolLayers;if(!t)return"Normal";for(const e of t)if("CIMVectorMarker"===e.type)return O(e)}break;case"CIMVectorMarker":{const t=e.markerGraphics;if(!t)return"Normal";for(const e of t)if(e.symbol)return O(e.symbol)}}return"Normal"}function R(e,t,r,o,n){const i=r*Math.PI/180;if(i){const r=Math.cos(i);return(Math.sin(i)*e+r*t)*o+n}return t*o+n}function B(e,t,r,o,n){const i=r*Math.PI/180;return i?(Math.cos(i)*e-Math.sin(i)*t)*o+n:e*o+n}function T(e,t,r){return t?r-e:r+e}export{E as A,h as B,g as C,p as D,I as E,F,r as G,m as a,y as b,M as c,G as d,a as e,l as f,O as g,o as h,u as i,C as j,d as k,N as l,A as m,c as n,S as o,P as p,w as q,k as r,b as s,f as t,v as u,x as v,L as w,z as x,t as y,s as z};
