/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as s}from"../chunks/tslib.es6.js";import o,{O as t}from"./Accessor.js";import{tryClone as r}from"./lang.js";import"../chunks/Logger.js";import{b as e}from"../chunks/maybe.js";import{g as n}from"../chunks/utils.js";import{subclass as c}from"./accessorSupport/decorators/subclass.js";import"./Handles.js";import"./accessorSupport/decorators/property.js";import"../chunks/ensureType.js";import"../chunks/metadata.js";import"./Error.js";import"../config.js";import"../chunks/ObservableBase.js";import"../chunks/handleUtils.js";import"../chunks/tracking.js";import"./scheduling.js";import"./promiseUtils.js";const i=o=>{let i=class extends o{clone(){const s=n(this);e(s,"unable to clone instance of non-accessor class");const o=s.metadata,c=s.store,i={},a=new Map;for(const s in o){const e=o[s],n=c?.originOf(s),l=e.clonable;if(e.readOnly||!1===l||n!==t.USER&&n!==t.DEFAULTS&&n!==t.WEB_MAP&&n!==t.WEB_SCENE)continue;const p=this[s];let m=null;m="function"==typeof l?l(p):"reference"===l?p:r(p),null!=p&&null==m||(n===t.DEFAULTS?a.set(s,m):i[s]=m)}const l=new(0,Object.getPrototypeOf(this).constructor)(i);if(a.size){const s=n(l)?.store;if(s)for(const[o,r]of a)s.set(o,r,t.DEFAULTS)}return l}};return i=s([c("esri.core.Clonable")],i),i};let a=class extends(i(o)){};a=s([c("esri.core.Clonable")],a);export{a as Clonable,i as ClonableMixin};
