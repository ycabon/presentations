/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import s from"../core/Collection.js";import t from"../core/Error.js";import{L as r}from"../chunks/Logger.js";import{M as o}from"../chunks/MultiOriginJSONSupport.js";import{property as i}from"../core/accessorSupport/decorators/property.js";import{cast as p}from"../core/accessorSupport/decorators/cast.js";import"../core/lang.js";import{r as n}from"../chunks/reader.js";import{subclass as m}from"../core/accessorSupport/decorators/subclass.js";import{w as c}from"../chunks/writer.js";import u from"./Layer.js";import{BlendLayer as l}from"./mixins/BlendLayer.js";import{OperationalLayer as a}from"./mixins/OperationalLayer.js";import{ScaleRangeLayer as j}from"./mixins/ScaleRangeLayer.js";import h from"./support/ImageElement.js";import d from"./support/LocalMediaElementSource.js";import y from"./support/VideoElement.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/metadata.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"../core/Evented.js";import"../config.js";import"../chunks/ensureType.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../core/JSONSupport.js";import"../geometry.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/SpatialReference.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../chunks/assets.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../geometry/Point.js";import"../geometry/support/webMercatorUtils.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/coordsUtils.js";import"../chunks/Axis.js";import"../chunks/extentUtils.js";import"../chunks/aaBoundingRect.js";import"../chunks/mathUtils.js";import"../chunks/vec3.js";import"../chunks/vec3f64.js";import"../chunks/common.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../core/Identifiable.js";import"../core/Loadable.js";import"../core/Promise.js";import"../chunks/jsonUtils.js";import"../chunks/parser.js";import"../chunks/colorUtils.js";import"../chunks/utils3.js";import"../chunks/screenUtils.js";import"../chunks/mat4.js";import"../chunks/_commonjsHelpers.js";import"../chunks/layerContainerType.js";import"../chunks/commonProperties2.js";import"../TimeExtent.js";import"../chunks/timeUtils.js";import"../chunks/date.js";import"../chunks/locale.js";import"../chunks/timeZoneUtils.js";import"../chunks/datetime.js";import"../chunks/persistableUrlUtils.js";import"../support/timeUtils.js";import"../chunks/ElevationInfo.js";import"./support/fieldUtils.js";import"../core/sql.js";import"../intl.js";import"../chunks/messages.js";import"../chunks/unitConversionUtils.js";import"../chunks/lengthUtils.js";import"../chunks/opacityUtils.js";import"../chunks/imageUtils.js";import"../chunks/uuid.js";import"./support/MediaElementBase.js";import"./support/ControlPointsGeoreference.js";import"../chunks/perspectiveUtils.js";import"../chunks/mat3.js";import"../chunks/mat3f64.js";import"../chunks/vec2.js";import"../chunks/vec2f64.js";import"../geometry/projection.js";import"../chunks/projectBuffer.js";import"../chunks/geodesicConstants.js";import"../geometry/support/GeographicTransformation.js";import"../geometry/support/GeographicTransformationStep.js";import"../chunks/zscale.js";import"../chunks/GeoreferenceBase.js";import"../core/Clonable.js";import"./support/CornersGeoreference.js";import"./support/ExtentAndRotationGeoreference.js";import"../chunks/resourceExtension.js";import"../chunks/collectionUtils.js";import"../core/reactiveUtils.js";import"../chunks/asyncUtils.js";import"../chunks/BoundsStore.js";import"../chunks/PooledRBush.js";import"../chunks/quickselect.js";import"../chunks/MediaElementView.js";import"../chunks/normalizeUtilsSync.js";import"../chunks/normalizeUtilsCommon.js";function k(e){return"object"==typeof e&&null!=e&&"type"in e}let f=class extends(l(j(a(o(u))))){constructor(e){super(e),this.effectiveSource=null,this.copyright=null,this.operationalLayerType="MediaLayer",this.spatialReference=null,this.type="media",this.source=new d}load(e){const r=this.source;if(!r)return this.addResolvingPromise(Promise.reject(new t("media-layer:source-missing","Set 'MediaLayer.source' before loading the layer."))),Promise.resolve(this);const o=k(r)?new d({elements:new s([r])}):r;this._set("effectiveSource",o),this.spatialReference&&(o.spatialReference=this.spatialReference);const i=o.load(e).then((()=>{this.spatialReference=o.spatialReference}));return this.addResolvingPromise(i),Promise.resolve(this)}destroy(){this.effectiveSource?.destroy(),this.source?.destroy()}get fullExtent(){return this.loaded?this.effectiveSource.fullExtent:null}set source(e){"not-loaded"===this.loadStatus?this._set("source",e):r.getLogger(this).error("#source","source cannot be changed after the layer is loaded.")}castSource(e){return e?Array.isArray(e)?new d({elements:new s(e)}):e instanceof s?new d({elements:e}):e:null}readSource(e,s,t){const r="image"===s.mediaType?new h:"video"===s.mediaType?new y:null;return r?.read(s,t),r}writeSource(e,s,r,o){e&&k(e)&&"image"===e.type?e.write(s,o):o?.messages&&o?.messages?.push(new t("media-layer:unsupported-source","source must be an 'ImageElement'"))}};e([i({readOnly:!0})],f.prototype,"effectiveSource",void 0),e([i({type:String})],f.prototype,"copyright",void 0),e([i({readOnly:!0})],f.prototype,"fullExtent",null),e([i({type:["MediaLayer"]})],f.prototype,"operationalLayerType",void 0),e([i({type:["show","hide"]})],f.prototype,"listMode",void 0),e([i({nonNullable:!0,json:{write:{enabled:!0,allowNull:!1}}})],f.prototype,"source",null),e([p("source")],f.prototype,"castSource",null),e([n("source",["url"])],f.prototype,"readSource",null),e([c("source")],f.prototype,"writeSource",null),e([i()],f.prototype,"spatialReference",void 0),e([i({readOnly:!0})],f.prototype,"type",void 0),f=e([m("esri.layers.MediaLayer")],f);const g=f;export{g as default};
