/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../request.js";import r from"../../core/Error.js";import{L as s}from"../../chunks/Logger.js";import{debounce as i}from"../../core/promiseUtils.js";import{urlToObject as o}from"../../core/urlUtils.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import{r as n}from"../../chunks/reader.js";import{subclass as l}from"../../core/accessorSupport/decorators/subclass.js";import{w as p}from"../../chunks/writer.js";import{u as c}from"../../chunks/originUtils.js";import m from"../../geometry/Extent.js";import u from"../../geometry/HeightModelInfo.js";import h from"../../geometry/SpatialReference.js";import{t as d,p as y,d as f,e as j,w as g}from"../../chunks/arcgisLayerUrl.js";import{i as v,u as S}from"../../chunks/commonProperties2.js";import{f as w}from"../../chunks/I3SIndexInfo.js";import x from"../../portal/Portal.js";import I from"../../portal/PortalItem.js";import{c as k}from"../../chunks/jsonContext.js";import{s as U,u as b}from"../../chunks/resourceUtils2.js";import{v as _}from"../../chunks/saveAPIKeyUtils.js";import{e as R}from"../../chunks/saveUtils.js";import"../../config.js";import"../../kernel.js";import"../../core/JSONSupport.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../chunks/ensureType.js";import"../../chunks/multiOriginJSONSupportUtils.js";import"../../geometry/Geometry.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/persistableUrlUtils.js";import"../../TimeExtent.js";import"../../chunks/timeUtils.js";import"../../chunks/date.js";import"../../chunks/locale.js";import"../../chunks/timeZoneUtils.js";import"../../chunks/datetime.js";import"../../chunks/layerContainerType.js";import"../../support/timeUtils.js";import"../../chunks/ElevationInfo.js";import"../support/fieldUtils.js";import"../../core/sql.js";import"../../intl.js";import"../../chunks/messages.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../geometry.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../chunks/unitConversionUtils.js";import"../../chunks/lengthUtils.js";import"../../chunks/opacityUtils.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"../../portal/PortalGroup.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalUser.js";import"../../portal/PortalFolder.js";import"../../portal/PortalItemResource.js";import"../../portal/PortalRating.js";import"../../chunks/uuid.js";import"../../chunks/resourceUtils.js";const P=P=>{let L=class extends P{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=i((async(e,t,r)=>{switch(e){case O.SAVE:return this._save(t);case O.SAVE_AS:return this._saveAs(r,t)}}))}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(null!=e.spatialReference)return h.fromJSON(e.spatialReference);const t=e.store,r=t.indexCRS||t.geographicCRS,s=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=s?new h(s):null}readFullExtent(e,t,r){if(null!=e&&"object"==typeof e){const s=null==e.spatialReference?{...e,spatialReference:this._readSpatialReference(t)}:e;return m.fromJSON(s,r)}const s=t.store,i=this._readSpatialReference(t);return null==i||null==s?.extent||!Array.isArray(s.extent)||s.extent.some((e=>e<E))?null:new m({xmin:s.extent[0],ymin:s.extent[1],xmax:s.extent[2],ymax:s.extent[3],spatialReference:i})}parseVersionString(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},r=e.split(".");return r.length>=2&&(t.major=parseInt(r[0],10),t.minor=parseInt(r[1],10)),t}readVersion(e,t){const r=t.store,s=null!=r.version?r.version.toString():"";return this.parseVersionString(s)}readTitlePortalItem(e){return"item-title"!==this.sublayerTitleMode?void 0:e}readTitleService(e,t){const r=this.portalItem?.title;if("item-title"===this.sublayerTitleMode)return d(this.url,t.name);let s=t.name;if(!s&&this.url){const e=y(this.url);null!=e&&(s=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(s=r+" - "+s),f(s)}set url(e){const t=j({layer:this,url:e,nonStandardUrlAllowed:!1,logger:s.getLogger(this)});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}writeUrl(e,t,r,s){g(this,e,"layers",t,s)}get parsedUrl(){const e=this._get("url"),t=o(e);return null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=w(this.parsedUrl.path,this.rootNode,e,this.customParameters,this.apiKey,s.getLogger(this),t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){if("page"===e?.type){const t=e.rootIndex%e.pageSize,s=e.rootPage?.nodes?.[t];if(null==s?.obb?.center||null==s.obb.halfSize)throw new r("sceneservice:invalid-node-page","Invalid node page.");if(s.obb.center[0]<E||null==this.fullExtent||this.fullExtent.hasZ)return;const i=s.obb.halfSize,o=s.obb.center[2],a=Math.sqrt(i[0]*i[0]+i[1]*i[1]+i[2]*i[2]);this.fullExtent.zmin=o-a,this.fullExtent.zmax=o+a}else if("node"===e?.type){const t=e.rootNode?.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<E)return;const r=t[2],s=t[3],{fullExtent:i}=this;i&&(i.zmin=r-s,i.zmax=r+s)}}async _fetchService(e){if(null==this.url)throw new r("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const r=await t(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e});if(r.data&&Array.isArray(r.data.layers)&&r.data.layers.length>0)return r.data.layers[0].id}async _fetchServiceLayer(e){const r=await t(this.parsedUrl?.path??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let s=!1;if(r.data.layerType&&"Voxel"===r.data.layerType&&(s=!0),s)return this._fetchVoxelServiceLayer();const i=r.data;this.read(i,this._getServiceContext()),this.validateLayer(i)}async _fetchVoxelServiceLayer(e){const r=(await t(this.parsedUrl?.path+"/layer",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e})).data;this.read(r,this._getServiceContext()),this.validateLayer(r)}_getServiceContext(){return{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const s=t.getTypeKeywords();for(const t of s)e.typeKeywords.push(t);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),r===N.newItem&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))}async _saveAs(e,t){const s={...T,...t};let i=I.from(e);if(!i)throw new r("sceneservice:portal-item-required","_saveAs() requires a portal item to save to");_(i),i.id&&(i=i.clone(),i.id=null);const o=i.portal||x.getDefault();await this._ensureLoadBeforeSave(),i.type=A,i.portal=o;const a=k(i,"portal-item",!0),n={layers:[this.write({},a)]};return await Promise.all(a.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(n,a,s),i.url=this.url,i.title||(i.title=this.title),this._updateTypeKeywords(i,s,N.newItem),await o.signIn(),await(o.user?.addItem({item:i,folder:s?.folder,data:n})),await U(this.resourceReferences,a),this.portalItem=i,c(a),a.portalItem=i,i}async _save(e){const t={...T,...e};if(!this.portalItem)throw new r("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(_(this.portalItem),this.portalItem.type!==A)throw new r("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${A}"`);await this._ensureLoadBeforeSave();const s=k(this.portalItem,"portal-item",!0),i={layers:[this.write({},s)]};return await Promise.all(s.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(i,s,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,N.existingItem),await b(this.portalItem,i,this.resourceReferences,s),c(s),this.portalItem}async _validateAgainstJSONSchema(e,t,r){const s=r?.validationOptions;R(t,{errorName:"sceneservice:save"},{ignoreUnsupported:s?.ignoreUnsupported,supplementalUnsupportedErrors:["scenemodification:unsupported"]})}};return e([a(v)],L.prototype,"id",void 0),e([a({type:h})],L.prototype,"spatialReference",void 0),e([n("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],L.prototype,"readSpatialReference",null),e([a({type:m})],L.prototype,"fullExtent",void 0),e([n("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],L.prototype,"readFullExtent",null),e([a({readOnly:!0,type:u})],L.prototype,"heightModelInfo",void 0),e([a({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],L.prototype,"minScale",void 0),e([a({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],L.prototype,"maxScale",void 0),e([a({readOnly:!0})],L.prototype,"version",void 0),e([n("version",["store.version"])],L.prototype,"readVersion",null),e([a({type:String,json:{read:{source:"copyrightText"}}})],L.prototype,"copyright",void 0),e([a({type:String,json:{read:!1}})],L.prototype,"sublayerTitleMode",void 0),e([a({type:String})],L.prototype,"title",void 0),e([n("portal-item","title")],L.prototype,"readTitlePortalItem",null),e([n("service","title",["name"])],L.prototype,"readTitleService",null),e([a({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],L.prototype,"layerId",void 0),e([a(S)],L.prototype,"url",null),e([p("url")],L.prototype,"writeUrl",null),e([a()],L.prototype,"parsedUrl",null),e([a({readOnly:!0})],L.prototype,"store",void 0),e([a({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],L.prototype,"rootNode",void 0),L=e([l("esri.layers.mixins.SceneService")],L),L},E=-1e38;var N;!function(e){e[e.existingItem=0]="existingItem",e[e.newItem=1]="newItem"}(N||(N={}));const A="Scene Service",T={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var O;!function(e){e[e.SAVE=0]="SAVE",e[e.SAVE_AS=1]="SAVE_AS"}(O||(O={}));export{O as SaveOperationType,P as SceneService,A as sceneServiceItemType};
