/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import"../../geometry.js";import{JSONSupport as t}from"../../core/JSONSupport.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{subclass as r}from"../../core/accessorSupport/decorators/subclass.js";import o from"../../geometry/Extent.js";import i from"../../geometry/Polygon.js";import{fromJSON as n}from"../../geometry/support/jsonUtils.js";import m from"./DimensionalDefinition.js";import p from"../../geometry/Geometry.js";import"../../chunks/ensureType.js";import"../../geometry/Multipoint.js";import"../../chunks/writer.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../config.js";import"../../chunks/reader.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../core/Error.js";import"../../core/promiseUtils.js";import"../../chunks/maybe.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/zmUtils.js";import"../../geometry/Polyline.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/typeUtils.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";var a;const c={base:p,key:"type",typeMap:{extent:o,polygon:i}};let u=a=class extends t{constructor(s){super(s),this.areaOfInterest=null,this.subsetDefinitions=null}get dimensions(){const{subsetDefinitions:s}=this;if(null==s||0===s.length)return[];const t=new Map;s.forEach((s=>{if(!s.dimensionName)return;let e,r;if(Array.isArray(s.values[0])){const t=s.values;e=t[0][0],r=t[s.values.length-1][1]}else{const t=s.values;e=t[0],r=t[s.values.length-1]}if(t.has(s.dimensionName)){const o=t.get(s.dimensionName);o[0]=Math.min(e,o[0]),o[1]=Math.max(r,o[1])}else t.set(s.dimensionName,[e,r])}));const e=[];for(const s of t)e.push({name:s[0],extent:s[1]});return e}get variables(){const{subsetDefinitions:s}=this;if(null==s||0===s.length)return[];const t=new Set;return s.forEach((s=>{s.variableName&&t.add(s.variableName)})),[...t]}clone(){const s=this.subsetDefinitions?.map((s=>s.clone())),t=this.areaOfInterest?this.areaOfInterest.clone():this.areaOfInterest;return new a({areaOfInterest:t,subsetDefinitions:s})}};s([e({types:c,json:{read:n,write:!0}})],u.prototype,"areaOfInterest",void 0),s([e({readOnly:!0})],u.prototype,"dimensions",null),s([e({readOnly:!0})],u.prototype,"variables",null),s([e({type:[m],json:{write:!0}})],u.prototype,"subsetDefinitions",void 0),u=a=s([r("esri.layers.support.MultidimensionalSubset")],u);const l=u;export{l as default};
