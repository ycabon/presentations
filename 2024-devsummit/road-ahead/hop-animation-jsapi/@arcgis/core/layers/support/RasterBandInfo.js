/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../config.js";import"../../chunks/ensureType.js";var t;function s(e){return e=Number(e),isNaN(e)?void 0:e}let o=t=class extends r{constructor(){super(...arguments),this.name=null,this.minWavelength=void 0,this.maxWavelength=void 0,this.radianceBias=void 0,this.radianceGain=void 0,this.reflectanceBias=void 0,this.reflectanceGain=void 0,this.solarIrradiance=void 0}clone(){return new t({name:this.name,minWavelength:this.minWavelength,maxWavelength:this.maxWavelength,radianceBias:this.radianceBias,radianceGain:this.radianceGain,reflectanceBias:this.reflectanceBias,reflectanceGain:this.reflectanceGain,solarIrradiance:this.solarIrradiance})}};e([a({json:{name:"BandName",write:!0}})],o.prototype,"name",void 0),e([a({json:{name:"WavelengthMin",read:{reader:s},write:!0}})],o.prototype,"minWavelength",void 0),e([a({json:{name:"WavelengthMax",read:{reader:s},write:!0}})],o.prototype,"maxWavelength",void 0),e([a({json:{name:"RadianceBias",read:{reader:s},write:!0}})],o.prototype,"radianceBias",void 0),e([a({json:{name:"RadianceGain",read:{reader:s},write:!0}})],o.prototype,"radianceGain",void 0),e([a({json:{name:"ReflectanceBias",read:{reader:s},write:!0}})],o.prototype,"reflectanceBias",void 0),e([a({json:{name:"ReflectanceGain",read:{reader:s},write:!0}})],o.prototype,"reflectanceGain",void 0),e([a({json:{name:"SolarIrradiance",read:{reader:s},write:!0}})],o.prototype,"solarIrradiance",void 0),o=t=e([i("esri.layers.support.RasterBandInfo")],o);const n=o;export{n as default};
