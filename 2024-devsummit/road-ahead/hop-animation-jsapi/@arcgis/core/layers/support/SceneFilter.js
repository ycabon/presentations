/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import s from"../../request.js";import{JSONSupportMixin as t,JSONSupport as r}from"../../core/JSONSupport.js";import{clone as o}from"../../core/lang.js";import{on as i,sync as n}from"../../core/reactiveUtils.js";import{property as p}from"../../core/accessorSupport/decorators/property.js";import"../../chunks/Logger.js";import{r as c}from"../../chunks/reader.js";import{W as m,subclass as a}from"../../core/accessorSupport/decorators/subclass.js";import{p as l}from"../../chunks/persistable.js";import u from"../../core/Collection.js";import"../../core/Error.js";import h from"../../geometry/Polygon.js";import{canProjectWithoutEngine as j,projectPolygon as g}from"../../geometry/projection.js";import{f}from"../../chunks/persistableUrlUtils.js";import"../../config.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../chunks/ensureType.js";import"../../chunks/asyncUtils.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/MD5.js";import"../../chunks/multiOriginJSONSupportUtils.js";import"../../chunks/uuid.js";import"../../chunks/resourceExtension.js";import"../../chunks/writer.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/zmUtils.js";import"../../geometry/Multipoint.js";import"../../geometry/Polyline.js";import"../../chunks/projectBuffer.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";var d;let y=d=class extends(t(u.ofType(h))){constructor(e){super(e)}clone(){return new d(this.items.map((e=>e.clone())))}write(e,s){return this.toJSON(s)}toJSON(e){const s=e?.layer?.spatialReference;return s?this.toArray().map((t=>{if(!s.equals(t.spatialReference)){if(!j(t.spatialReference,s))return e?.messages&&e.messages.push(new m("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const r=new h;g(t,r,s),t=r}const r=t.toJSON(e);return delete r.spatialReference,r})).filter((e=>null!=e)):(e?.messages&&e.messages.push(new m("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map((s=>s.toJSON(e))))}static fromJSON(e,s){const t=new d;return e.forEach((e=>t.add(h.fromJSON(e,s)))),t}};y=d=e([a("esri.layers.support.PolygonCollection")],y);const k=y;var S;let w=S=class extends r{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new k,this._geometriesSource=null}initialize(){this.addHandles(i((()=>this.geometries),"after-changes",(()=>this.geometries=this.geometries),n))}readGeometries(e,s,t){Array.isArray(e)?this.geometries=k.fromJSON(e,t):this._geometriesSource={url:f(e,t),context:t}}async loadGeometries(e,t){if(null==this._geometriesSource)return;const{url:r,context:o}=this._geometriesSource,i=await s(r,{responseType:"json",signal:t?.signal}),n=e.toJSON(),p=i.data.map((e=>({...e,spatialReference:n})));this.geometries=k.fromJSON(p,o),this._geometriesSource=null}clone(){const e=new S({geometries:o(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};e([p({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],w.prototype,"spatialRelationship",void 0),e([p({type:k,nonNullable:!0,json:{write:!0}}),l({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],w.prototype,"geometries",void 0),e([c(["web-scene","portal-item"],"geometries")],w.prototype,"readGeometries",null),w=S=e([a("esri.layers.support.SceneFilter")],w);const b=w;export{b as default};
