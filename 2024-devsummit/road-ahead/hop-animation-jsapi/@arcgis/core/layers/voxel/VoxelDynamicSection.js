/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{ClonableMixin as o}from"../../core/Clonable.js";import{c as r}from"../../chunks/Cyclical.js";import{JSONSupport as s}from"../../core/JSONSupport.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import{cast as i}from"../../core/accessorSupport/decorators/cast.js";import"../../core/lang.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{f as a}from"../../chunks/ensureType.js";import{c as m,a as c}from"../../chunks/voxelPlaneUtils.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/Logger.js";import"../../config.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/quat.js";import"../../chunks/vec4.js";import"../../chunks/quatf64.js";let l=class extends(o(s)){constructor(t){super(t),this.enabled=!0,this.label="",this.normal=null,this.point=null}get orientation(){if(!Array.isArray(this.normal)||3!==this.normal.length)return 0;const[t,o]=m(this.normal);return r.normalize(a(t),0,!0)}set orientation(t){const o=c(t,this.tilt);this._set("normal",o),this._set("orientation",t)}get tilt(){if(!Array.isArray(this.normal)||3!==this.normal.length)return 0;const[t,o]=m(this.normal);return r.normalize(a(o),0,!0)}set tilt(t){const o=c(this.orientation,t);this._set("normal",o),this._set("tilt",t)}};t([e({type:Boolean,json:{default:!0,write:!0}})],l.prototype,"enabled",void 0),t([e({type:String,json:{write:!0}})],l.prototype,"label",void 0),t([e({type:Number,json:{read:!1},clonable:!1,range:{min:0,max:360}}),i((t=>r.normalize(a(t),0,!0)))],l.prototype,"orientation",null),t([e({type:Number,json:{read:!1},clonable:!1,range:{min:0,max:360}}),i((t=>r.normalize(a(t),0,!0)))],l.prototype,"tilt",null),t([e({type:[Number],json:{write:!0}})],l.prototype,"normal",void 0),t([e({type:[Number],json:{write:!0}})],l.prototype,"point",void 0),l=t([n("esri.layers.voxel.VoxelDynamicSection")],l);const p=l;export{p as default};
