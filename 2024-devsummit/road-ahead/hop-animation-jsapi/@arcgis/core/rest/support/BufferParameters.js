/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{geometryTypes as e}from"../../geometry.js";import{J as s}from"../../chunks/jsonMap.js";import{JSONSupport as o}from"../../core/JSONSupport.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import p from"../../geometry/Polygon.js";import n from"../../geometry/SpatialReference.js";import{getJsonType as m}from"../../geometry/support/jsonUtils.js";import{X as c}from"../../chunks/unitUtils.js";import"../../chunks/ensureType.js";import"../../geometry/Extent.js";import"../../geometry/Geometry.js";import"../../chunks/reader.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../config.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/writer.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polyline.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/typeUtils.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";const u=new s({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});let a=class extends o{constructor(t){super(t),this.bufferSpatialReference=null,this.distances=null,this.geodesic=!1,this.geometries=null,this.outSpatialReference=null,this.unionResults=!1,this.unit=null}toJSON(){const t={unit:u.toJSON(this.unit),unionResults:this.unionResults,geodesic:this.geodesic},e=this.distances,s=this.outSpatialReference,o=this.bufferSpatialReference,r=this.geometries;if(r&&r.length>0){const e=r.map((t=>(t="extent"===t.type?p.fromExtent(t):t).toJSON())),s="extent"===r[0].type?"esriGeometryPolygon":m(r[0]);t.geometries=JSON.stringify({geometryType:s,geometries:e}),t.inSR=c(r[0].spatialReference)}return e&&(t.distances=e.join(",")),s&&(t.outSR=c(s)),o&&(t.bufferSR=c(o)),t}};t([r({type:n,json:{write:!0}})],a.prototype,"bufferSpatialReference",void 0),t([r({type:[Number],json:{write:!0}})],a.prototype,"distances",void 0),t([r({type:Boolean,json:{write:!0}})],a.prototype,"geodesic",void 0),t([r({types:[e],json:{write:!0}})],a.prototype,"geometries",void 0),t([r({type:n,json:{write:!0}})],a.prototype,"outSpatialReference",void 0),t([r({type:Boolean,json:{write:!0}})],a.prototype,"unionResults",void 0),t([r({type:String,json:{write:!0}})],a.prototype,"unit",void 0),a=t([i("esri.rest.support.BufferParameters")],a);const j=a;export{j as default};
