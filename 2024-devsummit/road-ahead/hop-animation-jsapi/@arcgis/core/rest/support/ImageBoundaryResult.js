/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import{JSONSupport as s}from"../../core/JSONSupport.js";import{property as o}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{r as t}from"../../chunks/reader.js";import{subclass as e}from"../../core/accessorSupport/decorators/subclass.js";import m from"../../geometry/Extent.js";import i from"../../geometry/Polygon.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../config.js";import"../../chunks/ensureType.js";import"../../geometry/Geometry.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../chunks/writer.js";import"../../geometry/Point.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/support/webMercatorUtils.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/zmUtils.js";let p=class extends s{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(r,s){return null==r?null:r.rings?i.fromJSON(r):m.fromJSON(r)}};r([o({type:Number,json:{write:!0}})],p.prototype,"area",void 0),r([o({json:{name:"shape",write:!0}})],p.prototype,"geometry",void 0),r([t("geometry")],p.prototype,"readGeometry",null),p=r([e("esri.rest.support.ImageBoundaryResult")],p);const c=p;export{c as default};
