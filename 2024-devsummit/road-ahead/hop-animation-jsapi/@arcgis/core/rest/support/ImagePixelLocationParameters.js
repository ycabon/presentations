/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as r}from"../../chunks/tslib.es6.js";import"../../geometry.js";import{JSONSupport as s}from"../../core/JSONSupport.js";import{property as t}from"../../core/accessorSupport/decorators/property.js";import{I as o}from"../../chunks/ensureType.js";import"../../core/lang.js";import{subclass as e}from"../../core/accessorSupport/decorators/subclass.js";import{w as i}from"../../chunks/writer.js";import m from"../../geometry/Point.js";import"../../geometry/Extent.js";import"../../chunks/Logger.js";import"../../config.js";import"../../geometry/Geometry.js";import"../../chunks/reader.js";import"../../geometry/SpatialReference.js";import"../../chunks/unitUtils.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../core/Error.js";import"../../core/promiseUtils.js";import"../../chunks/handleUtils.js";import"../../chunks/maybe.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../geometry/support/webMercatorUtils.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../core/accessorSupport/decorators/cast.js";import"../../geometry/Polygon.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../geometry/Polyline.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";var p;let c=p=class extends s{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(r,s,t){s.geometries={geometryType:"esriGeometryPoint",geometries:r.map((r=>r.toJSON()))}}clone(){return new p({geometries:this.geometries?.map((r=>r.clone()))??[],rasterId:this.rasterId})}};r([t({type:[m],json:{write:!0}})],c.prototype,"geometries",void 0),r([i("geometries")],c.prototype,"writeGeometry",null),r([t({type:o,json:{write:!0}})],c.prototype,"rasterId",void 0),c=p=r([e("esri.rest.support.ImagePixelLocationParameters")],c);const n=c;export{n as default};
