/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import o from"../../../Color.js";import{p as r,a as t,g as s,b as i}from"../../../chunks/colorRampUtils.js";export{c as convertColorRampToColormap}from"../../../chunks/colorRampUtils.js";import n from"../../../rest/support/AlgorithmicColorRamp.js";import e from"../../../rest/support/MultipartColorRamp.js";import"../../../chunks/colorUtils.js";import"../../../chunks/mathUtils.js";import"../../../chunks/vec3.js";import"../../../chunks/vec3f64.js";import"../../../chunks/common.js";import"../../../chunks/ensureType.js";import"../../../core/lang.js";import"../../../chunks/Logger.js";import"../../../config.js";import"../../../chunks/colorUtils2.js";import"../../../chunks/vec4.js";import"../../../chunks/vec4f64.js";import"../../../chunks/jsonMap.js";import"../../../core/JSONSupport.js";import"../../../chunks/tslib.es6.js";import"../../../core/Accessor.js";import"../../../core/Handles.js";import"../../../chunks/maybe.js";import"../../../core/accessorSupport/decorators/subclass.js";import"../../../chunks/metadata.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/tracking.js";import"../../../core/Error.js";import"../../../core/accessorSupport/decorators/property.js";import"../../../chunks/ObservableBase.js";import"../../../core/scheduling.js";import"../../../core/promiseUtils.js";import"../../../chunks/enumeration.js";import"../../../rest/support/ColorRamp.js";function m(r){const{fromColor:t,toColor:s,colorRamps:i}=r,n=i?i.map((r=>new o(r.fromColor))):[new o(t)];return n.push(new o(i?i[i.length-1].toColor:s)),n}function p(){return r.filter((o=>"white-to-black"!==o.id)).map((o=>({name:t.toJSON(o.id),colors:m(o)})))}function l(){return t.jsonValues.filter((o=>"White to Black"!==o))}function u(o){const s=t.fromJSON(o),i=r.filter((o=>"white-to-black"!==o.id)).find((o=>o.id===s));return i?{name:o,colors:m(i)}:null}function a(o){const{colors:r,algorithm:t="cie-lab"}=o;if(r.length<2)return null;if(2===r.length)return new n({algorithm:t,fromColor:r[0],toColor:r[1]});const s=[];for(let o=0;o<r.length-1;o++)s?.push(new n({algorithm:t,fromColor:r[o],toColor:r[o+1]}));return new e({colorRamps:s})}function h(o){return s(o)}function j(o){const r=i(o);if(!r)return null;"white-to-black"===r.id&&(r.id="black-to-white",r.inverted=!r.inverted);const{id:s,inverted:n}=r;return{name:t.toJSON(s),inverted:n}}export{p as all,u as byName,h as convertColorRampToRasterFunctionArgument,a as createColorRamp,j as getColorRampName,l as names};
