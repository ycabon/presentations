/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import t from"../request.js";import r from"../core/Error.js";import{JSONSupportMixin as s}from"../core/JSONSupport.js";import i from"../core/Loadable.js";import{removeTrailingSlash as n,Url as o}from"../core/urlUtils.js";import{property as a}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"../chunks/Logger.js";import{r as u}from"../chunks/reader.js";import{subclass as l}from"../core/accessorSupport/decorators/subclass.js";import{w as d}from"../chunks/writer.js";import{f as c,g as m,o as h,h as p,c as f,j as g}from"../chunks/EditBusLayer.js";import{p as w}from"../chunks/utils7.js";import"../config.js";import"../kernel.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/maybe.js";import"../chunks/metadata.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../core/scheduling.js";import"../core/promiseUtils.js";import"../chunks/ensureType.js";import"../core/Promise.js";import"../core/Evented.js";import"../chunks/uuid.js";class V{constructor(e){this.moments=[],this.forwardMoments=[],this.moments.push(e)}push(e){return this.forwardMoments.length,this.moments.push(e)}pop(){if(!(this.forwardMoments.length>0))return this.moments.pop()}undo(){if(!this.canUndo())return;const e=this.moments.pop();return this.forwardMoments.push(e),e}peek(){return this.moments.at(-1)}canUndo(){return this.moments.length>1}canRedo(){return this.hasForwardEdits()}redo(){if(!this.canRedo())return;const e=this.forwardMoments.pop();return this.moments.push(e),e}size(){return this.moments.length+this.forwardMoments.length}hasForwardEdits(){return this.forwardMoments.length>0}clearForwardEdits(){this.forwardMoments=[]}}let k=class extends(s(i)){constructor(e){super(e),this.url=null,this.sourceJSON=null,this.name=null,this.defaultVersionIdentifier=null,this.capabilities=null,this._applyEditsHandler=e=>{const{serviceUrl:t,gdbVersion:r,result:s}=e;t===this._featureServiceUrl&&s.then((e=>{const t=e.historicMoment;t&&this._addMomentToVersionItem(r,t)}))}}initialize(){this.url=n(this.url),this._featureServiceUrl=this.url.replace(/\/VersionManagementServer/i,"/FeatureServer"),c.has(this.url)||c.set(this.url,new Map);const e=(m.get(this.url)??0)+1;m.set(this.url,e),this.when().then((()=>this.addHandles(h(this._applyEditsHandler))),(()=>{}))}destroy(){const e=(m.get(this.url)??1)-1;m.set(this.url,e),0===e&&c.delete(this.url),p.delete(this._featureServiceUrl)}read(e,t){this.sourceJSON=e,super.read(e,t)}readDefaultVersionIdentifier(e,t){return{name:t.defaultVersionName,guid:t.defaultVersionGuid}}writeDefaultVersionIdentifier(e,t){t.defaultVersionName=e.name,t.defaultVersionGuid=e.guid}load(e){return this.addResolvingPromise(this._fetchService(this.url,e)),Promise.resolve(this)}async createVersion(e){const[{createVersion:t},{default:r}]=await Promise.all([import("../chunks/createVersion.js"),import("../chunks/CreateVersionParameters.js")]),s=r.from(e);return t(this.url,s)}async deleteVersion(e){const[{deleteVersion:t},{default:r}]=await Promise.all([import("../chunks/deleteVersion.js"),import("../chunks/DeleteVersionParameters.js")]);let s;e.guid&&c.get(this.url)?.has(e.guid)&&(s=f??void 0);const i=new r({versionName:e.name,sessionId:s});return t(this.url,i)}async getVersionInfoExtended(e){const{getVersion:t}=await import("../chunks/getVersion.js");return t(this.url,e.guid)}async getVersionInfos(e={}){const[{getVersionInfos:t},{default:r}]=await Promise.all([import("../chunks/getVersionInfos.js"),import("../chunks/GetVersionInfosParameters.js")]),s=r.from(e);return t(this.url,s)}async reconcile(e,t={}){const[{reconcile:r},{default:s}]=await Promise.all([import("../chunks/reconcile.js"),import("../chunks/ReconcileParameters.js")]),i=s.from(t);return i.sessionId=f,r(this.url,e.guid,i)}async post(e){const[{post:t},{default:r}]=await Promise.all([import("../chunks/post.js"),import("../chunks/PostParameters.js")]),s=r.from({sessionId:f});return t(this.url,e.guid,s)}async alterVersion(e,t){const[{alterVersion:r},{default:s}]=await Promise.all([import("../chunks/alterVersion.js"),import("../chunks/AlterVersionParameters.js")]),i=s.from(t);return r(this.url,e.guid,i)}async startReading(e){const{startReading:t}=await import("../chunks/startReading.js"),r=await t(this.url,e.guid,f);if(r){const t=await this.getVersionInfoExtended(e),r=new Date(t.modifiedDate),s={name:t.versionIdentifier.name,moment:r,lockType:"read"};this._addOrUpdateItem(e.guid,s),g(this._featureServiceUrl,null,e.name,r)}return r}async stopReading(e){const{stopReading:t}=await import("../chunks/stopReading.js"),r=await t(this.url,e.guid,f);return r&&(c.get(this.url)?.delete(e.guid),g(this._featureServiceUrl,null,e.name,null)),r}async startEditing(e){const{startEditing:t}=await import("../chunks/startEditing.js"),r=await t(this.url,e.guid,f);if(r){const t=await this.getVersionInfoExtended(e),r=new Date(t.modifiedDate),s=new V(r),i={name:e.name,moment:r,lockType:"edit",stack:s};this._addOrUpdateItem(e.guid,i),g(this._featureServiceUrl,null,e.name,r)}return r}async stopEditing(e,t){if(t){const t=c.get(this.url)?.get(e.guid);if(t?.stack?.canRedo()){const[{deleteForwardEdits:r},{default:s}]=await Promise.all([import("../chunks/deleteForwardEdits.js"),import("../chunks/DeleteForwardEditsParameters.js")]);if(!await r(this.url,e.guid,new s({sessionId:f,moment:t.moment})))return!1}}const{stopEditing:r}=await import("../chunks/stopEditing.js"),s=await r(this.url,e.guid,f,t);if(s){const t=await this.getVersionInfoExtended(e),r=new Date(t.modifiedDate);this._addOrUpdateItem(e.guid,{name:e.name,moment:r,lockType:"read",editMomentStack:void 0}),g(this._featureServiceUrl,null,e.name,r)}return s}getLockType(e){const t=c.get(this.url)?.get(e.guid)?.lockType;return t??"none"}changeVersionInternal(e,t,r){let s=null,i=null,n=null,o=null;const a=e=>!e||e===this.defaultVersionIdentifier.name,u=e=>{const t=c?.get(this.url)?.get(e.guid);n=e.name,o=t?.moment??null},l=(e,t)=>!e&&!t||!(!e||!t)&&e.toISOString()===t.toISOString();if("name"in t){if("none"!==this.getLockType(t))return!1;s=t.name,i=null,"name"in r?u(r):(n=this.defaultVersionIdentifier.name,o=r)}else s=this.defaultVersionIdentifier.name,i=t,"name"in r?u(r):(n=this.defaultVersionIdentifier.name,o=r);return(a(s)&&a(e.gdbVersion)&&l(e.historicMoment,i)||s===e.gdbVersion&&l(e.historicMoment,i))&&(e.gdbVersion=n,e.historicMoment=o),!0}async changeVersion(e,t,s){if("name"in s&&!await this.getVersionInfoExtended(s))throw new r("version-management-service:invalid-version","version does not exist");if("networkServiceUrl"in e){if(this._featureServiceUrl.toLowerCase()===e.featureServiceUrl.toLowerCase())return this.changeVersionInternal(e,t,s)}else{let r;"layers"in e?(r=e.allTables.concat(e.allLayers),e.utilityNetworks&&e.utilityNetworks.forEach((e=>{this._featureServiceUrl.toLowerCase()===e.featureServiceUrl.toLowerCase()&&this.changeVersionInternal(e,t,s)}))):r=e;for(const e of r)if("feature"===e.type||"subtype-group"===e.type){const r=/^(.*\/FeatureServer)\/\d+$/,i=e.url.replace(r,"$1");if(this._featureServiceUrl.toLowerCase()===i.toLowerCase()&&!this.changeVersionInternal(e,t,s))return!1}else if("group"===e.type){const r=e.allTables.concat(e.allLayers);for(const e of r)if("feature"===e.type||"subtype-group"===e.type){const r=/^(.*\/FeatureServer)\/\d+$/,i=e.url.replace(r,"$1");if(this._featureServiceUrl.toLowerCase()===i.toLowerCase()&&!this.changeVersionInternal(e,t,s))return!1}}}return!0}async getVersionIdentifierFromName(e){try{const t=await this.getVersionInfos({includeHidden:!0});return t.find((t=>t.versionIdentifier.name===e))?.versionIdentifier||null}catch{return null}}async getVersionIdentifierFromGuid(e){const{getVersion:t}=await import("../chunks/getVersion.js");try{return(await t(this.url,e)).versionIdentifier}catch{return null}}canUndo(e){const t=c.get(this.url)?.get(e.guid);return!!t?.stack?.canUndo()}canRedo(e){const t=c.get(this.url)?.get(e.guid);return!!t?.stack?.canRedo()}undo(e){const t=c.get(this.url)?.get(e.guid),r=t?.stack?.undo()||void 0;if(t&&r){const r=t.stack.peek();g(this._featureServiceUrl,null,e.name,r),c.get(this.url)?.set(e.guid,{...t,moment:r})}}redo(e){const t=c.get(this.url)?.get(e.guid),r=t?.stack?.redo()||void 0;t&&r&&(g(this._featureServiceUrl,null,e.name,r),c.get(this.url)?.set(e.guid,{...t,moment:r}))}_addMomentToVersionItem(e,t){const r=c.get(this.url);if(r)for(const[s,i]of r)i.name===e&&this._addToStack(s,t)}_canAddToStack(e,t){return!e||e.getTime()<t.getTime()}_addToStack(e,t){const r=c.get(this.url),s=r?.get(e);return!!s?.stack&&(this._canAddToStack(s.stack.peek(),t)&&s.stack.push(t),r.set(e,{...s,moment:t}),!0)}_addOrUpdateItem(e,t){const r=c.get(this.url),s=r?.get(e);return s?(r.set(e,{...s,...t}),!0):!(!t.name||!t.lockType||(r?.set(e,{...t,lockType:t.lockType}),0))}async _fetchService(e,r){if(this.sourceJSON){this.read(this.sourceJSON,{origin:"service",url:w(e)});const t=new o(this.url).host;return void p.set(t,this.defaultVersionIdentifier.name)}const s=await t(e,{responseType:"json",query:{f:"json"},...r});this.read(s.data)}};e([a()],k.prototype,"url",void 0),e([a()],k.prototype,"sourceJSON",void 0),e([a({type:String,json:{write:!0}})],k.prototype,"name",void 0),e([a({json:{write:{target:{defaultVersionName:{type:String},defaultVersionGuid:{type:String}}},read:{source:["defaultVersionName","defaultVersionGuid"]}}})],k.prototype,"defaultVersionIdentifier",void 0),e([u("defaultVersionIdentifier",["defaultVersionName","defaultVersionGuid"])],k.prototype,"readDefaultVersionIdentifier",null),e([d("defaultVersionIdentifier",{defaultVersionName:{type:String},defaultVersionGuid:{type:String}})],k.prototype,"writeDefaultVersionIdentifier",null),e([a({json:{write:!0}})],k.prototype,"capabilities",void 0),k=e([l("esri.versionManagement.VersionManagementService")],k);const y=k;export{y as default};
