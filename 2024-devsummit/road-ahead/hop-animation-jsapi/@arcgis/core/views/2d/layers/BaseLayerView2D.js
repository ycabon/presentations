/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/lang.js";import"../../../chunks/Logger.js";import{subclass as e}from"../../../core/accessorSupport/decorators/subclass.js";import{c as i}from"../../../chunks/aaBoundingRect.js";import{f as r}from"../../../chunks/unitUtils.js";import{T as o}from"../../../chunks/TileStrategy.js";import"../../../chunks/TileKey2.js";import{L as n}from"../../../chunks/LayerView2D.js";import{B as c}from"../../../chunks/Bitmap.js";import{B as p}from"../../../chunks/BitmapContainer.js";import m from"../../layers/LayerView.js";import{R as a}from"../../../chunks/RefreshableLayerView.js";import"../../../chunks/ensureType.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/metadata.js";import"../../../core/Error.js";import"../../../config.js";import"../../../chunks/tracking.js";import"../../../chunks/mathUtils.js";import"../../../chunks/vec3.js";import"../../../chunks/vec3f64.js";import"../../../chunks/common.js";import"../../../geometry/Extent.js";import"../../../geometry/Geometry.js";import"../../../core/JSONSupport.js";import"../../../core/Accessor.js";import"../../../core/Handles.js";import"../../../chunks/maybe.js";import"../../../chunks/ObservableBase.js";import"../../../core/scheduling.js";import"../../../core/promiseUtils.js";import"../../../chunks/reader.js";import"../../../geometry/SpatialReference.js";import"../../../chunks/writer.js";import"../../../chunks/jsonMap.js";import"../../../chunks/assets.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../geometry/Point.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../geometry/support/webMercatorUtils.js";import"../../../chunks/vec2.js";import"../../../chunks/QueueProcessor.js";import"../../../chunks/Queue.js";import"../../../chunks/SimpleObservable.js";import"../../../chunks/ReactiveMap.js";import"../../../core/signal.js";import"../../../core/Collection.js";import"../../../core/Evented.js";import"../../../chunks/shared.js";import"../../../chunks/collectionUtils.js";import"../../../core/reactiveUtils.js";import"../../../chunks/asyncUtils.js";import"../../../chunks/scaleUtils.js";import"../../../chunks/Container.js";import"../../../chunks/mat3f32.js";import"../../../chunks/EffectView.js";import"../../../chunks/parser.js";import"../../../chunks/colorUtils.js";import"../../../chunks/utils3.js";import"../../../chunks/screenUtils.js";import"../../../chunks/mat4.js";import"../../../chunks/_commonjsHelpers.js";import"../../../chunks/DisplayObject.js";import"../../../chunks/definitions.js";import"../../../Color.js";import"../../../chunks/HighlightOptions.js";import"../../../chunks/enums.js";import"../../../chunks/Texture.js";import"../../../chunks/ClipRect.js";import"../../../geometry.js";import"../../../geometry/Multipoint.js";import"../../../chunks/zmUtils.js";import"../../../geometry/Polygon.js";import"../../../chunks/coordsUtils.js";import"../../../chunks/Axis.js";import"../../../chunks/extentUtils.js";import"../../../geometry/Polyline.js";import"../../../chunks/typeUtils.js";import"../../../geometry/support/jsonUtils.js";import"../../../chunks/mat3.js";import"../../../chunks/vec2f32.js";import"../../../chunks/WGLContainer.js";import"../../../chunks/dataViewUtils.js";import"../../../chunks/enums2.js";import"../../../chunks/FramebufferObject.js";import"../../../chunks/BufferObject.js";import"../../../chunks/Program.js";import"../../../chunks/VertexElementDescriptor.js";import"../../../chunks/BoundingBox.js";import"../../../chunks/VertexArrayObject.js";import"../../../chunks/WGLBrushVTLSymbol.js";import"../../../chunks/vec4f32.js";import"../../../chunks/StyleDefinition.js";import"../../../chunks/config.js";import"../../../chunks/ShaderCompiler.js";import"../../../chunks/ProgramTemplate.js";import"../../../chunks/TiledDisplayObject.js";import"../../../chunks/mat2df32.js";import"../../../chunks/mat2d.js";import"../../../chunks/earcut.js";import"../../../chunks/vec2f64.js";import"../../../chunks/featureConversionUtils.js";import"../../../chunks/aaBoundingBox.js";import"../../../chunks/OptimizedFeature.js";import"../../../chunks/OptimizedFeatureSet.js";import"../../../chunks/OptimizedGeometry.js";import"../../../core/Identifiable.js";import"../../../core/Promise.js";import"../../../chunks/UpdatingHandles.js";class h extends p{constructor(t){super(),this.requestRender=this.requestRender.bind(this),this._layerView=t,this._canvas=document.createElement("canvas"),this._context=this._canvas.getContext("2d"),this._bitmap=new c(this._canvas),this.addChild(this._bitmap)}doRender(t){t.painter.setPipelineState(null);const s=t.state,e=this._createCustomRenderParams(t),i=this._canvas,r=this._bitmap,o=window.devicePixelRatio;i.width=s.size[0]*o,i.height=s.size[1]*o,r.resolution=s.resolution;const n=s.clone();n.pixelRatio=o,r.pixelRatio=o,e.state=n,r.x=s.viewpoint.targetGeometry.x-Math.abs(s.extent.xmax-s.extent.xmin)/2,r.y=s.viewpoint.targetGeometry.y+Math.abs(s.extent.ymax-s.extent.ymin)/2,this._layerView.render(e),r.rotation=s.rotation,r.invalidateTexture(),super.doRender({...t,state:n})}_createCustomRenderParams(t){return{globalOpacity:t.globalOpacity,state:t.state,stationary:t.stationary,pixelRatio:window.devicePixelRatio,context:this._context}}}const u=new Set,l=[],j=[];class d{constructor(t,s,e,r,o,n,c,p=[0,0],m=i()){this.id=t,this.level=s,this.row=e,this.col=r,this.world=o,this.resolution=n,this.scale=c,this.coords=p,this.bounds=m}}let k=class extends(a(n(m))){constructor(t){super(t),this._tileMap=new Map,this.layer=null,this.tiles=[]}initialize(){this.display=new h(this),this.container.addChild(this.display)}get _tileInfoView(){const t=this.layer?.tileInfo;return t?new o(t):null}attach(){}detach(){}requestRender(){this.display.requestRender()}tilesChanged(t,s){}supportsSpatialReference(t){const s=this.layer?.tileInfo;return!s||r(s.spatialReference,t)}async doRefresh(){}isUpdating(){return!1}update(t){const s=this._tileInfoView,e=this.tiles;if(s){const i=s.getTileCoverage(t.state,0),{spans:r,lodInfo:o}=i??{};if(r?.length&&o)for(const{row:t,colFrom:s,colTo:i}of r)for(let r=s;r<=i;r++){const s=o.normalizeCol(r),i=o.getWorldForColumn(r),n=`${o.level}/${t}/${s}/${i}`;if(!this._tileMap.has(n)){const r=new d(n,o.level,t,s,i,o.resolution,o.scale);o.getTileCoords(r.coords,r,!1),o.getTileBounds(r.bounds,r,!0),this._tileMap.set(n,r),e.push(r),l.push(r)}u.add(n)}}for(let t=e.length-1;t>=0;t--){const s=e[t];u.has(s.id)||(e.splice(t,1),j.push(s),this._tileMap.delete(s.id))}(l.length||j.length)&&(this.tilesChanged(l,j),l.length=j.length=0),u.clear(),this.requestRender()}moveStart(){}viewChange(){this.requestUpdate()}moveEnd(){}};t([s()],k.prototype,"_tileInfoView",null),t([s()],k.prototype,"layer",void 0),k=t([e("esri.views.2d.layers.BaseLayerView2D")],k);const y=k;export{y as default};
