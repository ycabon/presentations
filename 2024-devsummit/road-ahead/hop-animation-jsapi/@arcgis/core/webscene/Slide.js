/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as t}from"../chunks/tslib.es6.js";import e from"../Basemap.js";import i from"../Viewpoint.js";import{r}from"../chunks/asyncUtils.js";import s from"../core/Collection.js";import{r as n}from"../chunks/collectionUtils.js";import{JSONSupport as o}from"../core/JSONSupport.js";import{L as a}from"../chunks/Logger.js";import{m as l}from"../chunks/mathUtils.js";import{d as p,r as m}from"../chunks/maybe.js";import{onAbortOrThrow as c,createAbortError as h,isAbortError as u}from"../core/promiseUtils.js";import{whenOnce as d,when as y}from"../core/reactiveUtils.js";import{property as g}from"../core/accessorSupport/decorators/property.js";import{cast as v}from"../core/accessorSupport/decorators/cast.js";import{clone as j}from"../core/lang.js";import{subclass as w}from"../core/accessorSupport/decorators/subclass.js";import{I as b,e as f}from"../chunks/ensureType.js";import{k}from"../chunks/vec3.js";import{c as T}from"../chunks/vec3f64.js";import L from"../layers/Layer.js";import{e as C,m as _}from"../chunks/basemapUtils.js";import{T as U}from"../chunks/Scheduler.js";import{S}from"../chunks/SlideThumbnail.js";import E from"./SunLighting.js";import x from"./VirtualLighting.js";import I from"../views/3d/environment/SunnyWeather.js";import{w as P}from"../chunks/weather.js";import{l as V}from"../chunks/lightingTypes.js";import R from"../Ground.js";import{t as A,o as B}from"../chunks/opacityUtils.js";import"../request.js";import"../config.js";import"../kernel.js";import"../core/urlUtils.js";import"../core/Error.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/metadata.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/ObservableBase.js";import"../chunks/tracking.js";import"../core/scheduling.js";import"../core/Loadable.js";import"../core/Promise.js";import"../chunks/loadAll.js";import"../chunks/writer.js";import"../geometry/SpatialReference.js";import"../chunks/unitUtils.js";import"../chunks/jsonMap.js";import"../chunks/assets.js";import"../portal/Portal.js";import"../chunks/reader.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/Point.js";import"../geometry/support/webMercatorUtils.js";import"../chunks/locale.js";import"../portal/PortalGroup.js";import"../portal/PortalQueryParams.js";import"../portal/PortalQueryResult.js";import"../portal/PortalUser.js";import"../portal/PortalFolder.js";import"../portal/PortalItem.js";import"../portal/PortalItemResource.js";import"../portal/PortalRating.js";import"../chunks/persistableUrlUtils.js";import"../chunks/messages.js";import"../support/BasemapStyle.js";import"../chunks/writeUtils.js";import"../chunks/layerUtils2.js";import"../core/Evented.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../Camera.js";import"../CameraLayout.js";import"../core/Clonable.js";import"../chunks/Cyclical.js";import"../chunks/common.js";import"../geometry.js";import"../geometry/Multipoint.js";import"../chunks/zmUtils.js";import"../geometry/Polygon.js";import"../chunks/coordsUtils.js";import"../chunks/Axis.js";import"../chunks/extentUtils.js";import"../chunks/aaBoundingRect.js";import"../geometry/Polyline.js";import"../chunks/typeUtils.js";import"../geometry/support/jsonUtils.js";import"../core/Identifiable.js";import"../chunks/utils3.js";import"../chunks/colorUtils.js";import"../chunks/screenUtils.js";import"../chunks/mat4.js";import"../core/signal.js";import"../chunks/debugFlags.js";import"../chunks/RenderState.js";import"../chunks/enumeration.js";import"../views/3d/environment/CloudyWeather.js";import"../views/3d/environment/FoggyWeather.js";import"../views/3d/environment/RainyWeather.js";import"../views/3d/environment/SnowyWeather.js";import"../Color.js";import"../chunks/compilerUtils.js";var D;let M=D=class extends o{constructor(){super(...arguments),this.text=""}clone(){return new D({text:this.text})}};t([g({type:String,json:{write:!0}})],M.prototype,"text",void 0),M=D=t([w("esri.webscene.support.Description")],M);const W=M;var q;let F=q=class extends o{constructor(){super(...arguments),this.lighting=new E,this.weather=new I}clone(){return new q({lighting:j(this.lighting),weather:j(this.weather)})}};var G;t([g({types:V,json:{write:!0}})],F.prototype,"lighting",void 0),t([g({types:P,json:{write:!0}})],F.prototype,"weather",void 0),F=q=t([w("esri.webscene.Environment")],F);let O=G=class extends o{constructor(){super(...arguments),this.opacity=null}clone(){return new G({opacity:this.opacity})}cloneAndApplyTo(t){return null==this.opacity||((t=t?.clone()??new R).opacity=this.opacity),t}static fromGround(t){return new G({opacity:t.opacity})}};t([g({type:Number,json:{type:b,read:{reader:A,source:"transparency"},write:{writer:(t,e)=>{e.transparency=B(t)},target:"transparency"}}})],O.prototype,"opacity",void 0),O=G=t([w("esri.webscene.support.SlideGround")],O);const H=O;var N;let Q=N=class extends o{constructor(t){super(t),this.id="",this.sublayerIds=null}clone(){return new N({id:this.id,sublayerIds:j(this.sublayerIds)})}};var z;t([g({type:String,json:{write:!0}})],Q.prototype,"id",void 0),t([g({type:[b],json:{read:{source:"subLayerIds"},write:{target:"subLayerIds"}}})],Q.prototype,"sublayerIds",void 0),Q=N=t([w("esri.webscene.support.SlideVisibleLayer")],Q);let J=z=class extends o{constructor(){super(...arguments),this.text=""}clone(){return new z({text:this.text})}};t([g({type:String,json:{write:{isRequired:!0}}})],J.prototype,"text",void 0),J=z=t([w("esri.webscene.support.Title")],J);const K=J;let X=0;const Y=s.ofType(Q);let Z=class extends o{constructor(t){super(t),this.id=Date.now().toString(16)+"-slide-"+X++,this.title=new K,this.description=new W,this.hidden=!1,this.thumbnail=new S,this.viewpoint=null,this.basemap=null,this.ground=null,this.environment=new F,this.visibleLayers=new Y}destroy(){this.visibleLayers.removeAll(),this.basemap=null,this.thumbnail=p(this.thumbnail),this.description=null,this.title=null,this.thumbnail=null}castTitle(t){return"string"==typeof t?new K({text:t}):f(K,t)}castDescription(t){return"string"==typeof t?new W({text:t}):f(W,t)}castThumbnail(t){return"string"==typeof t?new S({url:t}):f(S,t)}castBasemap(t){return C(t)}set visibleLayers(t){this._set("visibleLayers",n(t,this._get("visibleLayers"),Y))}castVisibleLayers(t){return t&&"function"==typeof t.map?t.map((t=>{if("string"==typeof t)return{id:t};if(t instanceof L){const e=tt(t);return{id:t.id,sublayerIds:e}}return t.id?{id:t.id,sublayerIds:"sublayerIds"in t?t.sublayerIds:void 0}:(a.getLogger(this).warn('Invalid visible layer, expected { id }, Layer or "id"'),t)})):null}clone(){return new(0,this.constructor)({id:this.id,title:this.title.clone(),thumbnail:this.thumbnail.clone(),description:this.description&&this.description.clone()||null,viewpoint:this.viewpoint&&this.viewpoint.clone()||null,basemap:this.basemap?.clone()||null,ground:this.ground?.clone()||null,visibleLayers:this.visibleLayers.clone(),environment:this.environment&&this.environment.clone()||null,hidden:this.hidden})}async _updateVisibleLayersFrom(t){const e=[];await Promise.allSettled(this._getLayers(t.map).map((i=>t.whenLayerView(i).then((t=>{if(t.visible){const r=tt(i);e.push(new Q({id:t.layer.id,sublayerIds:r}))}})))).toArray()),this.visibleLayers.removeAll(),this.visibleLayers.addMany(e)}updateFrom(t,e){const i={format:"png",quality:80,width:120,height:75,disableDecorations:!0,...e?.screenshot};return t.when((()=>(this.viewpoint=t.viewpoint.clone(),this.environment.lighting="virtual"===t.environment.lighting.type?x.prototype.clone.apply(t.environment.lighting):E.prototype.clone.apply(t.environment.lighting),this.environment.weather=t.environment.weather.clone(),this.basemap=t.map.basemap&&t.map.basemap.clone()||null,this.ground=t.map.ground?H.fromGround(t.map.ground):null,this._updateVisibleLayersFrom(t)))).then((()=>t.takeScreenshot(i))).then((t=>(this.thumbnail=new S({url:t.dataUrl}),this)))}async applyTo(t,e){null!=this._applyToController&&this._applyToController.abort();let i=new AbortController;this._applyToController=i;const s=c(e,(()=>i?.abort())),n=()=>{this._applyToController===i&&(this._applyToController=null),i=null,s?.remove()};try{await d((()=>t.ready),i.signal)}catch(t){throw n(),t}if(i.signal.aborted)throw n(),h();const o=t.resourceController.scheduler.registerTask(U.SLIDE);let a=!1;const l={animate:!0,...e,signal:this._applyToController.signal},p=await r(t.addUpdatingPromise((async()=>{await Promise.all([o.schedule((async()=>a=await this._setViewpointOfInterest(t,l))),o.schedule((()=>this._applyBasemap(t,l)),l.signal)]),await this._loadLayersWithSublayerVisibility(t),await Promise.all([o.schedule((()=>this._applyLayerVisibility(t)),l.signal),o.schedule((()=>this._applyGround(t)),l.signal),o.schedule((()=>this._applyViewpoint(t,l)),l.signal)]),await o.schedule((()=>t.environment.weather=this.environment.weather.clone()))})()));if(a&&(t.contentCamera=null),o.remove(),n(),!1===p.ok)throw p.error;return this}async _applyBasemap(t,e){if(this.basemap){try{await this.basemap.load(e)}catch(t){if(u(t))throw t}t.map.basemap=_(this.basemap,t.map.basemap)}}_applyGround(t){this.ground&&(t.map.ground=this.ground.cloneAndApplyTo(t.map.ground))}_getLayers(t){const e=new s;return this._collectLayers(t,e),this._collectLayers(t.ground,e),e}_collectLayers(t,e){t.layers.forEach((t=>{t.persistenceEnabled&&(e.add(t),"layers"in t&&this._collectLayers(t,e))}))}async _loadLayersWithSublayerVisibility(t){this.visibleLayers&&await Promise.allSettled(this._getLayers(t.map).items.map((t=>{const e=this.visibleLayers.find((e=>e.id===t.id))?.sublayerIds;return e?t.load():null})))}_applyLayerVisibility(t){this.visibleLayers&&this._getLayers(t.map).forEach((t=>{const e=this.visibleLayers.find((e=>e.id===t.id));t.visible=null!=e;const i=e?.sublayerIds,r=$(t);i&&r&&r.forEach((t=>t.visible=i.includes(t.id)))}))}async _setViewpointOfInterest(t,e){if(t.state.fixedContentCamera||!this.viewpoint||e?.ignoreViewpoint||!e?.useDestinationCamera)return!1;const{toCameraAsync:i}=await import("../chunks/viewpointUtils.js"),r=await i(t,this.viewpoint);return t.contentCamera=r,null!=r}async _applyViewpoint(t,e){if(this._applyCachedCameraTrackingEnabled(t),this.viewpoint&&!e.ignoreViewpoint){null!=this.viewpoint.camera&&(this.viewpoint.camera.fov=t.camera.fov);const i=this.environment.lighting;if(e.animate&&"sun"===i.type&&i.date)return this._animateToLighting(t,e);e.animate&&(t.environment.applyLighting(i.clone()),await t.goTo(this.viewpoint,e)),t.viewpoint=this.viewpoint}t.environment.applyLighting(this.environment.lighting.clone())}async _animateToLighting(t,e){let i=null;return"virtual"!==t.environment.lighting.type&&"virtual"!==this.environment.lighting.type&&("global"===t.viewingMode&&(i=this._animateLightingWithCamera(t,t.environment.lighting,this.environment.lighting)),t.environment.cachedCameraTrackingEnabled=t.environment.lighting.cameraTrackingEnabled,t.environment.lighting.cameraTrackingEnabled=!1),t.environment.lighting.directShadowsEnabled=this.environment.lighting.directShadowsEnabled,"virtual"===this.environment.lighting.type||"virtual"===t.environment.lighting.type?(t.environment.applyLighting(this.environment.lighting.clone()),"virtual"!==t.environment.lighting.type&&(t.environment.cachedCameraTrackingEnabled=t.environment.lighting.cameraTrackingEnabled,t.environment.lighting.cameraTrackingEnabled=!1)):null!=this.environment.lighting.displayUTCOffset&&(t.environment.lighting.displayUTCOffset=this.environment.lighting.displayUTCOffset),t.goTo(this.viewpoint,e).then((()=>{this._applyCachedCameraTrackingEnabled(t),t.environment.applyLighting(this.environment.lighting.clone())})).catch((e=>{throw null==t.animation&&this._applyCachedCameraTrackingEnabled(t),e})).finally((()=>{m(i)}))}_applyCachedCameraTrackingEnabled(t){null!=t.environment.cachedCameraTrackingEnabled&&(t.environment.lighting.cameraTrackingEnabled=t.environment.cachedCameraTrackingEnabled,t.environment.cachedCameraTrackingEnabled=null)}_getTime(t){return[t.getTime(),3600*t.getUTCHours()+60*t.getUTCMinutes()+t.getUTCSeconds()]}_setTime(t,e,i){return t.setTime(e),t.setUTCHours(i/3600),t.setUTCMinutes(i%3600/60),t.setUTCSeconds(i%3600%60),t}_animateLightingWithCamera(t,e,i){const r=new Date(e.date.toString()),[s,n]=this._getTime(r),[o,a]=this._getTime(i.date),p=function(t,e){let i=e-t;return i>it&&(i-=et),i<-it&&(i+=et),i}(n,a),m=t.renderCoordsHelper,c=T();m.toRenderCoords(t.camera.position,c);const h=T(),u=T();null!=this.viewpoint.camera&&m.toRenderCoords(this.viewpoint.camera.position,h);const d=new Date;return y((()=>t.camera),(t=>{m.toRenderCoords(t.position,u);const i=k(c,u),r=k(h,u);let a=0;i+r!==0&&(a=i/(i+r));const y=s+(o-s)*a,g=function(t,e){return l(t+e,et)}(n,p*a);e.date=this._setTime(d,y,g)}))}static createFrom(t,e){return(new this).updateFrom(t,e)}};function $(t){if("building-scene"===t.type||"map-image"===t.type)return t.allSublayers.toArray()}function tt(t){const e=$(t);if(e)return e.filter((t=>t.visible)).map((t=>t.id))}t([g({type:String,json:{write:{isRequired:!0}}})],Z.prototype,"id",void 0),t([g({type:K,json:{default:()=>new K({text:""}),write:{isRequired:!0}}})],Z.prototype,"title",void 0),t([v("title")],Z.prototype,"castTitle",null),t([g({type:W,json:{write:{overridePolicy:t=>({enabled:!(!t||!t.text)})}}})],Z.prototype,"description",void 0),t([v("description")],Z.prototype,"castDescription",null),t([g({type:Boolean,nonNullable:!0,json:{write:!0,default:!1}})],Z.prototype,"hidden",void 0),t([g({type:S,json:{default:()=>new S({url:""}),write:{isRequired:!0}}})],Z.prototype,"thumbnail",void 0),t([v("thumbnail")],Z.prototype,"castThumbnail",null),t([g({type:i,nonNullable:!0,json:{write:{isRequired:!0}}})],Z.prototype,"viewpoint",void 0),t([g({type:e,json:{read:{source:"baseMap"},write:{target:"baseMap"}}})],Z.prototype,"basemap",void 0),t([v("basemap")],Z.prototype,"castBasemap",null),t([g({type:H,json:{write:!0}})],Z.prototype,"ground",void 0),t([g({type:Y,json:{write:{isRequired:!0}}})],Z.prototype,"visibleLayers",null),t([v("visibleLayers")],Z.prototype,"castVisibleLayers",null),t([g({type:F,json:{write:!0}})],Z.prototype,"environment",void 0),Z=t([w("esri.webscene.Slide")],Z);const et=86400,it=43200,rt=Z;export{rt as default};
