/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as s}from"../../chunks/tslib.es6.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{subclass as t}from"../../core/accessorSupport/decorators/subclass.js";import i,{g as o}from"./BuildingNumericFilterViewModel.js";import{f as r,g as l}from"../../chunks/filterUtils.js";import"../../chunks/ensureType.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/metadata.js";import"../../core/Error.js";import"../../config.js";import"../../chunks/tracking.js";import"../../core/Accessor.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/ObservableBase.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Collection.js";import"../../core/Evented.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../chunks/collectionUtils.js";import"../../chunks/uuid.js";import"../../chunks/BuildingFilterBlock.js";import"../../core/JSONSupport.js";import"../../chunks/enumeration.js";import"../../chunks/jsonMap.js";import"../../chunks/utils4.js";import"../../symbols/edges/Edges3D.js";import"../../Color.js";import"../../chunks/colorUtils.js";import"../../chunks/mathUtils.js";import"../../chunks/vec3.js";import"../../chunks/vec3f64.js";import"../../chunks/common.js";import"../../chunks/screenUtils.js";import"../../chunks/materialUtils.js";import"../../chunks/opacityUtils.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";let a=class extends i{constructor(){super(...arguments),this._createdPhaseFieldName=null,this._demolishedPhaseFieldName=null,this._parseValueFromFilter=s=>{const e=this._createdPhaseFieldName,t=new RegExp(`${e}\\s*<=\\s*(\\d+)\\s*OR\\s*${e}\\s*IS\\s*NULL`,"gi"),i=this._demolishedPhaseFieldName,o=new RegExp(`${i}\\s*>\\s*(\\d+)\\s*OR\\s*${i}\\s*IS\\s*NULL`,"gi");for(const{filterExpression:e}of s.filterBlocks?.items??[]){const s=e?t.exec(e)??o.exec(e):null;if(s)return parseInt(s[1],10)}return null}}get filterExpressions(){if(!this.enabled)return{solid:null,xRay:null};const s=[],e=this._createdPhaseFieldName;e&&s.push(`(${e} <= ${this.value} OR ${e} IS NULL)`);const t=this._demolishedPhaseFieldName;t&&s.push(`(${t} > ${this.value} OR ${t} IS NULL)`);const i=s.join(" AND ");return{solid:i,xRay:i}}get _lastValue(){const s=this.allowedValues;return s.length>0?s[s.length-1]:0}_setup(){const s=[];this.layers.forEach((e=>{const t=r(e,"createdphase");null!=t&&(this._createdPhaseFieldName=t.fieldName,s.push(t));const i=r(e,"demolishedphase");null!=i&&(this._demolishedPhaseFieldName=i.fieldName,s.push(i))})),this._domainInfo=o(s);const e=this._valueBeforeReady;if(this._set("state","ready"),this._valueBeforeReady=null,this.allowedValues.length>0){const s=e??l(this.layers,this._parseValueFromFilter);this.select(s??this._lastValue)}else this.clear()}};s([e({readOnly:!0})],a.prototype,"filterExpressions",null),s([e()],a.prototype,"_createdPhaseFieldName",void 0),s([e()],a.prototype,"_demolishedPhaseFieldName",void 0),s([e({readOnly:!0})],a.prototype,"_lastValue",null),a=s([t("esri.widgets.BuildingExplorer.BuildingPhase")],a);const n=a;export{n as default};
