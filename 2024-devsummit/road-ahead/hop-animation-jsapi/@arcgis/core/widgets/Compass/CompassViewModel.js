/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import o from"../../core/Accessor.js";import{watch as s,initial as r}from"../../core/reactiveUtils.js";import{property as e}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{c as a}from"../../chunks/utils18.js";import{GoToMixin as n}from"../support/GoTo.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../config.js";import"../../chunks/asyncUtils.js";import"../../core/Collection.js";import"../../core/Evented.js";import"../../chunks/ensureType.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";let p=class extends(n(o)){constructor(t){super(t),this.orientation={x:0,y:0,z:0},this.view=null,this._updateForCamera=this._updateForCamera.bind(this),this._updateForRotation=this._updateForRotation.bind(this),this._updateRotationWatcher=this._updateRotationWatcher.bind(this)}initialize(){this.addHandles(s((()=>this.view),this._updateRotationWatcher,r))}destroy(){this.view=null}get canShowNorth(){return a(this.view)}get state(){return!this.view?.ready||"2d"===this.view.type&&!this.view.constraints.rotationEnabled?"disabled":this.canShowNorth?"compass":"rotation"}reset(){if(!this.view?.ready)return;const t={};"2d"===this.view?.type?t.rotation=0:t.heading=0,this.callGoTo({target:t})}_updateForRotation(t){null!=t&&(this.orientation={z:t})}_updateForCamera(t){if(!t)return;const o=-t.heading;this.orientation={x:0,y:0,z:o}}_updateRotationWatcher(t){this.removeAllHandles(),t&&this.addHandles("2d"===t.type?s((()=>t?.rotation),this._updateForRotation,r):s((()=>t?.camera),this._updateForCamera,r))}};t([e({readOnly:!0})],p.prototype,"canShowNorth",null),t([e()],p.prototype,"orientation",void 0),t([e({readOnly:!0})],p.prototype,"state",null),t([e()],p.prototype,"view",void 0),p=t([i("esri.widgets.CompassViewModel")],p);const c=p;export{c as default};
