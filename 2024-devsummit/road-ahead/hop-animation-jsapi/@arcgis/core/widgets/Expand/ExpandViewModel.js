/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import t from"../../core/Accessor.js";import{on as s,when as i,pausable as o}from"../../core/reactiveUtils.js";import{property as r}from"../../core/accessorSupport/decorators/property.js";import"../../core/lang.js";import"../../chunks/Logger.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import"../../core/Handles.js";import"../../chunks/maybe.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../core/promiseUtils.js";import"../../core/Error.js";import"../../config.js";import"../../chunks/asyncUtils.js";import"../../core/Collection.js";import"../../core/Evented.js";import"../../chunks/ensureType.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";let a=class extends t{constructor(e){super(e),this._viewpointHandle=null,this.group=null}initialize(){this.addHandles(s((()=>this.view?.ui),"expand",(e=>{const{target:t}=e;t&&t!==this&&t.expanded&&t.group&&t.group===this.group&&this._collapse()})))}destroy(){this._viewpointHandle=null,this.view=null}set autoCollapse(e){this._set("autoCollapse",e),this._watchViewpoint()}set expanded(e){const t=!!e;this._set("expanded",t);const s=this.view?.ui;s&&s.emit("expand",{target:this}),this._viewpointHandleChange(t)}get state(){return this.view?.ready?"ready":"disabled"}set view(e){this._get("view")!==e&&(this._set("view",e),e&&i((()=>e.ready),(()=>{this.view===e&&this._watchViewpoint()}),{once:!0,initial:!0}))}_viewpointHandleChange(e){this._viewpointHandle&&(e?i((()=>this.view?.stationary),(()=>this._viewpointHandle?.resume()),{once:!0,initial:!0}):this._viewpointHandle.pause())}_watchViewpoint(){const e="viewpoint";this.removeHandles(e),this._viewpointHandle=null;const{autoCollapse:t,view:s}=this;if(!s||!t)return;const i=o((()=>"3d"===s.type?s.camera:s.viewpoint),(()=>this._collapse()));this.addHandles(i,e),this._viewpointHandle=i}_collapse(){this.expanded=!1}};e([r({value:!1})],a.prototype,"autoCollapse",null),e([r({value:!1})],a.prototype,"expanded",null),e([r()],a.prototype,"group",void 0),e([r({readOnly:!0})],a.prototype,"state",null),e([r({value:null})],a.prototype,"view",null),a=e([n("esri.widgets.Expand.ExpandViewModel")],a);const p=a;export{p as default};
