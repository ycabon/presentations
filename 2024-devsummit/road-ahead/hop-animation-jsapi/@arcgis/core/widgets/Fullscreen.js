/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../chunks/tslib.es6.js";import{property as s}from"../core/accessorSupport/decorators/property.js";import"../core/lang.js";import"../chunks/Logger.js";import{subclass as t}from"../core/accessorSupport/decorators/subclass.js";import o,{l as r}from"./Widget.js";import i from"./Fullscreen/FullscreenViewModel.js";import{g as l}from"../chunks/globalCss.js";import"../chunks/widgetUtils.js";import{m as c}from"../chunks/messageBundle.js";import{t as n}from"../chunks/jsxFactory.js";import"../chunks/ensureType.js";import"../chunks/utils.js";import"../chunks/handleUtils.js";import"../chunks/metadata.js";import"../core/Error.js";import"../config.js";import"../chunks/tracking.js";import"../intl.js";import"../chunks/date.js";import"../chunks/jsonMap.js";import"../chunks/locale.js";import"../chunks/timeZoneUtils.js";import"../chunks/datetime.js";import"../chunks/messages.js";import"../core/promiseUtils.js";import"../chunks/maybe.js";import"../request.js";import"../kernel.js";import"../core/urlUtils.js";import"../core/JSONSupport.js";import"../core/Accessor.js";import"../core/Handles.js";import"../chunks/ObservableBase.js";import"../core/scheduling.js";import"../chunks/assets.js";import"../chunks/domUtils.js";import"../core/Evented.js";import"../core/Promise.js";import"../core/reactiveUtils.js";import"../chunks/asyncUtils.js";import"../core/Collection.js";import"../chunks/shared.js";import"../chunks/SimpleObservable.js";import"../chunks/uuid.js";import"../core/accessorSupport/decorators/cast.js";import"../chunks/projector.js";import"../chunks/jsxWidgetSupport.js";import"../chunks/legacyIcon.js";let p=class extends o{constructor(e,s){super(e,s),this.icon=null,this.messages=null,this.viewModel=new i,this._toggle=()=>{this.viewModel.toggle()}}loadDependencies(){return r({button:()=>import("../chunks/calcite-button.js")})}get element(){return this.viewModel.element}set element(e){this.viewModel.element=e}get fullscreenTitle(){const e=this.viewModel?.state;return"active"===e?this.messages.exit:"ready"===e?this.messages.enter:""}get label(){return this.messages?.widgetLabel??""}set label(e){this._overrideIfSome("label",e)}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}render(){const{fullscreenTitle:e,icon:s}=this,t=this.viewModel?.state,o="feature-unsupported"===t,r="ready"===t||"disabled"===t||"feature-unsupported"===t?"zoom-out-fixed":"zoom-in-fixed";return n("div",{class:this.classes("esri-fullscreen",l.widget)},!o&&n("calcite-button",{class:l.widgetButton,disabled:"disabled"===t,iconStart:s??r,kind:"neutral",label:e,onclick:this._toggle,title:e}))}};e([s()],p.prototype,"element",null),e([s({readOnly:!0})],p.prototype,"fullscreenTitle",null),e([s()],p.prototype,"icon",void 0),e([s()],p.prototype,"label",null),e([s(),c("esri/widgets/Fullscreen/t9n/Fullscreen")],p.prototype,"messages",void 0),e([s()],p.prototype,"view",null),e([s({type:i})],p.prototype,"viewModel",void 0),p=e([t("esri.widgets.Fullscreen")],p);const m=p;export{m as default};
