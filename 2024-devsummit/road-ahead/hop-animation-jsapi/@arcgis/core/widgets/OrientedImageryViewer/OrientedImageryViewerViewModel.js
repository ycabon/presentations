/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import"../../geometry.js";import t from"../../Graphic.js";import{i as r}from"../../core/lang.js";import i from"../../core/Collection.js";import{d as s}from"../../core/Accessor.js";import o from"../../core/Evented.js";import{JSONSupport as a,isSerializable as n}from"../../core/JSONSupport.js";import{L as l}from"../../chunks/Logger.js";import{c}from"../../chunks/mathUtils.js";import{d as p}from"../../chunks/maybe.js";import{watch as m,when as u,once as h,initial as y,syncAndInitial as d}from"../../core/reactiveUtils.js";import{property as g}from"../../core/accessorSupport/decorators/property.js";import{e as f}from"../../chunks/ensureType.js";import{subclass as j}from"../../core/accessorSupport/decorators/subclass.js";import v from"../../geometry/Extent.js";import{rotate as b,intersect as x,equals as w,nearestCoordinate as M}from"../../geometry/geometryEngine.js";import{geographicToWebMercator as _,webMercatorToGeographic as I}from"../../geometry/support/webMercatorUtils.js";import P from"../../layers/GraphicsLayer.js";import C,{R as k}from"../../layers/ImageryTileLayer.js";import R,{c as S,a as F,b as z,g as O,C as V,o as U,d as D,i as A,v as T}from"../../layers/OrientedImageryLayer.js";import{ClonableMixin as E}from"../../core/Clonable.js";import H from"../../core/Error.js";import{cast as L}from"../../core/accessorSupport/decorators/cast.js";import{e as B}from"../../chunks/enumeration.js";import{r as N}from"../../chunks/reader.js";import{w as G}from"../../chunks/writer.js";import q,{d as W}from"../../geometry/Point.js";import $ from"../../rest/support/Query.js";import{h as J,b as Z}from"../../chunks/unitUtils.js";import{z as Q}from"../../chunks/vec3f64.js";import{v as K,h as X}from"../../chunks/vec3.js";import Y from"../../geometry/Circle.js";import ee from"../../geometry/Mesh.js";import{M as te}from"../../geometry/support/MeshComponent.js";import{c as re}from"../../chunks/mat3f64.js";import{c as ie}from"../../chunks/mat4f64.js";import{A as se}from"../../chunks/mat4.js";import oe from"../../geometry/Polygon.js";import ae from"../../geometry/SpatialReference.js";import{isAbortError as ne}from"../../core/promiseUtils.js";import{k as le}from"../../chunks/mat3.js";import{initializeProjection as ce,project as pe}from"../../geometry/projection.js";import me from"../../layers/ElevationLayer.js";import ue from"../../layers/support/RasterFunction.js";import{convolutionKernel as he}from"../../layers/support/rasterFunctionConstants.js";import ye from"../../layers/support/TileInfo.js";import de from"../../rest/support/AttachmentQuery.js";import ge from"../../views/MapView.js";import{a as fe}from"../../views/2d/ViewState.js";import{V as je}from"../../chunks/InputManager.js";import{p as ve}from"../../chunks/projectionUtils.js";import be from"../../symbols/CIMSymbol.js";import"../../geometry/Geometry.js";import"../../core/Handles.js";import"../../chunks/metadata.js";import"../../chunks/utils.js";import"../../chunks/handleUtils.js";import"../../chunks/ObservableBase.js";import"../../chunks/tracking.js";import"../../core/scheduling.js";import"../../config.js";import"../../chunks/jsonMap.js";import"../../chunks/assets.js";import"../../request.js";import"../../kernel.js";import"../../core/urlUtils.js";import"../../geometry/Multipoint.js";import"../../chunks/zmUtils.js";import"../../geometry/Polyline.js";import"../../chunks/extentUtils.js";import"../../chunks/aaBoundingRect.js";import"../../chunks/common.js";import"../../chunks/typeUtils.js";import"../../geometry/support/jsonUtils.js";import"../../chunks/coordsUtils.js";import"../../chunks/Axis.js";import"../../PopupTemplate.js";import"../../layers/support/fieldUtils.js";import"../../core/sql.js";import"../../intl.js";import"../../chunks/date.js";import"../../chunks/locale.js";import"../../chunks/timeZoneUtils.js";import"../../chunks/datetime.js";import"../../chunks/messages.js";import"../../popup/content.js";import"../../popup/content/AttachmentsContent.js";import"../../popup/content/Content.js";import"../../popup/content/CustomContent.js";import"../../popup/content/ExpressionContent.js";import"../../popup/ElementExpressionInfo.js";import"../../popup/content/FieldsContent.js";import"../../popup/FieldInfo.js";import"../../popup/support/FieldInfoFormat.js";import"../../popup/content/MediaContent.js";import"../../popup/content/BarChartMediaInfo.js";import"../../popup/content/mixins/ChartMediaInfo.js";import"../../popup/content/mixins/MediaInfo.js";import"../../popup/content/support/ChartMediaInfoValue.js";import"../../Color.js";import"../../chunks/colorUtils.js";import"../../popup/content/support/ChartMediaInfoValueSeries.js";import"../../chunks/chartMediaInfoUtils.js";import"../../popup/content/ColumnChartMediaInfo.js";import"../../popup/content/ImageMediaInfo.js";import"../../popup/content/support/ImageMediaInfoValue.js";import"../../popup/content/LineChartMediaInfo.js";import"../../popup/content/PieChartMediaInfo.js";import"../../popup/content/RelationshipContent.js";import"../../popup/support/RelatedRecordsInfoFieldOrder.js";import"../../popup/content/TextContent.js";import"../../popup/ExpressionInfo.js";import"../../popup/LayerOptions.js";import"../../popup/RelatedRecordsInfo.js";import"../../support/actions/ActionBase.js";import"../../core/Identifiable.js";import"../../support/actions/ActionButton.js";import"../../support/actions/ActionToggle.js";import"../../chunks/shared.js";import"../../chunks/SimpleObservable.js";import"../../symbols.js";import"../../symbols/ExtrudeSymbol3DLayer.js";import"../../symbols/Symbol3DLayer.js";import"../../chunks/utils4.js";import"../../symbols/edges/Edges3D.js";import"../../chunks/screenUtils.js";import"../../chunks/materialUtils.js";import"../../chunks/opacityUtils.js";import"../../symbols/edges/SketchEdges3D.js";import"../../symbols/edges/SolidEdges3D.js";import"../../chunks/Symbol3DMaterial.js";import"../../symbols/FillSymbol.js";import"../../symbols/SimpleLineSymbol.js";import"../../symbols/LineSymbol.js";import"../../symbols/Symbol.js";import"../../symbols/LineSymbolMarker.js";import"../../chunks/lineMarkers.js";import"../../symbols/FillSymbol3DLayer.js";import"../../symbols/patterns/LineStylePattern3D.js";import"../../symbols/patterns/StylePattern3D.js";import"../../chunks/utils5.js";import"../../chunks/colors.js";import"../../chunks/symbolLayerUtils3D.js";import"../../chunks/aaBoundingBox.js";import"../../symbols/Font.js";import"../../symbols/IconSymbol3DLayer.js";import"../../chunks/persistableUrlUtils.js";import"../../symbols/LabelSymbol3D.js";import"../../symbols/Symbol3D.js";import"../../chunks/collectionUtils.js";import"../../portal/Portal.js";import"../../core/Loadable.js";import"../../core/Promise.js";import"../../portal/PortalGroup.js";import"../../portal/PortalQueryParams.js";import"../../portal/PortalQueryResult.js";import"../../portal/PortalUser.js";import"../../portal/PortalFolder.js";import"../../symbols/LineSymbol3DLayer.js";import"../../symbols/LineStyleMarker3D.js";import"../../symbols/ObjectSymbol3DLayer.js";import"../../symbols/PathSymbol3DLayer.js";import"../../symbols/TextSymbol3DLayer.js";import"../../symbols/WaterSymbol3DLayer.js";import"../../symbols/support/StyleOrigin.js";import"../../chunks/Thumbnail.js";import"../../chunks/calloutUtils.js";import"../../symbols/callouts/Callout3D.js";import"../../symbols/callouts/LineCallout3D.js";import"../../symbols/support/Symbol3DVerticalOffset.js";import"../../symbols/LineSymbol3D.js";import"../../symbols/MarkerSymbol.js";import"../../symbols/MeshSymbol3D.js";import"../../symbols/PictureFillSymbol.js";import"../../chunks/urlUtils.js";import"../../symbols/PictureMarkerSymbol.js";import"../../symbols/PointSymbol3D.js";import"../../symbols/PolygonSymbol3D.js";import"../../chunks/asyncUtils.js";import"../../symbols/SimpleFillSymbol.js";import"../../symbols/SimpleMarkerSymbol.js";import"../../symbols/TextSymbol.js";import"../../symbols/WebStyleSymbol.js";import"../../chunks/geometryEngineBase.js";import"../../chunks/_commonjsHelpers.js";import"../../chunks/hydrated.js";import"../../chunks/GraphicsCollection.js";import"../../layers/Layer.js";import"../../layers/mixins/BlendLayer.js";import"../../chunks/jsonUtils.js";import"../../chunks/parser.js";import"../../chunks/utils3.js";import"../../layers/mixins/ScaleRangeLayer.js";import"../../chunks/ElevationInfo.js";import"../../chunks/unitConversionUtils.js";import"../../chunks/lengthUtils.js";import"../../chunks/MultiOriginJSONSupport.js";import"../../chunks/ArcGISService.js";import"../../chunks/arcgisLayerUrl.js";import"../../layers/mixins/CustomParametersMixin.js";import"../../layers/mixins/ImageryTileMixin.js";import"../../rasterRenderers.js";import"../../renderers/ClassBreaksRenderer.js";import"../../renderers/Renderer.js";import"../../renderers/support/AuthoringInfo.js";import"../../renderers/support/AuthoringInfoVisualVariable.js";import"../../chunks/colorRamps.js";import"../../rest/support/AlgorithmicColorRamp.js";import"../../rest/support/ColorRamp.js";import"../../rest/support/MultipartColorRamp.js";import"../../renderers/mixins/VisualVariablesMixin.js";import"../../renderers/visualVariables/ColorVariable.js";import"../../renderers/visualVariables/VisualVariable.js";import"../../chunks/LegendOptions.js";import"../../renderers/visualVariables/support/ColorStop.js";import"../../renderers/visualVariables/OpacityVariable.js";import"../../renderers/visualVariables/support/OpacityStop.js";import"../../renderers/visualVariables/RotationVariable.js";import"../../renderers/visualVariables/SizeVariable.js";import"../../renderers/visualVariables/support/SizeStop.js";import"../../chunks/sizeVariableUtils.js";import"../../chunks/visualVariableUtils.js";import"../../chunks/compilerUtils.js";import"../../renderers/support/ClassBreakInfo.js";import"../../chunks/commonProperties.js";import"../../symbols/support/jsonUtils.js";import"../../chunks/layerUtils2.js";import"../../renderers/FlowRenderer.js";import"../../renderers/RasterColormapRenderer.js";import"../../renderers/support/ColormapInfo.js";import"../../chunks/colorRampUtils.js";import"../../chunks/colorUtils2.js";import"../../chunks/vec4.js";import"../../chunks/vec4f64.js";import"../../renderers/RasterShadedReliefRenderer.js";import"../../renderers/RasterStretchRenderer.js";import"../../chunks/stretchRendererUtils.js";import"../../renderers/UniqueValueRenderer.js";import"../../chunks/diffUtils.js";import"../../renderers/support/UniqueValue.js";import"../../renderers/support/UniqueValueClass.js";import"../../renderers/support/UniqueValueGroup.js";import"../../renderers/support/UniqueValueInfo.js";import"../../chunks/styleUtils.js";import"../../renderers/VectorFieldRenderer.js";import"../../geometry/support/normalizeUtils.js";import"../../chunks/normalizeUtilsCommon.js";import"../../chunks/simplify.js";import"../../chunks/utils7.js";import"../../chunks/utils8.js";import"../../chunks/vectorFieldUtils.js";import"../../layers/support/PixelBlock.js";import"../../chunks/pixelRangeUtils.js";import"../../chunks/utils9.js";import"../../symbols/support/cimSymbolUtils.js";import"../../chunks/utils6.js";import"../../chunks/LRUCache.js";import"../../chunks/MemCache.js";import"../../chunks/commonProperties2.js";import"../../TimeExtent.js";import"../../chunks/timeUtils.js";import"../../chunks/layerContainerType.js";import"../../support/timeUtils.js";import"../../layers/support/DimensionalDefinition.js";import"../../layers/support/MultidimensionalSubset.js";import"../../chunks/RasterJobHandler.js";import"../../core/workers/workers.js";import"../../core/workers/Connection.js";import"../../chunks/Queue.js";import"../../core/workers/RemoteClient.js";import"../../layers/support/LOD.js";import"../../layers/support/RasterInfo.js";import"../../layers/support/RasterBandInfo.js";import"../../layers/support/RasterSensorInfo.js";import"../../chunks/multidimensionalUtils.js";import"../../chunks/RawBlockCache.js";import"../../chunks/rasterProjectionHelper.js";import"../../chunks/RasterSymbolizer.js";import"../../chunks/stretchUtils.js";import"../../chunks/QueueProcessor.js";import"../../chunks/ReactiveMap.js";import"../../core/signal.js";import"../../rest/support/FeatureSet.js";import"../../layers/support/Field.js";import"../../chunks/domains.js";import"../../layers/support/CodedValueDomain.js";import"../../layers/support/Domain.js";import"../../layers/support/InheritedDomain.js";import"../../layers/support/RangeDomain.js";import"../../chunks/fieldType.js";import"../../chunks/rasterFunctionHelper.js";import"../../chunks/focalStatUtils.js";import"../../chunks/rasterRendererHelper.js";import"../../chunks/generateRendererUtils.js";import"../../rest/support/ImageHistogramParameters.js";import"../../layers/support/MosaicRule.js";import"../../chunks/dataUtils.js";import"../../chunks/TileKey.js";import"../../chunks/projectBuffer.js";import"../../chunks/geodesicConstants.js";import"../../geometry/support/GeographicTransformation.js";import"../../geometry/support/GeographicTransformationStep.js";import"../../chunks/zscale.js";import"../../layers/mixins/OperationalLayer.js";import"../../layers/mixins/PortalLayer.js";import"../../portal/PortalItem.js";import"../../portal/PortalItemResource.js";import"../../portal/PortalRating.js";import"../../chunks/portalItemUtils.js";import"../../layers/mixins/RefreshableLayer.js";import"../../layers/mixins/TemporalLayer.js";import"../../TimeInterval.js";import"../../layers/support/TimeInfo.js";import"../../chunks/utils21.js";import"../../chunks/xmlUtilities.js";import"../../chunks/TilemapCache.js";import"../../chunks/ByteSizeUnit.js";import"../../chunks/fetchRasterInfo.js";import"../../support/popupUtils.js";import"../../chunks/interfaces3.js";import"../../layers/FeatureLayer.js";import"../../renderers/DictionaryRenderer.js";import"../../chunks/Version.js";import"../../layers/support/FieldsIndex.js";import"../../chunks/UnknownTimeZone.js";import"../../chunks/OverrideHelper.js";import"../../chunks/CIMSymbolHelper.js";import"../../chunks/BidiEngine.js";import"../../chunks/fontUtils.js";import"../../chunks/OptimizedGeometry.js";import"../../chunks/GeometryUtils.js";import"../../chunks/enums2.js";import"../../chunks/definitions.js";import"../../chunks/HighlightOptions.js";import"../../chunks/shapingUtils.js";import"../../chunks/mat2d.js";import"../../chunks/mat2df32.js";import"../../chunks/vec2.js";import"../../chunks/vec2f32.js";import"../../chunks/Rect.js";import"../../chunks/BoundingBox.js";import"../../chunks/defaults.js";import"../../chunks/defaultsJSON.js";import"../../chunks/quantizationUtils.js";import"../../renderers/DotDensityRenderer.js";import"../../renderers/support/AttributeColorInfo.js";import"../../renderers/HeatmapRenderer.js";import"../../renderers/support/HeatmapColorStop.js";import"../../chunks/heatmapUtils.js";import"../../renderers/PieChartRenderer.js";import"../../renderers/SimpleRenderer.js";import"../../renderers/support/jsonUtils.js";import"../../form/FormTemplate.js";import"../../form/ExpressionInfo.js";import"../../form/elements/GroupElement.js";import"../../form/elements/InteractiveElement.js";import"../../form/elements/Element.js";import"../../form/support/elements.js";import"../../form/elements/FieldElement.js";import"../../form/elements/support/inputs.js";import"../../form/elements/inputs/BarcodeScannerInput.js";import"../../form/elements/inputs/TextInput.js";import"../../form/elements/inputs/Input.js";import"../../form/elements/inputs/ComboBoxInput.js";import"../../form/elements/inputs/DatePickerInput.js";import"../../form/elements/inputs/DateTimeOffsetPickerInput.js";import"../../form/elements/inputs/DateTimePickerInput.js";import"../../form/elements/inputs/RadioButtonsInput.js";import"../../form/elements/inputs/SwitchInput.js";import"../../form/elements/inputs/TextAreaInput.js";import"../../form/elements/inputs/TextBoxInput.js";import"../../form/elements/inputs/TimePickerInput.js";import"../../form/elements/RelationshipElement.js";import"../../form/elements/TextElement.js";import"../../chunks/editsZScale.js";import"../../chunks/queryZScale.js";import"../../layers/mixins/APIKeyMixin.js";import"../../chunks/EditBusLayer.js";import"../../chunks/uuid.js";import"../../layers/mixins/FeatureEffectLayer.js";import"../../layers/support/FeatureEffect.js";import"../../layers/support/FeatureFilter.js";import"../../chunks/DataLayerSource.js";import"../../chunks/FullTextSearch.js";import"../../chunks/spatialRelationships.js";import"../../rest/support/StatisticDefinition.js";import"../../layers/mixins/FeatureLayerBase.js";import"../../geometry/HeightModelInfo.js";import"../../chunks/featureLayerUtils.js";import"../../chunks/featureQueryAll.js";import"../../rest/support/RelationshipQuery.js";import"../../layers/support/GeometryFieldsInfo.js";import"../../layers/support/LayerFloorInfo.js";import"../../layers/support/Relationship.js";import"../../chunks/serviceCapabilitiesUtils.js";import"../../chunks/jsonUtils2.js";import"../../layers/support/Subtype.js";import"../../layers/mixins/FeatureReductionLayer.js";import"../../layers/support/AggregateField.js";import"../../layers/support/ExpressionInfo.js";import"../../chunks/FeatureReduction.js";import"../../layers/support/FeatureReductionBinning.js";import"../../layers/support/LabelClass.js";import"../../chunks/labelUtils.js";import"../../layers/support/FeatureReductionCluster.js";import"../../layers/support/FeatureReductionSelection.js";import"../../chunks/clusterUtils.js";import"../../chunks/MD5.js";import"../../layers/mixins/OrderedLayer.js";import"../../chunks/OrderByInfo.js";import"../../layers/mixins/PublishableLayer.js";import"../../layers/support/PublishingInfo.js";import"../../layers/support/FeatureTemplate.js";import"../../layers/support/FeatureType.js";import"../../chunks/fieldProperties.js";import"../../chunks/labelingInfo.js";import"../../chunks/versionUtils.js";import"../../chunks/styleUtils2.js";import"../../rest/support/TopFeaturesQuery.js";import"../../rest/support/TopFilter.js";import"../../chunks/requestPresets.js";import"../../geometry/support/geodesicUtils.js";import"../../chunks/axisAngleDegrees.js";import"../../chunks/quat.js";import"../../chunks/quatf64.js";import"../../geometry/support/MeshGeoreferencedVertexSpace.js";import"../../geometry/support/MeshLocalVertexSpace.js";import"../../geometry/support/MeshTransform.js";import"../../chunks/meshVertexSpaceUtils.js";import"../../chunks/vec32.js";import"../../chunks/triangulationUtils.js";import"../../chunks/earcut.js";import"../../chunks/DoubleArray.js";import"../../chunks/Indices.js";import"../../chunks/deduplicate.js";import"../../chunks/plane.js";import"../../chunks/vec2f64.js";import"../../chunks/mathUtils2.js";import"../../chunks/Attribute.js";import"../../chunks/ContentObject.js";import"../../chunks/Geometry.js";import"../../chunks/basicInterfaces.js";import"../../chunks/Util.js";import"../../chunks/triangle.js";import"../../chunks/lineSegment.js";import"../../chunks/VertexAttribute.js";import"../../chunks/doublePrecisionUtils.js";import"../../chunks/georeference.js";import"../../chunks/spatialReferenceEllipsoidUtils.js";import"../../chunks/computeTranslationToOriginAndRotation.js";import"../../chunks/BufferView.js";import"../../chunks/projectPointToVector.js";import"../../chunks/External.js";import"../../chunks/infoFor3D.js";import"../../geometry/support/MeshMaterial.js";import"../../geometry/support/MeshTexture.js";import"../../chunks/imageUtils.js";import"../../geometry/support/MeshTextureTransform.js";import"../../geometry/support/MeshMaterialMetallicRoughness.js";import"../../layers/mixins/ArcGISCachedService.js";import"../../chunks/TileInfoTilemapCache.js";import"../../chunks/LercDecoder.js";import"../../chunks/WorkerHandle.js";import"../../Viewpoint.js";import"../../Camera.js";import"../../CameraLayout.js";import"../../chunks/Cyclical.js";import"../../chunks/CollectionFlattener.js";import"../../views/BreakpointsOwner.js";import"../../views/DOMContainer.js";import"../../chunks/domUtils.js";import"../../chunks/UpdatingHandles.js";import"../../chunks/projector.js";import"../../chunks/widgetUtils.js";import"../../views/PopupView.js";import"../../chunks/PropertiesPool.js";import"../../views/View.js";import"../../Map.js";import"../../Basemap.js";import"../../chunks/loadAll.js";import"../../support/BasemapStyle.js";import"../../chunks/writeUtils.js";import"../../Ground.js";import"../../chunks/editableLayers.js";import"../../chunks/basemapUtils.js";import"../../chunks/collectionUtils2.js";import"../../support/LayersMixin.js";import"../../support/TablesMixin.js";import"../../views/BasemapView.js";import"../../views/Magnifier.js";import"../../views/Theme.js";import"../../chunks/ViewEvents.js";import"../../chunks/IViewEvents.js";import"../../chunks/interfaces2.js";import"../../chunks/screenUtils2.js";import"../../views/input/Input.js";import"../../views/input/gamepad/GamepadSettings.js";import"../../views/input/gamepad/GamepadInputDevice.js";import"../../views/navigation/Navigation.js";import"../../views/navigation/gamepad/GamepadSettings.js";import"../../chunks/heightModelInfoUtils.js";import"../../chunks/ViewingMode.js";import"../../views/ViewAnimation.js";import"../../chunks/unitBezier.js";import"../../chunks/WebGLRequirements.js";import"../../chunks/capabilities.js";import"../../chunks/TileStrategy.js";import"../../chunks/TileKey2.js";import"../../chunks/Tile.js";import"../../chunks/quickselect.js";import"../../views/ui/DefaultUI.js";import"../../views/ui/UI.js";import"../../chunks/themeUtils.js";import"../Attribution.js";import"../Widget.js";import"../../chunks/jsxWidgetSupport.js";import"../../chunks/legacyIcon.js";import"../Attribution/AttributionViewModel.js";import"../../chunks/globalCss.js";import"../../chunks/accessibleHandler.js";import"../../chunks/messageBundle.js";import"../../chunks/jsxFactory.js";import"../Compass.js";import"../Compass/CompassViewModel.js";import"../../chunks/utils18.js";import"../support/GoTo.js";import"../NavigationToggle.js";import"../NavigationToggle/NavigationToggleViewModel.js";import"../Zoom.js";import"../Zoom/ZoomViewModel.js";import"../../webmap/background/ColorBackground.js";import"../../chunks/mat2df64.js";import"../../chunks/mat3f32.js";const xe="esri-oriented-imagery-viewer",we=`${xe}__carousel`,Me=`${xe}__image-enhancement`,_e=`${xe}__navigation`,Ie="--oi-navigation-tool-rotation-from",Pe="--oi-navigation-tool-rotation-to",Ce={addCoverage:`${xe}__body-additional-coverage`,addExpPoints:`${xe}__body-additional-camera-locations`,body:`${xe}__body`,carousel:`${xe}__carousel`,carouselContainer:`${we}-container`,carouselContent:`${we}-content`,carouselItem:`${we}-item`,carouselItemWrapper:`${we}-item-wrapper`,close:`${xe}__close`,currentCoverage:`${xe}__body-current-coverage`,dock:`${xe}--docked`,feature:`${_e}-feature`,float:`${xe}--floating`,footprint:`${xe}__body-footprint`,imageEnhancementWrapper:`${Me}-wrapper`,imageEnhancementTools:`${Me}-tools`,imageEnhancementToolContainer:`${Me}-tool-container`,messageBox:`${xe}__message-box`,navigationPathOffset0:`${_e}-feature-path-stop-offset-0`,navigationPathOffset1:`${_e}-feature-path-stop-offset-1`,navigationWrapper:`${_e}-wrapper`,navigationZoomed:`${_e}-wrapper--zoomed`,north:`${_e}-pointer-north`,outerSector:`${_e}-sector-outer`,pointer:`${_e}-pointer`,rotateWithAnimation:`${_e}-animate`,selectedFeaturePath:`${_e}-feature-path`,sector:`${_e}-sector`,sectorCross:`${_e}-sector-cross`,sectorDisabled:`${_e}-sector-disabled`,sectorEnabled:`${_e}-sector-enabled`,sectorSeparator:`${_e}-sector-separator`,submenu:`${xe}__submenu`,viewer:`${xe}__viewer`,viewerContainer:`${xe}__viewer-container`},ke={closeButton:!0,coverageMenu:!0,imageEnhancement:!0,imageGallery:!0,mapImageConversionTool:!0,navigationTool:!0,viewerTools:!0,title:!0},Re=120,Se=[21,36,51,60],Fe=3.5,ze=["FAR_WEST","FAR_NORTH","FAR_EAST","FAR_SOUTH","WEST","NORTH","EAST","SOUTH","NEAR_WEST","NEAR_NORTH","NEAR_EAST","NEAR_SOUTH"],Oe=23.937554159486076,Ve=96.06244584051393,Ue={EAST:[Oe,Oe,Ve,Oe,60,Oe],NORTH:[Oe,Ve,Oe,Oe,Oe,60],SOUTH:[Ve,Oe,Ve,Ve,Ve,60],WEST:[Ve,Ve,Oe,Ve,60,Ve]};let De=class{static getCameraOrientation(e){return S(e)}static register(e,t,r){F.set(e,{desc:t,constructor:r})}};De=e([j("esri.layers.orientedImagery.core.cameraOrientationFactory")],De);const Ae=De;let Te=class extends(E(a)){constructor(e){super(e),this.cameraOrientation=null,this.elevation=null,this.elevationSource=null,this.name=null}read(e,t){const r={},{attributes:i,layer:s,geometry:o}=e;for(const e in i)r[e.toLowerCase()]=i[e];super.read({geometry:o,layer:s??{},...r},t)}readCameraHeading(e,t){const{cameraheading:r,camheading:i,layer:s}=t;return r??i??s.cameraHeading}readCameraHeight(e,t){const{cameraheight:r,avghtag:i,layer:s}=t;return r??i??s.cameraHeight}readCamOffset(e,t){const{cameraoffset:r,camoffset:i}=t;return r?.split(";").map(Number)??i?.split(";").map(Number)??null}writeCameraOffset(e,t){e&&(t.cameraOffset=e.join(";"))}readCameraOrientation(e,t){const{cameraorientation:r,camori:i}=t;return r??i}readCameraPitch(e,t){const{camerapitch:r,campitch:i,layer:s}=t;return r??i??s.cameraPitch}readCameraRoll(e,t){const{cameraroll:r,camroll:i,layer:s}=t;return r??i??s.cameraRoll}readDepthImage(e,t){const{depthimage:r,depthimg:i,layer:s}=t,o=r??i??null,{depthImagePathPrefix:a,depthImagePathSuffix:n}=s??{};return z(o,a,n)}readElevationSource(e,t){const{elevationsource:r,layer:i}=t,{demPathSuffix:s,demPathPrefix:o}=i;if(r){const e=this._parseIfJSON(r);return O(e,o,s)}return i.effectiveElevationSource}readFarDistance(e,t){const{fardistance:r,fardist:i,layer:s}=t;return r??i??s.farDistance}readHFOV(e,t){const{horizontalfieldofview:r,hfov:i,layer:s}=t;return r??i??s.horizontalFieldOfView}readImageURL(e,t){const{imagepath:r,layer:i}=t;r||function(e,t){throw new H("exposure-point:missing-attribute-value","a value for imagePath is missing in attribute table",{exposurePoint:t})}(0,this);const{imagePathPrefix:s,imagePathSuffix:o}=i;return z(r,s,o)}readImageRotation(e,t){const{imagerotation:r,imgrot:i,layer:s}=t;return r??i??s.imageRotation}get isHorizontal(){return"horizontal"===this.orientedImageryType}get isInspection(){return"inspection"===this.orientedImageryType}get isNadir(){return"nadir"===this.orientedImageryType}get isOblique(){return"oblique"===this.orientedImageryType}get isSpherical(){return"360"===this.orientedImageryType}get location(){const{cameraOrientation:e,geometry:t,cameraHeight:r,elevation:i}=this;if(e){const{type:t,x:r,y:i,z:s,horizontalWKID:o}=e;return new q({x:r,y:i,z:s,spatialReference:{wkid:t===V.LTP?4326:o}})}if("number"!=typeof r)throw function(e){throw new H("exposure-point:missing-default-value","a value for cameraHeight is missing in default properties")}();return t.z=(i??0)+r,t}readNearDistance(e,t){const{neardistance:r,neardist:i,layer:s}=t;return r??i??s.nearDistance}readOrientationAccuracy(e,t){const{accuracy:r,orientationaccuracy:i}=t;return i?.split(";").map(Number)??r?.split(";").map(Number)??null}writeOrientationAccuracy(e,t){e&&(t.orientationAccuracy=e.join(";"))}readOIType(e,t){const{orientedimagerytype:r,oitype:i,camerapitch:s,campitch:o,layer:a}=t,n=U.read(r??i??a.orientedImageryType),l=s??o??a.cameraPitch;return"oblique"===n?l<10?"nadir":"oblique":n}readVFOV(e,t){const{verticalfieldofview:r,vfov:i,layer:s}=t;return r??i??s.verticalFieldOfView}_parseIfJSON(e){let t=null;try{t=JSON.parse(e)}catch(t){l.getLogger(this).error("couldn't parse the given elevation source JSON",e,t)}return t}};e([g({type:Date,json:{write:{enabled:!0,target:"aquisitionDate"},name:"acquisitiondate"}})],Te.prototype,"acquisitionDate",void 0),e([g({type:Number,json:{write:!0,read:{source:["cameraheading","camheading","layer.cameraHeading"]}}})],Te.prototype,"cameraHeading",void 0),e([N("cameraHeading")],Te.prototype,"readCameraHeading",null),e([g({type:Number,json:{write:!0}})],Te.prototype,"cameraHeight",void 0),e([N("cameraHeight",["cameraheight","avghtag","layer.cameraHeight"])],Te.prototype,"readCameraHeight",null),e([g()],Te.prototype,"cameraOffset",void 0),e([N("cameraOffset",["cameraoffset","camoffset"])],Te.prototype,"readCamOffset",null),e([G("cameraOffset")],Te.prototype,"writeCameraOffset",null),e([g({json:{write:!0},type:D}),L((e=>e?Ae.getCameraOrientation(e):null))],Te.prototype,"cameraOrientation",void 0),e([N("cameraOrientation",["cameraorientation","camori"])],Te.prototype,"readCameraOrientation",null),e([g({type:Number,json:{write:!0}})],Te.prototype,"cameraPitch",void 0),e([N("cameraPitch",["camerapitch","campitch","layer.cameraPitch"])],Te.prototype,"readCameraPitch",null),e([g({type:Number,json:{write:!0}})],Te.prototype,"cameraRoll",void 0),e([N("cameraRoll",["cameraroll","camroll","layer.cameraRoll"])],Te.prototype,"readCameraRoll",null),e([g({json:{write:!0},type:String})],Te.prototype,"depthImage",void 0),e([N("depthImage",["depthimage","depthimg"])],Te.prototype,"readDepthImage",null),e([g({type:Number,json:{write:!0}})],Te.prototype,"elevation",void 0),e([g({json:{write:!0}})],Te.prototype,"elevationSource",void 0),e([N("elevationSource",["elevationsource","layer.effectiveElevationSource"])],Te.prototype,"readElevationSource",null),e([g({json:{name:"exposurestationid",write:{target:"exposureStationId"}},type:String})],Te.prototype,"exposureStationId",void 0),e([g({type:Number,json:{write:!0}})],Te.prototype,"farDistance",void 0),e([N("farDistance",["fardistance","fardist","layer.farDistance"])],Te.prototype,"readFarDistance",null),e([g({type:q,json:{name:"geometry"}})],Te.prototype,"geometry",void 0),e([g({type:Number,json:{write:!0}})],Te.prototype,"horizontalFieldOfView",void 0),e([N("horizontalFieldOfView",["horizontalfieldofview","hfov","layer.horizontalFieldOfView"])],Te.prototype,"readHFOV",null),e([g({json:{write:!0},type:String})],Te.prototype,"imagePath",void 0),e([N("imagePath",["imagepath"])],Te.prototype,"readImageURL",null),e([g({type:Number,json:{write:!0}})],Te.prototype,"imageRotation",void 0),e([N("imageRotation",["imagerotation","imgrot","layer.imageRotation"])],Te.prototype,"readImageRotation",null),e([g()],Te.prototype,"isHorizontal",null),e([g()],Te.prototype,"isInspection",null),e([g()],Te.prototype,"isNadir",null),e([g()],Te.prototype,"isOblique",null),e([g()],Te.prototype,"isSpherical",null),e([g()],Te.prototype,"location",null),e([g({json:{write:!0},type:String})],Te.prototype,"name",void 0),e([g({type:Number,json:{write:!0}})],Te.prototype,"nearDistance",void 0),e([N("nearDistance",["neardistance","neardist","layer.nearDistance"])],Te.prototype,"readNearDistance",null),e([g({json:{write:!0,name:"objectid"},type:Number})],Te.prototype,"objectId",void 0),e([g()],Te.prototype,"orientationAccuracy",void 0),e([N("orientationAccuracy",["accuracy","orientationaccuracy"])],Te.prototype,"readOrientationAccuracy",null),e([G("orientationAccuracy")],Te.prototype,"writeOrientationAccuracy",null),e([B(U)],Te.prototype,"orientedImageryType",void 0),e([N("orientedImageryType",["orientedimagerytype","oitype","layer.orientedImageryType"])],Te.prototype,"readOIType",null),e([g({type:Number,json:{name:"sortorder",write:{target:"sortOrder"}}})],Te.prototype,"sortOrder",void 0),e([g({type:Number,json:{write:!0}})],Te.prototype,"verticalFieldOfView",void 0),e([N("verticalFieldOfView",["verticalfieldofview","vfov","layer.verticalFieldOfView"])],Te.prototype,"readVFOV",null),Te=e([j("esri.layers.orientedImagery.core.ExposurePoint")],Te);const Ee=Te,He={};function Le(e){return t=>{const{features:r,spatialReference:i}=t;return r.forEach((t=>{t.geometry&&(t.geometry.spatialReference=i);const r=Ee.fromJSON({...t.toJSON(),layer:e});r&&(t.attributes=r),t.layer=e,t.spatialReference=i})),t}}function Be(e,t,r,i,s,o,a,n,l){let c=!1;0===t.z&&0===r.z&&0===i.z&&0===s.z&&(t.z=r.z=i.z=s.z=1,e.z=1),t.z=t.z??1,r.z=r.z??1,i.z=i.z??1,s.z=s.z??1,0===o.z&&0===a.z&&0===n.z&&0===l.z&&(c=!0,o.z=a.z=n.z=l.z=1),o.z=o.z??1,a.z=a.z??1,n.z=n.z??1,l.z=l.z??1;const p=Ne(t,r,i,s),m=Ne(o,a,n,l),u=se(ie(),p),h=ie();h[0]=m[0]*u[0]+m[1]*u[4]+m[2]*u[8]+m[3]*u[12],h[1]=m[0]*u[1]+m[1]*u[5]+m[2]*u[9]+m[3]*u[13],h[2]=m[0]*u[2]+m[1]*u[6]+m[2]*u[10]+m[3]*u[14],h[3]=m[0]*u[3]+m[1]*u[7]+m[2]*u[11]+m[3]*u[15],h[4]=m[4]*u[0]+m[5]*u[4]+m[6]*u[8]+m[7]*u[12],h[5]=m[4]*u[1]+m[5]*u[5]+m[6]*u[9]+m[7]*u[13],h[6]=m[4]*u[2]+m[5]*u[6]+m[6]*u[10]+m[7]*u[14],h[7]=m[4]*u[3]+m[5]*u[7]+m[6]*u[11]+m[7]*u[15],h[8]=m[8]*u[0]+m[9]*u[4]+m[10]*u[8]+m[11]*u[12],h[9]=m[8]*u[1]+m[9]*u[5]+m[10]*u[9]+m[11]*u[13],h[10]=m[8]*u[2]+m[9]*u[6]+m[10]*u[10]+m[11]*u[14],h[11]=m[8]*u[3]+m[9]*u[7]+m[10]*u[11]+m[11]*u[15],h[12]=m[12]*u[0]+m[13]*u[4]+m[14]*u[8]+m[15]*u[12],h[13]=m[12]*u[1]+m[13]*u[5]+m[14]*u[9]+m[15]*u[13],h[14]=m[12]*u[2]+m[13]*u[6]+m[14]*u[10]+m[15]*u[14],h[15]=m[12]*u[3]+m[13]*u[7]+m[14]*u[11]+m[15]*u[15];const y=h[0]*e.x+h[1]*e.y+h[2]*e.z+h[3],d=h[4]*e.x+h[5]*e.y+h[6]*e.z+h[7],g=h[8]*e.x+h[9]*e.y+h[10]*e.z+h[11];let f=h[12]*e.x+h[13]*e.y+h[14]*e.z+h[15];return 0===f&&(f=1),{x:y/f,y:d/f,z:c?0:g/f}}function Ne(e,t,r,i){const s=function(e,t){const[r,i,s,o]=e,a=new Array(4);return a[0]=r*t[0]+i*t[1]+s*t[2]+o*t[3],a[1]=r*t[4]+i*t[5]+s*t[6]+o*t[7],a[2]=r*t[8]+i*t[9]+s*t[10]+o*t[11],a[3]=r*t[12]+i*t[13]+s*t[14]+o*t[15],a}([i.x,i.y,i.z,1],se(new Array(16),[e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,1,1,1,1])),o=s[0],a=s[1],n=s[2],l=new Array(16);return l[0]=o*e.x,l[1]=a*t.x,l[2]=n*r.x,l[3]=0,l[4]=o*e.y,l[5]=a*t.y,l[6]=n*r.y,l[7]=0,l[8]=o*e.z,l[9]=a*t.z,l[10]=n*r.z,l[11]=0,l[12]=o,l[13]=a,l[14]=n,l[15]=1,l}function Ge(e,t,r,i){const s=Q();return s[0]=e[0]+t[0]*r,s[1]=e[1]+t[1]*r,s[2]=e[2]+t[2]*(r/i),s}function qe(e,t,r){const i=Q();return i[0]=e[0]*t,i[1]=e[1]*t,i[2]=e[2]*(t/r),i}function We(e,t){const[r,i,s]=e,o=Q();return o[0]=r*t[0]+i*t[3]+s*t[6],o[1]=r*t[1]+i*t[4]+s*t[7],o[2]=r*t[2]+i*t[5]+s*t[8],o}function $e(e,t){const r=Math.PI/180,i=re();if("OPK"===e){const e=Number(t[0])*r,s=Number(t[1])*r,o=Number(t[2])*r;i[0]=Math.cos(s)*Math.cos(o),i[1]=Math.cos(e)*Math.sin(o)+Math.sin(e)*Math.sin(s)*Math.cos(o),i[2]=Math.sin(e)*Math.sin(o)-Math.cos(e)*Math.sin(s)*Math.cos(o),i[3]=-Math.cos(s)*Math.sin(o),i[4]=Math.cos(e)*Math.cos(o)-Math.sin(e)*Math.sin(s)*Math.sin(o),i[5]=Math.sin(e)*Math.cos(o)+Math.cos(e)*Math.sin(s)*Math.sin(o),i[6]=Math.sin(s),i[7]=-Math.sin(e)*Math.cos(s),i[8]=Math.cos(e)*Math.cos(s)}else{const e=Number(t[0])*r,s=Number(t[1])*r,o=Number(t[2])*r;i[0]=Math.cos(e)*Math.cos(o)-Math.sin(e)*Math.cos(s)*Math.sin(o),i[1]=Math.sin(e)*Math.cos(o)*-1-Math.cos(e)*Math.cos(s)*Math.sin(o),i[2]=Math.sin(o)*Math.sin(s)*-1,i[3]=Math.cos(e)*Math.sin(o)+Math.sin(e)*Math.cos(s)*Math.cos(o),i[4]=Math.sin(e)*Math.sin(o)*-1+Math.cos(e)*Math.cos(s)*Math.cos(o),i[5]=Math.cos(o)*Math.sin(s),i[6]=Math.sin(e)*Math.sin(s)*-1,i[7]=Math.cos(e)*Math.sin(s)*-1,i[8]=Math.cos(s)}return i}function Je(e,t){const r=Math.PI/180,i=e.y*r,s=e.x*r,o=e.z||0,a=t[0]*r,n=t[1]*r,l=t[2]/Math.sqrt(1-t[3]*Math.sin(a)**2),c=s-n,p=t[2]/Math.sqrt(1-t[3]*Math.sin(i)**2),m=t[3]*(l*Math.sin(a)-p*Math.sin(i));return{x:(p+o)*Math.cos(i)*Math.sin(c),y:(p+o)*(Math.sin(i)*Math.cos(a)-Math.sin(a)*Math.cos(i)*Math.cos(c))+m*Math.cos(a),z:(p+o)*(Math.sin(i)*Math.sin(a)+Math.cos(a)*Math.cos(i)*Math.cos(c))-l+m*Math.sin(a)}}const Ze=Math.PI/180;function Qe(e,t){return Math.sign(e)!==Math.sign(t)}function Ke(e,t,r){const i=e.attributes,s=i.geometry,o=s.spatialReference??e.spatialReference;s.spatialReference=o instanceof ae?o:ae.fromJSON(o);const a=Ye(s),n=i.nearDistance<0?0:i.nearDistance*a;let l=i.cameraHeight*a/Math.cos(i.cameraPitch*Ze),c=!0;i.cameraPitch+i.verticalFieldOfView/2>=90&&(l=(i.farDistance??20)*a,c=!1);const p=2*Math.tan(i.verticalFieldOfView*Ze/2)*n,m=2*Math.tan(i.horizontalFieldOfView*Ze/2)*n,u=2*Math.tan(i.verticalFieldOfView*Ze/2)*l,h=2*Math.tan(i.horizontalFieldOfView*Ze/2)*l;let y,d;r?(y=r,d=qe(K(Q(),y,[s.x,s.y,i.cameraHeight]),1/l,1/a)):(d=[0,0,-1],d=We(d,t),y=Ge([s.x,s.y,i.cameraHeight],d,l,a),c&&(y[2]=0));const g=Ge([s.x,s.y,i.cameraHeight],d,n,a);let f=[0,1,0];f=We(f,t);let j=[1,0,0];j=We(j,t);let v=[],b=[];n?(b=[{faces:[4,0,3,4,7,3]},{faces:[5,1,2,5,6,2]},{faces:[4,0,1,4,5,1]},{faces:[6,2,3,6,7,3]}],v=v.concat(X(Q(),g,K(Q(),qe(f,p/2,a),qe(j,m/2,a)))),v=v.concat(X(Q(),g,X(Q(),qe(f,p/2,a),qe(j,m/2,a)))),v=v.concat(K(Q(),g,K(Q(),qe(f,p/2,a),qe(j,m/2,a)))),v=v.concat(K(Q(),g,X(Q(),qe(f,p/2,a),qe(j,m/2,a))))):(v=[s.x,s.y,i.cameraHeight],b=[{faces:[0,1,2,0,2,3,0,3,4,0,4,1]}]),v=v.concat(X(Q(),y,K(Q(),qe(f,u/2,a),qe(j,h/2,a)))),v=v.concat(X(Q(),y,X(Q(),qe(f,u/2,a),qe(j,h/2,a)))),v=v.concat(K(Q(),y,K(Q(),qe(f,u/2,a),qe(j,h/2,a)))),v=v.concat(K(Q(),y,X(Q(),qe(f,u/2,a),qe(j,h/2,a))));const x=new te({position:Float64Array.from(v)});return new ee({vertexAttributes:x,components:b,spatialReference:s.spatialReference})}function Xe(e,t,r,i){{const s=Math.sqrt((e[2]-t)**2+(Math.sqrt((e[0]-r.x)**2+(e[1]-r.y)**2)/i)**2)*i,o=qe(K(Q(),[e[0],e[1],e[2]],[r.x,r.y,t]),1/s,1/i),a=t/(t-e[2]),n={x:(1-a)*r.x+a*e[0],y:(1-a)*r.y+a*e[1],z:(1-a)*t+a*e[2]},l=Math.sqrt((n.z-t)**2+(Math.sqrt((n.x-r.x)**2+(n.y-r.y)**2)/i)**2)*i,c=qe(K(Q(),[n.x,n.y,n.z],[r.x,r.y,t]),1/l,1/i);return Qe(o[0],c[0])&&Qe(o[1],c[1])&&Qe(o[2],c[2])||e[2]>=0?[e[0],e[1],0]:[n.x,n.y,n.z]}}function Ye(e){return e&&Z(e?.spatialReference)?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*e.y/J.radius))):1}const et=Math.PI/180;async function tt(e,t,r=!1){if(!e)return[];e=e.map((e=>"esri.geometry.Point"===e.declaredClass?e:q.fromJSON(e)));const{feature:i}=t,{attributes:s}=i;if(isNaN(parseFloat(s.elevation))){const e=await rt([i.geometry],t);i.attributes.elevation=e[0].z}return rt(e,t,r).then((e=>function(e,t){const{attributes:r}=t.feature;return r.isSpherical||360===r.horizontalFieldOfView?{}:r.cameraOrientation?.isAdvanced?function(e,t){const{feature:r}=t,{attributes:i}=r,s=i.cameraOrientation;if(!s)throw new H("groundToImageUtils:missing-camera-orientation-parameters","CameraOrientation Parameters are required to perform advanced transformations");let o=new q(i.location);o.spatialReference.isWGS84&&4!==i.cameraOrientation?.type&&(o=_(o));const a=o.spatialReference.isWebMercator?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*o.y/6378137))):1;let n;if("esri.layers.orientedImagery.core.CameraOrientationOPK"===s.declaredClass){const{omega:e,phi:t,kappa:r}=s;n=$e("OPK",[e,t,r])}else{const{cameraHeading:e,cameraPitch:t,cameraRoll:r}=i;n=$e("HPR",[e,t,r])}const{principalOffsetPoint:l,focalLength:c,radialDistortionCoefficients:p,affineTransformations:m,tangentialDistortionCoefficients:u}=s;return Promise.all(e.map((async r=>{let s;return r.spatialReference.equals(o.spatialReference)?(s=new q(r),h(s)):(await ce(e[0].spatialReference,o.spatialReference,null,t.options),s=pe(r,o.spatialReference),s?h(s):null);function h(e){if(e.spatialReference.isWGS84)if(4===i.cameraOrientation?.type){const t=i.cameraOrientation;e=new q(Je(e,[t.latitude,t.longitude,t.ellipsoidRadius,t.squaredEccentricity]))}else e=new q(_(e));const t=(e.z??0)-(o.z??0),r=(e.x-o.x)/a,s=(e.y-o.y)/a,h=(n[0]*r+n[1]*s+n[2]*t)/(n[6]*r+n[7]*s+n[8]*t),y=(n[3]*r+n[4]*s+n[5]*t)/(n[6]*r+n[7]*s+n[8]*t),d=h**2+y**2;let g=0,f=0,j=0,v=0,b=0,x=0,w=0;p&&(g=p[0]??0,f=p[1]??0,j=p[2]??0),u&&(v=u[0],b=u[1]),l&&(x=l[0]??0,w=l[1]??0);const M=1+(g||0)*d+(f||0)*d*d+(j||0)*d*d*d;let I=h*M+(v||0)*(d+2*h**2)+2*(b||0)*h*y,P=y*M+(b||0)*(d+2*y**2)+2*(v||0)*h*y;return I=-(c??0)*I+x,P=-(c??0)*P+w,{x:Number(m[0])+Number(m[1])*I+Number(m[2])*P,y:Number(m[3])+Number(m[4])*I+Number(m[5])*P}}})))}(e,t):Promise.resolve(function(e,t){const{feature:r,imageProperties:i}=t,{width:s,height:o}=i,{attributes:a}=r,n=$e("HPR",[a.cameraHeading,a.cameraPitch,a.cameraRoll]),l=Math.sin(a.imageRotation??0*et),c=Math.cos(a.imageRotation??0*et),p=s??1,m=o??1,u=[Math.abs(c*p+l*m),Math.abs(c*m-l*p)],h={horizontal:1/(2*Math.tan(a.horizontalFieldOfView*et/2)),vertical:1/(2*Math.tan(a.verticalFieldOfView*et/2))},y=[-h.horizontal,0,.5,0,h.vertical,.5,0,0,1];let d=new q(a.geometry);d.spatialReference.isWGS84&&4!==a.cameraOrientation?.type&&(d=_(d));const g=d.spatialReference.isWebMercator?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*d.y/6378137))):1,f=le(new Array(9),n,y);return e.map((e=>{let t=new q(e);if(t.spatialReference.isWGS84)if(4===a.cameraOrientation?.type){const e=a.cameraOrientation;t=new q(Je(t,[e.latitude,e.longitude,e.ellipsoidRadius,e.squaredEccentricity]))}else t=new q(_(t));const r=(t.z??0)-(d.z??0),i=(t.x-d.x)/g,s=(t.y-d.y)/g,o=(f[0]*i+f[1]*s+f[2]*r)/(f[6]*i+f[7]*s+f[8]*r),n=(f[3]*i+f[4]*s+f[5]*r)/(f[6]*i+f[7]*s+f[8]*r),h=o*u[0],y=n*u[1];return{x:c*(h-u[0]/2)+l*(y-u[1]/2)+p/2,y:-l*(h-u[0]/2)+c*(y-u[1]/2)+m/2}}))}(e,t))}(e,t)))}async function rt(e,t,r=!1){if(r)return e;const{feature:{attributes:{cameraOrientation:i,elevationSource:s,cameraHeight:o,location:a}}}=t;return s&&(A(s)||s.url?.length)?async function(e,t){const{feature:r,options:i,currentCoveragePolygon:s}=t,o=r.attributes.elevationSource;if(!o)return e;if(A(o)){const{constantElevation:t}=o;return"number"!=typeof t?e:st(e,t)}const{url:a}=o;if(!a)return e;const{elevationSample:n}=r;if(!n){const t=(c=s,"esri.Graphic"===c?.declaredClass?s.geometry?.extent:s.extent);if(!t)return e;const n=t.clone();n.xmin/=2,n.xmax*=2,n.ymin/=2,n.ymax*=2;const{error:p,isSupported:m}=await T(a);if(!m){l.getLogger(o).warn(p);const{location:t,cameraHeight:i,cameraOrientation:s}=r.attributes;return st(e,s&&"number"==typeof t.z?t.z-i:0)}const u=new me(a);let h=e;try{await u.load(),r.elevationSample=await u.createElevationSampler(n,i),h=e.map(it(r.elevationSample))}catch(e){ne(e)||l.getLogger("esri.layers.orientedImagery.transformations.groundToImageUtils").warn(`#updateElevation() failed to update elevation using the provided elevation source URL: ${a}. Please provide a valid elevation source url.`,e)}finally{u.destroy()}return h}var c;return await ce(e[0].spatialReference,n.spatialReference,null,t.options),e.map(it(n))}(e,t):st(e,i&&"number"==typeof a.z?a.z-o:0)}function it(e){return t=>{t.z=1;const r=e.queryElevation(pe(t,e.spatialReference));return r?.z&&(t.z=r.z),t}}function st(e,t){return e.map((e=>(e.z=t,e)))}const ot=Math.PI/180;function at(e,t){if(!e)return Promise.resolve([]);const r=t.feature;let i=r.attributes;return i instanceof Ee||(i=Ee.fromJSON(r),i&&(r.attributes=i)),function(e,t){const{attributes:r}=t.feature;return r.isSpherical||360===r.horizontalFieldOfView?[]:async function(e,t){const{feature:r,imageProperties:i}=t,{attributes:s}=r;let o=new q(s.location);if(4===s.cameraOrientation?.type){const e=s.cameraOrientation;o=new q(function(e,t){const r=Math.PI/180,i=Number(e.x),s=Number(e.y),o=Number(e.z),a=t[0]*r,n=t[1]*r,l=t[2]/Math.sqrt(1-t[3]*Math.sin(a)**2),c=i/l,p=s/l,m=o/l,u=Math.cos(a)-Math.sin(a)*p+Math.cos(a)*m,h=Math.sin(a)+Math.cos(a)*p+Math.sin(a)*m,y=Math.sqrt(u**2+c**2),d=t[3]*l*Math.sin(a),g=a,f=Math.atan(h/y-(d-t[3]*(t[2]/Math.sqrt(1-t[3]*Math.sin(g)**2))*Math.sin(g))/(l*y)),j=Math.atan(h/y-(d-t[3]*(t[2]/Math.sqrt(1-t[3]*Math.sin(f)**2))*Math.sin(f))/(l*y)),v=Math.atan(h/y-(d-t[3]*(t[2]/Math.sqrt(1-t[3]*Math.sin(j)**2))*Math.sin(j))/(l*y)),b=Math.atan(h/y-(d-t[3]*(t[2]/Math.sqrt(1-t[3]*Math.sin(v)**2))*Math.sin(v))/(l*y)),x=Math.atan(i/(l*u))+n;return{x:x/r,y:b/r,z:i/(Math.cos(b)*Math.sin(x-n))-t[2]/Math.sqrt(1-t[3]*Math.sin(b)**2),spatialReference:{wkid:4326}}}(o,[e.latitude,e.longitude,e.ellipsoidRadius,e.squaredEccentricity]))}let a=!1;o.spatialReference.isWGS84&&(a=!0,o=_(o));const n=o.spatialReference.isWebMercator?1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*o.y/6378137))):1,l=function(e,t,r){const{feature:i}=e,{attributes:s}=i,o=2*Math.tan(s.verticalFieldOfView*ot/2)*s.farDistance*r,a=2*Math.tan(s.horizontalFieldOfView*ot/2)*s.farDistance*r,n=$e("HPR",[s.cameraHeading,s.cameraPitch,s.cameraRoll??0]),l=We([0,0,-1],n),c=Ge([t.x,t.y,t.z],l,s.farDistance*r,r),p=We([0,1,0],n),m=We([1,0,0],n),u=qe(p,o/2,r),h=qe(m,a/2,r),y=K(Q(),u,h),d=X(Q(),u,h);return[X(Q(),c,y),X(Q(),c,d),K(Q(),c,y),K(Q(),c,d)].map((e=>{const[r,i,s]=e;return new q({x:r,y:i,z:s,spatialReference:t.spatialReference})}))}(t,o,n),c=4===s.cameraOrientation?.type?l.map((e=>I(new q(e)))):l,p=await tt(c,t,!0),m=await Promise.all(p);m.forEach((e=>{e.z=1,e.x=e.x*i.pixelSize.x+i.extent.xmin,e.y=i.extent.ymax-e.y*i.pixelSize.y}));const u=function(e,t,r){const i=Math.sin(r*Math.PI/180),s=Math.cos(r*Math.PI/180),o=[[e,0],[e,t],[0,t]];o.forEach(((e,t)=>{o[t]=[s*e[0]-i*e[1],i*e[0]+s*e[1]]}));const a=Math.min(0,o[0][0],o[1][0],o[2][0]),n=Math.max(0,o[0][0],o[1][0],o[2][0]),l=Math.min(0,o[0][1],o[1][1],o[2][1]),c=Math.max(0,o[0][1],o[1][1],o[2][1]);return{hfov:Math.abs(n-a),vfov:Math.abs(c-l)}}(s.horizontalFieldOfView,s.verticalFieldOfView,s.cameraRoll??0).vfov;return Promise.all(e.map((async e=>{e.z=1;let r,l=function(e,t,r){const[i,s,o,a]=t,[n,l,c,p]=r;return Be(e,i,s,o,a,n,l,c,p)}(e,m,c);if(r=4===s.cameraOrientation?.type?(await tt([I(new q({...l,spatialReference:o.spatialReference}))],t,!0))[0]:(await tt([new q({...l,spatialReference:o.spatialReference})],t,!0))[0],!r)return null;r.x=r.x*i.pixelSize.x+i.extent.xmin,r.y=i.extent.ymax-r.y*i.pixelSize.y;let p,h=Math.abs(e.x-r.x)+Math.abs(e.y-r.y);if(h>1){const i=await async function(e,t,r,i,s,o,a){const{feature:{attributes:n},imageProperties:l}=a;let c=Math.abs(e.x-t.x)+Math.abs(e.y-t.y);if(c>1)for(let t=0;t<9;t++)if(c>1){let p,m={x:e.x-c,y:e.y-c,z:1},u={x:e.x+c,y:e.y-c,z:1},h={x:e.x+c,y:e.y+c,z:1},y={x:e.x-c,y:e.y+c,z:1};m=Be(m,r[0],r[1],r[2],r[3],{x:i[0].x,y:i[0].y,z:i[0].z},{x:i[1].x,y:i[1].y,z:i[1].z},{x:i[2].x,y:i[2].y,z:i[2].z},{x:i[3].x,y:i[3].y,z:i[3].z}),u=Be(u,r[0],r[1],r[2],r[3],{x:i[0].x,y:i[0].y,z:i[0].z},{x:i[1].x,y:i[1].y,z:i[1].z},{x:i[2].x,y:i[2].y,z:i[2].z},{x:i[3].x,y:i[3].y,z:i[3].z}),h=Be(h,r[0],r[1],r[2],r[3],{x:i[0].x,y:i[0].y,z:i[0].z},{x:i[1].x,y:i[1].y,z:i[1].z},{x:i[2].x,y:i[2].y,z:i[2].z},{x:i[3].x,y:i[3].y,z:i[3].z}),y=Be(y,r[0],r[1],r[2],r[3],{x:i[0].x,y:i[0].y,z:i[0].z},{x:i[1].x,y:i[1].y,z:i[1].z},{x:i[2].x,y:i[2].y,z:i[2].z},{x:i[3].x,y:i[3].y,z:i[3].z}),m.spatialReference=s.spatialReference,u.spatialReference=s.spatialReference,h.spatialReference=s.spatialReference,y.spatialReference=s.spatialReference,p=4===n.cameraOrientation?.type?await tt([I(new q(m)),I(new q(u)),I(new q(h)),I(new q(y))],a,!0):await tt([new q(m),new q(u),new q(h),new q(y)],a,!0);const d=await Promise.all(p);d.forEach((e=>{e.z=0,e.x=e.x*l.pixelSize.x+l.extent.xmin,e.y=l.extent.ymax-e.y*l.pixelSize.y}));const g=Be(e,d[0],d[1],d[2],d[3],m,u,h,y);let f;if(f=4===n.cameraOrientation?.type?(await tt([I(new q({x:g.x,y:g.y,z:g.z,spatialReference:s.spatialReference}))],a,!0))[0]:(await tt([new q({x:g.x,y:g.y,z:g.z,spatialReference:s.spatialReference})],a,!0))[0],c=Math.abs(e.x-f.x)+Math.abs(e.y-f.y),c<=1||8===t){o=g;break}}return{error:c,point:o}}(e,r,m,c,o,l,t);l=i.point,h=i.error}if(s.elevationSource){await ce(o.spatialReference,t.currentCoveragePolygon.geometry?.spatialReference,null,t.options);let r=await function(e){const{feature:t}=e,r=function(e){if(!e.currentCoveragePolygon.geometry)return null;const{xmin:t,xmax:r,ymin:i,ymax:s,spatialReference:o}=e.currentCoveragePolygon.geometry.extent.toJSON();return[new q({x:t,y:s,spatialReference:o}),new q({x:r,y:s,spatialReference:o}),new q({x:r,y:i,spatialReference:o}),new q({x:t,y:i,spatialReference:o})]}(e);if(!r)return Promise.resolve(null);const i=t.attributes.location.spatialReference.isWGS84?new ae({wkid:102100}):t.attributes.location.spatialReference;return rt(r,e,!1).then((e=>{const t=e.map((e=>pe(e,i)));return new oe({hasZ:!0,rings:[t.map((e=>[e.x,e.y,e.z]))],spatialReference:i})}))}(t);if(r?.extent){let c=lt(r,o,l);if(!c)return null;const m={x:c.x,y:c.y,z:c.z,hasZ:!0,spatialReference:o.spatialReference},h=new q(m);if(c){const m=rt([pe(h,t.currentCoveragePolygon.geometry?.spatialReference)],t,!1);let y;y=m instanceof Promise?await m:m,h.z=c.z=y[0].z;const d=await tt([4===s.cameraOrientation?.type?I(h):h],t);if(!d[0])return null;d[0].x=d[0].x*i.pixelSize.x+i.extent.xmin,d[0].y=i.extent.ymax-d[0].y*i.pixelSize.y;let g=Math.abs(e.x-d[0].x)+Math.abs(e.y-d[0].y);if(p=c.z,g>1){let m=0;const h=async y=>{if(g>1){const d=y.width/10,f=y.height/10;if(!y||d<1||f<1)return l=nt(l,o,n,p,s.cameraPitch,u,a),l;const j=[{x:c.x-d,y:c.y-f,spatialReference:o.spatialReference},{x:c.x+d,y:c.y-f,spatialReference:o.spatialReference},{x:c.x+d,y:c.y+f,spatialReference:o.spatialReference},{x:c.x-d,y:c.y+f,spatialReference:o.spatialReference}].map((e=>new q(e))),v=await rt(j,t,!1);if(r=new oe({rings:[[[v[0].x,v[0].y,v[0].z],[v[1].x,v[1].y,v[1].z],[v[2].x,v[2].y,v[2].z],[v[3].x,v[3].y,v[3].z],[v[0].x,v[0].y,v[0].z]]],spatialReference:o.spatialReference}),c=lt(r,o,l),c){const y=pe(new q({x:c.x,y:c.y,z:c.z,spatialReference:o.spatialReference}),t.currentCoveragePolygon.geometry?.spatialReference),d=await tt([4===s.cameraOrientation?.type?I(y):y],t);if(d[0])return d[0].x=d[0].x*i.pixelSize.x+i.extent.xmin,d[0].y=i.extent.ymax-d[0].y*i.pixelSize.y,g=Math.abs(e.x-d[0].x)+Math.abs(e.y-d[0].y),p=c.z,g<=1||8===m?nt(l,o,n,p,s.cameraPitch,u,a):(m+=1,h(r.extent))}return nt(l,o,n,o.z-s.cameraHeight,s.cameraPitch,u,a)}return nt(l,o,n,o.z-s.cameraHeight,s.cameraPitch,u,a)};return h(r.extent)}return nt(l,o,n,o.z-s.cameraHeight,s.cameraPitch,u,a)}return nt(l,o,n,o.z-s.cameraHeight,s.cameraPitch,u,a)}}return nt(l,o,n,o.z-s.cameraHeight,s.cameraPitch,u,a)})))}(e,t)}(e,t)}function nt(e,t,r,i,s,o,a){const n=Math.sqrt((e.z-t.z)**2+(Math.sqrt((e.x-t.x)**2+(e.y-t.y)**2)/r)**2)*r,l=qe(K(Q(),[e.x,e.y,e.z],[t.x,t.y,t.z]),1/n,1/r);if(e.z<i||s+o/2<90){const s=Math.abs((t.z-i)/-l[2])*r,o=Ge([t.x,t.y,t.z],l,s,r);e={x:o[0],y:o[1],z:o[2]}}else e.z=i;return e.spatialReference=t.spatialReference,e=new q(e),a&&(e=I(e)),e}function lt(e,t,r){const i=e.rings[0][0][0],s=e.rings[0][0][1],o=e.rings[0][0][2],a=e.rings[0][1][0],n=e.rings[0][1][1],l=e.rings[0][1][2],c=e.rings[0][1][0],p=e.rings[0][1][1],m=e.rings[0][1][2],u=e.rings[0][2][0],h=e.rings[0][2][1],y=e.rings[0][2][2],d=(y-m)*(n-s)-(h-p)*(l-o),g=-((y-m)*(a-i)-(l-o)*(u-c)),f=(h-p)*(a-i)-(n-s)*(u-c),j=-(d*i+g*s+f*o),v=function(e,t,r,i,s,o){const a=r*(t.x-e.x)+i*(t.y-e.y)+s*(t.z-e.z);if(0===a)return null;const n=-(r*e.x+i*e.y+s*e.z+o)/a;return{x:e.x+n*(t.x-e.x),y:e.y+n*(t.y-e.y),z:e.z+n*(t.z-e.z)}}(t.toJSON(),r,d,g,f,j);return v}const ct={type:"simple-marker",size:15,style:"circle",color:[255,102,102,.5],outline:null},pt={type:"simple-marker",size:10,style:"circle",color:[0,128,192,.5],outline:null},mt={type:"simple-fill",style:"solid",color:[0,128,192,.5],outline:null},ut={type:"simple-fill",style:"solid",color:[255,102,102,.5],outline:null},ht={type:"simple-marker",size:10,style:"diamond",color:[255,102,102],outline:null},yt=new be({data:{type:"CIMSymbolReference",symbol:{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,size:10,frame:{xmin:-5,ymin:-5,xmax:5,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{rings:[[[0,1.4142135623730951],[3.585786437626905,5],[5,3.585786437626905],[1.4142135623730951,0],[5,-3.585786437626905],[3.585786437626905,-5],[0,-1.4142135623730951],[-3.585786437626905,-5],[-5,-3.585786437626905],[-1.4142135623730951,0],[-5,3.585786437626905],[-3.585786437626905,5],[0,1.4142135623730951]]]},symbol:{type:"CIMPolygonSymbol",symbolLayers:[{type:"CIMSolidStroke",enable:!0,width:1,color:[0,0,0,100]},{type:"CIMSolidFill",enable:!0,color:[255,0,0,255]}]}}]}]}}});function dt(e){return"esri.Graphic"===e?.declaredClass}function gt(e){return/.*.(tif|mrf)$/i.test(e??"")}const ft="view-click",jt="image-click",vt="interaction-handles";let bt=class extends o.EventedAccessor{constructor(e){super(e),this.additionalFeatures=new i,this.determineWorkflowForFeature=async()=>{const{currentBestFeature:e,selectedPoint:t}=this;if(!e&&this._currentImage&&(this._imageViewer?.map.layers.remove(this._currentImage),this._currentImage=p(this._currentImage)),e&&t){this._initialCurrentCoverageUpdate=!0,this._updatePointsAndPolygons(),this._fetchFeaturesController??=new AbortController;const{signal:t}=this._fetchFeaturesController;await this.loadImage(e,{signal:t}).finally((async()=>{this._fetchFeaturesController=null}))}},this.drawFootprint=()=>{this._initialCurrentCoveragePolygon&&this.updateCurrentCoveragePolygon(this._initialCurrentCoveragePolygon)},this.layer=null,this.shouldShowSelectedImage=!1,this.coverageFrustums=new i,this.coveragePolygons=new i,this.currentCoverageVisible=!0,this.disabled=!1,this.displayMessage=null,this.pointSources=new i,this.previousFeatureAngle=0,this.currentBestFeature=null,this.bestFeatureAngle=0,this.selectedPoint=null,this.features=new i,this.isAdditionalCoverageVisible=!1,this.isAdditionalPointSourcesVisible=!1,this.localPort=null,this.mapImageConversionToolState=!1,this.navigatorCurrentBestFeature=null,this.updateFootprint=async e=>{if(!this._currentImage)return;const i=new AbortController,{signal:s}=i;this._updateCoverageController=i;const o=this.currentBestFeature?.attributes.objectId,a=this._currentImage.serviceRasterInfo;e.forEach((e=>{e.x=(e.x-a.extent.xmin)/a.pixelSize.x,e.y=(a.extent.ymax-e.y)/a.pixelSize.y}));const n=(await at(e,{feature:this.currentBestFeature,currentCoveragePolygon:this.getCurrentBestFeaturePolygon(),imageProperties:this._currentImage.serviceRasterInfo,options:{signal:s}})).filter(r);if(n.length&&!s.aborted){const e=[n.map((({x:e,y:t})=>[e,t,1]))];e[0].push(e[0][0]);const r=new oe({hasZ:!0,rings:e,spatialReference:n[0].spatialReference});this.updateCurrentCoveragePolygon(new t({attributes:{imageID:o},geometry:r,symbol:ut,visible:this.currentCoverageVisible}))}},this._additionalCoveragePolygons=new i,this._additionalFeatureGraphics=new i,this._currentCoveragePolygon=null,this._currentImage=null,this._fetchFeaturesController=null,this._imageViewer=null,this._initialCurrentCoveragePolygon=null,this._initialCurrentCoverageUpdate=!0,this._overlays=new P({listMode:"hide",internal:!0}),this._referencePointOnGround=null,this._referencePointOnImage=null,this._sectorData=null,this._zoomedOut=!1,this._crossSymbol=null,this._panConstraint=null,this._suitabilities=null,this._transformController=new AbortController,this._updateCoverageController=null,this._loadOptions=null,this._imageClickHandler=async e=>{if(0===e.button&&this._currentImage&&e.mapPoint&&this._currentImage?.fullExtent){const{xmin:t,xmax:r,ymin:i,ymax:s}=this._currentImage.fullExtent,{x:o,y:a}=e.mapPoint;if(t>o||r<o||s<a||i>a)return;this.plotReferencePointOnImage(e.mapPoint);const n=this.currentBestFeature;if(n){const t=(await at([e.mapPoint.toJSON()],{feature:n,currentCoveragePolygon:this.getCurrentBestFeaturePolygon(),imageProperties:this._currentImage.serviceRasterInfo,options:{signal:this._transformController?.signal}}))[0];t&&this.plotReferencePointOnGround(t)}}},this._mapImageConversionToolViewClickHandler=e=>{e.stopPropagation(),e.preventDefault(),e.mapPoint&&this.plotMapPoint(e.mapPoint)},this._viewClickHandler=e=>{"mouse"===e.pointerType&&0!==e.button||(e.stopPropagation(),e.preventDefault(),e.mapPoint&&this.loadBestImage(e.mapPoint))},this.handleSectorClick=this.handleSectorClick.bind(this),this.loadViewer=this.loadViewer.bind(this),this.searchBestImage=this.searchBestImage.bind(this),this.transformAndPlotReferencePointOnImage=this.transformAndPlotReferencePointOnImage.bind(this),this.loadImageUrlOrRaster=this.loadImageUrlOrRaster.bind(this),this.updateSuitabilities=this.updateSuitabilities.bind(this),this.determineWorkflowForFeature=this.determineWorkflowForFeature.bind(this),this.updateCoverage=this.updateCoverage.bind(this),this.selectBestFeature=this.selectBestFeature.bind(this),this.drawFootprint=this.drawFootprint.bind(this)}initialize(){this.addHandles([m((()=>this.view?.map),((e,t)=>{t?.layers.remove(this._overlays),e?.layers.add(this._overlays)}),y),m((()=>this.view?.map?.allLayers?.length),(e=>{e&&this.view?.map?.layers.reorder(this._overlays,e-1)}),y),m((()=>this.layer?.visible??!1),(e=>{this._overlays.visible=e}),y),m((()=>[this.state,this.mapImageConversionToolState]),(()=>{if(this.removeHandles(ft),"disabled"===this.state||null==this.view)return;const e=this.mapImageConversionToolState&&"image-loaded"===this.state?this._mapImageConversionToolViewClickHandler:this._viewClickHandler;this.addHandles(this.view.on("click",e,je.WIDGET),ft)}),y),m((()=>this.mapImageConversionToolState),(()=>{this.removeHandles(jt),this.imageLoaded&&this.mapImageConversionToolState&&this.addHandles(this._imageViewer.on("click",this._imageClickHandler),jt)})),m((()=>this.currentBestFeature),((e,t)=>{this.removeHandles(vt),this.determineWorkflowForFeature(e,t)}),{sync:!0}),m((()=>this.currentImageView),(()=>{this.view&&this.drawFootprint()}),{sync:!0}),u((()=>this.currentImageView?.attached&&this._imageViewer.ready),(()=>{this.addHandles(m((()=>this._imageViewer?.viewpoint),(()=>{this._cancelCurrentCoverageUpdate(),this.updateCoverage()})),vt)}))])}destroy(){this._cancelCurrentCoverageUpdate(),this._cancelFetchingFeatures(),this.coverageFrustums.destroy(),this.coveragePolygons.destroy(),this.pointSources.destroy(),this._additionalCoveragePolygons.destroy(),this._additionalFeatureGraphics.destroy(),this._currentImage=p(this._currentImage),this._imageViewer=p(this._imageViewer),this._initialCurrentCoveragePolygon=p(this._initialCurrentCoveragePolygon),this._currentCoveragePolygon=p(this._currentCoveragePolygon),this._crossSymbol=p(this._crossSymbol),this._referencePointOnGround=p(this._referencePointOnGround),this._referencePointOnImage=p(this._referencePointOnImage),this._overlays&&this.view?.map.remove(this._overlays),this._overlays.destroy()}get activeLayer(){return s(l.getLogger(this),"activeLayer",{replacement:"layer"}),this.layer}set activeLayer(e){s(l.getLogger(this),"activeLayer",{replacement:"layer"}),this.layer=e}get imagePointsInView(){const e=this._imageViewer?.extent,t=this._imageViewer?.rotation??0,r=this._currentImage?.fullExtent;if(!e||!r)return null;const i=b(oe.fromExtent(e),t),s=oe.fromExtent(r),o=x(i,s),{rings:a,spatialReference:n}=o;return this._zoomedOut=w(s,o),a.flat().map((([e,t])=>new q({x:e,y:t,spatialReference:n})))}get brightness(){return this._get("brightness")??0}set brightness(e){this._set("brightness",c(e,-10,10))}get contrast(){return this._get("contrast")??0}set contrast(e){this._set("contrast",c(e,-10,10))}get currentImageView(){return this._imageViewer?.allLayerViews.find((e=>e.layer===this._currentImage))}get featureCount(){return this.features?.length??0}get imageGalleryEnabled(){return gt(this.currentBestFeature?.attributes.imagePath.trim())}get imageLoaded(){return this._currentImage?.loaded??!1}get updating(){return"loading"===this._currentImage?.loadStatus||!!this._fetchFeaturesController}get referencePoint(){return this._referencePointOnGround?.geometry}get sharpness(){return this._get("sharpness")??0}set sharpness(e){this._set("sharpness",c(e,0,1))}get sectorData(){const{_sectorData:e}=this;if(e)return ze.map((t=>e[t]))}get state(){const{layer:e,view:t,_currentImage:r}=this;return this.disabled||!e||t&&!t.ready?"disabled":r?.loadStatus?`image-${r.loadStatus}`:"ready"}get thumbnails(){const{features:e}=this;return e?new i(e.map((({attributes:{imagePath:e,objectId:t}})=>{const r=e.trim();return gt(r)?{url:r,objectId:t}:null})).filter(r)):null}set view(e){this._set("view",e)}clearImage(){this._imageViewer&&(this.displayMessage=null,this._imageViewer.graphics.removeAll(),this._crossSymbol&&(this._imageViewer.graphics.remove(this._crossSymbol),this._crossSymbol.destroy()),this._imageViewer.overlay?.destroy(),this._currentImage&&(this._imageViewer.map.layers.includes(this._currentImage)&&this._imageViewer.map.layers.remove(this._currentImage),this._currentImage=p(this._currentImage)))}createPanConstraint(){const{_currentImage:e,_imageViewer:t}=this,r=r=>{if(!e||!t||!r.targetGeometry)return r;const{extent:i}=e.serviceRasterInfo,{constraints:s,rotation:o,width:a,height:n}=t,{extent:l}=b(oe.fromExtent(i),o),{width:c,height:p}=l,m=r.targetGeometry.clone(),u=s.scaleToZoom(r.scale),h=1/2**u,y=a/n;let d=h*c,g=h*p;u&&(c/a>p/n?g=d/y:d=g*y);const f=l.clone();return f.xmin+=d/2,f.xmax-=d/2,f.ymin+=g/2,f.ymax-=g/2,r.targetGeometry=M(f,m).coordinate,r};return{constrain:r,applyPanConstraint:r}}filterByFootprints(e,t){const r=[],i=[],s=[];return e.forEach((e=>{const{layer:{coveragePercent:o},attributes:a}=e;let l;const{polygon:c,frustum:p}=function(e){const{attributes:t}=e,{horizontalFieldOfView:r,geometry:i,verticalFieldOfView:s}=t;let o,a=1,n=null;if(i&&Z(i?.spatialReference)&&(a=1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*i.y/J.radius)))),t.isSpherical){if(o=new Y({center:i,radius:t.farDistance*a}),t.nearDistance){const e=new Y({center:i,radius:t.nearDistance*a});o.addRing(e.rings[0])}const e=o.center;e&&(e.z=t.cameraHeight,n=ee.createSphere(e,{size:2*t.farDistance}),n.centerAt(e))}else{let l=t.cameraPitch,c=t.cameraRoll,p=150;const m=[];r>150&&(l=90,c=0,p=5);const u=Math.ceil(r/p);if(u%2==0)for(let e=0;e<u/2;e++)m.push(t.cameraHeading-r/u*(e+.5),t.cameraHeading+r/u*(e+.5));else{m.push(t.cameraHeading);for(let e=1;e<u/2;e++)m.push(t.cameraHeading-r/u*e,t.cameraHeading+r/u*e)}m.sort();let h=t.farDistance?t.farDistance*a:t.cameraHeight*a/Math.cos(l*Ze);t.cameraPitch+s/2>=90&&(h=(t.farDistance||20)*a),o=new oe({spatialReference:i?.spatialReference});for(const p of m){const m=$e("HPR",[p,l,c]);n=Ke(e,m);const y=We([0,0,-1],m),{x:d,y:g}=i,f=Ge([d,g,t.cameraHeight],y,h,a),j=2*Math.tan(s*Ze/2)*h,v=2*Math.tan(r/u*Ze/2)*h,b=We([0,1,0],m),x=We([1,0,0],m),w=qe(b,j/2,a),M=qe(x,v/2,a),_=K(Q(),w,M),I=X(Q(),w,M),P=[X(Q(),f,_),X(Q(),f,I),K(Q(),f,_),K(Q(),f,I)].map((e=>Xe(e,t.cameraHeight,i,a)));P.push(P[0]),o.addRing(P)}}return{polygon:o,frustum:n}}(e);if(l=c,a.isInspection&&(l=function(e){const{spatialReference:t,x:r,y:i}=e.geometry,{cameraHeading:s,cameraPitch:o,farDistance:a,nearDistance:n}=e,l=Ye(e.geometry),c=new oe({spatialReference:t}),p=Math.abs(1.44*a*l);let m=Math.abs(1.44*n*l);(o<20||null==s)&&(m=p);const u=[];return u[0]={x:r+p*Math.sin((s-45)*Ze),y:i+p*Math.cos((s-45)*Ze)},u[1]={x:r+p*Math.sin((s+45)*Ze),y:i+p*Math.cos((s+45)*Ze)},u[2]={x:r+m*Math.sin((s+135)*Ze),y:i+m*Math.cos((s+135)*Ze)},u[3]={x:r+m*Math.sin((s+225)*Ze),y:i+m*Math.cos((s+225)*Ze)},c.addRing([[u[0].x,u[0].y,0],[u[1].x,u[1].y,0],[u[2].x,u[2].y,0],[u[3].x,u[3].y,0],[u[0].x,u[0].y,0]]),c}(a)),o&&(l=function(e,t){const r=1+t/100;if("esri.geometry.Circle"===e.declaredClass){const{radius:t,center:i}=e,s=new Y({radius:t*r,center:i});return e.rings.length>1&&s.addRing(e.rings[1]),s}if("esri.geometry.Polygon"===e.declaredClass){const t=new oe({spatialReference:e.spatialReference}),i=e.centroid;if(i){const s=[];for(let t=0;t<e.rings[0].length;t++){const o=Math.sqrt((i.x-e.rings[0][t][0])**2+(i.y-e.rings[0][t][1])**2),a=qe(K(Q(),[e.rings[0][t][0],e.rings[0][t][1],0],[i.x,i.y,0]),1/o,1),n=Ge([i.x,i.y,0],a,o*r,1);s.push({x:n[0],y:n[1]})}t.addRing([[s[0].x,s[0].y,0],[s[1].x,s[1].y,0],[s[2].x,s[2].y,0],[s[3].x,s[3].y,0],[s[0].x,s[0].y,0]])}return t}return e}(l,o)),function(e,t){return e.contains(t)}(l,t)){s.push(e);const t=l.toJSON(),o=p?.toJSON(),{cameraHeight:c,cameraHeading:m,location:u,objectId:h}=a,y=n(u)?u.toJSON():u;t.imageID=y.imageID=h,o&&(o.imageID=h),y.z=c,this.pointSources?.push(y),r.push(m>0?t:void 0),i.push(m>0?o:void 0)}})),{features:s,polygons:r,frustums:i}}getCurrentCoveragePolygon(){return this._currentCoveragePolygon}getCurrentBestFeaturePolygon(){return this._initialCurrentCoveragePolygon}handleSectorClick(e){if(isNaN(e))return;const t=this._sectorData?.[ze[e]];t?.length&&this._updateCurrentBestFeature(t.at(0))}handleFeatureClick(e){const{sector:t,featureIndexInSector:r}=e;if(isNaN(r))return;const i=this._sectorData?.[t];i?.length&&this._updateCurrentBestFeature(i.at(r))}async loadBestImage(e){this.displayMessage=null,this.selectedPoint=e.spatialReference.isGeographic?_(e):e.clone(),this.features.removeAll(),this.currentBestFeature=null,this.additionalFeatures.removeAll(),this._additionalCoveragePolygons.removeAll(),this._additionalFeatureGraphics.removeAll(),this._currentCoveragePolygon=p(this._currentCoveragePolygon),this._overlays?.removeAll(),await this._fetchFeaturesWithController(e)}async loadImageUrlOrRaster(e,t){if(!this._imageViewer)return!1;this._loadOptions=t;const{options:r}=t||{};this.clearImage();let i=null,s=null;"string"==typeof e?i=e:s=e,this._currentImage=new C({ioConfig:{skipExtensions:["aux.xml","jgw"]},url:i,raster:s,options:r}),this._imageViewer.map.layers.add(this._currentImage);try{await this._currentImage.when((e=>{this._updateConstraint(e)}),this.loadImageError)}catch(e){return this.loadImageError(e),!1}return!0}loadImageError(e){l.getLogger(this).error("oriented-imagery-viewer:load-image",e),this.setMessage("imageLoadError","error",e.message)}loadViewer(e){const t=new Map;this._imageViewer=new ge({container:e,map:t,spatialReference:ae.WebMercator,constraints:{snapToZoom:!1,rotationEnabled:!1},ui:{components:["zoom"]}}),h((()=>!0===this._imageViewer?.stationary)).then((()=>{this.setMessage("onLoadMessage","info")})),this._imageViewer.addHandles([m((()=>this.bestFeatureAngle),((e,t)=>{this.previousFeatureAngle=t??0}),y)])}async plotMapPoint(e){return this.plotReferencePoint(e),this.transformAndPlotReferencePointOnImage({feature:this.currentBestFeature,selectedLocation:e,options:{signal:this._transformController?.signal}})}plotReferencePointOnGround(e){this._referencePointOnGround&&(this._overlays?.remove(this._referencePointOnGround),this._referencePointOnGround.destroy()),null!=e&&(this._referencePointOnGround=new t({geometry:{type:"point",...e.toJSON()},symbol:ht}),this.view?this._overlays?.add(this._referencePointOnGround):this.emit("plot-ground-point",{data:{point:this._referencePointOnGround?.geometry}}))}plotReferencePointOnImage(e){this._imageViewer&&(this._referencePointOnImage&&(this._imageViewer.graphics.remove(this._referencePointOnImage),this._referencePointOnImage.destroy()),this._referencePointOnImage=new t({geometry:{type:"point",...n(e)?e.toJSON():e},symbol:ht}),this._imageViewer.graphics.add(this._referencePointOnImage))}resetImage(){this._currentImage=p(this._currentImage),this.setMessage("onLoadMessage","info"),this._cancelCurrentCoverageUpdate(),this._cancelFetchingFeatures()}async searchBestImage(e,t){try{const r=await async function(e,t){const{point:r,queryParams:i,queryFeatures:s}=e;if(null==r)return null;const o={};let a=e.layerInstanceOrURL;const n=r.spatialReference.isGeographic?_(r.clone()):r.clone();if(o.outSpatialReference=n.spatialReference,i&&(o.maxRecordCountFactor=i.maxRecordCountFactor??5,o.outFields=i.outFields??["*"],o.where=i.where??"1=1",o.returnGeometry=i.returnGeometry??!0,o.outSpatialReference=i.outSpatialReference),"string"==typeof a&&(He.layer&&He.layer.url===a?a=He.layer:(He.layer?.destroy(),a=He.layer=new R({url:a}),await a.load())),a){if(s&&"esri.layers.OrientedImageryLayer"===a?.declaredClass)return Le(a)(s);const e=a,r=function(e,t){const r=e.x-t,i=e.x+t,s=e.y-t,o=e.y+t;return new v({xmin:r,xmax:i,ymin:s,ymax:o,spatialReference:e.spatialReference})}(n,i?.maximumDistance??e.maximumDistance??1e3),l=new $({geometry:r,...o});return e.queryFeatures(l,t).then(Le(e))}return null}(e,t);r&&await this._processFeatureResponse(r,{signal:t?.signal})}catch(e){this.setMessage("imageLoadError","error"),l.getLogger(this).error("error occurred while finding best image",e)}}selectBestFeature(e){this.currentBestFeature=this.features?.find((({attributes:t})=>t.objectId===Number(e)))}setAdditionalCameraLocationsVisibility(e){this._additionalFeatureGraphics.forEach((t=>{t.visible=e}))}setAdditionalCoverageVisibility(e){this._additionalCoveragePolygons.forEach((t=>{t.visible=e}))}setCurrentCoverageVisibility(e){this._currentCoveragePolygon&&(this._currentCoveragePolygon.visible=e),this._currentBestFeatureGraphic&&(this._currentBestFeatureGraphic.visible=e)}setMapImageConversionToolState(e){this.mapImageConversionToolState=e}async transformAndPlotReferencePointOnImage(e){if(!this._imageViewer)return;if(!this._currentImage)return;const{selectedLocation:t,options:r}=e,i=await this.transformPoint(t,r);return i?(this.plotReferencePointOnImage(i),{x:i.x,y:i.y}):void 0}updateSuitabilities(e){this._suitabilities=e.sort(((e,t)=>e.suitability-t.suitability));const t=this._suitabilities.map((e=>e.feature));this._updateFeatures(t),this._groupFeaturesBySectors(),this._initialCurrentCoverageUpdate=!0}_cancelFetchingFeatures(e){const t=this._fetchFeaturesController;t&&t.abort(e),this._fetchFeaturesController=null}_cancelCurrentCoverageUpdate(){const e=this._updateCoverageController;e&&e.abort("Multiple Coverage Updates: Aborting Current Coverage Update to sync image and coverage"),this._updateCoverageController=null}async _fetchFeatures(e,t){if(!this.view)return;const r=this.layer;if(r){const i={include:r},s=this.view.toScreen(e);if(!s)return;const o=await this.view.hitTest(s,i);this._processHitTestResults(r,o,t)}}async _fetchFeaturesWithController(e){this._cancelFetchingFeatures();const t=new AbortController,{signal:r}=t;this._fetchFeaturesController=t;try{await this._fetchFeatures(e,{signal:r}).finally((()=>{this._fetchFeaturesController=null}))}catch(e){this.setMessage("imageLoadError","error"),l.getLogger(this).error("error occurred while fetching features",e)}}_groupFeaturesBySectors(){const{_suitabilities:e,additionalFeatures:t,currentBestFeature:r,features:s}=this;if(!(e&&t&&r&&s))return void(this._sectorData=null);this._sectorData={};for(const e of ze)this._sectorData[e]=new i;const o=e.map(((e,t)=>({...e,featureIndex:t})));o.sort(((e,t)=>e.trueSuitability-t.trueSuitability));const a=o.map((({distance:e})=>e)),n=Math.max(...a);o.forEach((e=>{const{distance:t,angle:r,featureIndex:i}=e,o=t/n*Se[2],a=function(e,t){const r=e/t*Se[2];return r<=Se[0]?"NEAR":r<=Se[1]?"":"FAR"}(t,n),l=function(e){return Math.abs(e)>=135?"WEST":e<-45&&e>-135?"SOUTH":e<=45?"EAST":"NORTH"}(r);if(!this._sectorData)return;const c=Se[3]+o*Math.sin(r*Math.PI/180),p=Se[3]+o*Math.cos(r*Math.PI/180);let m;const u=s.at(i),h=u===this.currentBestFeature,y=this.currentBestFeature?.attributes.cameraPitch&&this.currentBestFeature?.attributes.cameraPitch<5;if(h&&y)m=-90;else{const e=c-Se[3],t=p-Se[3],r=t/Math.sqrt(e**2+t**2);let i=180*Math.acos(r)/Math.PI;(e<0&&t<0||e<0&&t>0)&&(i*=-1),m=i}const d=""===a?l:`${a}_${l}`;h&&(m===this.bestFeatureAngle?this.previousFeatureAngle=m:this.bestFeatureAngle=m,this.navigatorCurrentBestFeature=y?null:{x:c,y:p,direction:l});const g=this._sectorData[d];g.add({angle:r,featureIndex:i,x:c,y:p,objectID:u.attributes.objectId,sector:d,featureIndexInSector:g.length})}))}async _processFeatureResponse(e,t){const{selectedPoint:r}=this;if(!r)return;if(!e)return;const i=e;if(!i)return;const{features:s}=i;if(!s.length)return this.setMessage("noImageError","error"),void(this.currentBestFeature=null);this.coveragePolygons.removeAll(),this.coverageFrustums.removeAll(),this.pointSources.removeAll();const{features:o,polygons:a,frustums:n}=this.filterByFootprints(s,r),l=o;this.coveragePolygons.addMany(a),this.coverageFrustums.addMany(n);const c=this.coveragePolygons?.getItemAt(0);if(!l.length)return void this.setMessage("noImageError","error");if(l[0].attributes.elevationSource&&!r.z&&c){const e=await rt([r],{feature:l[0],currentCoveragePolygon:new oe(c),options:t});if(e[0]){const t=e[0];r.elevation=t.z}}var p;this._suitabilities=function(e){const{camera:t,features:r,selectedPoint:i}=e;if(!r.length)return[];e.currentImage??={attributes:{cameraHeading:0,cameraPitch:0}};const s=function(e,t,r){return t.z??=0,t.elevation??=0,i=>{const{hfovWeight:s,vfovWeight:o,distanceWeight:a}=function(e,t){const r="isOblique"in e?e:new Ee(e),{isOblique:i,isSpherical:s,isNadir:o}=r;return s?{hfovWeight:"2d"===t?0:1,vfovWeight:"2d"===t?0:.6,distanceWeight:"2d"===t?1:.5}:o?{hfovWeight:.25,vfovWeight:1,distanceWeight:1}:i?{hfovWeight:1,vfovWeight:.25,distanceWeight:1}:{hfovWeight:1,vfovWeight:1,distanceWeight:1}}(i.attributes,e?"3d":"2d"),n=i.attributes,{cameraHeight:l,cameraHeading:c,cameraPitch:p,farDistance:m,horizontalFieldOfView:u,verticalFieldOfView:h,isOblique:y}=n,d=n.geometry,g=180*Math.atan2(d.y-t.y,d.x-t.x)/Math.PI,f=W(t,d);let j,v,b=u,x=h,w=!1;e?(j=e.heading,v=e.tilt,b=180,x=180,w=!0):!y||p<10?(j=c,v=p,w=!1):(j=r.attributes.cameraHeading,v=p,w=!0,b=180),j>180&&(j-=360);let M=1;d.spatialReference.isWebMercator&&(M=1/Math.cos(Math.PI/2-2*Math.atan(Math.exp(-1*d.y/J.radius))));const _=Math.sqrt((Math.sqrt((t.x-d.x)**2+(t.y-d.y)**2)/M)**2+((t.z??0)-(t.elevation??0)-l)**2),I=90-180*Math.atan2(t.y-d.y,t.x-d.x)/Math.PI;let P=(Math.abs(I-j)>180?Math.abs(360-Math.abs(I-j)):Math.abs(I-j))/b;P=4*P+1;const C=180*Math.acos((n.cameraHeight-(t.z??0)+(t.elevation??0))/_)/Math.PI;let k=Math.abs(C-v)/x;k=4*k+1;let R=_/Math.sqrt(m**2+l**2);R=4*R+1;const S=s*P+o*k+a*R;let F;if(w){const e=c>180?c-360:c;F=s*((Math.abs(I-e)>180?Math.abs(360-Math.abs(I-e)):Math.abs(I-e))/u*4+1)+o*(Math.abs(C-p)/h*4+1)+a*R}else F=S;return{suitability:S,trueSuitability:F,feature:i,angle:g,distance:f,verticalAngle:Math.abs(180*Math.atan(f/l)/Math.PI)}}}(t,i,e.currentImage);return r.map(s)}({features:l,selectedPoint:r,camera:(p=this.view,"3d"===p?.type?this.view.camera:null),currentImage:this.currentBestFeature}),this.updateSuitabilities(this._suitabilities);const m=this._suitabilities.map((e=>e.feature));this.currentBestFeature=m[0]}async _processHitTestResults(e,t,r){const{screenPoint:i,results:[s]}=t,o="graphic"===s?.type&&this.shouldShowSelectedImage,a={layerInstanceOrURL:e,point:s?.mapPoint??this.view?.toMap(i),queryParams:{maximumDistance:e.maximumDistance,objectIds:o?[s.graphic.getAttribute(e.objectIdField)]:void 0},queryFeatures:null};await this.searchBestImage(a,r)}_updateConstraint(e){this._imageViewer&&(this._imageViewer.extent=e.fullExtent,e.raster.rasterInfo.isPseudoSpatialReference&&(this._imageViewer.rotation=(this._loadOptions?.cameraRoll??0)+(this._loadOptions?.imageRotation??0)),this._panConstraint&&this._imageViewer.constraints.customConstraints.remove(this._panConstraint),this._panConstraint=this.createPanConstraint(),this._imageViewer.constraints.customConstraints.addMany([this._panConstraint]),e.addHandles([m((()=>[this.brightness,this.contrast,this.sharpness]),(([t,r,i])=>{e.loaded&&(e.effect=`contrast(${10*(r+10)}%) brightness(${10*(t+10)}%)`,this.sharpenImage(e,i))}),y),m((()=>{if(!this._imageViewer?.ready)return;const{extent:t}=e.serviceRasterInfo,{width:r,height:i,rotation:s}=this._imageViewer,{extent:o}=b(oe.fromExtent(t),s),{width:a,height:n}=o;return Math.max(a/r,n/i)}),(e=>{if(!this._imageViewer||null==e)return;const{constraints:t,scale:r,spatialReference:i}=this._imageViewer,s=t.minScale,o=fe(i),a=.25*o,n=o*e;let l=n;const c=[];for(;l>a;)c.push(l),l/=2;c.push(l);const{lods:p}=ye.create({scales:c});t.set({lods:p,minScale:n}),this._imageViewer.scale=Math.abs(r-s)<=1e-6?n:r}),d)]))}_updateFeatures(e){if(!e.length)return this.currentBestFeature=null,void this.additionalFeatures.removeAll();this.features.removeAll(),this.features.addMany(e),this.currentBestFeature=e[0],e.length>1?this.additionalFeatures.addMany(e.slice(1)):this.additionalFeatures.removeAll()}_updatePointsAndPolygons(){const{coveragePolygons:e,pointSources:r,currentBestFeature:i,currentCoverageVisible:s,isAdditionalCoverageVisible:o,isAdditionalPointSourcesVisible:a}=this;if(e&&r&&i){this._additionalCoveragePolygons.removeAll(),this._additionalFeatureGraphics.removeAll(),this._currentCoveragePolygon&&(this._currentCoveragePolygon.destroy(),this._currentCoveragePolygon=null,this._initialCurrentCoveragePolygon=null);for(const r of e)r?.imageID===i.attributes.objectId?this._initialCurrentCoveragePolygon=new t({attributes:{imageID:r?.imageID},geometry:{type:"polygon",...r},symbol:ut,visible:!1}):this._additionalCoveragePolygons.push(new t({attributes:{imageID:r?.imageID},geometry:{type:"polygon",...r},symbol:mt,visible:o}));for(const e of r)e.imageID===i.attributes.objectId?this._currentBestFeatureGraphic=new t({attributes:{imageID:e.imageID},geometry:{type:"point",...e},symbol:ct,visible:s}):this._additionalFeatureGraphics?.push(new t({attributes:{imageID:e.imageID},geometry:{type:"point",...e},symbol:pt,visible:a}))}}_updateCurrentBestFeature(e){if(!e)return;this.currentBestFeature=this.features?.at(e.featureIndex);const t=this.currentBestFeature?.attributes.cameraPitch&&this.currentBestFeature?.attributes.cameraPitch<5;let r;if(t)r=-90;else{const t=e.x-Se[3],i=e.y-Se[3],s=i/Math.sqrt(t**2+i**2);let o=180*Math.acos(s)/Math.PI;(t<0&&i<0||t<0&&i>0)&&(o*=-1),r=o}r===this.bestFeatureAngle?this.previousFeatureAngle=r:this.bestFeatureAngle=r,this.navigatorCurrentBestFeature=t?null:{x:e.x,y:e.y,direction:e.sector.includes("_")?e.sector.split("_")[1]:e.sector}}async loadImage(e,t){if(!this._imageViewer)return;this._imageViewer.graphics.removeAll();const{cameraRoll:r,imageRotation:i}=e.attributes;if(this._currentImage&&this._imageViewer?.map.layers.includes(this._currentImage)&&(this._currentImage?.removeHandles("image-handles"),this._imageViewer?.map.layers.remove(this._currentImage),this._currentImage?.destroy(),this._currentImage=null),!e)return void this.setMessage("noImageError","error");const{horizontalFieldOfView:s,isSpherical:o}=e.attributes;if(360===s||o)return void this.setMessage("unsupportedPanoramicImageryError","error");let a,n,l=e.attributes.imagePath;this._referencePointOnGround&&(this._imageViewer?.graphics.remove(this._referencePointOnGround),this._referencePointOnGround.destroy());const c={skipExtensions:["aux.xml","jgw"]};if("FA"===l){const s=new de({objectIds:[e.attributes.objectId]}),o=(await e.layer.queryAttachments(s,t))[`${e.attributes.objectId}`];if(!o[0]?.url)return void this.setMessage("noAttachment","error");if(a=o[0].contentType.split("/")[1]?.toUpperCase(),l=o[0]?.url,n=await k.open({ioConfig:c,url:l,datasetFormat:a,...t}).catch((e=>(this.setMessage("imageLoadError","error",e.message),null))),!n)return;return await this.loadImageUrlOrRaster(n,{cameraRoll:r,imageRotation:i,options:t}),void await this.transformAndPlotSelectedLocation(t)}await this.loadImageUrlOrRaster(l,{cameraRoll:r,imageRotation:i,options:t}),await this.transformAndPlotSelectedLocation(t)}plotReferencePoint(e){"mapPoint"in e?this.plotReferencePointOnGround(e.mapPoint):this.plotReferencePointOnGround(e)}setMessage(e,t,r){this.displayMessage={key:e,type:t,data:r}}sharpenImage(e,t){const r=[0,-1*t,0,-1*t,4*t+1,-1*t,0,-1*t,0],i=new ue({functionName:"Convolution",functionArguments:{type:he.userDefined,cols:3,rows:3,kernel:r,convolutionType:he.userDefined}});e.renderer=null,e.rasterFunction=i}async transformAndPlotSelectedLocation(e){const{_currentImage:r,currentBestFeature:i,selectedPoint:s}=this;if(!s||!i||!r?.loaded)return;const o=await this.transformPoint(s,e);this._crossSymbol=new t({geometry:q.fromJSON(o),symbol:yt}),this._imageViewer?.graphics.add(this._crossSymbol)}async transformPoint(e,t){if(!this._currentImage||!this._imageViewer||!this.currentBestFeature)return;const r=this.currentBestFeature,{pixelSize:i,isPseudoSpatialReference:s,transform:o}=this._currentImage.serviceRasterInfo,a=await tt([e],{feature:r,imageProperties:this._currentImage.serviceRasterInfo,currentCoveragePolygon:this.getCurrentBestFeaturePolygon(),options:t});if(!a.length)return;let n=a[0];const l=f(v,await ve(this._currentImage.fullExtent,f(ae,this._imageViewer?.spatialReference),null,t?.signal));return s?(n.x=n.x*i.x+l.xmin,n.y=l.ymax-n.y*i.y,n.spatialReference=l.spatialReference):n=o.forwardTransform(new q(n)),n}updateCurrentCoveragePolygon(e){if(this._initialCurrentCoverageUpdate){if(this._overlays?.removeAll(),this._initialCurrentCoverageUpdate=!1,e&&(this._currentCoveragePolygon&&this._currentCoveragePolygon.destroy(),e.visible=this.currentCoverageVisible,this._currentCoveragePolygon=e),this.view){const e=this.selectedPoint?new t({geometry:this.selectedPoint.clone(),symbol:yt,attributes:{imageID:this.currentBestFeature?.attributes.objectId}}):null;this._overlays?.graphics.addMany([...this._additionalCoveragePolygons,...this._additionalFeatureGraphics,this._currentCoveragePolygon,this._currentBestFeatureGraphic,e].filter(dt))}}else if(this.view){const t=this._currentCoveragePolygon&&this._overlays?this._overlays.graphics.indexOf(this._currentCoveragePolygon):-1;e&&(this._currentCoveragePolygon&&(this._overlays?.remove(this._currentCoveragePolygon),this._currentCoveragePolygon.destroy()),e.visible=this.currentCoverageVisible,this._currentCoveragePolygon=e,this._overlays?.graphics.add(this._currentCoveragePolygon,t>=0?t:void 0))}}async updateCoverage(){const{_currentImage:e,imagePointsInView:t,_imageViewer:r}=this;if(!(e?.loaded&&r?.extent&&e.fullExtent&&t))return;const{pixelSize:i,extent:s}=e.serviceRasterInfo,o=[...t];for(const e of o)e.z=1,e.x=e.x*i.x+s.xmin,e.y=s.ymax-e.y*i.y;this._zoomedOut?this.drawFootprint():this.updateFootprint(o)}};e([g()],bt.prototype,"activeLayer",null),e([g()],bt.prototype,"additionalFeatures",void 0),e([g({json:{write:!1}})],bt.prototype,"determineWorkflowForFeature",void 0),e([g()],bt.prototype,"drawFootprint",void 0),e([g()],bt.prototype,"imagePointsInView",null),e([g()],bt.prototype,"layer",void 0),e([g()],bt.prototype,"shouldShowSelectedImage",void 0),e([g({type:Number})],bt.prototype,"brightness",null),e([g({type:Number})],bt.prototype,"contrast",null),e([g()],bt.prototype,"coverageFrustums",void 0),e([g()],bt.prototype,"coveragePolygons",void 0),e([g()],bt.prototype,"currentCoverageVisible",void 0),e([g({readOnly:!0})],bt.prototype,"currentImageView",null),e([g()],bt.prototype,"disabled",void 0),e([g()],bt.prototype,"displayMessage",void 0),e([g()],bt.prototype,"pointSources",void 0),e([g()],bt.prototype,"previousFeatureAngle",void 0),e([g()],bt.prototype,"currentBestFeature",void 0),e([g()],bt.prototype,"bestFeatureAngle",void 0),e([g()],bt.prototype,"selectedPoint",void 0),e([g({readOnly:!0})],bt.prototype,"featureCount",null),e([g()],bt.prototype,"features",void 0),e([g({readOnly:!0})],bt.prototype,"imageGalleryEnabled",null),e([g({readOnly:!0})],bt.prototype,"imageLoaded",null),e([g()],bt.prototype,"isAdditionalCoverageVisible",void 0),e([g()],bt.prototype,"isAdditionalPointSourcesVisible",void 0),e([g({type:Number})],bt.prototype,"localPort",void 0),e([g()],bt.prototype,"mapImageConversionToolState",void 0),e([g()],bt.prototype,"navigatorCurrentBestFeature",void 0),e([g({readOnly:!0})],bt.prototype,"updating",null),e([g()],bt.prototype,"referencePoint",null),e([g({type:Number})],bt.prototype,"sharpness",null),e([g({readOnly:!0})],bt.prototype,"sectorData",null),e([g({readOnly:!0})],bt.prototype,"state",null),e([g({readOnly:!0})],bt.prototype,"thumbnails",null),e([g()],bt.prototype,"updateFootprint",void 0),e([g({value:null})],bt.prototype,"view",null),e([g()],bt.prototype,"_additionalCoveragePolygons",void 0),e([g()],bt.prototype,"_additionalFeatureGraphics",void 0),e([g()],bt.prototype,"_currentCoveragePolygon",void 0),e([g()],bt.prototype,"_currentImage",void 0),e([g()],bt.prototype,"_fetchFeaturesController",void 0),e([g()],bt.prototype,"_imageViewer",void 0),e([g()],bt.prototype,"_initialCurrentCoveragePolygon",void 0),e([g()],bt.prototype,"_initialCurrentCoverageUpdate",void 0),e([g()],bt.prototype,"_overlays",void 0),e([g()],bt.prototype,"_referencePointOnGround",void 0),e([g()],bt.prototype,"_referencePointOnImage",void 0),e([g()],bt.prototype,"_currentBestFeatureGraphic",void 0),e([g()],bt.prototype,"_sectorData",void 0),e([g()],bt.prototype,"_zoomedOut",void 0),bt=e([j("esri.widgets.OrientedImageryViewer.OrientedImageryViewerViewModel")],bt);const xt=bt;export{Re as a,Se as b,Ce as c,ke as d,xt as default,Ie as e,Fe as f,Pe as g,_e as n,xe as r,Ue as s};
