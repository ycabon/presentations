/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.29/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import s from"../../../core/Error.js";import{watch as r,initial as i}from"../../../core/reactiveUtils.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import{i as n}from"../../../core/lang.js";import"../../../chunks/Logger.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import p from"../../../views/interactive/snapping/FeatureSnappingLayerSource.js";import l from"../../../views/interactive/snapping/SnappingOptions.js";import{b as c,c as u}from"../../../chunks/layerListUtils.js";import m from"../../../core/Collection.js";import d from"../../LayerList/LayerListViewModel.js";import h from"../../LayerList/ListItem.js";import"../../../core/Handles.js";import"../../../chunks/maybe.js";import"../../../chunks/metadata.js";import"../../../chunks/utils.js";import"../../../chunks/handleUtils.js";import"../../../chunks/ObservableBase.js";import"../../../chunks/tracking.js";import"../../../core/scheduling.js";import"../../../core/promiseUtils.js";import"../../../config.js";import"../../../chunks/asyncUtils.js";import"../../../chunks/ensureType.js";import"../../../core/Evented.js";import"../../../chunks/shared.js";import"../../../chunks/SimpleObservable.js";import"../../../chunks/Settings.js";import"../../../Color.js";import"../../../chunks/colorUtils.js";import"../../../chunks/mathUtils.js";import"../../../chunks/vec3.js";import"../../../chunks/vec3f64.js";import"../../../chunks/common.js";import"../../../core/JSONSupport.js";import"../../../core/Identifiable.js";import"../../../core/accessorSupport/decorators/cast.js";import"../../../support/actions/ActionBase.js";import"../../../support/actions/ActionButton.js";import"../../../chunks/ActionSlider.js";import"../../../support/actions/ActionToggle.js";import"../../LayerList/ListItemPanel.js";import"../../Widget.js";import"../../../intl.js";import"../../../chunks/date.js";import"../../../chunks/jsonMap.js";import"../../../chunks/locale.js";import"../../../chunks/timeZoneUtils.js";import"../../../chunks/datetime.js";import"../../../chunks/messages.js";import"../../../request.js";import"../../../kernel.js";import"../../../core/urlUtils.js";import"../../../chunks/assets.js";import"../../../chunks/domUtils.js";import"../../../core/Promise.js";import"../../../chunks/uuid.js";import"../../../chunks/projector.js";import"../../../chunks/widgetUtils.js";import"../../../chunks/jsxWidgetSupport.js";import"../../../chunks/legacyIcon.js";import"../widget.js";import"../../../chunks/accessibleHandler.js";import"../../../chunks/messageBundle.js";import"../../../chunks/vmEvent.js";import"../../../chunks/jsxFactory.js";import"../../../chunks/themeUtils.js";const y=e=>g(e)||j(e),g=e=>{if(!("type"in e))return!1;switch(e.type){case"feature":case"geojson":case"csv":case"graphics":case"wfs":case"map-notes":case"oriented-imagery":case"scene":case"building-scene":return!0;default:return!1}},j=e=>{const t=c(e);if(null!=t&&e.hasOwnProperty(t)&&null!=e[t])for(const s of e[t])if(y(s))return!0;return!1};var S;let f=S=class extends h{constructor(e){super(e),this.children=new m,this.parent=null}get allChildrenEnabled(){return this.children.every((e=>e.enabled))??!1}get childLayerIds(){return this.children.map((e=>e.layer.id)).toArray()}get enabled(){return null!=this.featureSource&&this.featureSource.enabled}get featureSource(){const{layer:e,getFeatureSnappingSources:t}=this;return t().find((t=>t.layer===e))}get hasChildrenEnabled(){return this.children.some((e=>e.enabled))}_initializeChildLayers(e){if(!e)return;const t=e.filter(y);super._initializeChildLayers(t)}_makeChildren(e){return e.map((e=>u(e)?new S({layer:e,parent:this,view:this.view,getFeatureSnappingSources:this.getFeatureSnappingSources}):null)).filter(n).reverse()}};e([o()],f.prototype,"allChildrenEnabled",null),e([o()],f.prototype,"children",void 0),e([o()],f.prototype,"childLayerIds",null),e([o()],f.prototype,"enabled",null),e([o()],f.prototype,"featureSource",null),e([o({constructOnly:!0})],f.prototype,"getFeatureSnappingSources",void 0),e([o()],f.prototype,"hasChildrenEnabled",null),e([o()],f.prototype,"parent",void 0),f=S=e([a("esri.widgets.support.SnappingControls.SnappingListItem")],f);let w=class extends d{constructor(){super(...arguments),this.featureSnappingSources=new m}get operationalItemsFlat(){return this.operationalItems.flatten((e=>e.children))}get selectableItems(){return this.operationalItemsFlat.filter((e=>!e.children?.length))}_compileList(){const e=this.view?.map?.layers;if(!e)return;const t=e.filter(y);this._watchLayersListMode(t);const s=this._getViewableLayers(t);s?.length?(this._createNewItems(s),this._removeItems(s),this._sortItems(s)):this._removeAllItems()}_createListItem(e){return new f({layer:e,view:this.view,getFeatureSnappingSources:()=>this.featureSnappingSources})}};e([o()],w.prototype,"featureSnappingSources",void 0),e([o()],w.prototype,"operationalItems",void 0),e([o()],w.prototype,"operationalItemsFlat",null),e([o()],w.prototype,"selectableItems",null),w=e([a("esri.widgets.support.SnappingControls.SnappingLayerListViewModel")],w);let L=class extends t{constructor(e){super(e),this.layerListViewModel=new w,this.snappingOptions=new l,this.view=null}initialize(){this.addHandles([r((()=>({viewModel:this.layerListViewModel,view:this.view})),(({viewModel:e,view:t})=>{e.view=t}),i),r((()=>({viewModel:this.layerListViewModel,sources:this.snappingOptions?.featureSources})),(({viewModel:e,sources:t})=>{e.featureSnappingSources=t}),i)])}get allLayersEnabled(){return(this.layerListViewModel?.selectableItems??[]).every((e=>e.enabled))}get allLayersDisabled(){return(this.layerListViewModel?.selectableItems??[]).every((e=>!e.enabled))}get layersEnabledCount(){return this.layerListViewModel?.selectableItems?.filter((e=>e.enabled)).length??0}get state(){return this.snappingOptions?"ready":"disabled"}toggleSnappingForLayers(e,t){e?.forEach((e=>t?this.enableSnappingForLayer(e):this.disableSnappingForLayer(e)))}toggleSnappingForAllLayers(e){this.layerListViewModel.selectableItems.forEach((({layer:{id:t}})=>{e?this.enableSnappingForLayer(t):this.disableSnappingForLayer(t)}))}enableSnappingForLayer(e){(this._findSnappingSourceForLayer(e)??this._makeSnappingSourceForLayer(e)).enabled=!0}disableSnappingForLayer(e){const t=this._findSnappingSourceForLayer(e);t&&(t.enabled=!1)}updateEnabledFeatureSources(e){for(const t of this.snappingOptions.featureSources)u(t.layer)&&(t.enabled=e.includes(t.layer.id))}_findSnappingSourceForLayer(e){return this.snappingOptions.featureSources.find((t=>t.layer.id===e))}_makeSnappingSourceForLayer(e){const t=this.layerListViewModel.operationalItemsFlat.find((t=>t.layer.id===e))?.layer;if(!t)throw new s("snapping-controls:layer-not-found",`cannot enable snapping for layer with id ${e} because no such layer was found in the view`);const r=new p({layer:t});return this.snappingOptions.featureSources.add(r),r}};e([o()],L.prototype,"allLayersEnabled",null),e([o()],L.prototype,"allLayersDisabled",null),e([o({constructOnly:!0})],L.prototype,"layerListViewModel",void 0),e([o()],L.prototype,"layersEnabledCount",null),e([o({type:l,nonNullable:!0})],L.prototype,"snappingOptions",void 0),e([o()],L.prototype,"state",null),e([o()],L.prototype,"view",void 0),L=e([a("esri.widgets.support.SnappingControls.SnappingControlsViewModel")],L);const b=L;export{b as default};
