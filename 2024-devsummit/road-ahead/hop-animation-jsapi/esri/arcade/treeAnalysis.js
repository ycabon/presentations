// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports"],function(g){function p(a){return"string"===typeof a||a instanceof String}function h(a,b){if(a)for(const c of a)d(c,b)}function d(a,b){if(a&&!1!==b(a))switch(a.type){case "ImportDeclaration":h(a.specifiers,b);d(a.source,b);break;case "ExportNamedDeclaration":d(a.declaration,b);break;case "ArrayExpression":h(a.elements,b);break;case "AssignmentExpression":case "BinaryExpression":d(a.left,b);d(a.right,b);break;case "BlockStatement":h(a.body,b);break;case "Program":h(a.body,b);break;
case "CallExpression":d(a.callee,b);h(a.arguments,b);break;case "ExpressionStatement":d(a.expression,b);break;case "ForInStatement":d(a.left,b);d(a.right,b);d(a.body,b);break;case "ForStatement":d(a.init,b);d(a.test,b);d(a.update,b);d(a.body,b);break;case "WhileStatement":d(a.test,b);d(a.body,b);break;case "FunctionDeclaration":d(a.id,b);h(a.params,b);d(a.body,b);break;case "IfStatement":d(a.test,b);d(a.consequent,b);d(a.alternate,b);break;case "LogicalExpression":d(a.left,b);d(a.right,b);break;case "MemberExpression":d(a.object,
b);d(a.property,b);break;case "ObjectExpression":h(a.properties,b);break;case "Property":d(a.key,b);d(a.value,b);break;case "ReturnStatement":d(a.argument,b);break;case "UnaryExpression":d(a.argument,b);break;case "UpdateExpression":d(a.argument,b);break;case "VariableDeclaration":h(a.declarations,b);break;case "VariableDeclarator":d(a.id,b);d(a.init,b);break;case "TemplateLiteral":h(a.expressions,b),h(a.quasis,b)}}function q(a,b){let c=!1;const e=b.toLowerCase();d(a,f=>{if(c)return!1;"Identifier"===
f.type&&f.name&&f.name.toLowerCase()===e&&(c=!0);return!0});return c}function r(a){const b=[];d(a,c=>{"ImportDeclaration"===c.type&&c.source&&c.source.value&&b.push({libname:c.specifiers[0].local.name.toLowerCase(),source:c.source.value});return!0});return b}function n(a){const b=[];d(a,c=>{"CallExpression"===c.type&&"Identifier"===c.callee.type&&b.push(c.callee.name.toLowerCase());return!0});return b}const t={all:{min:2,max:2},time:{min:0,max:4},dateonly:{min:0,max:3},getenvironment:{min:0,max:0},
none:{min:2,max:2},any:{min:2,max:2},reduce:{min:2,max:3},map:{min:2,max:2},filter:{min:2,max:2},fromcodepoint:{min:1,max:-1},fromcharcode:{min:1,max:-1},tocodepoint:{min:1,max:2},tocharcode:{min:1,max:2},concatenate:{min:0,max:-1},expects:{min:1,max:-1},getfeatureset:{min:1,max:2},week:{min:1,max:2},fromjson:{min:1,max:1},length3d:{min:1,max:2},tohex:{min:1,max:1},hash:{min:1,max:1},timezone:{min:1,max:1},timezoneoffset:{min:1,max:1},changetimezone:{min:2,max:2},isoweek:{min:1,max:1},isoweekday:{min:1,
max:1},hasvalue:{min:2,max:2},isomonth:{min:1,max:1},isoyear:{min:1,max:1},resize:{min:2,max:3},slice:{min:0,max:-1},splice:{min:0,max:-1},push:{min:2,max:2},pop:{min:1,max:1},includes:{min:2,max:2},array:{min:0,max:2},front:{min:1,max:1},back:{min:1,max:1},insert:{min:3,max:3},erase:{min:2,max:2},split:{min:2,max:4},guid:{min:0,max:1},standardizeguid:{min:2,max:2},today:{min:0,max:0},angle:{min:2,max:3},bearing:{min:2,max:3},urlencode:{min:1,max:1},now:{min:0,max:0},timestamp:{min:0,max:0},day:{min:1,
max:1},month:{min:1,max:1},year:{min:1,max:1},hour:{min:1,max:1},second:{min:1,max:1},millisecond:{min:1,max:1},minute:{min:1,max:1},weekday:{min:1,max:1},toutc:{min:1,max:1},tolocal:{min:1,max:1},date:{min:0,max:8},datediff:{min:2,max:4},dateadd:{min:2,max:3},trim:{min:1,max:1},text:{min:1,max:2},left:{min:2,max:2},right:{min:2,max:2},mid:{min:2,max:3},upper:{min:1,max:1},proper:{min:1,max:2},lower:{min:1,max:1},find:{min:2,max:3},iif:{min:3,max:3},decode:{min:2,max:-1},when:{min:2,max:-1},defaultvalue:{min:2,
max:3},isempty:{min:1,max:1},domaincode:{min:2,max:4},domainname:{min:2,max:4},polygon:{min:1,max:1},point:{min:1,max:1},polyline:{min:1,max:1},extent:{min:1,max:1},multipoint:{min:1,max:1},ringisclockwise:{min:1,max:1},geometry:{min:1,max:1},count:{min:0,max:-1},number:{min:1,max:2},acos:{min:1,max:1},asin:{min:1,max:1},atan:{min:1,max:1},atan2:{min:2,max:2},ceil:{min:1,max:2},floor:{min:1,max:2},round:{min:1,max:2},cos:{min:1,max:1},exp:{min:1,max:1},log:{min:1,max:1},min:{min:0,max:-1},constrain:{min:3,
max:3},console:{min:0,max:-1},max:{min:0,max:-1},pow:{min:2,max:2},random:{min:0,max:0},sqrt:{min:1,max:1},sin:{min:1,max:1},tan:{min:1,max:1},abs:{min:1,max:1},isnan:{min:1,max:1},stdev:{min:0,max:-1},average:{min:0,max:-1},mean:{min:0,max:-1},sum:{min:0,max:-1},variance:{min:0,max:-1},distinct:{min:0,max:-1},first:{min:1,max:1},top:{min:2,max:2},boolean:{min:1,max:1},dictionary:{min:0,max:-1},typeof:{min:1,max:1},reverse:{min:1,max:1},replace:{min:3,max:4},sort:{min:1,max:2},feature:{min:1,max:-1},
haskey:{min:2,max:2},indexof:{min:2,max:2},disjoint:{min:2,max:2},intersects:{min:2,max:2},touches:{min:2,max:2},crosses:{min:2,max:2},within:{min:2,max:2},contains:{min:2,max:2},overlaps:{min:2,max:2},equals:{min:2,max:2},relate:{min:3,max:3},intersection:{min:2,max:2},union:{min:1,max:2},difference:{min:2,max:2},symmetricdifference:{min:2,max:2},clip:{min:2,max:2},cut:{min:2,max:2},area:{min:1,max:2},areageodetic:{min:1,max:2},length:{min:1,max:2},lengthgeodetic:{min:1,max:2},distancegeodetic:{min:2,
max:3},distance:{min:2,max:3},densify:{min:2,max:3},densifygeodetic:{min:2,max:3},generalize:{min:2,max:4},buffer:{min:2,max:3},buffergeodetic:{min:2,max:3},offset:{min:2,max:6},rotate:{min:2,max:3},issimple:{min:1,max:1},simplify:{min:1,max:1},convexhull:{min:1,max:1},centroid:{min:1,max:1},nearestcoordinate:{min:2,max:2},nearestvertex:{min:2,max:2},isselfintersecting:{min:1,max:1},multiparttosinglepart:{min:1,max:1},setgeometry:{min:2,max:2},portal:{min:1,max:1},getuser:{min:0,max:2},subtypes:{min:1,
max:1},subtypecode:{min:1,max:1},subtypename:{min:1,max:1},domain:{min:2,max:3},convertdirection:{min:3,max:3},sqltimestamp:{min:1,max:3},schema:{min:1,max:1}},l={functionDefinitions:new Map,constantDefinitions:new Map},m={functionDefinitions:new Map,constantDefinitions:new Map};for(var k of["pi","infinity"])m.constantDefinitions.set(k,{type:"constant"}),l.constantDefinitions.set(k,{type:"constant"});m.constantDefinitions.set("textformatting",{type:"namespace",key:"textformatting",members:[{key:"backwardslash",
type:"constant"},{key:"doublequote",type:"constant"},{key:"forwardslash",type:"constant"},{key:"tab",type:"constant"},{key:"singlequote",type:"constant"},{key:"newline",type:"constant"}]});l.constantDefinitions.set("textformatting",{type:"namespace",key:"textformatting",members:[{key:"backwardslash",type:"constant"},{key:"tab",type:"constant"},{key:"singlequote",type:"constant"},{key:"doublequote",type:"constant"},{key:"forwardslash",type:"constant"},{key:"newline",type:"constant"}]});for(const a in t)k=
t[a],m.functionDefinitions.set(a,{overloads:[{type:"function",parametersInfo:{min:k.min,max:k.max}}]}),l.functionDefinitions.set(a,{overloads:[{type:"function",parametersInfo:{min:k.min,max:k.max}}]});const u=new Set("featureset featuresetbyid featuresetbyname featuresetbyassociation featuresetbyrelationshipname featuresetbyurl getfeatureset getuser attachments featuresetbyportalitem getfeaturesetinfo filterbysubtypecode".split(" ")),v=new Set("disjoint intersects touches crosses within contains overlaps equals relate intersection nearestvertex nearestcoordinate union difference symmetricdifference clip cut area areageodetic length length3d lengthgeodetic distance distancegeodetic densify densifygeodetic generalize buffer buffergeodetic offset rotate issimple convexhull simplify multiparttosinglepart".split(" "));
g.addFunctionDeclaration=function(a,b){b="sync"===b?l:m;b.functionDefinitions.has(a.name.toLowerCase())?b.functionDefinitions.get(a.name.toLowerCase())?.overloads.push({type:"function",parametersInfo:{min:a.min,max:a.max}}):b.functionDefinitions.set(a.name.toLowerCase(),{overloads:[{type:"function",parametersInfo:{min:a.min,max:a.max}}]})};g.extractFunctionDeclaration=function(a,b){const c=[];if(void 0!==b.params&&null!==b.params)for(let e=0;e<b.params.length;e++)c.push("any");return{name:a,return:"any",
params:c}};g.findExpectedFieldLiterals=function(a){const b=[];d(a,c=>{if("CallExpression"===c.type){if("Identifier"===c.callee.type&&"expects"===c.callee.name.toLowerCase()){var e="";for(let f=0;f<(c.arguments||[]).length;f++)0===f?"Identifier"===c.arguments[f].type&&(e=c.arguments[f].name.toLowerCase()):e&&"Literal"===c.arguments[f].type&&p(c.arguments[f].value)&&b.push(e+"."+c.arguments[f].value.toLowerCase());return!1}if("Identifier"===c.callee.type&&["domainname","domaincode","domain","haskey"].includes(c.callee.name.toLowerCase())&&
2<=c.arguments.length)return e="","Identifier"===c.arguments[0].type&&(e=c.arguments[0].name.toLowerCase()),e&&"Literal"===c.arguments[1].type&&p(c.arguments[1].value)&&b.push(e+"."+c.arguments[1].value.toLowerCase()),!1}if("MemberExpression"!==c.type||"Identifier"!==c.object.type)return!0;!1===c.computed&&c.object&&c.object.name&&c.property&&"Identifier"===c.property.type&&c.property.name?b.push(c.object.name.toLowerCase()+"."+c.property.name.toLowerCase()):c.object&&c.object.name&&c.property&&"Literal"===
c.property.type&&"string"===typeof c.property.value&&b.push(c.object.name.toLowerCase()+"."+c.property.value?.toString().toLowerCase());return!1});return b};g.findFieldLiterals=function(a){const b=[];d(a,c=>{if("MemberExpression"!==c.type||"Identifier"!==c.object.type)return!0;!1===c.computed&&c.object&&c.object.name&&c.property&&"Identifier"===c.property.type&&c.property.name?b.push(c.object.name.toLowerCase()+"."+c.property.name.toLowerCase()):c.object&&c.object.name&&c.property&&"Literal"===c.property.type&&
"string"===typeof c.property.value&&b.push(c.object.name.toLowerCase()+"."+c.property.value?.toString().toLowerCase());return!1});return b};g.findFunctionCalls=n;g.findModuleImports=r;g.findScriptDependencies=function(a,b=[]){let c=null;if(void 0===a.usesFeatureSet){null===c&&(c=n(a));a.usesFeatureSet=!1;for(let e=0;e<c.length;e++)u.has(c[e])&&(a.usesFeatureSet=!0,a.isAsync=!0);if(!1===a.usesFeatureSet&&b&&0<b.length)for(const e of b)if(q(a,e)){a.usesFeatureSet=!0;a.isAsync=!0;break}}void 0===a.usesModules&&
(a.usesModules=!1,0<r(a).length&&(a.usesModules=!0));if(void 0===a.usesGeometry)for(a.usesGeometry=!1,null===c&&(c=n(a)),b=0;b<c.length;b++)v.has(c[b])&&(a.usesGeometry=!0)};g.fullArcadeApiAsync=m;g.fullArcadeApiSync=l;g.referencesFunction=function(a,b){let c=!1;const e=b.toLowerCase();d(a,f=>c?!1:"CallExpression"===f.type&&"Identifier"===f.callee.type&&f.callee.name&&f.callee.name.toLowerCase()===e?(c=!0,!1):!0);return c};g.referencesMember=q;g.scriptUsesFeatureSet=function(a){a=n(a);for(let b=0;b<
a.length;b++)if(u.has(a[b]))return!0;return!1};g.walk=d;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});