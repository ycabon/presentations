// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports","../config"],function(d,m){function h(a){if(!a)return"arial-unicode-ms";a=a.toLowerCase().split(" ").join("-");switch(a){case "serif":return"noto-serif";case "sans-serif":return"arial-unicode-ms";case "monospace":return"ubuntu-mono";case "fantasy":return"cabin-sketch";case "cursive":return"redressed";default:return a}}function k(a){a:{if(a.weight)switch(a.weight.toLowerCase()){case "bold":case "bolder":var b="-bold";break a}b=""}a:{if(a.style)switch(a.style.toLowerCase()){case "italic":case "oblique":var e=
"-italic";break a}e=""}b+=e;return h(a.family)+(0<b.length?b:"-regular")}const f=new Map,g=new Set;class n{constructor(a,b){this.fontFace=a;this.promise=b}}d.clearFonts=function(){const a=document.fonts;f.forEach(b=>{a.delete(b.fontFace)});f.clear();g.clear()};d.defaultFontFamily="arial-unicode-ms";d.getFontFamily=h;d.getFullyQualifiedFontName=k;d.isCachedFontFace=function(a){return g.has(a)};d.loadFont=async function(a){const b=k(a),e=f.get(b);if(e)return e.promise;const c=new FontFace(a.family,
`url('${m.fontsUrl}/woff2/${b}.${"woff2"}') format('${"woff2"}')`,{style:a.style,weight:a.weight}),l=document.fonts;if(l.has(c)&&"loading"===c.status)return c.loaded;a=c.load().then(()=>{l.add(c);return c});f.set(b,new n(c,a));g.add(c);return a};Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});