// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../arcade/featureset/support/errorsupport ../string ./DateOnly ./sqlCompareUtils ./sqlDateParsingUtils ./TimeOnly ../../chunks/datetime".split(" "),function(k,c,q,g,r,e,l,t){function h(a){return"string"===typeof a||a instanceof String}function m(a){return e.isDate(a)||e.isDateOnly(a)||e.isDateTime(a)||e.isTimeOnly(a)||e.isTimestampOffset(a)?!1:!0}function n(a){return e.isDateOnly(a)||e.isTimeOnly(a)?a.toString():e.isTimestampOffset(a)?a.toSQLValue():e.isDateTime(a)?0===a.millisecond?
a.toFormat("yyyy-LL-dd HH:mm:ss"):a.toSQL({includeOffset:!1}):e.isDate(a)?n(t.DateTime.fromJSDate(a)):a.toString()}function u(a){if(e.isDate(a))return g.DateOnly.fromDateJS(a);if(e.isDateTime(a))return g.DateOnly.fromParts(a.year,a.month,a.day);if(e.isDateOnly(a))return a;if(e.isTimeOnly(a))throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);if(e.isTimestampOffset(a)&&null===g.DateOnly.fromParts(a.year,a.month,a.day))throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);if(h(a)&&(a=g.DateOnly.fromReader(a),
null!==a&&a.isValid))return a;throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);}function v(a,b,d){if(e.isDate(a))return e.convertToExecutingTimeZone(a,b);if(e.isDateTime(a))return a;if(e.isDateOnly(a))return a.toDateTimeLuxon("unknown");if(e.isTimeOnly(a))throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);if(e.isTimestampOffset(a))return a;if(h(a))return e.parseTimestamp(a,"unknown",d);throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);}function w(a){if(e.isDate(a))return l.TimeOnly.fromDateJS(a);
if(e.isDateTime(a))return l.TimeOnly.fromDateTime(a);if(e.isDateOnly(a))throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);if(e.isTimeOnly(a))return a;if(e.isTimestampOffset(a))return l.TimeOnly.fromSqlTimeStampOffset(a);if(h(a))return e.parseTime(a);throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);}const p={extract:{minParams:2,maxParams:2,evaluate:([a,b])=>{if(null==b)return null;if(e.isDate(b))switch(a.toUpperCase()){case "SECOND":return b.getSeconds();case "MINUTE":return b.getMinutes();
case "HOUR":return b.getHours();case "DAY":return b.getDate();case "MONTH":return b.getMonth()+1;case "YEAR":return b.getFullYear();case "TIMEZONE_HOUR":return 0;case "TIMEZONE_MINUTE":return 0}else if(e.isDateTime(b))switch(a.toUpperCase()){case "SECOND":return b.second;case "MINUTE":return b.minute;case "HOUR":return b.hour;case "DAY":return b.day;case "MONTH":return b.month;case "YEAR":return b.year}else if(e.isDateOnly(b))switch(a.toUpperCase()){case "DAY":return b.day;case "MONTH":return b.month;
case "YEAR":return b.year}else if(e.isTimeOnly(b))switch(a.toUpperCase()){case "SECOND":return b.second;case "MINUTE":return b.minute;case "HOUR":return b.hour}else if(e.isTimestampOffset(b))switch(a.toUpperCase()){case "SECOND":return b.second;case "MINUTE":return b.minute;case "HOUR":return b.hour;case "DAY":return b.day;case "MONTH":return b.month;case "YEAR":return b.year;case "TIMEZONE_HOUR":return b.timezoneOffsetHour;case "TIMEZONE_MINUTE":return b.timezoneOffsetMinutes}throw new c.SqlError(c.SqlErrorCodes.InvalidFunctionParameters,
{function:"EXTRACT"});}},substring:{minParams:2,maxParams:3,evaluate:a=>{if(2===a.length){const [b,d]=a;return null==b||null==d?null:b.toString().substring(d-1)}if(3===a.length){const [b,d,f]=a;return null==b||null==d||null==f?null:0>=f?"":b.toString().substring(d-1,d+f-1)}}},position:{minParams:2,maxParams:2,evaluate:([a,b])=>null==a||null==b?null:b.indexOf(a)+1},trim:{minParams:2,maxParams:3,evaluate:a=>{var b=3===a.length,d=b?a[1]:" ";b=b?a[2]:a[1];if(null==d||null==b)return null;d=`(${q.escapeRegExpString(d)})`;
switch(a[0]){case "BOTH":return b.replaceAll(new RegExp(`^${d}*|${d}*$`,"g"),"");case "LEADING":return b.replaceAll(new RegExp(`^${d}*`,"g"),"");case "TRAILING":return b.replaceAll(new RegExp(`${d}*$`,"g"),"")}throw new c.SqlError(c.SqlErrorCodes.InvalidFunctionParameters,{function:"TRIM"});}},abs:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.abs(a[0])},ceiling:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.ceil(a[0])},floor:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:
Math.floor(a[0])},log:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.log(a[0])},log10:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.log(a[0])*Math.LOG10E},sin:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.sin(a[0])},cos:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.cos(a[0])},tan:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.tan(a[0])},asin:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.asin(a[0])},acos:{minParams:1,maxParams:1,
evaluate:a=>null==a[0]?null:Math.acos(a[0])},atan:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.atan(a[0])},sign:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:0<a[0]?1:0>a[1]?-1:0},power:{minParams:2,maxParams:2,evaluate:a=>null==a[0]||null==a[1]?null:a[0]**a[1]},mod:{minParams:2,maxParams:2,evaluate:a=>null==a[0]||null==a[1]?null:a[0]%a[1]},round:{minParams:1,maxParams:2,evaluate:a=>{const b=a[0];a=2===a.length?10**a[1]:1;return null==b?null:Math.round(b*a)/a}},truncate:{minParams:1,
maxParams:2,evaluate:a=>null==a[0]?null:1===a.length?parseInt(a[0].toFixed(0),10):parseFloat(a[0].toFixed(a[1]))},char_length:{minParams:1,maxParams:1,evaluate:a=>h(a[0])?a[0].length:0},concat:{minParams:1,maxParams:Infinity,evaluate:a=>{let b="";for(let d=0;d<a.length;d++){if(null==a[d])return null;b+=a[d].toString()}return b}},lower:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0].toString().toLowerCase()},upper:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:a[0].toString().toUpperCase()},
coalesce:{minParams:1,maxParams:Infinity,evaluate:a=>{for(const b of a)if(null!==b)return b;return null}},cosh:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.cosh(a[0])},sinh:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.sinh(a[0])},tanh:{minParams:1,maxParams:1,evaluate:a=>null==a[0]?null:Math.tanh(a[0])},nullif:{minParams:2,maxParams:2,evaluate:(a,b)=>r.sqlCompare(a[0],a[1],"\x3d")?null:a[0]},cast:{minParams:2,maxParams:2,evaluate:(a,b)=>{const d=a[0];a=a[1];if(null===d)return null;
switch(a.type){case "integer":if(!m(d))throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);b=parseInt(d,10);if(isNaN(b))throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);return b;case "smallint":if(!m(d))throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);b=parseInt(d,10);if(isNaN(b))throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);if(32767<b||-32767>b)throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);return b;case "float":case "real":if(!m(d))throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);
b=parseFloat(d);if(isNaN(b))throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);return b;case "time":return w(d);case "date":return u(d);case "timestamp":return v(d,b,!0===a.withtimezone);case "varchar":b=n(d);if(b.length>a.size)throw new c.SqlError(c.SqlErrorCodes.CannotCastValue);return b;default:throw new c.SqlError(c.SqlErrorCodes.InvalidDataType);}}}};k.evaluateFunction=function(a,b,d){const f=p[a.toLowerCase()];if(null==f)throw new c.SqlError(c.SqlErrorCodes.FunctionNotRecognized);if(b.length<
f.minParams||b.length>f.maxParams)throw new c.SqlError(c.SqlErrorCodes.InvalidParameterCount,{name:a.toUpperCase()});return f.evaluate(b,d)};k.isStandardized=function(a,b){a=p[a.toLowerCase()];return null!=a&&b>=a.minParams&&b<=a.maxParams};Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});