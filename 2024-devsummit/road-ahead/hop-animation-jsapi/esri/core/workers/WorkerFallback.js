// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["require","../nextTick","./RemoteClient","./utils"],function(h,f,g,d){function k(a){if(a&&a.__esModule)return a;const b=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(a)for(const c in a)if("default"!==c){const e=Object.getOwnPropertyDescriptor(a,c);Object.defineProperty(b,c,e.get?e:{enumerable:!0,get:()=>a[c]})}b.default=a;return Object.freeze(b)}class l{constructor(){const a=document.createDocumentFragment();["addEventListener","dispatchEvent","removeEventListener"].forEach(b=>
{this[b]=(...c)=>a[b](...c)})}}class m{constructor(){this._dispatcher=new l;this._workerPostMessage({type:d.MessageType.HANDSHAKE})}terminate(){}get onmessage(){return this._onmessageHandler}set onmessage(a){this._onmessageHandler&&this.removeEventListener("message",this._onmessageHandler);(this._onmessageHandler=a)&&this.addEventListener("message",a)}get onmessageerror(){return this._onmessageerrorHandler}set onmessageerror(a){this._onmessageerrorHandler&&this.removeEventListener("messageerror",
this._onmessageerrorHandler);(this._onmessageerrorHandler=a)&&this.addEventListener("messageerror",a)}get onerror(){return this._onerrorHandler}set onerror(a){this._onerrorHandler&&this.removeEventListener("error",this._onerrorHandler);(this._onerrorHandler=a)&&this.addEventListener("error",a)}postMessage(a){f.nextTick(()=>{this._workerMessageHandler(new MessageEvent("message",{data:a}))})}dispatchEvent(a){return this._dispatcher.dispatchEvent(a)}addEventListener(a,b,c){this._dispatcher.addEventListener(a,
b,c)}removeEventListener(a,b,c){this._dispatcher.removeEventListener(a,b,c)}_workerPostMessage(a){f.nextTick(()=>{this.dispatchEvent(new MessageEvent("message",{data:a}))})}async _workerMessageHandler(a){if((a=d.receiveMessage(a))&&a.type===d.MessageType.OPEN){const {modulePath:b,jobId:c}=a;(a=await g.loadWorker(b))||(a=await new Promise((e,n)=>h([b],p=>e(k(p)),n)));a=g.connect(a);this._workerPostMessage({type:d.MessageType.OPENED,jobId:c,data:a})}}}return m});