// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["./GeographicTransformationStep"],function(e){class d{static cacheKey(a,b){return[a.wkid?.toString()??"-1",a.wkt?.toString()??"",a.wkt2?.toString()??"",b.wkid?.toString()??"-1",b.wkt?.toString()??"",b.wkt2?.toString()??""].join()}static fromGE(a){const b=new d;let c="";for(const f of a.steps)a=e.fromGE(f),b.steps.push(a),c+=a.uid.toString()+",";b._cachedProjection={};b._gtlistentry=null;b._chain=c;return b}constructor(a){this.steps=[];this._cachedProjection={};this._chain="";this._gtlistentry=
null;if(a?.steps)for(const b of a.steps)b instanceof e?this.steps.push(b):this.steps.push(new e({wkid:b.wkid,wkt:b.wkt,isInverse:b.isInverse}))}getInverse(){const a=new d;a.steps=[];for(let b=this.steps.length-1;0<=b;b--)a.steps.push(this.steps[b].getInverse());return a}getGTListEntry(){let a="";for(const b of this.steps)a+=b.uid.toString()+",";a!==this._chain&&(this._gtlistentry=null,this._cachedProjection={},this._chain=a);return this._gtlistentry}assignCachedGe(a,b,c){this._cachedProjection[d.cacheKey(a,
b)]=c}getCachedGeTransformation(a,b){let c="";for(const f of this.steps)c+=f.uid.toString()+",";c!==this._chain&&(this._gtlistentry=null,this._cachedProjection={},this._chain=c);a=this._cachedProjection[d.cacheKey(a,b)];return void 0===a?null:a}}return d});