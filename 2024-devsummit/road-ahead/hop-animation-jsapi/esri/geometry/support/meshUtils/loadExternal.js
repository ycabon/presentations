// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/Error ../../../core/promiseUtils ../../../core/urlUtils ../../Point".split(" "),function(x,q,r,f,t,y){function z(a){const b=t.removeFile(a.url);return c=>{var d=t.makeRelative(c,b,b);return((d=d?d.replace(/^ *\.\//,""):null)?a.files.get(d):null)??c}}async function A(a,b){if(Array.isArray(a)){if(!a.length)throw new r("mesh-load-external:missing-assets","There must be at least one file to load");return a[0]instanceof File?B(a):C(a,b)}return g.fromBlob(a,l(a.name,
a.type))}async function D(a,b){const {parts:c,assetMimeType:d,assetName:e}=a;if(1===c.length)return new g(c[0].partUrl);a=await a.toBlob(b);f.throwIfAborted(b);return g.fromBlob(a,l(e,d))}function B(a){a=a.map(b=>({name:b.name,mimeType:b.type,source:g.fromBlob(b,l(b.name,b.type))}));return u(a)}async function C(a,b){a=await f.allSettledValues(a.map(async c=>{const d=await D(c);f.throwIfAborted(b);return{name:c.assetName,mimeType:c.assetMimeType,source:d}}));if(f.isAborted(b))throw a.forEach(c=>c.source.dispose()),
f.createAbortError();return u(a)}function u(a){const b=new Map;let c=null,d=void 0;for(const {name:e,mimeType:k,source:h}of a){if(null===c)if(v.test(k)||m.test(e))c=h.url,d="gltf";else if(w.test(k)||E.test(e))c=h.url,d="glb";b.set(e,h.url);h.files.forEach((n,p)=>b.set(p,n))}if(null==c)throw new r("mesh-load-external:missing-files","Missing files to load external mesh source");return new g(c,()=>a.forEach(({source:e})=>e.dispose()),b,d)}function l(a,b){return v.test(b)||m.test(a)?"gltf":w.test(b)||
m.test(a)?"glb":void 0}const v=/^model\/gltf\+json$/,w=/^model\/gltf-binary$/,m=/\.gltf$/i,E=/\.glb$/i;class g{constructor(a,b=()=>{},c=new Map,d){this.url=a;this.dispose=b;this.files=c;this.type=d}static fromBlob(a,b){const c=URL.createObjectURL(a);return new g(c,()=>URL.revokeObjectURL(c),void 0,b)}}q.loadExternal=async function(a,b,c){({source:b}=b);const {loadGLTFMesh:d}=await f.whenOrAbort(new Promise((n,p)=>x(["./loadGLTFMesh"],n,p)),c),e=await A(b,c);f.throwIfAborted(c);c=d(new y({x:0,y:0,
z:0,spatialReference:a.spatialReference}),e.url,{resolveFile:z(e),useTransform:!0,signal:c?.signal,expectedType:e.type});c.then(()=>e.dispose(),()=>e.dispose());const {vertexAttributes:k,components:h}=await c;a.vertexAttributes=k;a.components=h};Object.defineProperty(q,Symbol.toStringTag,{value:"Module"})});