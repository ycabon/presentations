// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../chunks/tslib.es6 ../core/Error ../core/Logger ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/reactiveUtils ../core/accessorSupport/decorators/property ../core/has ../core/RandomLCG ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/persistable ./Layer ./mixins/APIKeyMixin ./mixins/ArcGISService ./mixins/CustomParametersMixin ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./mixins/SceneService ./support/commonProperties ./support/I3SLayerDefinitions ./support/SceneModifications ../support/elevationInfoUtils ../chunks/persistableUrlUtils".split(" "),
function(c,k,m,b,q,n,d,E,F,r,t,u,v,w,x,y,z,A,B,l,C,f,p,g,D){b=class extends l.SceneService(x.ArcGISService(z.OperationalLayer(A.PortalLayer(B.ScaleRangeLayer(b.MultiOriginJSONMixin(y.CustomParametersMixin(w.APIKeyMixin(v)))))))){constructor(...a){super(...a);this.geometryType="mesh";this.operationalLayerType="IntegratedMeshLayer";this.type="integrated-mesh";this.serviceUpdateTimeStamp=this.geometryDefinitions=this.textureSetDefinitions=this.materialDefinitions=this.nodePages=null;this.profile="mesh-pyramids";
this.path=this._modificationsSource=this.modifications=null}initialize(){this.addHandles(n.on(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,n.sync))}normalizeCtorArgs(a,e){return"string"===typeof a?{url:a,...e}:a}readModifications(a,e,h){this._modificationsSource={url:D.fromJSON(a,h),context:h}}set elevationInfo(a){this._set("elevationInfo",a);this._validateElevationInfo()}async load(a){this.addResolvingPromise(this._doLoad(a));return this}async _doLoad(a){const e=
a?.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},a)}catch(h){q.throwIfAbortError(h)}await this._fetchService(e);null!=this._modificationsSource&&(a=await p.fromUrl(this._modificationsSource.url,this.spatialReference,a),this.setAtOrigin("modifications",a,this._modificationsSource.context.origin),this._modificationsSource=null);await this._fetchIndexAndUpdateExtent(this.nodePages,e)}beforeSave(){if(null!=this._modificationsSource)return this.load().then(()=>{},()=>{})}async saveAs(a,
e){return this._debouncedSaveOperations(l.SaveOperationType.SAVE_AS,{...e,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},a)}async save(){return this._debouncedSaveOperations(l.SaveOperationType.SAVE,{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"})}validateLayer(a){if(a.layerType&&"IntegratedMesh"!==a.layerType)throw new k("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:a.layerType});
if(isNaN(this.version.major)||isNaN(this.version.minor))throw new k("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(1<this.version.major)throw new k("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const a=this.elevationInfo;g.logInvalidElevationInfoWarning(m.getLogger(this),
g.elevationModeRequiredMessage("Integrated mesh layers","absolute-height",a));g.logInvalidElevationInfoWarning(m.getLogger(this),g.featureExpressionUnsupportedMessage("Integrated mesh layers",a))}};c.__decorate([d.property({type:String,readOnly:!0})],b.prototype,"geometryType",void 0);c.__decorate([d.property({type:["show","hide"]})],b.prototype,"listMode",void 0);c.__decorate([d.property({type:["IntegratedMeshLayer"]})],b.prototype,"operationalLayerType",void 0);c.__decorate([d.property({json:{read:!1},
readOnly:!0})],b.prototype,"type",void 0);c.__decorate([d.property({type:f.I3SNodePageDefinition,readOnly:!0})],b.prototype,"nodePages",void 0);c.__decorate([d.property({type:[f.I3SMaterialDefinition],readOnly:!0})],b.prototype,"materialDefinitions",void 0);c.__decorate([d.property({type:[f.I3STextureSetDefinition],readOnly:!0})],b.prototype,"textureSetDefinitions",void 0);c.__decorate([d.property({type:[f.I3SGeometryDefinition],readOnly:!0})],b.prototype,"geometryDefinitions",void 0);c.__decorate([d.property({readOnly:!0})],
b.prototype,"serviceUpdateTimeStamp",void 0);c.__decorate([d.property({type:p}),u.persistable({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],b.prototype,"modifications",void 0);c.__decorate([r.reader(["web-scene","portal-item"],"modifications")],b.prototype,"readModifications",null);c.__decorate([d.property(C.elevationInfo)],b.prototype,"elevationInfo",null);c.__decorate([d.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},
read:!1}})],b.prototype,"path",void 0);return b=c.__decorate([t.subclass("esri.layers.IntegratedMeshLayer")],b)});