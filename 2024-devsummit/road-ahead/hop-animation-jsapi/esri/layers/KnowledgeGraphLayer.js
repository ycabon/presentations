// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../chunks/tslib.es6 ../core/Collection ../core/Error ../core/Logger ../core/accessorSupport/decorators/property ../core/has ../core/RandomLCG ../core/accessorSupport/decorators/subclass ./Layer ./knowledgeGraph/KnowledgeGraphLayerDataManager ./knowledgeGraph/KnowledgeGraphSublayer ./mixins/BlendLayer ./mixins/ScaleRangeLayer ../rest/knowledgeGraphService ../rest/knowledgeGraph/EntityType ../rest/knowledgeGraph/RelationshipType".split(" "),function(f,m,p,n,g,e,B,q,r,t,l,u,v,w,x,y){const z=
(a,b,c)=>{a.has(b)||a.set(b,c());return a.get(b)};e=class extends u.BlendLayer(v.ScaleRangeLayer(r)){constructor(a){super(a);this._graphTypeLookup=new Map;this.knowledgeGraph=this.dataManager=null;this.layers=new m;this.memberRelationshipTypes=this.memberEntityTypes=null;this.sublayerIdsCache=new Map;this.tables=new m;this.type="knowledge-graph";this._originalInclusionList=a.inclusionModeDefinition}normalizeCtorArgs(a){return{url:a.url,title:a.title}}load(){this.addResolvingPromise(w.fetchKnowledgeGraph(this.url).then(a=>
{this._initializeLayerProperties({knowledgeGraph:a,inclusionModeDefinition:this._originalInclusionList});this.loadLayerAssumingLocalCache()}));return Promise.resolve(this)}_initializeLayerProperties(a){const b=new Set;let c=[],k=[];if(a.inclusionModeDefinition&&(!a.inclusionModeDefinition.namedTypeDefinitions||1>a.inclusionModeDefinition.namedTypeDefinitions.size))throw new p("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");
a.knowledgeGraph.dataModel.entityTypes?.forEach(h=>{h.name&&this._graphTypeLookup.set(h.name,h)});a.knowledgeGraph.dataModel.relationshipTypes?.forEach(h=>{h.name&&this._graphTypeLookup.set(h.name,h)});a.inclusionModeDefinition?.generateAllSublayers?(c=a.knowledgeGraph.dataModel.entityTypes??[],k=a.knowledgeGraph.dataModel.relationshipTypes??[]):a.inclusionModeDefinition?.namedTypeDefinitions&&0<a.inclusionModeDefinition?.namedTypeDefinitions.size?a.inclusionModeDefinition?.namedTypeDefinitions.forEach((h,
d)=>{this._graphTypeLookup.get(d)?this._graphTypeLookup.get(d)instanceof y||"strictOrigin"in this._graphTypeLookup.get(d)?b.has(d)||(b.add(d),k.push(this._graphTypeLookup.get(d))):this._graphTypeLookup.get(d)instanceof x||"properties"in this._graphTypeLookup.get(d)?b.has(d)||(b.add(d),c.push(this._graphTypeLookup.get(d))):(n.getLogger(this).warn(`A named type, ${d}, was in the inclusion list that wasn't properly modeled and will be removed`),a.inclusionModeDefinition?.namedTypeDefinitions.delete(d)):
(n.getLogger(this).warn(`A named type, ${d}, was in the inclusion list that wasn't in the data model and will be removed`),a.inclusionModeDefinition?.namedTypeDefinitions.delete(d))}):(c=a.knowledgeGraph.dataModel.entityTypes??[],k=a.knowledgeGraph.dataModel.relationshipTypes??[]);const A=new t.KnowledgeGraphLayerDataManager({knowledgeGraph:a.knowledgeGraph,inclusionModeDefinition:a.inclusionModeDefinition});this.knowledgeGraph=a.knowledgeGraph;this.memberEntityTypes=c;this.memberRelationshipTypes=
k;this.dataManager=A}_refreshNamedTypes(){for(const a of this.layers)a.emit("refresh",{dataChanged:!0});for(const a of this.tables)a.emit("refresh",{dataChanged:!0})}async _handleNewRecords(a){var b=[];this.dataManager.addToLayer(a);for(const c of a)this.sublayerIdsCache.has(c.typeName)||(this.sublayerIdsCache.set(c.typeName,new Set),b.push(c.typeName)),this.sublayerIdsCache.get(c.typeName).add(c.id);for(const c of b)this._graphTypeLookup.has(c)&&(b=this._graphTypeLookup.get(c),a="endPoints"in b?
"relationship":"entity",b=new l({objectType:b,parentCompositeLayer:this,graphType:a,title:c}),"entity"===a?this.dataManager.entityTypeNames.add(c):this.dataManager.relationshipTypeNames.add(c),b.geometryType?this.layers.push(b):this.tables.push(b),this.dataManager.sublayerCaches.set(c,new Map));this._refreshNamedTypes()}loadLayerAssumingLocalCache(){this.memberEntityTypes.forEach(a=>{const b=new l({objectType:a,parentCompositeLayer:this,graphType:"entity",title:a.name});b.geometryType?this.layers.push(b):
this.tables.push(b);this.dataManager.sublayerCaches.has(a.name)||this.dataManager.sublayerCaches.set(a.name,new Map)});this.memberRelationshipTypes.forEach(a=>{const b=new l({objectType:a,parentCompositeLayer:this,graphType:"relationship",title:a.name});b.geometryType?this.layers.push(b):this.tables.push(b);this.dataManager.sublayerCaches.has(a.name)||this.dataManager.sublayerCaches.set(a.name,new Map)});this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((a,
b)=>{const c=z(this.sublayerIdsCache,b,()=>new Set);a.members?.forEach(k=>{c.add(k.id)})})}async addRecords(a){await this._handleNewRecords(a)}async removeRecords(a){const b=[];for(const c of a)!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(c.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(c.typeName)?.members?.has(c.id)&&b.push(c);this.dataManager.removeFromLayer(b);for(const c of b)this.sublayerIdsCache.get(c.typeName)?.delete(c.id);
this._refreshNamedTypes();return b}};f.__decorate([g.property()],e.prototype,"dataManager",void 0);f.__decorate([g.property()],e.prototype,"knowledgeGraph",void 0);f.__decorate([g.property()],e.prototype,"layers",void 0);f.__decorate([g.property()],e.prototype,"memberEntityTypes",void 0);f.__decorate([g.property()],e.prototype,"memberRelationshipTypes",void 0);f.__decorate([g.property()],e.prototype,"sublayerIdsCache",void 0);f.__decorate([g.property()],e.prototype,"tables",void 0);f.__decorate([g.property({json:{read:!1}})],
e.prototype,"type",void 0);return e=f.__decorate([q.subclass("esri.layers.KnowledgeGraphLayer")],e)});