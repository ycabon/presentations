// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../chunks/tslib.es6 ../geometry ../core/Collection ../core/Error ../core/Logger ../core/promiseUtils ../core/accessorSupport/decorators/property ../core/has ../core/RandomLCG ../core/accessorSupport/decorators/subclass ../geohash/geohashUtils ./Layer ./graphics/featureConversionUtils ./graphics/OptimizedGeometry ./knowledgeGraph/KnowledgeGraphLayerDataManager ./knowledgeGraph/KnowledgeGraphSublayer ./knowledgeGraph/supportUtils ./mixins/BlendLayer ./mixins/ScaleRangeLayer ../libs/linkchartlayout/LinkChartLayout ../rest/knowledgeGraphService ../rest/knowledgeGraph/EntityType ../rest/knowledgeGraph/RelationshipType ../geometry/Extent ../geometry/Point ../geometry/Polyline".split(" "),
function(w,r,I,E,F,S,x,ca,da,T,B,U,A,J,f,G,V,W,X,t,Y,Z,aa,K,L,M){const ba=(b,c,d)=>{b.has(c)||b.set(c,d());return b.get(c)};r=class extends W.BlendLayer(X.ScaleRangeLayer(U)){constructor(b){super(b);this.dataPreloadedInLocalCache=!1;this.defaultLinkChartConfig=null;this._currentLinkChartConfig={layoutMode:"RADIAL_TREE",xScaleFactor:1,yScaleFactor:1};this._graphTypeLookup=new Map;this.knowledgeGraph=this.dataManager=null;this.layers=new I;this.entityLinkChartDiagramLookup=new Map;this.relationshipLinkChartDiagramLookup=
new Map;this.linkChartExtent=new K({xmin:-1E-7,ymin:-1E-7,xmax:1E-7,ymax:1E-7});this.linkChartGeohashLookup=new Map;this.memberRelationshipTypes=this.memberEntityTypes=null;this.sublayerIdsCache=new Map;this.tables=new I;this.type="link-chart";this._originalInclusionList=b.inclusionModeDefinition;if(b.dataPreloadedInLocalCache&&!b.inclusionModeDefinition)throw new E("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");
}normalizeCtorArgs(b){return{url:b.url,title:b.title,dataPreloadedInLocalCache:b.dataPreloadedInLocalCache,defaultLinkChartConfig:b.defaultLinkChartConfig}}_initializeLayerProperties(b){if(!this.title&&this.url){var c=this.url.split("/");this.title=c[c.length-2]}const d=new Set;let a=[],h=[];if(b.inclusionModeDefinition&&(!b.inclusionModeDefinition.namedTypeDefinitions||1>b.inclusionModeDefinition.namedTypeDefinitions.size))throw new E("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");
b.knowledgeGraph.dataModel.entityTypes?.forEach(g=>{g.name&&this._graphTypeLookup.set(g.name,g)});b.knowledgeGraph.dataModel.relationshipTypes?.forEach(g=>{g.name&&this._graphTypeLookup.set(g.name,g)});b.inclusionModeDefinition?.generateAllSublayers?(a=b.knowledgeGraph.dataModel.entityTypes??[],h=b.knowledgeGraph.dataModel.relationshipTypes??[]):b.inclusionModeDefinition?.namedTypeDefinitions&&0<b.inclusionModeDefinition?.namedTypeDefinitions.size?b.inclusionModeDefinition?.namedTypeDefinitions.forEach((g,
p)=>{this._graphTypeLookup.get(p)?this._graphTypeLookup.get(p)instanceof aa||"strictOrigin"in this._graphTypeLookup.get(p)?d.has(p)||(d.add(p),h.push(this._graphTypeLookup.get(p))):this._graphTypeLookup.get(p)instanceof Z||"properties"in this._graphTypeLookup.get(p)?d.has(p)||(d.add(p),a.push(this._graphTypeLookup.get(p))):(F.getLogger(this).warn(`A named type, ${p}, was in the inclusion list that wasn't properly modeled and will be removed`),b.inclusionModeDefinition?.namedTypeDefinitions.delete(p)):
(F.getLogger(this).warn(`A named type, ${p}, was in the inclusion list that wasn't in the data model and will be removed`),b.inclusionModeDefinition?.namedTypeDefinitions.delete(p))}):(a=b.knowledgeGraph.dataModel.entityTypes??[],h=b.knowledgeGraph.dataModel.relationshipTypes??[]);c=new f.KnowledgeGraphLayerDataManager({knowledgeGraph:b.knowledgeGraph,inclusionModeDefinition:b.inclusionModeDefinition});this.knowledgeGraph=b.knowledgeGraph;this.memberEntityTypes=a;this.memberRelationshipTypes=h;this.dataManager=
c}load(b){this.addResolvingPromise(new Promise(c=>{Y.fetchKnowledgeGraph(this.url).then(d=>{this._initializeLayerProperties({knowledgeGraph:d,inclusionModeDefinition:this._originalInclusionList});this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach(a=>{a.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(a.name,
{useAllData:!0})}),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach(a=>{a.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(a.name,{useAllData:!0})}));this.dataPreloadedInLocalCache?(this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(a=>{a.useAllData=!1;a.members?.forEach(h=>{let g;(g=h.linkChartLocation instanceof
J?h.linkChartLocation:h.linkChartLocation?A.convertFromGeometry(h.linkChartLocation):null)&&2===g.coords.length&&0===g.lengths.length?(this.linkChartGeohashLookup.set(h.id,B.encodeGeohash(g.coords[1],g.coords[0],f.geohashEncodingPrecision)),this.entityLinkChartDiagramLookup.set(h.id,g)):(this.linkChartGeohashLookup.set(h.id,""),this.relationshipLinkChartDiagramLookup.set(h.id,g))});this.addResolvingPromise(this._initializeDiagram().then(async()=>{this.layers.forEach(async h=>{await h.refreshCachedQueryEngine()});
this.tables.forEach(async h=>{await h.refreshCachedQueryEngine()})}))})):this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,"GEOGRAPHIC"===this.defaultLinkChartConfig?.layoutMode,!0).then(async()=>{S.throwIfAborted(b);const a=[],h=[];this.loadLayerAssumingLocalCache();this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach(g=>{g.useAllData=!1}));await this._initializeDiagram();
this.layers.forEach(g=>{h.push(g.refreshCachedQueryEngine());a.push(new Promise(p=>{g.on("layerview-create",()=>{p(null)})}))});this.tables.forEach(g=>{h.push(g.refreshCachedQueryEngine())});await Promise.all(h)}));c(null)})}));return Promise.resolve(this)}async addRecords(b,c){let d=[];c?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(d=await V.getRelationshipEndNodeIds(b,this.dataManager.knowledgeGraph));b=b.concat(d).filter(a=>!this.sublayerIdsCache.get(a.typeName)?.has(a.id));
await this._handleNewRecords(b)}async removeRecords(b,{cascadeRemoveRelationships:c=!0,recalculateLayout:d=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1}){let a=[];for(const g of b)!1===this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(g.typeName)?.useAllData&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(g.typeName)?.members?.has(g.id)&&a.push(g);if(c){b=new Set;c=[];for(const g of a)if(this.dataManager.nodeConnectionsLookup.has(g.id))for(const p of this.dataManager.nodeConnectionsLookup.get(g.id))b.add(p);
for(const g of b)if(this.dataManager.memberIdTypeLookup.has(g))for(const p of this.dataManager.memberIdTypeLookup.get(g))this.dataManager.relationshipTypeNames.has(p)&&c.push({id:g,typeName:p});a=a.concat(c)}this.dataManager.removeFromLayer(a);for(const g of a)this.sublayerIdsCache.get(g.typeName)?.delete(g.id),this.dataManager.relationshipTypeNames.has(g.typeName)?this.relationshipLinkChartDiagramLookup.delete(g.id):this.entityLinkChartDiagramLookup.delete(g.id);d&&await this.calculateLinkChartLayout(this._currentLinkChartConfig.layoutMode,
{xScaleFactor:this._currentLinkChartConfig.xScaleFactor,yScaleFactor:this._currentLinkChartConfig.xScaleFactor});const h=[];this.layers.forEach(g=>{h.push(g.refreshCachedQueryEngine())});await Promise.all(h);this._refreshNamedTypes();return a}async expand(b,c){b=await this.dataManager.getConnectedRecordIds(b,c);c=b.filter(d=>!this.sublayerIdsCache.get(d.typeName)?.has(d.id));await this._handleNewRecords(b);return{records:c}}loadLayerAssumingLocalCache(){this.memberRelationshipTypes.forEach(b=>{const c=
new G({objectType:b,parentCompositeLayer:this,graphType:"relationship",title:b.name});c.geometryType?this.layers.push(c):this.tables.push(c);this.dataManager.sublayerCaches.has(b.name)||this.dataManager.sublayerCaches.set(b.name,new Map)});this.memberEntityTypes.forEach(b=>{const c=new G({objectType:b,parentCompositeLayer:this,graphType:"entity",title:b.name});c.geometryType?this.layers.push(c):this.tables.push(c);this.dataManager.sublayerCaches.has(b.name)||this.dataManager.sublayerCaches.set(b.name,
new Map)});this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((b,c)=>{const d=ba(this.sublayerIdsCache,c,()=>new Set);b.members?.forEach(a=>{d.add(a.id);if(a.linkChartLocation)if(a.linkChartLocation instanceof J)this.dataManager.relationshipTypeNames.has(c)?this.relationshipLinkChartDiagramLookup.set(a.id,a.linkChartLocation):this.entityLinkChartDiagramLookup.set(a.id,a.linkChartLocation),2===a.linkChartLocation.coords.length&&
0===a.linkChartLocation.lengths.length?this.linkChartGeohashLookup.set(a.id,B.encodeGeohash(a.linkChartLocation.coords[1],a.linkChartLocation.coords[0],f.geohashEncodingPrecision)):this.linkChartGeohashLookup.set(a.id,"");else{const h=A.convertFromGeometry(a.linkChartLocation);this.dataManager.relationshipTypeNames.has(c)?this.relationshipLinkChartDiagramLookup.set(a.id,a.linkChartLocation?h:null):this.entityLinkChartDiagramLookup.set(a.id,a.linkChartLocation?h:null);"x"in a.linkChartLocation&&"y"in
a.linkChartLocation?this.linkChartGeohashLookup.set(a.id,B.encodeGeohash(a.linkChartLocation.x,a.linkChartLocation.y,f.geohashEncodingPrecision)):this.linkChartGeohashLookup.set(a.id,"")}})})}async calculateLinkChartLayout(b="RADIAL_TREE",c){const d=[],a=[];this.dataManager.sublayerCaches.forEach((l,q)=>{this.dataManager.entityTypeNames.has(q)?l.forEach(k=>{d.push({typeName:q,feature:k})}):this.dataManager.relationshipTypeNames.has(q)&&l.forEach(k=>{a.push({typeName:q,feature:k})})});this.entityLinkChartDiagramLookup=
new Map;this.relationshipLinkChartDiagramLookup=new Map;const h=new Map,g=new Map,p=new Map,C=new Map,z=new Uint8Array(d.length),u=new Float64Array(d.length),v=new Float64Array(d.length),N=new Uint32Array(a.length),O=new Uint32Array(a.length),n=[],P=c?.xScaleFactor??1,Q=c?.yScaleFactor??1,y=new K({xmin:-1E-7,ymin:-1E-7,xmax:1E-7,ymax:1E-7});let m=0,H=0;switch("GEOGRAPHIC"===b?"FORCE_DIRECTED":b){case "FORCE_DIRECTED":var e=t.LCForceDirectedLayout.apply;break;case "COMMUNITY":e=t.LCCommunityLayout.apply;
break;case "HIERARCHICAL":e=t.LCHierarchicalLayout.apply;break;case "RADIAL_TREE":e=t.LCRadialTreeLayout.apply;break;case "SMART_TREE":e=t.LCSmartTreeLayout.apply;break;default:e=t.LCSimpleLayout.apply}d.forEach(({typeName:l,feature:q})=>{if(c?.lockedNodeLocations?.has(q.attributes[f.mockOidFieldName])){"GEOGRAPHIC"===b&&this.dataManager.geographicLookup.has(l)?z[m]=t.NodeFlag.IsGeographic:z[m]=t.NodeFlag.None;var k=c.lockedNodeLocations.get(q.attributes[f.mockOidFieldName]);u[m]=k.x;v[m]=k.y}else if("GEOGRAPHIC"===
b&&this.dataManager.geographicLookup.has(l)){z[m]=t.NodeFlag.IsGeographic;k=null;k=q.attributes[this.dataManager.geographicLookup.get(l).name];switch(this.dataManager.geographicLookup.get(l)?.geometryType){case "esriGeometryPoint":u[m]=k?.x;v[m]=k?.y;break;case "esriGeometryPolygon":k=k?.centroid;null!=k?.x&&null!=k?.y?(u[m]=k.x,v[m]=k.y):z[m]=t.NodeFlag.IsMovable;break;case "esriGeometryPolyline":k=k?.extent?.center;null!=k?.x&&null!=k?.y?(u[m]=k.x,v[m]=k.y):z[m]=t.NodeFlag.IsMovable;break;case "esriGeometryMultipoint":k=
k?.extent?.center;null!=k?.x&&null!=k?.y?(u[m]=k.x,v[m]=k.y):z[m]=t.NodeFlag.IsMovable;break;default:z[m]=t.NodeFlag.IsMovable}if(null==u[m]||null==v[m]||Number.isNaN(u[m])||Number.isNaN(v[m]))z[m]=t.NodeFlag.IsMovable,u[m]=0,v[m]=0}else z[m]=t.NodeFlag.IsMovable,u[m]=0,v[m]=0;C.set(q.attributes[f.mockOidFieldName],m);n[m]={feature:q,typeName:l};m++});let R=!1;a.forEach(l=>{const q=C.get(l.feature.attributes[f.mockOriginIdFieldName]),k=C.get(l.feature.attributes[f.mockDestinationIdFieldName]);void 0!==
q&&void 0!==k?(N[H]=q,O[H]=k,H++):(R=!0,this.relationshipLinkChartDiagramLookup.set(l.feature.attributes[f.mockOriginIdFieldName],null),this.linkChartGeohashLookup.set(l.feature.attributes[f.mockOriginIdFieldName],null))});R&&F.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");await t.load();({success:e}=e(z,u,v,N,O));if(!e)throw new E("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");
for(e=0;e<n.length;e++){z[e]===t.NodeFlag.IsMovable&&(u[e]*=P,v[e]*=Q);84.9999<v[e]&&(v[e]=84.9999);-84.9999>v[e]&&(v[e]=-84.9999);179.9999<u[e]&&(u[e]=179.9999);-179.9999>u[e]&&(u[e]=-179.9999);n[e].feature.attributes[f.mockLayoutGeometryFieldName]=new L(u[e],v[e]);if(h.has(n[e].typeName))h.get(n[e].typeName)?.set(n[e].feature.attributes[f.mockOidFieldName],n[e].feature);else{var D=new Map;D.set(n[e].feature.attributes[f.mockOidFieldName],n[e].feature);h.set(n[e].typeName,D)}p.set(n[e].feature.attributes[f.mockOidFieldName],
n[e].feature);D=A.convertFromGeometry(n[e].feature.attributes[f.mockLayoutGeometryFieldName]);this.entityLinkChartDiagramLookup.set(n[e].feature.attributes[f.mockOidFieldName],n[e].feature.attributes[f.mockLayoutGeometryFieldName]?D:null);this.linkChartGeohashLookup.set(n[e].feature.attributes[f.mockOidFieldName],B.encodeGeohash(n[e].feature.attributes[f.mockLayoutGeometryFieldName].y,n[e].feature.attributes[f.mockLayoutGeometryFieldName].x,f.geohashEncodingPrecision));n[e].feature.attributes[f.mockLayoutGeometryFieldName].x<
y.xmin&&(y.xmin=n[e].feature.attributes[f.mockLayoutGeometryFieldName].x);n[e].feature.attributes[f.mockLayoutGeometryFieldName].x>y.xmax&&(y.xmax=n[e].feature.attributes[f.mockLayoutGeometryFieldName].x);n[e].feature.attributes[f.mockLayoutGeometryFieldName].y<y.ymin&&(y.ymin=n[e].feature.attributes[f.mockLayoutGeometryFieldName].y);n[e].feature.attributes[f.mockLayoutGeometryFieldName].y>y.ymax&&(y.ymax=n[e].feature.attributes[f.mockLayoutGeometryFieldName].y)}this.linkChartExtent.xmin=y.xmin;this.linkChartExtent.xmax=
y.xmax;this.linkChartExtent.ymin=y.ymin;this.linkChartExtent.ymax=y.ymax;a.forEach(l=>{var q=n[C.get(l.feature.attributes[f.mockOriginIdFieldName])]?.feature.attributes[f.mockLayoutGeometryFieldName];const k=n[C.get(l.feature.attributes[f.mockDestinationIdFieldName])]?.feature.attributes[f.mockLayoutGeometryFieldName];q&&k&&(q=new M({paths:[[q.x,q.y],[k.x,k.y]]}),l.feature.attributes[f.mockLayoutGeometryFieldName]=q,g.has(l.typeName)?g.get(l.typeName)?.set(l.feature.attributes[f.mockOidFieldName],
l.feature):(q=new Map,q.set(l.feature.attributes[f.mockOidFieldName],l.feature),g.set(l.typeName,q)),p.set(l.feature.attributes[f.mockOidFieldName],l.feature),q=A.convertFromGeometry(l.feature.attributes[f.mockLayoutGeometryFieldName]),this.relationshipLinkChartDiagramLookup.set(l.feature.attributes[f.mockOidFieldName],l.feature.attributes[f.mockLayoutGeometryFieldName]?q:null),this.linkChartGeohashLookup.set(l.feature.attributes[f.mockOidFieldName],""))});this._currentLinkChartConfig={layoutMode:b,
xScaleFactor:P,yScaleFactor:Q};return{nodes:h,links:g,idMap:p}}async applyNewLinkChartLayout(b="RADIAL_TREE",c){const d=[];await this.calculateLinkChartLayout(b,c);this.layers.forEach(a=>{d.push(a.refreshCachedQueryEngine())});await Promise.all(d);this._refreshNamedTypes()}getCurrentNodeLocations(){const b=new Map;this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach(c=>{c?.members?.forEach(d=>{var a=d.linkChartLocation;const h=d.id;a&&("x"in a?(d=a.x,a=a.y):(d=a.coords[0],a=a.coords[1]),
b.set(h,new L({x:d,y:a})))})});return b}async synchronizeInclusionListWithCache(){return new Promise(b=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((c,d)=>{c.useAllData=!1;if(c.members&&0<c.members.size&&this.dataManager.sublayerCaches.get(d)){var a=new Set(Array.from(this.dataManager.sublayerCaches.get(d).keys()));Array.from(c.members.keys()).filter(h=>!a.has(h)).forEach(h=>{c.members?.delete(h)})}});b()})}async refreshLinkChartCache(b){await this.dataManager.refreshCacheContent(b);
const c=[];this.layers.forEach(d=>{c.push(d.refreshCachedQueryEngine())});await Promise.all(c);this._refreshNamedTypes()}async _handleNewRecords(b){var c=[];this.dataManager.addToLayer(b);for(var d of b)this.sublayerIdsCache.has(d.typeName)||(this.sublayerIdsCache.set(d.typeName,new Set),c.push(d.typeName)),this.sublayerIdsCache.get(d.typeName).add(d.id);for(const a of c)this._graphTypeLookup.has(a)&&(d=this._graphTypeLookup.get(a),c="endPoints"in d?"relationship":"entity",d=new G({objectType:d,parentCompositeLayer:this,
graphType:c,title:a}),"entity"===c?this.dataManager.entityTypeNames.add(a):this.dataManager.relationshipTypeNames.add(a),d.geometryType?this.layers.push(d):this.tables.push(d),this.dataManager.sublayerCaches.set(a,new Map));await this.dataManager.refreshCacheContent(b.map(a=>a.id));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,{xScaleFactor:this._currentLinkChartConfig.xScaleFactor,yScaleFactor:this._currentLinkChartConfig.xScaleFactor})}async _initializeDiagram(){this.defaultLinkChartConfig?
this.defaultLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((b,c)=>{b?.members?.forEach(d=>{var a=d.linkChartLocation;d=d.id;if(a){a="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]};var h=A.convertFromGeometry(a);this.dataManager.relationshipTypeNames.has(c)?this.relationshipLinkChartDiagramLookup.set(d,h):this.entityLinkChartDiagramLookup.set(d,h);this.linkChartGeohashLookup.set(d,B.encodeGeohash(a.x,a.y,f.geohashEncodingPrecision));
this.linkChartExtent.xmin>a.x&&(this.linkChartExtent.xmin=a.x);this.linkChartExtent.xmax<a.x&&(this.linkChartExtent.xmax=a.x);this.linkChartExtent.ymin>a.y&&(this.linkChartExtent.ymin=a.y);this.linkChartExtent.ymax<a.y&&(this.linkChartExtent.ymax=a.y)}})}),this.memberRelationshipTypes.forEach(b=>{b.name&&this.dataManager.sublayerCaches.get(b.name)?.forEach(c=>{var d=this.relationshipLinkChartDiagramLookup.get(c.attributes[f.mockOriginIdFieldName]);const a=this.relationshipLinkChartDiagramLookup.get(c.attributes[f.mockDestinationIdFieldName]);
d&&a?(d=A.convertFromGeometry(new M({paths:[[d.coords[0],d.coords[1]],[a.coords[0],a.coords[1]]]})),this.relationshipLinkChartDiagramLookup.set(c.attributes[f.mockOidFieldName],d)):this.relationshipLinkChartDiagramLookup.set(c.attributes[f.mockOidFieldName],null);this.linkChartGeohashLookup.set(c.attributes[f.mockOidFieldName],"")})})):await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode,{xScaleFactor:this.defaultLinkChartConfig.xScaleFactor,yScaleFactor:this.defaultLinkChartConfig.yScaleFactor,
lockedNodeLocations:this.getCurrentNodeLocations()}):await this.calculateLinkChartLayout("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const b of this.layers)b.emit("refresh",{dataChanged:!0});for(const b of this.tables)b.emit("refresh",{dataChanged:!0})}};w.__decorate([x.property()],r.prototype,"dataPreloadedInLocalCache",void 0);w.__decorate([x.property()],r.prototype,"defaultLinkChartConfig",void 0);w.__decorate([x.property()],r.prototype,"dataManager",
void 0);w.__decorate([x.property()],r.prototype,"knowledgeGraph",void 0);w.__decorate([x.property()],r.prototype,"layers",void 0);w.__decorate([x.property()],r.prototype,"entityLinkChartDiagramLookup",void 0);w.__decorate([x.property()],r.prototype,"relationshipLinkChartDiagramLookup",void 0);w.__decorate([x.property()],r.prototype,"linkChartExtent",void 0);w.__decorate([x.property()],r.prototype,"linkChartGeohashLookup",void 0);w.__decorate([x.property()],r.prototype,"memberEntityTypes",void 0);
w.__decorate([x.property()],r.prototype,"memberRelationshipTypes",void 0);w.__decorate([x.property()],r.prototype,"sublayerIdsCache",void 0);w.__decorate([x.property()],r.prototype,"tables",void 0);w.__decorate([x.property({json:{read:!1}})],r.prototype,"type",void 0);return r=w.__decorate([T.subclass("esri.layers.LinkChartLayer")],r)});