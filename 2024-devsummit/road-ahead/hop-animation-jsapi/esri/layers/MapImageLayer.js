// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
require({cache:{"esri/geometry/support/scaleUtils":function(){define(["exports","../../core/mathUtils","../../core/unitUtils"],function(h,c,d){function w(g,f){f=d.getMetersPerUnitForSR(f);return g/(f*d.inchesPerMeter*96)}h.getExtentForScale=function(g,f){const t=g.extent;g=g.width-(g.padding?g.padding.left+g.padding.right:0);f=w(f,t.spatialReference);return t.clone().expand(f*g/t.width)};h.getResolutionForScale=w;h.getResolutionInMetersForScale=function(g){return g/(96*d.inchesPerMeter)};h.getScale=
function(g,f){f=f||g.extent;g=g.width;const t=d.getMetersPerUnitForSR(f?.spatialReference);return f&&g?f.width/g*t*d.inchesPerMeter*96:0};h.getScaleForResolution=function(g,f){f=d.getMetersPerUnitForSR(f);return g*f*d.inchesPerMeter*96};h.isInScaleRange=function(g,f,t){if(f=0===f||c.floatEqualAbsolute(g,f)||g<f)f=0===t||c.floatEqualAbsolute(g,t)||g>t;return f};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})})},"esri/layers/mixins/ArcGISMapService":function(){define("exports ../../chunks/tslib.es6 ../../request ../../core/MapUtils ../../core/promiseUtils ../../core/urlUtils ../../core/Version ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/RandomLCG ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/PropertyOrigin ../../geometry/Extent ../../geometry/SpatialReference ../support/arcgisLayerUrl ../support/commonProperties ../../portal/support/portalItemUtils".split(" "),
function(h,c,d,w,g,f,t,n,W,aa,ca,U,D,R,q,E,J,F,y){h.ArcGISMapService=p=>{p=class extends p{constructor(){super(...arguments);this.capabilities=void 0;this.fullExtent=this.copyright=null;this.legendEnabled=!0;this.spatialReference=null;this.version=void 0;this._allLayersAndTablesMap=null}readCapabilities(k,l){var u=l.capabilities&&l.capabilities.split(",").map(B=>B.toLowerCase().trim());if(!u)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},
exportMap:null,exportTiles:null};var x=this.type;k="tile"!==x&&!!l.supportsDynamicLayers;const G=u.includes("query"),N=u.includes("map"),r=!!l.exportTilesAllowed,V=u.includes("tilemap");u=u.includes("data");const O="tile"!==x&&(!l.tileInfo||k),Z="tile"!==x&&(!l.tileInfo||k);x="tile"!==x;var z=l.cimVersion&&t.Version.parse(l.cimVersion);const P=z?.since(1,4)??!1;z=z?.since(2,0)??!1;return{operations:{supportsExportMap:N,supportsExportTiles:r,supportsIdentify:G,supportsQuery:u,supportsTileMap:V},exportMap:N?
{supportsArcadeExpressionForLabeling:P,supportsSublayersChanges:x,supportsDynamicLayers:k,supportsSublayerVisibility:O,supportsSublayerDefinitionExpression:Z,supportsCIMSymbols:z}:null,exportTiles:r?{maxExportTilesCount:+l.maxExportTilesCount}:null}}readVersion(k,l){(k=l.currentVersion)||(k=l.hasOwnProperty("capabilities")||l.hasOwnProperty("tables")?10:l.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3);return k}async fetchRelatedService(k){var l=this.portalItem;if(!l||!y.isHostedLayer(l))return null;
this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=l.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},k).then(u=>u.find(x=>"Feature Service"===x.type)??null,()=>null));l=await this._relatedFeatureServicePromise;g.throwIfAborted(k);return l?{itemId:l.id,url:l.url}:null}async fetchSublayerInfo(k,l){const {source:u}=k;if(this?.portalItem&&"tile"===this.type&&"map-layer"===u?.type&&y.isHostedLayer(this.portalItem)&&k.originIdOf("url")<R.OriginId.SERVICE){var x=
await this.fetchRelatedService(l);x&&(k.url=f.join(x.url,u.mapLayerId.toString()),k.layerItemId=x.itemId)}({url:x}=k);let G;if("data-layer"===u.type)G=(await d(x,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...l})).data;else if(x&&k.originIdOf("url")>R.OriginId.SERVICE)try{const N=await this._fetchAllLayersAndTablesFromService(x),r=J.parse(x)?.sublayer??u.mapLayerId;G=N.get(r)}catch{}else{k=k.id;"map-layer"===u?.type&&(k=u.mapLayerId);try{G=(await this.fetchAllLayersAndTables(l)).get(k)}catch{}}return G}async fetchAllLayersAndTables(k){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,
k)}async _fetchAllLayersAndTablesFromService(k,l){await this.load(l);this._allLayersAndTablesMap||(this._allLayersAndTablesMap=new Map);const u=J.parse(k);k=await w.getOrCreateMapValue(this._allLayersAndTablesMap,u?.url.path,()=>d(f.join(u?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(x=>{const G=new Map;for(const N of x.data.layers)G.set(N.id,N);return{result:G}},x=>({error:x})));g.throwIfAborted(l);if("result"in k)return k.result;throw k.error;
}};c.__decorate([n.property({readOnly:!0})],p.prototype,"capabilities",void 0);c.__decorate([U.reader("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],p.prototype,"readCapabilities",null);c.__decorate([n.property({json:{read:{source:"copyrightText"}}})],p.prototype,"copyright",void 0);c.__decorate([n.property({type:q})],p.prototype,"fullExtent",void 0);c.__decorate([n.property(F.id)],p.prototype,"id",void 0);c.__decorate([n.property({type:Boolean,
json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],p.prototype,"legendEnabled",void 0);c.__decorate([n.property(F.popupEnabled)],p.prototype,"popupEnabled",void 0);c.__decorate([n.property({type:E})],p.prototype,"spatialReference",void 0);c.__decorate([n.property({readOnly:!0})],p.prototype,"version",void 0);c.__decorate([U.reader("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],p.prototype,"readVersion",null);return p=
c.__decorate([D.subclass("esri.layers.mixins.ArcGISMapService")],p)};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})})},"esri/layers/mixins/SublayersOwner":function(){define("exports ../../chunks/tslib.es6 ../../core/Collection ../../core/CollectionFlattener ../../core/Error ../../core/Logger ../../core/reactiveUtils ../../core/accessorSupport/decorators/property ../../core/has ../../core/RandomLCG ../../core/accessorSupport/utils ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/PropertyOrigin ../support/Sublayer ../support/sublayerUtils".split(" "),
function(h,c,d,w,g,f,t,n,W,aa,ca,U,D,R,q){function E(y,p){const k=[],l={};if(!y)return k;y.forEach(u=>{const x=new R;x.read(u,p);l[x.id]=x;null!=u.parentLayerId&&-1!==u.parentLayerId?(u=l[u.parentLayerId],u.sublayers||(u.sublayers=[]),u.sublayers.unshift(x)):k.unshift(x)});return k}function J(y,p){y&&y.forEach(k=>{p(k);k.sublayers&&k.sublayers.length&&J(k.sublayers,p)})}const F=d.ofType(R);h.SublayersOwner=y=>{y=class extends y{constructor(...p){super(...p);this.allSublayers=new w({getCollections:()=>
[this.sublayers],getChildrenFunction(k){return k.sublayers}});this.sublayersSourceJSON={[D.OriginId.SERVICE]:{},[D.OriginId.PORTAL_ITEM]:{},[D.OriginId.WEB_SCENE]:{},[D.OriginId.WEB_MAP]:{}};this.addHandles(t.watch(()=>this.sublayers,(k,l)=>this._handleSublayersChange(k,l),t.sync))}destroy(){this.allSublayers.destroy()}readSublayers(p,k){if(k&&p){var {sublayersSourceJSON:l}=this,u=D.nameToId(k.origin);if(!(u<D.OriginId.SERVICE||(l[u]={context:k,visibleLayers:p.visibleLayers||l[u].visibleLayers,layers:p.layers||
l[u].layers},u>D.OriginId.SERVICE))){this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);var {sublayers:x,origin:G}=this.createSublayersForOrigin("web-document");p=ca.getProperties(this);p.setDefaultOrigin(G);this._set("sublayers",new F(x));p.setDefaultOrigin("user")}}}findSublayerById(p){return this.allSublayers.find(k=>k.id===p)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(p){const k="web-document"===p?D.nameToId("web-map"):
D.nameToId(p);let l=D.OriginId.SERVICE;p=this.sublayersSourceJSON[D.OriginId.SERVICE].layers;let u=this.sublayersSourceJSON[D.OriginId.SERVICE].context,x=null;var G=[D.OriginId.PORTAL_ITEM,D.OriginId.WEB_SCENE,D.OriginId.WEB_MAP].filter(z=>z<=k);for(var N of G)G=this.sublayersSourceJSON[N],q.isSublayerOverhaul(G.layers)&&(l=N,p=G.layers,u=G.context,G.visibleLayers&&(x={visibleLayers:G.visibleLayers,context:G.context}));N=[D.OriginId.PORTAL_ITEM,D.OriginId.WEB_SCENE,D.OriginId.WEB_MAP].filter(z=>z>
l&&z<=k);let r=null;for(var V of N){const {layers:z,visibleLayers:P,context:B}=this.sublayersSourceJSON[V];z&&(r={layers:z,context:B});P&&(x={visibleLayers:P,context:B})}V=E(p,u);const O=new Map,Z=new Set;if(r)for(const z of r.layers)O.set(z.id,z);if(x?.visibleLayers)for(const z of x.visibleLayers)Z.add(z);J(V,z=>{r&&z.read(O.get(z.id),r.context);x&&z.read({defaultVisibility:Z.has(z.id)},x.context)});return{origin:D.idToName(l),sublayers:new F({items:V})}}read(p,k){super.read(p,k);this.readSublayers(p,
k)}_handleSublayersChange(p,k){k&&(k.forEach(l=>{l.parent=null;l.layer=null}),this.removeHandles("sublayers-owner"));p&&(p.forEach(l=>{l.parent=this;l.layer=this}),this.addHandles([p.on("after-add",({item:l})=>{l.parent=this;l.layer=this}),p.on("after-remove",({item:l})=>{l.parent=null;l.layer=null})],"sublayers-owner"),"tile"===this.type&&this.addHandles(p.on("before-changes",l=>{f.getLogger("esri.layers.TileLayer").error(new g("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",
{layer:this}));l.preventDefault()}),"sublayers-owner"))}};c.__decorate([n.property({readOnly:!0})],y.prototype,"allSublayers",void 0);c.__decorate([n.property({readOnly:!0,type:d.ofType(R)})],y.prototype,"serviceSublayers",void 0);c.__decorate([n.property({value:null,type:F,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],y.prototype,"sublayers",void 0);c.__decorate([n.property({readOnly:!0})],y.prototype,"sublayersSourceJSON",void 0);return y=c.__decorate([U.subclass("esri.layers.mixins.SublayersOwner")],
y)};h.forEachSublayer=J;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/Sublayer":function(){define("require ../../chunks/tslib.es6 ../../geometry ../../PopupTemplate ../../renderers/ClassBreaksRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/PieChartRenderer ../../renderers/Renderer ../../renderers/SimpleRenderer ../../renderers/UniqueValueRenderer ../../renderers/support/jsonUtils ../../renderers/support/types ../../request ../../symbols ../../core/Collection ../../core/Error ../../core/has ../../core/Identifiable ../../core/lang ../../core/Loadable ../../core/Logger ../../core/MultiOriginJSONSupport ../../core/sql ../../core/urlUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/cast ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../core/accessorSupport/ensureType ../../core/accessorSupport/PropertyOrigin ../../core/accessorSupport/utils ../graphics/sources/support/QueryTask ./FeatureType ./Field ./FieldsIndex ./LabelClass ./labelingInfo ./LayerFloorInfo ./serviceCapabilitiesUtils ./source/DataLayerSource ./source/MapLayerSource ../../rest/support/AttachmentQuery ../../rest/support/Query ../../support/popupUtils ../../geometry/Extent ../../geometry/support/typeUtils".split(" "),
function(h,c,d,w,g,f,t,n,W,aa,ca,U,D,R,q,E,J,F,y,p,k,l,u,x,G,N,r,V,O,Z,z,P,B,ea,fa,ka,ha,m,C,H,I,L,M,T,K,X,da,qa,la){function ma(a){return null!=a&&"esriSMS"===a.type}function na(a,b,e){a=this.originIdOf(b)>=B.nameToId(e.origin);return{ignoreOrigin:!0,allowNull:a,enabled:e?"map-image"===e.layer?.type&&(e.writeSublayerStructure||a):!1}}function oa(a,b,e){return{enabled:e?"tile"===e.layer?.type&&(e.origin&&this.originIdOf(b)>=B.nameToId(e.origin)||this._isOverridden(b)):!1}}function S(a,b,e){return{ignoreOrigin:!0,
enabled:e&&e.writeSublayerStructure||!1}}function ia(a,b,e){return{ignoreOrigin:!0,enabled:e?e.writeSublayerStructure||this.originIdOf(b)>=B.nameToId(e.origin):!1}}var ja;let ra=0;const ba=new Set;ba.add("layer");ba.add("parent");ba.add("loaded");ba.add("loadStatus");ba.add("loadError");ba.add("loadWarnings");d=ja=class extends x.MultiOriginJSONMixin(p.IdentifiableMixin(l)){constructor(a){super(a);this.capabilities=void 0;this.maxScaleRange={minScale:0,maxScale:0};this.globalIdField=this.geometryType=
this.fullExtent=this.fields=null;this.legendEnabled=!0;this.parent=this.objectIdField=null;this.popupEnabled=!0;this.typeIdField=this.title=this.sourceJSON=this.popupTemplate=null;this.type="sublayer";this._lastParsedUrl=this.types=null}async load(a){this.addResolvingPromise((async()=>{const {layer:b,url:e}=this;if(!b&&!e)throw new F("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const v=b?await b.fetchSublayerInfo(this,a):(await q(e,{responseType:"json",
query:{f:"json"},...a})).data;v&&(this.sourceJSON=v,this.read({layerDefinition:v},{origin:"service"}))})());return this}readCapabilities(a,b){b=b.layerDefinition||b;const {operations:{supportsQuery:e,supportsQueryAttachments:v},query:{supportsFormatPBF:A},data:{supportsAttachment:Q},queryRelated:Y}=L.getFeatureLayerCapabilities(b,this.url);return{exportMap:{supportsModification:!!b.canModifyLayer},operations:{supportsQuery:e,supportsQueryAttachments:v},data:{supportsAttachment:Q},query:{supportsFormatPBF:A},
queryRelated:Y}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(a){this._setAndNotifyLayer("definitionExpression",a)}get effectiveScaleRange(){const {minScale:a,maxScale:b}=this;return{minScale:a,maxScale:b}}readMaxScaleRange(a,b){b=b.layerDefinition||b;return{minScale:b.minScale??0,maxScale:b.maxScale??0}}get fieldsIndex(){return new m(this.fields||[])}set floorInfo(a){this._setAndNotifyLayer("floorInfo",a)}readGlobalIdFieldFromService(a,b){b=b.layerDefinition||
b;if(b.globalIdField)return b.globalIdField;if(b.fields)for(const e of b.fields)if("esriFieldTypeGlobalID"===e.type)return e.name}get id(){const a=this._get("id");return null==a?ra++:a}set id(a){this._get("id")!==a&&(!1===this.layer?.capabilities?.exportMap?.supportsDynamicLayers?this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"):this._set("id",a))}set labelingInfo(a){this._setAndNotifyLayer("labelingInfo",a)}writeLabelingInfo(a,b,e,v){a&&a.length&&
(b.layerDefinition={drawingInfo:{labelingInfo:a.map(A=>A.write({},v))}})}set labelsVisible(a){this._setAndNotifyLayer("labelsVisible",a)}set layer(a){this._set("layer",a);this.sublayers&&this.sublayers.forEach(b=>b.layer=a)}set listMode(a){this._set("listMode",a)}set minScale(a){this._setAndNotifyLayer("minScale",a)}readMinScale(a,b){return b.minScale||b.layerDefinition?.minScale||0}set maxScale(a){this._setAndNotifyLayer("maxScale",a)}readMaxScale(a,b){return b.maxScale||b.layerDefinition?.maxScale||
0}readObjectIdFieldFromService(a,b){b=b.layerDefinition||b;if(b.objectIdField)return b.objectIdField;if(b.fields)for(const e of b.fields)if("esriFieldTypeOID"===e.type)return e.name}set opacity(a){this._setAndNotifyLayer("opacity",a)}readOpacity(a,b){a=b.layerDefinition;return 1-.01*((null!=a?.transparency?a.transparency:a?.drawingInfo?.transparency)??0)}writeOpacity(a,b,e,v){b.layerDefinition={drawingInfo:{transparency:100-100*a}}}writeParent(a,b){b.parentLayerId=this.parent&&this.parent!==this.layer?
P.ensureInteger(this.parent.id):-1}get queryTask(){if(!this.layer)return null;const {spatialReference:a}=this.layer,b="gdbVersion"in this.layer?this.layer.gdbVersion:void 0,{capabilities:e,fieldsIndex:v}=this,A=y("featurelayer-pbf")&&e?.query.supportsFormatPBF;return new fa({url:this.url,pbfSupported:A,fieldsIndex:v,gdbVersion:b,sourceSpatialReference:a,queryAttachmentsSupported:e?.operations?.supportsQueryAttachments??!1})}set renderer(a){if(a)for(const b of a.getSymbols())if(E.isSymbol3D(b)){u.getLogger(this).warn("Sublayer renderer should use 2D symbols");
break}this._setAndNotifyLayer("renderer",a)}get source(){return this._get("source")||new T.MapLayerSource({mapLayerId:this.id})}set source(a){this._setAndNotifyLayer("source",a)}set sublayers(a){this._handleSublayersChange(a,this._get("sublayers"));this._set("sublayers",a)}castSublayers(a){return P.ensureType(J.ofType(ja),a)}writeSublayers(a,b,e){this.sublayers?.length&&(b[e]=this.sublayers.map(v=>v.id).toArray().reverse())}readTitle(a,b){return b.layerDefinition?.name??b.name}readTypeIdField(a,b){b=
b.layerDefinition||b;let e=b.typeIdField;e&&b.fields&&(e=e.toLowerCase(),a=b.fields.find(v=>v.name.toLowerCase()===e))&&(e=a.name);return e}get url(){const a=this.layer?.parsedUrl??this._lastParsedUrl;var b=this.source;if(!a)return null;this._lastParsedUrl=a;if("map-layer"===b?.type)return`${a.path}/${b.mapLayerId}`;b={layer:JSON.stringify({source:this.source})};return`${a.path}/dynamicLayer?${N.objectToQuery(b)}`}set url(a){this._overrideIfSome("url",a)}set visible(a){this._setAndNotifyLayer("visible",
a)}writeVisible(a,b,e,v){b[e]=this.getAtOrigin("defaultVisibility","service")||a}clone(){const {store:a}=ea.getProperties(this),b=new ja;ea.getProperties(b).store=a.clone(ba);this.commitProperty("url");b._lastParsedUrl=this._lastParsedUrl;return b}createPopupTemplate(a){return da.createPopupTemplate(this,a)}createQuery(){return new X({returnGeometry:!0,where:this.definitionExpression||"1\x3d1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;var a=(await new Promise((v,
A)=>h(["../FeatureLayer"],Q=>v(Object.freeze(Object.defineProperty({__proto__:null,default:Q},Symbol.toStringTag,{value:"Module"}))),A))).default;const {layer:b,url:e}=this;if(e&&this.originIdOf("url")>B.OriginId.SERVICE)a=new a({url:e});else if(b?.parsedUrl){const v=b.parsedUrl;a=new a({url:v.path});v&&this.source&&("map-layer"===this.source.type?a.layerId=this.source.mapLayerId:a.dynamicDataSource=this.source)}else throw new F("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");
null!=b?.refreshInterval&&(a.refreshInterval=b.refreshInterval);this.definitionExpression&&(a.definitionExpression=this.definitionExpression);this.floorInfo&&(a.floorInfo=k.clone(this.floorInfo));this.originIdOf("labelingInfo")>B.OriginId.SERVICE&&(a.labelingInfo=k.clone(this.labelingInfo));this.originIdOf("labelsVisible")>B.OriginId.DEFAULTS&&(a.labelsVisible=this.labelsVisible);this.originIdOf("legendEnabled")>B.OriginId.DEFAULTS&&(a.legendEnabled=this.legendEnabled);this.originIdOf("visible")>
B.OriginId.DEFAULTS&&(a.visible=this.visible);this.originIdOf("minScale")>B.OriginId.DEFAULTS&&(a.minScale=this.minScale);this.originIdOf("maxScale")>B.OriginId.DEFAULTS&&(a.maxScale=this.maxScale);this.originIdOf("opacity")>B.OriginId.DEFAULTS&&(a.opacity=this.opacity);this.originIdOf("popupTemplate")>B.OriginId.DEFAULTS&&(a.popupTemplate=k.clone(this.popupTemplate));this.originIdOf("renderer")>B.OriginId.SERVICE&&(a.renderer=k.clone(this.renderer));"data-layer"===this.source?.type&&(a.dynamicDataSource=
this.source.clone());this.originIdOf("title")>B.OriginId.DEFAULTS&&(a.title=this.title);"map-image"===b?.type&&b.originIdOf("customParameters")>B.OriginId.DEFAULTS&&(a.customParameters=b.customParameters);"tile"===b?.type&&b.originIdOf("customParameters")>B.OriginId.DEFAULTS&&(a.customParameters=b.customParameters);return a}getField(a){return this.fieldsIndex.get(a)}getFeatureType(a){const {typeIdField:b,types:e}=this;if(!b||!a)return null;const v=a.attributes?a.attributes[b]:void 0;if(null==v)return null;
let A=null;e?.some(Q=>{const {id:Y}=Q;if(null==Y)return!1;Y.toString()===v.toString()&&(A=Q);return!!A});return A}getFieldDomain(a,b){return(b=this.getFeatureType(b?.feature))&&(b=b.domains&&b.domains[a])&&"inherited"!==b.type?b:this._getLayerDomain(a)}async queryAttachments(a,b){await this.load();a=K.from(a);const e=this.capabilities;if(!e?.data?.supportsAttachment)throw new F("queryAttachments:not-supported","this layer doesn't support attachments");const {attachmentTypes:v,objectIds:A,globalIds:Q,
num:Y,size:sa,start:ta,where:pa}=a;if(!e?.operations?.supportsQueryAttachments&&(0<v?.length||0<Q?.length||0<sa?.length||Y||ta||pa))throw new F("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",a);if(!(A?.length||Q?.length||pa))throw new F("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",a);return this.queryTask.executeAttachmentQuery(a,b)}async queryFeatures(a=
this.createQuery(),b){await this.load();if(!this.capabilities.operations.supportsQuery)throw new F("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new F("queryFeatures:not-supported","this layer has no url.");a=await this.queryTask.execute(a,{...b,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(a?.features)for(const e of a.features)e.sourceLayer=this;return a}toExportImageJSON(a){const b={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,
type:"mapLayer"}};a=G.sqlAnd(a,this.definitionExpression);null!=a&&(b.definitionExpression=a);const e=["renderer","labelingInfo","opacity","labelsVisible"].reduce((v,A)=>{v[A]=this.originIdOf(A);return v},{});if(Object.keys(e).some(v=>e[v]>B.OriginId.SERVICE)){a=b.drawingInfo={};e.renderer>B.OriginId.SERVICE&&(a.renderer=this.renderer?this.renderer.toJSON():null);e.labelsVisible>B.OriginId.SERVICE&&(a.showLabels=this.labelsVisible);if(this.labelsVisible&&e.labelingInfo>B.OriginId.SERVICE)if(this.labelingInfo){!this.loaded&&
this.labelingInfo?.some(A=>!A.labelPlacement)&&u.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' `+"and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.",{sublayer:this});let v=this.labelingInfo;null!=this.geometryType&&(v=H.validateLabelingInfo(this.labelingInfo,la.featureGeometryTypeKebabDictionary.toJSON(this.geometryType)));a.showLabels=!0;a.labelingInfo=
v.filter(A=>A.labelPlacement).map(A=>A.toJSON({origin:"service",layer:this.layer}))}else a.showLabels=!1;e.opacity>B.OriginId.SERVICE&&(a.transparency=100-100*this.opacity);this._assignDefaultSymbolColors(a.renderer)}return b}_assignDefaultSymbolColors(a){this._forEachSimpleMarkerSymbols(a,b=>{b.color||"esriSMSX"!==b.style&&"esriSMSCross"!==b.style||(b.color=b.outline?.color?b.outline.color:[0,0,0,0])})}_forEachSimpleMarkerSymbols(a,b){if(a){const e=("uniqueValueInfos"in a?a.uniqueValueInfos:"classBreakInfos"in
a?a.classBreakInfos:null)??[];for(const v of e)ma(v.symbol)&&b(v.symbol);"symbol"in a&&ma(a.symbol)&&b(a.symbol);"defaultSymbol"in a&&ma(a.defaultSymbol)&&b(a.defaultSymbol)}}_setAndNotifyLayer(a,b){const e=this.layer,v=this._get(a);let A,Q;switch(a){case "definitionExpression":case "floorInfo":A="supportsSublayerDefinitionExpression";break;case "minScale":case "maxScale":case "visible":A="supportsSublayerVisibility";break;case "labelingInfo":case "labelsVisible":case "opacity":case "renderer":case "source":A=
"supportsDynamicLayers",Q="supportsModification"}const Y=ea.getProperties(this).getDefaultOrigin();if("service"!==Y){if(A&&!1===this.layer?.capabilities?.exportMap?.[A]){this._logLockedError(a,`capability not available 'layer.capabilities.exportMap.${A}'`);return}if(Q&&!1===this.capabilities?.exportMap[Q]){this._logLockedError(a,`capability not available 'capabilities.exportMap.${Q}'`);return}}"source"===a&&"not-loaded"!==this.loadStatus?this._logLockedError(a,"'source' can't be changed after calling sublayer.load()"):
(this._set(a,b),"service"!==Y&&v!==b&&e&&e.emit&&e.emit("sublayer-update",{propertyName:a,target:this}))}_handleSublayersChange(a,b){b&&(b.forEach(e=>{e.parent=null;e.layer=null}),this.removeAllHandles());a&&(a.forEach(e=>{e.parent=this;e.layer=this.layer}),this.addHandles([a.on("after-add",({item:e})=>{e.parent=this;e.layer=this.layer}),a.on("after-remove",({item:e})=>{e.parent=null;e.layer=null}),a.on("before-changes",e=>{const v=this.layer?.capabilities?.exportMap?.supportsSublayersChanges;null==
v||v||(u.getLogger(this).error(new F("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())})]))}_logLockedError(a,b){const {layer:e,declaredClass:v}=this;u.getLogger(v).error(new F("sublayer:locked",`Property '${String(a)}' can't be changed on Sublayer from the layer '${e?.id}'`,{reason:b,sublayer:this,layer:e}))}_getLayerDomain(a){return(a=this.fieldsIndex.get(a))?a.domain:null}};d.test={isMapImageLayerOverridePolicy:a=>
a===S||a===na,isTileImageLayerOverridePolicy:a=>a===oa};c.__decorate([r.property({readOnly:!0})],d.prototype,"capabilities",void 0);c.__decorate([O.reader("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],d.prototype,"readCapabilities",null);c.__decorate([r.property()],d.prototype,"defaultPopupTemplate",null);c.__decorate([r.property({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:na}}})],d.prototype,
"definitionExpression",null);c.__decorate([r.property({readOnly:!0})],d.prototype,"effectiveScaleRange",null);c.__decorate([O.reader("service","maxScaleRange",["minScale","maxScale"])],d.prototype,"readMaxScaleRange",null);c.__decorate([r.property({type:[ha],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],d.prototype,"fields",void 0);c.__decorate([r.property({readOnly:!0})],d.prototype,"fieldsIndex",null);c.__decorate([r.property({type:I,value:null,json:{name:"layerDefinition.floorInfo",
read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:na},origins:{"web-scene":{read:!1,write:!1}}}})],d.prototype,"floorInfo",null);c.__decorate([r.property({type:qa,json:{read:{source:"layerDefinition.extent"}}})],d.prototype,"fullExtent",void 0);c.__decorate([r.property({type:la.featureGeometryTypeKebabDictionary.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:la.featureGeometryTypeKebabDictionary.read}}}}})],d.prototype,
"geometryType",void 0);c.__decorate([r.property({type:String})],d.prototype,"globalIdField",void 0);c.__decorate([O.reader("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],d.prototype,"readGlobalIdFieldFromService",null);c.__decorate([r.property({type:P.Integer,json:{write:{ignoreOrigin:!0}}})],d.prototype,"id",null);c.__decorate([r.property({value:null,type:[C],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",
overridePolicy:S}}})],d.prototype,"labelingInfo",null);c.__decorate([z.writer("labelingInfo")],d.prototype,"writeLabelingInfo",null);c.__decorate([r.property({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:S}}})],d.prototype,"labelsVisible",null);c.__decorate([r.property({value:null})],d.prototype,"layer",null);c.__decorate([r.property({type:String,json:{write:{overridePolicy:oa}}})],d.prototype,
"layerItemId",void 0);c.__decorate([r.property({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:ia}}})],d.prototype,"legendEnabled",void 0);c.__decorate([r.property({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],d.prototype,"listMode",null);c.__decorate([r.property({type:Number,value:0,json:{write:{overridePolicy:S}}})],d.prototype,"minScale",
null);c.__decorate([O.reader("minScale",["minScale","layerDefinition.minScale"])],d.prototype,"readMinScale",null);c.__decorate([r.property({type:Number,value:0,json:{write:{overridePolicy:S}}})],d.prototype,"maxScale",null);c.__decorate([O.reader("maxScale",["maxScale","layerDefinition.maxScale"])],d.prototype,"readMaxScale",null);c.__decorate([r.property({type:String})],d.prototype,"objectIdField",void 0);c.__decorate([O.reader("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],
d.prototype,"readObjectIdFieldFromService",null);c.__decorate([r.property({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:S}}})],d.prototype,"opacity",null);c.__decorate([O.reader("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],d.prototype,"readOpacity",null);c.__decorate([z.writer("opacity")],d.prototype,"writeOpacity",null);c.__decorate([r.property({json:{type:P.Integer,write:{target:"parentLayerId",writerEnsuresNonNull:!0,
overridePolicy:S}}})],d.prototype,"parent",void 0);c.__decorate([z.writer("parent")],d.prototype,"writeParent",null);c.__decorate([r.property({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader(a,b){return!b.disablePopup}},write:{target:"disablePopup",overridePolicy:ia,writer(a,b,e){b[e]=!a}}}})],d.prototype,"popupEnabled",void 0);c.__decorate([r.property({type:w,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:ia}}})],d.prototype,"popupTemplate",void 0);c.__decorate([r.property({readOnly:!0})],
d.prototype,"queryTask",null);c.__decorate([r.property({types:R.rendererTypes,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:S},origins:{"web-scene":{types:R.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:S}}}}})],d.prototype,"renderer",null);c.__decorate([r.property({types:{key:"type",base:null,typeMap:{"data-layer":M.DataLayerSource,"map-layer":T.MapLayerSource}},cast(a){if(a){if("mapLayerId"in a)return P.ensureClass(T.MapLayerSource,
a);if("dataSource"in a)return P.ensureClass(M.DataLayerSource,a)}return a},json:{name:"layerDefinition.source",write:{overridePolicy:S}}})],d.prototype,"source",null);c.__decorate([r.property()],d.prototype,"sourceJSON",void 0);c.__decorate([r.property({value:null,json:{type:[P.Integer],write:{target:"subLayerIds",allowNull:!0,overridePolicy:S}}})],d.prototype,"sublayers",null);c.__decorate([V.cast("sublayers")],d.prototype,"castSublayers",null);c.__decorate([z.writer("sublayers")],d.prototype,"writeSublayers",
null);c.__decorate([r.property({type:String,json:{name:"name",write:{overridePolicy:ia}}})],d.prototype,"title",void 0);c.__decorate([O.reader("service","title",["name","layerDefinition.name"])],d.prototype,"readTitle",null);c.__decorate([r.property({type:String})],d.prototype,"typeIdField",void 0);c.__decorate([r.property({json:{read:!1},readOnly:!0,value:"sublayer"})],d.prototype,"type",void 0);c.__decorate([O.reader("typeIdField",["layerDefinition.typeIdField"])],d.prototype,"readTypeIdField",
null);c.__decorate([r.property({type:[ka],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],d.prototype,"types",void 0);c.__decorate([r.property({type:String,json:{name:"layerUrl",write:{overridePolicy:oa}}})],d.prototype,"url",null);c.__decorate([r.property({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:S}}})],d.prototype,"visible",null);c.__decorate([z.writer("visible")],d.prototype,"writeVisible",null);return d=
ja=c.__decorate([Z.subclass("esri.layers.support.Sublayer")],d)})},"esri/layers/support/sublayerUtils":function(){define(["exports","../../core/accessorSupport/PropertyOrigin"],function(h,c){function d(w,g){if(!w?.length||null==g)return!0;g=g.slice().reverse().flatten(({sublayers:n})=>n&&n.toArray().reverse()).map(n=>n.id).toArray();if(w.length>g.length)return!1;let f=0;const t=g.length;for(const {id:n}of w){for(;f<t&&g[f]!==n;)f++;if(f>=t)return!1}return!0}h.isExportDynamic=function(w,g,f){return w.some(t=>
{const n=t.source;return!(!n||"map-layer"===n.type&&n.mapLayerId===t.id&&(null==n.gdbVersion||n.gdbVersion===f))||t.originIdOf("renderer")>c.OriginId.SERVICE||t.originIdOf("labelingInfo")>c.OriginId.SERVICE||t.originIdOf("opacity")>c.OriginId.SERVICE||t.originIdOf("labelsVisible")>c.OriginId.SERVICE})?!0:!d(w,g)};h.isSublayerOverhaul=function(w){return!!w&&w.some(g=>null!=g.minScale||null!=g.layerDefinition?.minScale)};h.shouldWriteSublayerStructure=function(w,g,f){return g.flatten(({sublayers:t})=>
t).length!==w.length||w.some(t=>t.originIdOf("minScale")>f||t.originIdOf("maxScale")>f||t.originIdOf("renderer")>f||t.originIdOf("labelingInfo")>f||t.originIdOf("opacity")>f||t.originIdOf("labelsVisible")>f||t.originIdOf("source")>f)?!0:!d(w,g)};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/ExportImageParameters":function(){define("exports ../../chunks/tslib.es6 ../../core/Accessor ../../core/sql ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/RandomLCG ../../core/accessorSupport/decorators/subclass ../../geometry/support/scaleUtils ./commonProperties ./floorFilterUtils ./sublayerUtils".split(" "),
function(h,c,d,w,g,f,t,n,W,aa,ca,U,D){const R={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};h.ExportImageParameters=class extends d{constructor(q){super(q);this.floors=null;this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const q=this.visibleSublayers.map(E=>
{const J=U.getLayerFloorFilterClause(this.floors,E);return E.toExportImageJSON(J)});return q.length?JSON.stringify(q):null}get hasDynamicLayers(){return this.layer&&D.isExportDynamic(this.visibleSublayers,this.layer.serviceSublayers,this.layer.gdbVersion)}set layer(q){this._get("layer")!==q&&(this._set("layer",q),this.removeHandles("layer"),q&&this.addHandles([q.allSublayers.on("change",()=>this.notifyChange("visibleSublayers")),q.on("sublayer-update",E=>this.notifyChange(R[E.propertyName]))],"layer"))}get layers(){const q=
this.visibleSublayers;return q?q.length?"show:"+q.map(E=>E.id).join(","):"show:-1":null}get layerDefs(){const q=!!this.floors?.length,E=this.visibleSublayers.filter(J=>null!=J.definitionExpression||q&&null!=J.floorInfo);return E.length?JSON.stringify(E.reduce((J,F)=>{var y=U.getLayerFloorFilterClause(this.floors,F);y=w.sqlAnd(y,F.definitionExpression);null!=y&&(J[F.id]=y);return J},{})):null}get version(){this.commitProperty("layers");this.commitProperty("layerDefs");this.commitProperty("dynamicLayers");
this.commitProperty("timeExtent");const q=this.layer;q&&(q.commitProperty("dpi"),q.commitProperty("imageFormat"),q.commitProperty("imageTransparency"),q.commitProperty("gdbVersion"));return(this._get("version")||0)+1}get visibleSublayers(){const q=[];if(!this.layer)return q;var E=this.layer.sublayers;const J=this.scale,F=y=>{y.visible&&(0===J||aa.isInScaleRange(J,y.minScale,y.maxScale))&&(y.sublayers?y.sublayers.forEach(F):q.unshift(y))};E&&E.forEach(F);E=this._get("visibleSublayers");return!E||E.length!==
q.length||E.some((y,p)=>q[p]!==y)?q:E}toJSON(){var q=this.layer;q={dpi:q.dpi,format:q.imageFormat,transparent:q.imageTransparency,gdbVersion:q.gdbVersion||null};this.hasDynamicLayers&&this.dynamicLayers?q.dynamicLayers=this.dynamicLayers:q={...q,layers:this.layers,layerDefs:this.layerDefs};return q}};c.__decorate([g.property({readOnly:!0})],h.ExportImageParameters.prototype,"dynamicLayers",null);c.__decorate([g.property()],h.ExportImageParameters.prototype,"floors",void 0);c.__decorate([g.property({readOnly:!0})],
h.ExportImageParameters.prototype,"hasDynamicLayers",null);c.__decorate([g.property()],h.ExportImageParameters.prototype,"layer",null);c.__decorate([g.property({readOnly:!0})],h.ExportImageParameters.prototype,"layers",null);c.__decorate([g.property({readOnly:!0})],h.ExportImageParameters.prototype,"layerDefs",null);c.__decorate([g.property({type:Number})],h.ExportImageParameters.prototype,"scale",void 0);c.__decorate([g.property(ca.combinedViewLayerTimeExtentProperty)],h.ExportImageParameters.prototype,
"timeExtent",void 0);c.__decorate([g.property({readOnly:!0})],h.ExportImageParameters.prototype,"version",null);c.__decorate([g.property({readOnly:!0})],h.ExportImageParameters.prototype,"visibleSublayers",null);h.ExportImageParameters=c.__decorate([W.subclass("esri.layers.mixins.ExportImageParameters")],h.ExportImageParameters);Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/floorFilterUtils":function(){define(["exports"],function(h){function c(d,w){if(!d?.length)return null;
d=d.filter(g=>""!==g).map(g=>`'${g}'`);d.push("''");return`${w} IN (${d.join(",")}) OR ${w} IS NULL`}h.getFloorFilterClause=function(d){const w=d.layer;return"floorInfo"in w&&w.floorInfo?.floorField&&"floors"in d.view?c(d.view.floors,w.floorInfo.floorField):null};h.getLayerFloorFilterClause=function(d,w){return"floorInfo"in w&&w.floorInfo?.floorField?c(d,w.floorInfo.floorField):null};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/imageBitmapUtils":function(){define(["exports",
"../../core/Error","../../core/promiseUtils"],function(h,c,d){h.createBitmap=async function(w,g,f){let t;try{t=await createImageBitmap(w)}catch(n){throw new c("request:server",`Unable to load ${g}`,{url:g,error:n});}d.throwIfAborted(f);return t};h.createTileBitmap=async function(w,g,f,t,n){let W;try{W=await createImageBitmap(w)}catch(aa){throw new c("request:server",`Unable to load tile ${g}/${f}/${t}`,{error:aa,level:g,row:f,col:t});}d.throwIfAborted(n);return W};Object.defineProperty(h,Symbol.toStringTag,
{value:"Module"})})},"*noref":1}});
define("../chunks/tslib.es6 ../request ../TimeExtent ../core/Error ../core/loadAll ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/RandomLCG ../core/has ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../core/accessorSupport/PropertyOrigin ../geometry/Extent ../geometry/support/scaleUtils ../geometry/support/spatialReferenceUtils ./Layer ./mixins/APIKeyMixin ./mixins/ArcGISMapService ./mixins/ArcGISService ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/SublayersOwner ./mixins/TemporalLayer ./support/commonProperties ./support/ExportImageParameters ./support/imageBitmapUtils ./support/Sublayer ./support/sublayerUtils ./support/versionUtils ../time/timeZoneUtils".split(" "),function(h,
c,d,w,g,f,t,n,W,aa,ca,U,D,R,q,E,J,F,y,p,k,l,u,x,G,N,r,V,O,Z,z,P,B,ea,fa,ka,ha){f=class extends u.BlendLayer(Z.TemporalLayer(V.ScaleRangeLayer(O.SublayersOwner(k.ArcGISMapService(l.ArcGISService(G.OperationalLayer(N.PortalLayer(f.MultiOriginJSONMixin(r.RefreshableLayer(p.APIKeyMixin(x.CustomParametersMixin(y)))))))))))){constructor(...m){super(...m);this.dateFieldsTimeZone=null;this.datesInUnknownTimezone=!1;this.dpi=96;this.gdbVersion=null;this.imageFormat="png24";this.imageMaxWidth=this.imageMaxHeight=
2048;this.imageTransparency=!0;this.isReference=null;this.labelsVisible=!1;this.operationalLayerType="ArcGISMapServiceLayer";this.sublayers=this.sourceJSON=this.preferredTimeZone=null;this.type="map-image";this.url=null}normalizeCtorArgs(m,C){return"string"===typeof m?{url:m,...C}:m}load(m){const C=null!=m?m.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},m).catch(t.throwIfAbortError).then(()=>this._fetchService(C)));return Promise.resolve(this)}readImageFormat(m,
C){return(m=C.supportedImageFormatTypes)&&m.includes("PNG32")?"png32":"png24"}writeSublayers(m,C,H,I){if(this.loaded&&m){m=m.slice().reverse().flatten(({sublayers:K})=>K&&K.toArray().reverse()).toArray();H=!1;if(this.capabilities?.operations.supportsExportMap&&this.capabilities?.exportMap?.supportsDynamicLayers){const K=q.nameToId(I.origin);K===q.OriginId.PORTAL_ITEM?(H=this.createSublayersForOrigin("service").sublayers,H=fa.shouldWriteSublayerStructure(m,H,q.OriginId.SERVICE)):K>q.OriginId.PORTAL_ITEM&&
(H=this.createSublayersForOrigin("portal-item"),H=fa.shouldWriteSublayerStructure(m,H.sublayers,q.nameToId(H.origin)))}var L=[],M={writeSublayerStructure:H,...I},T=H;m.forEach(K=>{const X=K.write({},M);L.push(X);T=T||"user"===K.originOf("visible")});L.some(K=>1<Object.keys(K).length)&&(C.layers=L);T&&(C.visibleLayers=m.filter(K=>K.visible).map(K=>K.id))}}createExportImageParameters(m,C,H,I){var L=I?.pixelRatio||1;m&&10<=this.version&&(m=m.clone().shiftCentralMeridian());var M=new P.ExportImageParameters({layer:this,
floors:I?.floors,scale:J.getScale({extent:m,width:C})*L});const T=M.toJSON();M.destroy();M=!I?.rotation||10.3>this.version?{}:{rotation:-I.rotation};const K=F.srToRESTValue(m?.spatialReference);T.dpi*=L;L={};if(I?.timeExtent){const {start:X,end:da}=I.timeExtent.toJSON();L.time=X&&da&&X===da?""+X:`${null==X?"null":X},${null==da?"null":da}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(L.time="null,null");return{bbox:m&&m.xmin+","+m.ymin+","+m.xmax+","+m.ymax,bboxSR:K,imageSR:K,size:C+","+H,...T,
...M,...L}}async fetchImage(m,C,H,I){({data:m}=await this._fetchImage("image",m,C,H,I));return m}async fetchImageBitmap(m,C,H,I){const {data:L,url:M}=await this._fetchImage("blob",m,C,H,I);return B.createBitmap(L,M,I?.signal)}async fetchRecomputedExtents(m={}){({data:m}=await c(this.url,{...m,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}}));const {extent:C,fullExtent:H,timeExtent:I}=m;m=C||H;return{fullExtent:m&&E.fromJSON(m),timeExtent:I&&d.fromJSON({start:I[0],end:I[1]})}}loadAll(){return g.loadAll(this,
m=>{m(this.allSublayers)})}serviceSupportsSpatialReference(m){return ka.serviceSupportsSpatialReference(this,m)}async _fetchImage(m,C,H,I,L){m={responseType:m,signal:L?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(C,H,I,L),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}};C=this.parsedUrl.path+"/export";if(null!=m.query?.dynamicLayers&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new w("mapimagelayer:dynamiclayer-not-supported",
`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:m.query});try{const {data:M}=await c(C,m);return{data:M,url:C}}catch(M){if(t.isAbortError(M))throw M;throw new w("mapimagelayer:image-fetch-error",`Unable to load image: ${C}`,{error:M});}}async _fetchService(m){if(this.sourceJSON)this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});else{var {data:C,ssl:H}=await c(this.parsedUrl.path,
{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:m});H&&(this.url=this.url.replace(/^http:/i,"https:"));this.sourceJSON=C;this.read(C,{origin:"service",url:this.parsedUrl})}}};h.__decorate([n.property(ha.timeZoneProperty("dateFieldsTimeReference"))],f.prototype,"dateFieldsTimeZone",void 0);h.__decorate([n.property({type:Boolean})],f.prototype,"datesInUnknownTimezone",void 0);h.__decorate([n.property()],f.prototype,"dpi",void 0);h.__decorate([n.property()],
f.prototype,"gdbVersion",void 0);h.__decorate([n.property()],f.prototype,"imageFormat",void 0);h.__decorate([U.reader("imageFormat",["supportedImageFormatTypes"])],f.prototype,"readImageFormat",null);h.__decorate([n.property({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],f.prototype,"imageMaxHeight",void 0);h.__decorate([n.property({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],f.prototype,"imageMaxWidth",void 0);h.__decorate([n.property()],f.prototype,"imageTransparency",
void 0);h.__decorate([n.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],f.prototype,"isReference",void 0);h.__decorate([n.property({json:{read:!1,write:!1}})],f.prototype,"labelsVisible",void 0);h.__decorate([n.property({type:["ArcGISMapServiceLayer"]})],f.prototype,"operationalLayerType",void 0);h.__decorate([n.property({json:{read:!1,write:!1}})],f.prototype,"popupEnabled",void 0);h.__decorate([n.property(ha.timeZoneProperty("preferredTimeReference"))],
f.prototype,"preferredTimeZone",void 0);h.__decorate([n.property()],f.prototype,"sourceJSON",void 0);h.__decorate([n.property({json:{write:{ignoreOrigin:!0}}})],f.prototype,"sublayers",void 0);h.__decorate([R.writer("sublayers",{layers:{type:[ea]},visibleLayers:{type:[W.Integer]}})],f.prototype,"writeSublayers",null);h.__decorate([n.property({type:["show","hide","hide-children"]})],f.prototype,"listMode",void 0);h.__decorate([n.property({json:{read:!1},readOnly:!0,value:"map-image"})],f.prototype,
"type",void 0);h.__decorate([n.property(z.url)],f.prototype,"url",void 0);return f=h.__decorate([D.subclass("esri.layers.MapImageLayer")],f)});