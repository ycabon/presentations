// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
require({cache:{"esri/layers/mixins/ArcGISCachedService":function(){define("exports ../../chunks/tslib.es6 ../../geometry ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/RandomLCG ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../support/TileInfo ../support/TileInfoTilemapCache ../support/TilemapCache ../../geometry/SpatialReference".split(" "),function(k,e,g,p,n,y,u,v,S,q,I,P,D){k.ArcGISCachedService=z=>{z=class extends z{constructor(){super(...arguments);
this.copyright=null;this.maxScale=this.minScale=0;this.tilemapCache=this.tileInfo=this.spatialReference=null}destroy(){this.tilemapCache?.destroy?.()}readMinScale(K,H){return null!=H.minLOD&&null!=H.maxLOD?K:0}readMaxScale(K,H){return null!=H.minLOD&&null!=H.maxLOD?K:0}get supportsBlankTile(){return 10.2<=this.version}readTilemapCache(K,H,O){K=H.capabilities?.includes("Tilemap");let {minLOD:A,maxLOD:E,minScale:c,maxScale:d}=H;if(null==A&&null==E&&0!==c&&0!==d){c=c?Math.round(1E4*c)/1E4:Math.round(1E4*
H.tileInfo.lods[0].scale)/1E4;d=d?Math.round(1E4*d)/1E4:Math.round(1E4*H.tileInfo.lods[H.tileInfo.lods.length-1].scale)/1E4;for(var b of H.tileInfo.lods){const h=Math.round(1E4*b.scale)/1E4;A=h>=c?b.level:A;E=h>=d?b.level:E}}return K?new P.TilemapCache({layer:this,minLOD:A,maxLOD:E}):H.tileInfo?(b=new q,b.read(H.tileInfo,O),new I(b,A,E)):null}};e.__decorate([p.property({json:{read:{source:"copyrightText"}}})],z.prototype,"copyright",void 0);e.__decorate([p.property()],z.prototype,"minScale",void 0);
e.__decorate([v.reader("service","minScale")],z.prototype,"readMinScale",null);e.__decorate([p.property()],z.prototype,"maxScale",void 0);e.__decorate([v.reader("service","maxScale")],z.prototype,"readMaxScale",null);e.__decorate([p.property({type:D})],z.prototype,"spatialReference",void 0);e.__decorate([p.property({readOnly:!0})],z.prototype,"supportsBlankTile",null);e.__decorate([p.property({type:q})],z.prototype,"tileInfo",void 0);e.__decorate([p.property()],z.prototype,"tilemapCache",void 0);
e.__decorate([v.reader("service","tilemapCache",["capabilities","tileInfo"])],z.prototype,"readTilemapCache",null);e.__decorate([p.property()],z.prototype,"version",void 0);return z=e.__decorate([S.subclass("esri.layers.mixins.ArcGISCachedService")],z)};Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/TileInfo":function(){define("../../chunks/tslib.es6 ../../core/jsonMap ../../core/JSONSupport ../../core/unitUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/RandomLCG ../../core/has ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../geometry/Point ../../geometry/SpatialReference ../../geometry/support/aaBoundingRect ../../geometry/support/spatialReferenceUtils ../../geometry/support/webMercatorUtils ./LOD ./TileKey".split(" "),
function(k,e,g,p,n,y,u,v,S,q,I,P,D,z,K,H,O,A){var E;e=new e.JSONMap({PNG:"png",PNG8:"png8",PNG24:"png24",PNG32:"png32",JPEG:"jpg",JPG:"jpg",DIB:"dib",TIFF:"tiff",EMF:"emf",PS:"ps",PDF:"pdf",GIF:"gif",SVG:"svg",SVGZ:"svgz",Mixed:"mixed",MIXED:"mixed",LERC:"lerc",LERC2D:"lerc2d",RAW:"raw",pbf:"pbf"});g=E=class extends g.JSONSupport{static create(c={}){const {resolutionFactor:d=1,scales:b,size:h=256,spatialReference:l=D.WebMercator,numLODs:r=24}=c;if(!K.isValid(l)){c=[];if(b)for(var x=0;x<b.length;x++){var t=
b[x];c.push(new O({level:x,scale:t,resolution:t}))}else for(x=5E-4,t=r-1;0<=t;t--)c.unshift(new O({level:t,scale:x,resolution:x})),x*=2;return new E({dpi:96,lods:c,origin:new P(0,0,l),size:[h,h],spatialReference:l})}x=K.getInfo(l);c=c.origin?new P({x:c.origin.x,y:c.origin.y,spatialReference:l}):x?new P({x:x.origin[0],y:x.origin[1],spatialReference:l}):new P({x:0,y:0,spatialReference:l});x=1/(39.37*p.getMetersPerUnitForSR(l)*96);t=[];if(b)for(var M=0;M<b.length;M++){var G=b[M];t.push(new O({level:M,
scale:G,resolution:G*x}))}else{var R=K.isGeographic(l)?512/h*5.916575275917094E8:256/h*5.91657527591555E8;M=Math.ceil(r/d);t.push(new O({level:0,scale:R,resolution:R*x}));for(G=1;G<M;G++)R/=2**d,t.push(new O({level:G,scale:R,resolution:R*x}))}return new E({dpi:96,lods:t,origin:c,size:[h,h],spatialReference:l})}constructor(c){super(c);this.dpi=96;this.spatialReference=this.size=this.origin=this.format=null}get isWrappable(){const {spatialReference:c,origin:d}=this;if(c&&d){const b=K.getInfo(c);return c.isWrappable&&
!!b&&Math.abs(b.origin[0]-d.x)<=b.dx}return!1}readOrigin(c,d){return P.fromJSON({spatialReference:d.spatialReference,...c})}set lods(c){const d=[],b=this._levelToLOD={};c&&c.forEach(h=>{d.push(h.scale);b[h.level]=h});this._set("scales",d);this._set("lods",c);this._initializeUpsampleLevels()}readSize(c,d){return[d.cols,d.rows]}writeSize(c,d){d.cols=c[0];d.rows=c[1]}zoomToScale(c){const d=this.scales;if(0>=c)return d[0];if(c>=d.length-1)return d[d.length-1];const b=Math.floor(c);return d[b]/(d[b]/d[b+
1])**(c-b)}scaleToZoom(c){const d=this.scales,b=d.length-1;let h=0;for(;h<b;h++){const l=d[h],r=d[h+1];if(l<=c)break;if(r===c)return h+1;if(l>c&&r<c)return h+Math.log(l/c)/Math.log(l/r)}return h}snapScale(c,d=.95){c=this.scaleToZoom(c);return c%Math.floor(c)>=d?this.zoomToScale(Math.ceil(c)):this.zoomToScale(Math.floor(c))}tileAt(c,d,b,h){var l=this.lodAt(c);if(!l)return null;let r;if("number"===typeof d)r=d,d=b;else{if(K.equals(d.spatialReference,this.spatialReference))r=d.x,d=d.y;else{h=H.project(d,
this.spatialReference);if(null==h)return null;r=h.x;d=h.y}h=b}b=l.resolution*this.size[0];l=l.resolution*this.size[1];h||=new A.TileKey(null,0,0,0,z.create());h.level=c;h.row=Math.floor((this.origin.y-d)/l+.001);h.col=Math.floor((r-this.origin.x)/b+.001);this.updateTileInfo(h);return h}updateTileInfo(c,d=E.ExtrapolateOptions.NONE){var b=this.lodAt(c.level);b||d!==E.ExtrapolateOptions.POWER_OF_TWO||(d=this.lods[this.lods.length-1],d.level<c.level&&(b=d));if(b){var h=c.level-b.level;d=b.resolution*
this.size[0]/2**h;b=b.resolution*this.size[1]/2**h;c.id=`${c.level}/${c.row}/${c.col}`;c.extent||(c.extent=z.create());c.extent[0]=this.origin.x+c.col*d;c.extent[1]=this.origin.y-(c.row+1)*b;c.extent[2]=c.extent[0]+d;c.extent[3]=c.extent[1]+b}}upsampleTile(c){const d=this._upsampleLevels[c.level];if(!d||-1===d.parentLevel)return!1;c.level=d.parentLevel;c.row=Math.floor(c.row/d.factor+.001);c.col=Math.floor(c.col/d.factor+.001);this.updateTileInfo(c);return!0}getTileBounds(c,d){var b=this.lodAt(d.level);
if(null==b)return null;var {resolution:h}=b;b=h*this.size[0];h*=this.size[1];c[0]=this.origin.x+d.col*b;c[1]=this.origin.y-(d.row+1)*h;c[2]=c[0]+b;c[3]=c[1]+h;return c}lodAt(c){return this._levelToLOD?.[c]??null}clone(){return E.fromJSON(this.write({}))}getOrCreateCompatible(c,d){if(256===this.size[0]&&256===this.size[1])return 256===c?this:null;const b=[],h=this.lods.length;for(let l=0;l<h;l++){const r=this.lods[l];b.push(new O({level:r.level,scale:r.scale,resolution:r.resolution*d}))}return new E({size:[c,
c],dpi:this.dpi,format:this.format,compressionQuality:this.compressionQuality,origin:this.origin,spatialReference:this.spatialReference,lods:b})}_initializeUpsampleLevels(){const c=this.lods;this._upsampleLevels=[];let d=null;for(let b=0;b<c.length;b++){const h=c[b];this._upsampleLevels[h.level]={parentLevel:d?d.level:-1,factor:d?d.resolution/h.resolution:0};d=h}}};k.__decorate([n.property({type:Number,json:{write:!0}})],g.prototype,"compressionQuality",void 0);k.__decorate([n.property({type:Number,
json:{write:!0}})],g.prototype,"dpi",void 0);k.__decorate([n.property({type:String,json:{read:e.read,write:e.write,origins:{"web-scene":{read:!1,write:!1}}}})],g.prototype,"format",void 0);k.__decorate([n.property({readOnly:!0})],g.prototype,"isWrappable",null);k.__decorate([n.property({type:P,json:{write:!0}})],g.prototype,"origin",void 0);k.__decorate([S.reader("origin")],g.prototype,"readOrigin",null);k.__decorate([n.property({type:[O],value:null,json:{write:!0}})],g.prototype,"lods",null);k.__decorate([n.property({readOnly:!0})],
g.prototype,"scales",void 0);k.__decorate([n.property({cast:c=>Array.isArray(c)?c:"number"===typeof c?[c,c]:[256,256]})],g.prototype,"size",void 0);k.__decorate([S.reader("size",["rows","cols"])],g.prototype,"readSize",null);k.__decorate([I.writer("size",{cols:{type:y.Integer},rows:{type:y.Integer}})],g.prototype,"writeSize",null);k.__decorate([n.property({type:D,json:{write:!0}})],g.prototype,"spatialReference",void 0);g=E=k.__decorate([q.subclass("esri.layers.support.TileInfo")],g);(function(c){c=
c.ExtrapolateOptions||(c.ExtrapolateOptions={});c[c.NONE=0]="NONE";c[c.POWER_OF_TWO=1]="POWER_OF_TWO"})(g||={});return g})},"esri/layers/support/LOD":function(){define("../../chunks/tslib.es6 ../../core/JSONSupport ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/RandomLCG ../../core/has ../../core/accessorSupport/decorators/subclass".split(" "),function(k,e,g,p,n,y,u){var v;e=v=class extends e.JSONSupport{constructor(S){super(S);this.cols=null;this.level=
0;this.origin=this.levelValue=null;this.resolution=0;this.rows=null;this.scale=0}clone(){return new v({cols:this.cols,level:this.level,levelValue:this.levelValue,resolution:this.resolution,rows:this.rows,scale:this.scale})}};k.__decorate([g.property({json:{write:!0,origins:{"web-document":{read:!1,write:!1},"portal-item":{read:!1,write:!1}}}})],e.prototype,"cols",void 0);k.__decorate([g.property({type:p.Integer,json:{write:!0}})],e.prototype,"level",void 0);k.__decorate([g.property({type:String,json:{write:!0}})],
e.prototype,"levelValue",void 0);k.__decorate([g.property({json:{write:!0,origins:{"web-document":{read:!1,write:!1},"portal-item":{read:!1,write:!1}}}})],e.prototype,"origin",void 0);k.__decorate([g.property({type:Number,json:{write:!0}})],e.prototype,"resolution",void 0);k.__decorate([g.property({json:{write:!0,origins:{"web-document":{read:!1,write:!1},"portal-item":{read:!1,write:!1}}}})],e.prototype,"rows",void 0);k.__decorate([g.property({type:Number,json:{write:!0}})],e.prototype,"scale",void 0);
return e=v=k.__decorate([u.subclass("esri.layers.support.LOD")],e)})},"esri/layers/support/TileKey":function(){define(["exports"],function(k){class e{constructor(g,p,n,y,u){this.id=g;this.level=p;this.row=n;this.col=y;this.extent=u}}k.TileKey=e;Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/TileInfoTilemapCache":function(){define(["../../core/Error","../../core/promiseUtils"],function(k,e){class g{constructor(p,n=0,y=p.lods[p.lods.length-1].level){this.tileInfo=
p;this.minLOD=n;this.maxLOD=y;p.lodAt(n)||(this.minLOD=p.lods[0].level);p.lodAt(y)||(this.maxLOD=p.lods[p.lods.length-1].level)}get effectiveMinLOD(){return this.minLOD??this.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.tileInfo.lods[this.tileInfo.lods.length-1].level}getAvailability(p,n,y){const u=this.tileInfo?.lodAt(p);return!u||p<this.minLOD||p>this.maxLOD?"unavailable":u.cols&&u.rows?y>=u.cols[0]&&y<=u.cols[1]&&n>=u.rows[0]&&n<=u.rows[1]?"unknown":"unavailable":"unknown"}async fetchAvailability(p,
n,y,u){await e.waitTick(u);u=this.getAvailability(p,n,y);if("unavailable"===u)throw new k("tile-map:tile-unavailable","Tile is not available",{level:p,row:n,col:y});return u}async fetchAvailabilityUpsample(p,n,y,u,v){await e.waitTick(v);u.level=p;u.row=n;u.col=y;const S=this.tileInfo;S.updateTileInfo(u);return this.fetchAvailability(p,n,y,v).catch(q=>{if(e.isAbortError(q))throw q;if(S.upsampleTile(u))return this.fetchAvailabilityUpsample(u.level,u.row,u.col,u,v);throw q;})}}return g})},"esri/layers/support/TilemapCache":function(){define("exports ../../chunks/tslib.es6 ../../request ../../core/Accessor ../../core/ByteSizeUnit ../../core/Error ../../core/handleUtils ../../core/LRUCache ../../core/PooledArray ../../core/promiseUtils ../../core/reactiveUtils ../../core/scheduling ../../core/urlUtils ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/RandomLCG ../../core/accessorSupport/decorators/subclass ./TileKey ./Tilemap".split(" "),
function(k,e,g,p,n,y,u,v,S,q,I,P,D,z,K,H,O,A,E,c){var d;k.TilemapCache=d=class extends p{constructor(b){super(b);this._pendingTilemapRequests={};this.request=g;this.size=32;this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new v.LRUCache(2*n.ByteSizeUnit.MEGABYTES);this.addHandles([I.watch(()=>{const {layer:b}=this;return[b?.parsedUrl,b?.tileServers,b?.apiKey,b?.customParameters]},()=>this._initializeTilemapDefinition(),I.initial)])}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??
this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}fetchTilemap(b,h,l,r){if(!this.layer.tileInfo.lodAt(b)||b<this.effectiveMinLOD||b>this.effectiveMaxLOD)return Promise.reject(new y("tilemap-cache:level-unavailable",`Level ${b} is unavailable in the service`));const x=this._tmpTilemapDefinition;if(b=this._tilemapFromCache(b,h,l,x))return Promise.resolve(b);const t=r?.signal;r={...r,signal:null};return new Promise((M,G)=>{q.onAbort(t,()=>G(q.createAbortError()));const R=c.tilemapDefinitionId(x);
let C=this._pendingTilemapRequests[R];if(!C){C=c.Tilemap.fromDefinition(x,r).then(J=>{this._tilemapCache.put(R,J,J.byteSize);return J});const T=()=>{delete this._pendingTilemapRequests[R]};this._pendingTilemapRequests[R]=C;C.then(T,T)}C.then(M,G)})}getAvailability(b,h,l){return!this.layer.tileInfo.lodAt(b)||b<this.effectiveMinLOD||b>this.effectiveMaxLOD?"unavailable":(b=this._tilemapFromCache(b,h,l,this._tmpTilemapDefinition))?b.getAvailability(h,l):"unknown"}fetchAvailability(b,h,l,r){return!this.layer.tileInfo.lodAt(b)||
b<this.effectiveMinLOD||b>this.effectiveMaxLOD?Promise.reject(new y("tile-map:tile-unavailable","Tile is not available",{level:b,row:h,col:l})):this.fetchTilemap(b,h,l,r).catch(x=>x).then(x=>{if(x instanceof c.Tilemap){x=x.getAvailability(h,l);if("unavailable"===x)throw new y("tile-map:tile-unavailable","Tile is not available",{level:b,row:h,col:l});return x}if(q.isAbortError(x))throw x;return"unknown"})}fetchAvailabilityUpsample(b,h,l,r,x){r.level=b;r.row=h;r.col=l;const t=this.layer.tileInfo;t.updateTileInfo(r);
const M=this.fetchAvailability(b,h,l,x).catch(G=>{if(q.isAbortError(G))throw G;if(t.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r,x);throw G;});this._fetchAvailabilityUpsamplePrefetch(r.id,b,h,l,x,M);return M}async _fetchAvailabilityUpsamplePrefetch(b,h,l,r,x,t){if(this._prefetchingEnabled&&null!=b){var M=`prefetch-${b}`;if(!this.hasHandles(M)){var G=new AbortController;t.then(()=>G.abort(),()=>G.abort());var R=!1;t=u.makeHandle(()=>{R||(R=!0,G.abort())});this.addHandles(t,
M);await P.waitTicks(10,G.signal).catch(()=>{});R||(R=!0,this.removeHandles(M));if(!q.isAborted(G))for(b=new E.TileKey(b,h,l,r),x={...x,signal:G.signal},h=this.layer.tileInfo,l=0;d._prefetches.length<d._maxPrefetch&&h.upsampleTile(b);++l){const C=this.fetchAvailability(b.level,b.row,b.col,x);d._prefetches.push(C);r=()=>{d._prefetches.removeUnordered(C)};C.then(r,r)}}}}_initializeTilemapDefinition(){if(this.layer.parsedUrl){var {parsedUrl:b,apiKey:h,customParameters:l}=this.layer;this._tilemapCache.clear();
this._tmpTilemapDefinition={service:{url:b.path,query:D.objectToQuery({...b.query,...l,token:h??b.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}}_tilemapFromCache(b,h,l,r){r.level=b;r.row=h-h%this.size;r.col=l-l%this.size;b=c.tilemapDefinitionId(r);return this._tilemapCache.get(b)}get test(){const b=this;return{get prefetchingEnabled(){return b._prefetchingEnabled},set prefetchingEnabled(h){b._prefetchingEnabled=h},hasTilemap(h,
l,r){return!!b._tilemapFromCache(h,l,r,b._tmpTilemapDefinition)}}}};k.TilemapCache._maxPrefetch=4;k.TilemapCache._prefetches=new S({initialSize:d._maxPrefetch});e.__decorate([z.property({constructOnly:!0})],k.TilemapCache.prototype,"layer",void 0);e.__decorate([z.property({constructOnly:!0})],k.TilemapCache.prototype,"minLOD",void 0);e.__decorate([z.property({constructOnly:!0})],k.TilemapCache.prototype,"maxLOD",void 0);e.__decorate([z.property({constructOnly:!0})],k.TilemapCache.prototype,"request",
void 0);e.__decorate([z.property({constructOnly:!0})],k.TilemapCache.prototype,"size",void 0);k.TilemapCache=d=e.__decorate([A.subclass("esri.layers.support.TilemapCache")],k.TilemapCache);Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})})},"esri/core/ByteSizeUnit":function(){define(["exports"],function(k){k.ByteSizeUnit=void 0;var e=k.ByteSizeUnit||(k.ByteSizeUnit={});e[e.KILOBYTES=1024]="KILOBYTES";e[e.MEGABYTES=1048576]="MEGABYTES";e[e.GIGABYTES=1073741824]="GIGABYTES";Object.defineProperty(k,
Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/Tilemap":function(){define("exports ../../request ../../core/arrayUtils ../../core/Error ../../core/lang ../../core/typedArrayUtil ../../geometry/support/UintArray".split(" "),function(k,e,g,p,n,y,u){function v(q){if(q.service.tileServers?.length){var I=q.service.tileServers;I=`${I&&I.length?I[q.row%I.length]:q.service.url}/tilemap/${q.level}/${q.row}/${q.col}/${q.width}/${q.height}`}else I=`${q.service.url}/tilemap/${q.level}/${q.row}/${q.col}/${q.width}/${q.height}`;
(q=q.service.query)&&(I=`${I}?${q}`);return I}class S{constructor(q){this._validateJSON(q);const {location:I,data:P}=q;this.location=Object.freeze(n.clone(I));let D=q=!0;const z=u.newUintArray(Math.ceil(this.location.width*this.location.height/32));let K=0;for(let H=0;H<P.length;H++){const O=H%32;P[H]?(D=!1,z[K]|=1<<O):q=!1;31===O&&++K}D?(this._availability="unavailable",this.byteSize=40):q?(this._availability="available",this.byteSize=40):(this._availability=z,this.byteSize=40+y.estimateSize(z))}getAvailability(q,
I){if("unavailable"===this._availability||"available"===this._availability)return this._availability;q=(q-this.location.top)*this.location.width+(I-this.location.left);I=q>>5;const P=this._availability;return 0>I||I>P.length?"unknown":P[I]&1<<q%32?"available":"unavailable"}static fromDefinition(q,I){const P=q.service.request||e,{row:D,col:z,width:K,height:H}=q,O={query:{f:"json"}};I=I?{...O,...I}:O;return P(v(q),I).then(A=>A.data).catch(A=>{if(A&&A.details&&422===A.details.httpStatus)return{location:{top:D,
left:z,width:K,height:H},valid:!0,data:g.constant(K*H,0)};throw A;}).then(A=>{if(A.location&&(A.location.top!==D||A.location.left!==z||A.location.width!==K||A.location.height!==H))throw new p("tilemap:location-mismatch","Tilemap response for different location than requested",{response:A,definition:{top:D,left:z,width:K,height:H}});return S.fromJSON(A)})}static fromJSON(q){return Object.freeze(new S(q))}_validateJSON(q){if(!q?.location)throw new p("tilemap:missing-location","Location missing from tilemap response");
if(!1===q.valid)throw new p("tilemap:invalid","Tilemap response was marked as invalid");if(!q.data)throw new p("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(q.data))throw new p("tilemap:data-mismatch","Data must be an array of numbers");if(q.data.length!==q.location.width*q.location.height)throw new p("tilemap:data-mismatch","Number of data items does not match width/height of tilemap");}}k.Tilemap=S;k.tilemapDefinitionId=function(q){return`${q.level}/${q.row}/${q.col}/${q.width}/${q.height}`};
Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})})},"esri/geometry/support/UintArray":function(){define(["exports","../../core/typedArrayUtil"],function(k,e){k.newUintArray=function(g,p=!1){return g<=e.nativeArrayMaxSize?p?Array(g).fill(0):Array(g):new Uint32Array(g)};k.uintArrayFrom=function(g){return(e.isArray(g)?g.length:g.byteLength/8)<=e.nativeArrayMaxSize?Array.from(g):new Uint32Array(g)};k.uintSubArray=function(g,p,n){return Array.isArray(g)?g.slice(p,p+n):g.subarray(p,p+n)};Object.defineProperty(k,
Symbol.toStringTag,{value:"Module"})})},"esri/layers/mixins/ArcGISMapService":function(){define("exports ../../chunks/tslib.es6 ../../request ../../core/MapUtils ../../core/promiseUtils ../../core/urlUtils ../../core/Version ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/RandomLCG ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/PropertyOrigin ../../geometry/Extent ../../geometry/SpatialReference ../support/arcgisLayerUrl ../support/commonProperties ../../portal/support/portalItemUtils".split(" "),
function(k,e,g,p,n,y,u,v,S,q,I,P,D,z,K,H,O,A,E){k.ArcGISMapService=c=>{c=class extends c{constructor(){super(...arguments);this.capabilities=void 0;this.fullExtent=this.copyright=null;this.legendEnabled=!0;this.spatialReference=null;this.version=void 0;this._allLayersAndTablesMap=null}readCapabilities(d,b){var h=b.capabilities&&b.capabilities.split(",").map(J=>J.toLowerCase().trim());if(!h)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},
exportMap:null,exportTiles:null};var l=this.type;d="tile"!==l&&!!b.supportsDynamicLayers;const r=h.includes("query"),x=h.includes("map"),t=!!b.exportTilesAllowed,M=h.includes("tilemap");h=h.includes("data");const G="tile"!==l&&(!b.tileInfo||d),R="tile"!==l&&(!b.tileInfo||d);l="tile"!==l;var C=b.cimVersion&&u.Version.parse(b.cimVersion);const T=C?.since(1,4)??!1;C=C?.since(2,0)??!1;return{operations:{supportsExportMap:x,supportsExportTiles:t,supportsIdentify:r,supportsQuery:h,supportsTileMap:M},exportMap:x?
{supportsArcadeExpressionForLabeling:T,supportsSublayersChanges:l,supportsDynamicLayers:d,supportsSublayerVisibility:G,supportsSublayerDefinitionExpression:R,supportsCIMSymbols:C}:null,exportTiles:t?{maxExportTilesCount:+b.maxExportTilesCount}:null}}readVersion(d,b){(d=b.currentVersion)||(d=b.hasOwnProperty("capabilities")||b.hasOwnProperty("tables")?10:b.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3);return d}async fetchRelatedService(d){var b=this.portalItem;if(!b||!E.isHostedLayer(b))return null;
this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=b.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},d).then(h=>h.find(l=>"Feature Service"===l.type)??null,()=>null));b=await this._relatedFeatureServicePromise;n.throwIfAborted(d);return b?{itemId:b.id,url:b.url}:null}async fetchSublayerInfo(d,b){const {source:h}=d;if(this?.portalItem&&"tile"===this.type&&"map-layer"===h?.type&&E.isHostedLayer(this.portalItem)&&d.originIdOf("url")<z.OriginId.SERVICE){var l=
await this.fetchRelatedService(b);l&&(d.url=y.join(l.url,h.mapLayerId.toString()),d.layerItemId=l.itemId)}({url:l}=d);let r;if("data-layer"===h.type)r=(await g(l,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...b})).data;else if(l&&d.originIdOf("url")>z.OriginId.SERVICE)try{const x=await this._fetchAllLayersAndTablesFromService(l),t=O.parse(l)?.sublayer??h.mapLayerId;r=x.get(t)}catch{}else{d=d.id;"map-layer"===h?.type&&(d=h.mapLayerId);try{r=(await this.fetchAllLayersAndTables(b)).get(d)}catch{}}return r}async fetchAllLayersAndTables(d){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,
d)}async _fetchAllLayersAndTablesFromService(d,b){await this.load(b);this._allLayersAndTablesMap||(this._allLayersAndTablesMap=new Map);const h=O.parse(d);d=await p.getOrCreateMapValue(this._allLayersAndTablesMap,h?.url.path,()=>g(y.join(h?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(l=>{const r=new Map;for(const x of l.data.layers)r.set(x.id,x);return{result:r}},l=>({error:l})));n.throwIfAborted(b);if("result"in d)return d.result;throw d.error;
}};e.__decorate([v.property({readOnly:!0})],c.prototype,"capabilities",void 0);e.__decorate([P.reader("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],c.prototype,"readCapabilities",null);e.__decorate([v.property({json:{read:{source:"copyrightText"}}})],c.prototype,"copyright",void 0);e.__decorate([v.property({type:K})],c.prototype,"fullExtent",void 0);e.__decorate([v.property(A.id)],c.prototype,"id",void 0);e.__decorate([v.property({type:Boolean,
json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],c.prototype,"legendEnabled",void 0);e.__decorate([v.property(A.popupEnabled)],c.prototype,"popupEnabled",void 0);e.__decorate([v.property({type:H})],c.prototype,"spatialReference",void 0);e.__decorate([v.property({readOnly:!0})],c.prototype,"version",void 0);e.__decorate([P.reader("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],c.prototype,"readVersion",null);return c=
e.__decorate([D.subclass("esri.layers.mixins.ArcGISMapService")],c)};Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})})},"esri/layers/mixins/SublayersOwner":function(){define("exports ../../chunks/tslib.es6 ../../core/Collection ../../core/CollectionFlattener ../../core/Error ../../core/Logger ../../core/reactiveUtils ../../core/accessorSupport/decorators/property ../../core/has ../../core/RandomLCG ../../core/accessorSupport/utils ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/PropertyOrigin ../support/Sublayer ../support/sublayerUtils".split(" "),
function(k,e,g,p,n,y,u,v,S,q,I,P,D,z,K){function H(E,c){const d=[],b={};if(!E)return d;E.forEach(h=>{const l=new z;l.read(h,c);b[l.id]=l;null!=h.parentLayerId&&-1!==h.parentLayerId?(h=b[h.parentLayerId],h.sublayers||(h.sublayers=[]),h.sublayers.unshift(l)):d.unshift(l)});return d}function O(E,c){E&&E.forEach(d=>{c(d);d.sublayers&&d.sublayers.length&&O(d.sublayers,c)})}const A=g.ofType(z);k.SublayersOwner=E=>{E=class extends E{constructor(...c){super(...c);this.allSublayers=new p({getCollections:()=>
[this.sublayers],getChildrenFunction(d){return d.sublayers}});this.sublayersSourceJSON={[D.OriginId.SERVICE]:{},[D.OriginId.PORTAL_ITEM]:{},[D.OriginId.WEB_SCENE]:{},[D.OriginId.WEB_MAP]:{}};this.addHandles(u.watch(()=>this.sublayers,(d,b)=>this._handleSublayersChange(d,b),u.sync))}destroy(){this.allSublayers.destroy()}readSublayers(c,d){if(d&&c){var {sublayersSourceJSON:b}=this,h=D.nameToId(d.origin);if(!(h<D.OriginId.SERVICE||(b[h]={context:d,visibleLayers:c.visibleLayers||b[h].visibleLayers,layers:c.layers||
b[h].layers},h>D.OriginId.SERVICE))){this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);var {sublayers:l,origin:r}=this.createSublayersForOrigin("web-document");c=I.getProperties(this);c.setDefaultOrigin(r);this._set("sublayers",new A(l));c.setDefaultOrigin("user")}}}findSublayerById(c){return this.allSublayers.find(d=>d.id===c)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(c){const d="web-document"===c?D.nameToId("web-map"):
D.nameToId(c);let b=D.OriginId.SERVICE;c=this.sublayersSourceJSON[D.OriginId.SERVICE].layers;let h=this.sublayersSourceJSON[D.OriginId.SERVICE].context,l=null;var r=[D.OriginId.PORTAL_ITEM,D.OriginId.WEB_SCENE,D.OriginId.WEB_MAP].filter(C=>C<=d);for(var x of r)r=this.sublayersSourceJSON[x],K.isSublayerOverhaul(r.layers)&&(b=x,c=r.layers,h=r.context,r.visibleLayers&&(l={visibleLayers:r.visibleLayers,context:r.context}));x=[D.OriginId.PORTAL_ITEM,D.OriginId.WEB_SCENE,D.OriginId.WEB_MAP].filter(C=>C>
b&&C<=d);let t=null;for(var M of x){const {layers:C,visibleLayers:T,context:J}=this.sublayersSourceJSON[M];C&&(t={layers:C,context:J});T&&(l={visibleLayers:T,context:J})}M=H(c,h);const G=new Map,R=new Set;if(t)for(const C of t.layers)G.set(C.id,C);if(l?.visibleLayers)for(const C of l.visibleLayers)R.add(C);O(M,C=>{t&&C.read(G.get(C.id),t.context);l&&C.read({defaultVisibility:R.has(C.id)},l.context)});return{origin:D.idToName(b),sublayers:new A({items:M})}}read(c,d){super.read(c,d);this.readSublayers(c,
d)}_handleSublayersChange(c,d){d&&(d.forEach(b=>{b.parent=null;b.layer=null}),this.removeHandles("sublayers-owner"));c&&(c.forEach(b=>{b.parent=this;b.layer=this}),this.addHandles([c.on("after-add",({item:b})=>{b.parent=this;b.layer=this}),c.on("after-remove",({item:b})=>{b.parent=null;b.layer=null})],"sublayers-owner"),"tile"===this.type&&this.addHandles(c.on("before-changes",b=>{y.getLogger("esri.layers.TileLayer").error(new n("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",
{layer:this}));b.preventDefault()}),"sublayers-owner"))}};e.__decorate([v.property({readOnly:!0})],E.prototype,"allSublayers",void 0);e.__decorate([v.property({readOnly:!0,type:g.ofType(z)})],E.prototype,"serviceSublayers",void 0);e.__decorate([v.property({value:null,type:A,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],E.prototype,"sublayers",void 0);e.__decorate([v.property({readOnly:!0})],E.prototype,"sublayersSourceJSON",void 0);return E=e.__decorate([P.subclass("esri.layers.mixins.SublayersOwner")],
E)};k.forEachSublayer=O;Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/Sublayer":function(){define("require ../../chunks/tslib.es6 ../../geometry ../../PopupTemplate ../../renderers/ClassBreaksRenderer ../../renderers/DictionaryRenderer ../../renderers/DotDensityRenderer ../../renderers/HeatmapRenderer ../../renderers/PieChartRenderer ../../renderers/Renderer ../../renderers/SimpleRenderer ../../renderers/UniqueValueRenderer ../../renderers/support/jsonUtils ../../renderers/support/types ../../request ../../symbols ../../core/Collection ../../core/Error ../../core/has ../../core/Identifiable ../../core/lang ../../core/Loadable ../../core/Logger ../../core/MultiOriginJSONSupport ../../core/sql ../../core/urlUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/cast ../../core/accessorSupport/decorators/reader ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../core/accessorSupport/ensureType ../../core/accessorSupport/PropertyOrigin ../../core/accessorSupport/utils ../graphics/sources/support/QueryTask ./FeatureType ./Field ./FieldsIndex ./LabelClass ./labelingInfo ./LayerFloorInfo ./serviceCapabilitiesUtils ./source/DataLayerSource ./source/MapLayerSource ../../rest/support/AttachmentQuery ../../rest/support/Query ../../support/popupUtils ../../geometry/Extent ../../geometry/support/typeUtils".split(" "),
function(k,e,g,p,n,y,u,v,S,q,I,P,D,z,K,H,O,A,E,c,d,b,h,l,r,x,t,M,G,R,C,T,J,aa,w,F,N,Q,U,da,X,ma,ka,ea,na,oa,pa,qa,fa){function ha(a){return null!=a&&"esriSMS"===a.type}function ia(a,f,m){a=this.originIdOf(f)>=J.nameToId(m.origin);return{ignoreOrigin:!0,allowNull:a,enabled:m?"map-image"===m.layer?.type&&(m.writeSublayerStructure||a):!1}}function ja(a,f,m){return{enabled:m?"tile"===m.layer?.type&&(m.origin&&this.originIdOf(f)>=J.nameToId(m.origin)||this._isOverridden(f)):!1}}function W(a,f,m){return{ignoreOrigin:!0,
enabled:m&&m.writeSublayerStructure||!1}}function ba(a,f,m){return{ignoreOrigin:!0,enabled:m?m.writeSublayerStructure||this.originIdOf(f)>=J.nameToId(m.origin):!1}}var ca;let ra=0;const Z=new Set;Z.add("layer");Z.add("parent");Z.add("loaded");Z.add("loadStatus");Z.add("loadError");Z.add("loadWarnings");g=ca=class extends l.MultiOriginJSONMixin(c.IdentifiableMixin(b)){constructor(a){super(a);this.capabilities=void 0;this.maxScaleRange={minScale:0,maxScale:0};this.globalIdField=this.geometryType=this.fullExtent=
this.fields=null;this.legendEnabled=!0;this.parent=this.objectIdField=null;this.popupEnabled=!0;this.typeIdField=this.title=this.sourceJSON=this.popupTemplate=null;this.type="sublayer";this._lastParsedUrl=this.types=null}async load(a){this.addResolvingPromise((async()=>{const {layer:f,url:m}=this;if(!f&&!m)throw new A("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const B=f?await f.fetchSublayerInfo(this,a):(await K(m,{responseType:"json",query:{f:"json"},
...a})).data;B&&(this.sourceJSON=B,this.read({layerDefinition:B},{origin:"service"}))})());return this}readCapabilities(a,f){f=f.layerDefinition||f;const {operations:{supportsQuery:m,supportsQueryAttachments:B},query:{supportsFormatPBF:L},data:{supportsAttachment:V},queryRelated:Y}=ma.getFeatureLayerCapabilities(f,this.url);return{exportMap:{supportsModification:!!f.canModifyLayer},operations:{supportsQuery:m,supportsQueryAttachments:B},data:{supportsAttachment:V},query:{supportsFormatPBF:L},queryRelated:Y}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(a){this._setAndNotifyLayer("definitionExpression",
a)}get effectiveScaleRange(){const {minScale:a,maxScale:f}=this;return{minScale:a,maxScale:f}}readMaxScaleRange(a,f){f=f.layerDefinition||f;return{minScale:f.minScale??0,maxScale:f.maxScale??0}}get fieldsIndex(){return new Q(this.fields||[])}set floorInfo(a){this._setAndNotifyLayer("floorInfo",a)}readGlobalIdFieldFromService(a,f){f=f.layerDefinition||f;if(f.globalIdField)return f.globalIdField;if(f.fields)for(const m of f.fields)if("esriFieldTypeGlobalID"===m.type)return m.name}get id(){const a=this._get("id");
return null==a?ra++:a}set id(a){this._get("id")!==a&&(!1===this.layer?.capabilities?.exportMap?.supportsDynamicLayers?this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"):this._set("id",a))}set labelingInfo(a){this._setAndNotifyLayer("labelingInfo",a)}writeLabelingInfo(a,f,m,B){a&&a.length&&(f.layerDefinition={drawingInfo:{labelingInfo:a.map(L=>L.write({},B))}})}set labelsVisible(a){this._setAndNotifyLayer("labelsVisible",a)}set layer(a){this._set("layer",
a);this.sublayers&&this.sublayers.forEach(f=>f.layer=a)}set listMode(a){this._set("listMode",a)}set minScale(a){this._setAndNotifyLayer("minScale",a)}readMinScale(a,f){return f.minScale||f.layerDefinition?.minScale||0}set maxScale(a){this._setAndNotifyLayer("maxScale",a)}readMaxScale(a,f){return f.maxScale||f.layerDefinition?.maxScale||0}readObjectIdFieldFromService(a,f){f=f.layerDefinition||f;if(f.objectIdField)return f.objectIdField;if(f.fields)for(const m of f.fields)if("esriFieldTypeOID"===m.type)return m.name}set opacity(a){this._setAndNotifyLayer("opacity",
a)}readOpacity(a,f){a=f.layerDefinition;return 1-.01*((null!=a?.transparency?a.transparency:a?.drawingInfo?.transparency)??0)}writeOpacity(a,f,m,B){f.layerDefinition={drawingInfo:{transparency:100-100*a}}}writeParent(a,f){f.parentLayerId=this.parent&&this.parent!==this.layer?T.ensureInteger(this.parent.id):-1}get queryTask(){if(!this.layer)return null;const {spatialReference:a}=this.layer,f="gdbVersion"in this.layer?this.layer.gdbVersion:void 0,{capabilities:m,fieldsIndex:B}=this,L=E("featurelayer-pbf")&&
m?.query.supportsFormatPBF;return new w({url:this.url,pbfSupported:L,fieldsIndex:B,gdbVersion:f,sourceSpatialReference:a,queryAttachmentsSupported:m?.operations?.supportsQueryAttachments??!1})}set renderer(a){if(a)for(const f of a.getSymbols())if(H.isSymbol3D(f)){h.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",a)}get source(){return this._get("source")||new ea.MapLayerSource({mapLayerId:this.id})}set source(a){this._setAndNotifyLayer("source",
a)}set sublayers(a){this._handleSublayersChange(a,this._get("sublayers"));this._set("sublayers",a)}castSublayers(a){return T.ensureType(O.ofType(ca),a)}writeSublayers(a,f,m){this.sublayers?.length&&(f[m]=this.sublayers.map(B=>B.id).toArray().reverse())}readTitle(a,f){return f.layerDefinition?.name??f.name}readTypeIdField(a,f){f=f.layerDefinition||f;let m=f.typeIdField;m&&f.fields&&(m=m.toLowerCase(),a=f.fields.find(B=>B.name.toLowerCase()===m))&&(m=a.name);return m}get url(){const a=this.layer?.parsedUrl??
this._lastParsedUrl;var f=this.source;if(!a)return null;this._lastParsedUrl=a;if("map-layer"===f?.type)return`${a.path}/${f.mapLayerId}`;f={layer:JSON.stringify({source:this.source})};return`${a.path}/dynamicLayer?${x.objectToQuery(f)}`}set url(a){this._overrideIfSome("url",a)}set visible(a){this._setAndNotifyLayer("visible",a)}writeVisible(a,f,m,B){f[m]=this.getAtOrigin("defaultVisibility","service")||a}clone(){const {store:a}=aa.getProperties(this),f=new ca;aa.getProperties(f).store=a.clone(Z);
this.commitProperty("url");f._lastParsedUrl=this._lastParsedUrl;return f}createPopupTemplate(a){return pa.createPopupTemplate(this,a)}createQuery(){return new oa({returnGeometry:!0,where:this.definitionExpression||"1\x3d1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;var a=(await new Promise((B,L)=>k(["../FeatureLayer"],V=>B(Object.freeze(Object.defineProperty({__proto__:null,default:V},Symbol.toStringTag,{value:"Module"}))),L))).default;const {layer:f,url:m}=this;
if(m&&this.originIdOf("url")>J.OriginId.SERVICE)a=new a({url:m});else if(f?.parsedUrl){const B=f.parsedUrl;a=new a({url:B.path});B&&this.source&&("map-layer"===this.source.type?a.layerId=this.source.mapLayerId:a.dynamicDataSource=this.source)}else throw new A("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");null!=f?.refreshInterval&&(a.refreshInterval=f.refreshInterval);this.definitionExpression&&(a.definitionExpression=this.definitionExpression);
this.floorInfo&&(a.floorInfo=d.clone(this.floorInfo));this.originIdOf("labelingInfo")>J.OriginId.SERVICE&&(a.labelingInfo=d.clone(this.labelingInfo));this.originIdOf("labelsVisible")>J.OriginId.DEFAULTS&&(a.labelsVisible=this.labelsVisible);this.originIdOf("legendEnabled")>J.OriginId.DEFAULTS&&(a.legendEnabled=this.legendEnabled);this.originIdOf("visible")>J.OriginId.DEFAULTS&&(a.visible=this.visible);this.originIdOf("minScale")>J.OriginId.DEFAULTS&&(a.minScale=this.minScale);this.originIdOf("maxScale")>
J.OriginId.DEFAULTS&&(a.maxScale=this.maxScale);this.originIdOf("opacity")>J.OriginId.DEFAULTS&&(a.opacity=this.opacity);this.originIdOf("popupTemplate")>J.OriginId.DEFAULTS&&(a.popupTemplate=d.clone(this.popupTemplate));this.originIdOf("renderer")>J.OriginId.SERVICE&&(a.renderer=d.clone(this.renderer));"data-layer"===this.source?.type&&(a.dynamicDataSource=this.source.clone());this.originIdOf("title")>J.OriginId.DEFAULTS&&(a.title=this.title);"map-image"===f?.type&&f.originIdOf("customParameters")>
J.OriginId.DEFAULTS&&(a.customParameters=f.customParameters);"tile"===f?.type&&f.originIdOf("customParameters")>J.OriginId.DEFAULTS&&(a.customParameters=f.customParameters);return a}getField(a){return this.fieldsIndex.get(a)}getFeatureType(a){const {typeIdField:f,types:m}=this;if(!f||!a)return null;const B=a.attributes?a.attributes[f]:void 0;if(null==B)return null;let L=null;m?.some(V=>{const {id:Y}=V;if(null==Y)return!1;Y.toString()===B.toString()&&(L=V);return!!L});return L}getFieldDomain(a,f){return(f=
this.getFeatureType(f?.feature))&&(f=f.domains&&f.domains[a])&&"inherited"!==f.type?f:this._getLayerDomain(a)}async queryAttachments(a,f){await this.load();a=na.from(a);const m=this.capabilities;if(!m?.data?.supportsAttachment)throw new A("queryAttachments:not-supported","this layer doesn't support attachments");const {attachmentTypes:B,objectIds:L,globalIds:V,num:Y,size:sa,start:ta,where:la}=a;if(!m?.operations?.supportsQueryAttachments&&(0<B?.length||0<V?.length||0<sa?.length||Y||ta||la))throw new A("queryAttachments:option-not-supported",
"when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",a);if(!(L?.length||V?.length||la))throw new A("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",a);return this.queryTask.executeAttachmentQuery(a,f)}async queryFeatures(a=this.createQuery(),f){await this.load();if(!this.capabilities.operations.supportsQuery)throw new A("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new A("queryFeatures:not-supported",
"this layer has no url.");a=await this.queryTask.execute(a,{...f,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(a?.features)for(const m of a.features)m.sourceLayer=this;return a}toExportImageJSON(a){const f={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}};a=r.sqlAnd(a,this.definitionExpression);null!=a&&(f.definitionExpression=a);const m=["renderer","labelingInfo","opacity","labelsVisible"].reduce((B,L)=>{B[L]=this.originIdOf(L);return B},{});
if(Object.keys(m).some(B=>m[B]>J.OriginId.SERVICE)){a=f.drawingInfo={};m.renderer>J.OriginId.SERVICE&&(a.renderer=this.renderer?this.renderer.toJSON():null);m.labelsVisible>J.OriginId.SERVICE&&(a.showLabels=this.labelsVisible);if(this.labelsVisible&&m.labelingInfo>J.OriginId.SERVICE)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some(L=>!L.labelPlacement)&&h.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' `+"and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.",
{sublayer:this});let B=this.labelingInfo;null!=this.geometryType&&(B=da.validateLabelingInfo(this.labelingInfo,fa.featureGeometryTypeKebabDictionary.toJSON(this.geometryType)));a.showLabels=!0;a.labelingInfo=B.filter(L=>L.labelPlacement).map(L=>L.toJSON({origin:"service",layer:this.layer}))}else a.showLabels=!1;m.opacity>J.OriginId.SERVICE&&(a.transparency=100-100*this.opacity);this._assignDefaultSymbolColors(a.renderer)}return f}_assignDefaultSymbolColors(a){this._forEachSimpleMarkerSymbols(a,f=>
{f.color||"esriSMSX"!==f.style&&"esriSMSCross"!==f.style||(f.color=f.outline?.color?f.outline.color:[0,0,0,0])})}_forEachSimpleMarkerSymbols(a,f){if(a){const m=("uniqueValueInfos"in a?a.uniqueValueInfos:"classBreakInfos"in a?a.classBreakInfos:null)??[];for(const B of m)ha(B.symbol)&&f(B.symbol);"symbol"in a&&ha(a.symbol)&&f(a.symbol);"defaultSymbol"in a&&ha(a.defaultSymbol)&&f(a.defaultSymbol)}}_setAndNotifyLayer(a,f){const m=this.layer,B=this._get(a);let L,V;switch(a){case "definitionExpression":case "floorInfo":L=
"supportsSublayerDefinitionExpression";break;case "minScale":case "maxScale":case "visible":L="supportsSublayerVisibility";break;case "labelingInfo":case "labelsVisible":case "opacity":case "renderer":case "source":L="supportsDynamicLayers",V="supportsModification"}const Y=aa.getProperties(this).getDefaultOrigin();if("service"!==Y){if(L&&!1===this.layer?.capabilities?.exportMap?.[L]){this._logLockedError(a,`capability not available 'layer.capabilities.exportMap.${L}'`);return}if(V&&!1===this.capabilities?.exportMap[V]){this._logLockedError(a,
`capability not available 'capabilities.exportMap.${V}'`);return}}"source"===a&&"not-loaded"!==this.loadStatus?this._logLockedError(a,"'source' can't be changed after calling sublayer.load()"):(this._set(a,f),"service"!==Y&&B!==f&&m&&m.emit&&m.emit("sublayer-update",{propertyName:a,target:this}))}_handleSublayersChange(a,f){f&&(f.forEach(m=>{m.parent=null;m.layer=null}),this.removeAllHandles());a&&(a.forEach(m=>{m.parent=this;m.layer=this.layer}),this.addHandles([a.on("after-add",({item:m})=>{m.parent=
this;m.layer=this.layer}),a.on("after-remove",({item:m})=>{m.parent=null;m.layer=null}),a.on("before-changes",m=>{const B=this.layer?.capabilities?.exportMap?.supportsSublayersChanges;null==B||B||(h.getLogger(this).error(new A("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),m.preventDefault())})]))}_logLockedError(a,f){const {layer:m,declaredClass:B}=this;h.getLogger(B).error(new A("sublayer:locked",`Property '${String(a)}' can't be changed on Sublayer from the layer '${m?.id}'`,
{reason:f,sublayer:this,layer:m}))}_getLayerDomain(a){return(a=this.fieldsIndex.get(a))?a.domain:null}};g.test={isMapImageLayerOverridePolicy:a=>a===W||a===ia,isTileImageLayerOverridePolicy:a=>a===ja};e.__decorate([t.property({readOnly:!0})],g.prototype,"capabilities",void 0);e.__decorate([G.reader("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],g.prototype,"readCapabilities",null);e.__decorate([t.property()],g.prototype,"defaultPopupTemplate",null);e.__decorate([t.property({type:String,
value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:ia}}})],g.prototype,"definitionExpression",null);e.__decorate([t.property({readOnly:!0})],g.prototype,"effectiveScaleRange",null);e.__decorate([G.reader("service","maxScaleRange",["minScale","maxScale"])],g.prototype,"readMaxScaleRange",null);e.__decorate([t.property({type:[N],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],g.prototype,"fields",void 0);e.__decorate([t.property({readOnly:!0})],
g.prototype,"fieldsIndex",null);e.__decorate([t.property({type:X,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:ia},origins:{"web-scene":{read:!1,write:!1}}}})],g.prototype,"floorInfo",null);e.__decorate([t.property({type:qa,json:{read:{source:"layerDefinition.extent"}}})],g.prototype,"fullExtent",void 0);e.__decorate([t.property({type:fa.featureGeometryTypeKebabDictionary.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",
read:{reader:fa.featureGeometryTypeKebabDictionary.read}}}}})],g.prototype,"geometryType",void 0);e.__decorate([t.property({type:String})],g.prototype,"globalIdField",void 0);e.__decorate([G.reader("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],g.prototype,"readGlobalIdFieldFromService",null);e.__decorate([t.property({type:T.Integer,json:{write:{ignoreOrigin:!0}}})],g.prototype,"id",null);e.__decorate([t.property({value:null,type:[U],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},
write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:W}}})],g.prototype,"labelingInfo",null);e.__decorate([C.writer("labelingInfo")],g.prototype,"writeLabelingInfo",null);e.__decorate([t.property({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:W}}})],g.prototype,"labelsVisible",null);e.__decorate([t.property({value:null})],g.prototype,"layer",null);e.__decorate([t.property({type:String,
json:{write:{overridePolicy:ja}}})],g.prototype,"layerItemId",void 0);e.__decorate([t.property({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:ba}}})],g.prototype,"legendEnabled",void 0);e.__decorate([t.property({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],g.prototype,"listMode",null);e.__decorate([t.property({type:Number,value:0,json:{write:{overridePolicy:W}}})],
g.prototype,"minScale",null);e.__decorate([G.reader("minScale",["minScale","layerDefinition.minScale"])],g.prototype,"readMinScale",null);e.__decorate([t.property({type:Number,value:0,json:{write:{overridePolicy:W}}})],g.prototype,"maxScale",null);e.__decorate([G.reader("maxScale",["maxScale","layerDefinition.maxScale"])],g.prototype,"readMaxScale",null);e.__decorate([t.property({type:String})],g.prototype,"objectIdField",void 0);e.__decorate([G.reader("service","objectIdField",["layerDefinition.objectIdField",
"layerDefinition.fields"])],g.prototype,"readObjectIdFieldFromService",null);e.__decorate([t.property({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:W}}})],g.prototype,"opacity",null);e.__decorate([G.reader("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],g.prototype,"readOpacity",null);e.__decorate([C.writer("opacity")],g.prototype,"writeOpacity",null);e.__decorate([t.property({json:{type:T.Integer,write:{target:"parentLayerId",
writerEnsuresNonNull:!0,overridePolicy:W}}})],g.prototype,"parent",void 0);e.__decorate([C.writer("parent")],g.prototype,"writeParent",null);e.__decorate([t.property({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader(a,f){return!f.disablePopup}},write:{target:"disablePopup",overridePolicy:ba,writer(a,f,m){f[m]=!a}}}})],g.prototype,"popupEnabled",void 0);e.__decorate([t.property({type:p,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:ba}}})],g.prototype,"popupTemplate",
void 0);e.__decorate([t.property({readOnly:!0})],g.prototype,"queryTask",null);e.__decorate([t.property({types:z.rendererTypes,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:W},origins:{"web-scene":{types:z.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:W}}}}})],g.prototype,"renderer",null);e.__decorate([t.property({types:{key:"type",base:null,typeMap:{"data-layer":ka.DataLayerSource,"map-layer":ea.MapLayerSource}},cast(a){if(a){if("mapLayerId"in
a)return T.ensureClass(ea.MapLayerSource,a);if("dataSource"in a)return T.ensureClass(ka.DataLayerSource,a)}return a},json:{name:"layerDefinition.source",write:{overridePolicy:W}}})],g.prototype,"source",null);e.__decorate([t.property()],g.prototype,"sourceJSON",void 0);e.__decorate([t.property({value:null,json:{type:[T.Integer],write:{target:"subLayerIds",allowNull:!0,overridePolicy:W}}})],g.prototype,"sublayers",null);e.__decorate([M.cast("sublayers")],g.prototype,"castSublayers",null);e.__decorate([C.writer("sublayers")],
g.prototype,"writeSublayers",null);e.__decorate([t.property({type:String,json:{name:"name",write:{overridePolicy:ba}}})],g.prototype,"title",void 0);e.__decorate([G.reader("service","title",["name","layerDefinition.name"])],g.prototype,"readTitle",null);e.__decorate([t.property({type:String})],g.prototype,"typeIdField",void 0);e.__decorate([t.property({json:{read:!1},readOnly:!0,value:"sublayer"})],g.prototype,"type",void 0);e.__decorate([G.reader("typeIdField",["layerDefinition.typeIdField"])],g.prototype,
"readTypeIdField",null);e.__decorate([t.property({type:[F],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],g.prototype,"types",void 0);e.__decorate([t.property({type:String,json:{name:"layerUrl",write:{overridePolicy:ja}}})],g.prototype,"url",null);e.__decorate([t.property({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:W}}})],g.prototype,"visible",null);e.__decorate([C.writer("visible")],g.prototype,"writeVisible",
null);return g=ca=e.__decorate([R.subclass("esri.layers.support.Sublayer")],g)})},"esri/layers/support/sublayerUtils":function(){define(["exports","../../core/accessorSupport/PropertyOrigin"],function(k,e){function g(p,n){if(!p?.length||null==n)return!0;n=n.slice().reverse().flatten(({sublayers:v})=>v&&v.toArray().reverse()).map(v=>v.id).toArray();if(p.length>n.length)return!1;let y=0;const u=n.length;for(const {id:v}of p){for(;y<u&&n[y]!==v;)y++;if(y>=u)return!1}return!0}k.isExportDynamic=function(p,
n,y){return p.some(u=>{const v=u.source;return!(!v||"map-layer"===v.type&&v.mapLayerId===u.id&&(null==v.gdbVersion||v.gdbVersion===y))||u.originIdOf("renderer")>e.OriginId.SERVICE||u.originIdOf("labelingInfo")>e.OriginId.SERVICE||u.originIdOf("opacity")>e.OriginId.SERVICE||u.originIdOf("labelsVisible")>e.OriginId.SERVICE})?!0:!g(p,n)};k.isSublayerOverhaul=function(p){return!!p&&p.some(n=>null!=n.minScale||null!=n.layerDefinition?.minScale)};k.shouldWriteSublayerStructure=function(p,n,y){return n.flatten(({sublayers:u})=>
u).length!==p.length||p.some(u=>u.originIdOf("minScale")>y||u.originIdOf("maxScale")>y||u.originIdOf("renderer")>y||u.originIdOf("labelingInfo")>y||u.originIdOf("opacity")>y||u.originIdOf("labelsVisible")>y||u.originIdOf("source")>y)?!0:!g(p,n)};Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})})},"esri/layers/support/imageBitmapUtils":function(){define(["exports","../../core/Error","../../core/promiseUtils"],function(k,e,g){k.createBitmap=async function(p,n,y){let u;try{u=await createImageBitmap(p)}catch(v){throw new e("request:server",
`Unable to load ${n}`,{url:n,error:v});}g.throwIfAborted(y);return u};k.createTileBitmap=async function(p,n,y,u,v){let S;try{S=await createImageBitmap(p)}catch(q){throw new e("request:server",`Unable to load tile ${n}/${y}/${u}`,{error:q,level:n,row:y,col:u});}g.throwIfAborted(v);return S};Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})})},"*noref":1}});
define("../chunks/tslib.es6 ../request ../core/Error ../core/loadAll ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/decorators/cast ../core/RandomLCG ../core/has ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../geometry/SpatialReference ./Layer ./mixins/APIKeyMixin ./mixins/ArcGISCachedService ./mixins/ArcGISMapService ./mixins/ArcGISService ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/SublayersOwner ./support/arcgisLayerUrl ./support/commonProperties ./support/imageBitmapUtils ./support/Sublayer".split(" "),function(k,
e,g,p,n,y,u,v,S,q,I,P,D,z,K,H,O,A,E,c,d,b,h,l,r,x,t,M,G,R,C){var T;const J="Canvas/World_Dark_Gray_Base Canvas/World_Dark_Gray_Reference Canvas/World_Light_Gray_Base Canvas/World_Light_Gray_Reference Elevation/World_Hillshade Elevation/World_Hillshade_Dark Ocean/World_Ocean_Base Ocean/World_Ocean_Reference Ocean_Basemap Reference/World_Boundaries_and_Places Reference/World_Boundaries_and_Places_Alternate Reference/World_Transportation World_Imagery World_Street_Map World_Topo_Map".split(" ");n=T=
class extends d.BlendLayer(x.ScaleRangeLayer(t.SublayersOwner(A.ArcGISCachedService(E.ArcGISMapService(h.OperationalLayer(l.PortalLayer(c.ArcGISService(n.MultiOriginJSONMixin(r.RefreshableLayer(O.APIKeyMixin(b.CustomParametersMixin(H)))))))))))){constructor(...w){super(...w);this.listMode="show";this.isReference=null;this.operationalLayerType="ArcGISTiledMapServiceLayer";this.resampling=!0;this.sublayers=this.path=this.spatialReference=this.sourceJSON=null;this.type="tile";this.url=null}normalizeCtorArgs(w,
F){return"string"===typeof w?{url:w,...F}:w}load(w){const F=null!=w?w.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},w).catch(y.throwIfAbortError).then(()=>this._fetchService(F)));return Promise.resolve(this)}get attributionDataUrl(){const w=this.parsedUrl?.path.toLowerCase();return w?this._getDefaultAttribution(this._getMapName(w)):null}readSpatialReference(w,F){return(w=w||F.tileInfo?.spatialReference)&&K.fromJSON(w)}writeSublayers(w,F,N,Q){if(this.loaded&&
w){w=w.slice().reverse().flatten(({sublayers:X})=>X&&X.toArray().reverse()).toArray();var U=[],da={writeSublayerStructure:!1,...Q};w.forEach(X=>{X=X.write({},da);U.push(X)});U.some(X=>1<Object.keys(X).length)&&(F.layers=U)}}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(w){return Array.isArray(w)?w.map(F=>u.urlToObject(F).path):null}fetchTile(w,F,N,Q={}){({signal:Q}=Q);w=this.getTileUrl(w,F,N);return e(w,{responseType:"image",signal:Q,query:{...this.refreshParameters}}).then(U=>
U.data)}async fetchImageBitmapTile(w,F,N,Q={}){const {signal:U}=Q;if(this.fetchTile!==T.prototype.fetchTile)return Q=await this.fetchTile(w,F,N,Q),R.createTileBitmap(Q,w,F,N,U);Q=this.getTileUrl(w,F,N);({data:Q}=await e(Q,{responseType:"blob",signal:U,query:{...this.refreshParameters}}));return R.createTileBitmap(Q,w,F,N,U)}getTileUrl(w,F,N){const Q=u.objectToQuery({...this.parsedUrl?.query,blankTile:!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile?!1:null,...this.customParameters,
token:this.apiKey}),U=this.tileServers;return`${U&&U.length?U[F%U.length]:this.parsedUrl?.path}/tile/${w}/${F}/${N}${Q?"?"+Q:""}`}loadAll(){return p.loadAll(this,w=>{w(this.allSublayers)})}_fetchService(w){return(new Promise((F,N)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new g("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");F({data:this.sourceJSON})}else{if(!this.parsedUrl)throw new g("tile-layer:undefined-url",
"layer's url is not defined");var Q=M.parse(this.parsedUrl.path);if(null!=Q&&"ImageServer"===Q.serverType)throw new g("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");e(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:w}).then(F,N)}})).then(F=>{let N=this.url;F.ssl&&(N=this.url=N.replace(/^http:/i,"https:"));this.sourceJSON=F.data;this.read(F.data,{origin:"service",url:this.parsedUrl});
if(10.1===this.version&&!M.isHostedAgolService(N))return this._fetchServerVersion(N,w).then(Q=>{this.read({currentVersion:Q})}).catch(()=>{})})}_fetchServerVersion(w,F){if(!M.isArcGISUrl(w))return Promise.reject();w=w.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return e(w,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:F}).then(N=>{if(N.data&&N.data.currentVersion)return N.data.currentVersion;throw new g("tile-layer:version-not-available");})}_getMapName(w){return(w=
w.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i))?w[2]:void 0}_getDefaultAttribution(w){if(null==w)return null;let F;w=w.toLowerCase();for(let N=0,Q=J.length;N<Q;N++)if(F=J[N],F.toLowerCase().includes(w))return u.makeAbsolute("//static.arcgis.com/attribution/"+F);return null}_getDefaultTileServers(w){if(null==w)return[];const F=-1!==w.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),
N=-1!==w.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return F||N?[w,w.replace(F?/server\.arcgisonline/i:/services\.arcgisonline/i,F?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[aa]}};k.__decorate([v.property({readOnly:!0})],n.prototype,"attributionDataUrl",null);k.__decorate([v.property({type:["show","hide","hide-children"]})],n.prototype,"listMode",void 0);k.__decorate([v.property({json:{read:!0,write:!0}})],n.prototype,"blendMode",
void 0);k.__decorate([v.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],n.prototype,"isReference",void 0);k.__decorate([v.property({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],n.prototype,"operationalLayerType",void 0);k.__decorate([v.property({type:Boolean})],n.prototype,"resampling",void 0);k.__decorate([v.property()],n.prototype,"sourceJSON",void 0);k.__decorate([v.property({type:K})],n.prototype,"spatialReference",void 0);k.__decorate([P.reader("spatialReference",
["spatialReference","tileInfo"])],n.prototype,"readSpatialReference",null);k.__decorate([v.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],n.prototype,"path",void 0);k.__decorate([v.property({readOnly:!0})],n.prototype,"sublayers",void 0);k.__decorate([z.writer("sublayers",{layers:{type:[C]}})],n.prototype,"writeSublayers",null);k.__decorate([v.property({json:{read:!1,write:!1}})],n.prototype,"popupEnabled",void 0);k.__decorate([v.property()],n.prototype,"tileServers",
null);k.__decorate([S.cast("tileServers")],n.prototype,"castTileServers",null);k.__decorate([v.property({readOnly:!0,json:{read:!1}})],n.prototype,"type",void 0);k.__decorate([v.property(G.url)],n.prototype,"url",void 0);n=T=k.__decorate([D.subclass("esri.layers.TileLayer")],n);const aa=Symbol("default-fetch-tile");n.prototype.fetchTile[aa]=!0;return n});