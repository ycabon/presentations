// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../chunks/tslib.es6 ../geometry ../request ../core/mathUtils ../core/MultiOriginJSONSupport ../core/reactiveUtils ../core/accessorSupport/decorators/property ../core/has ../core/Logger ../core/RandomLCG ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../geometry/Polyline ../geometry/SpatialReference ./Layer ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/ScaleRangeLayer ./support/commonProperties ./support/PlaybackInfo ./support/serviceCapabilitiesUtils ./support/TelemetryData ./support/TelemetryDisplay ./support/VideoFrame ./video/VideoController ./video/videoUtils ../geometry/Polygon ../geometry/Extent".split(" "),
function(b,a,m,n,p,f,d,G,H,I,k,q,r,t,u,v,w,x,y,z,A,B,l,C,D,g,E,F){a=class extends v.BlendLayer(x.ScaleRangeLayer(p.MultiOriginJSONMixin(w.CustomParametersMixin(u)))){constructor(c){super(c);this._trailPoints=[];this.connectionInfo=this.capabilities=null;this.controller=new D;this.posterUrl=this.playbackInfo=this.initialExtent=this.frameCount=this.frame=this.description=this.coverage=this.copyright=null;this.protocol="hls";this.sourceJSON=this.serviceItemId=this.qualities=null;this.spatialReference=
t.WGS84;this.title=this.videoTimeExtent=this.telemetryDisplay=null;this.type="video";this.url=null}initialize(){this.telemetryDisplay=new l({frameCenter:!0,frameOutline:!0,lineOfSight:!0,sensorLocation:!0,sensorTrail:!0});this.addHandles([f.watch(()=>this.metadata,()=>this.notifyChange("telemetry")),f.watch(()=>this.telemetry?.sensorLocation,c=>this._setSensorTrail(c),f.initial)])}load(c){this.addResolvingPromise(this._fetchService(null!=c?c.signal:null));return Promise.resolve(this)}get buffered(){return this.controller.buffered}readCapabilitiesFromService(c,
e){return A.getVideoLayerCapabilities(e)}readConnectionInfo(c,e){c=e.connectionUrl;this.controller.playerUrl=c&&this.protocol?c[this.protocol]:"";return c}get currentTime(){return this.controller.currentTime}get duration(){return this.controller.duration}get ended(){return this.controller.ended}get loop(){return this.controller.loop}set loop(c){this.controller.loop=c}get metadata(){return this.controller?.currentMetadata}get muted(){return this.controller.muted}set muted(c){this.controller.muted=
c}get playbackRate(){return this.controller.rate}set playbackRate(c){this.controller.rate=c}get playerUrl(){return this.controller.playerUrl}get playing(){return this.controller.playing}get state(){return this.controller.state}get telemetry(){return g.getTelemetryData(this.metadata)}get videoElement(){return this.controller?.element}get videoHeight(){return this.controller?.videoHeight}get videoWidth(){return this.controller?.videoWidth}get waiting(){return this.controller.waiting}play(){this.controller.play()}pause(){this.controller.pause()}reset(){this.controller.reset()}setCurrentTime(c){this.duration&&
(c=n.clamp(c,0,this.duration),this.controller.setCurrentTime(c))}getCurrentFrame(){}toGround(c,e){return this.controller?.sensorModel?.metadataSupportsTransforms?this.controller.sensorModel.transformImageToGeo(c,e):null}toVideo(c){if(!this.controller?.sensorModel?.metadataSupportsTransforms)return null;c=this.controller.sensorModel.transformGeoToImage(c.x,c.y,c.z);return{x:c[0],y:c[1]}}async _fetchService(c){if(this.sourceJSON)this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});else{var {data:e,
ssl:h}=await m(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters},signal:c});h&&(this.url=this.url.replace(/^http:/i,"https:"));this.sourceJSON=e;this.read(e,{origin:"service",url:this.parsedUrl})}}_setSensorTrail(c){if(c){this._trailPoints=[...g.getSensorTrailPoints(c,this._trailPoints)];var e=this._trailPoints.map(h=>h.toArray());c=new r({hasZ:c.hasZ,paths:[e]});this.telemetry.sensorTrail=c.clone()}}};b.__decorate([d.property({readOnly:!0})],a.prototype,"buffered",
null);b.__decorate([d.property({readOnly:!0,json:{read:!1}})],a.prototype,"capabilities",void 0);b.__decorate([k.reader("service","capabilities",["supportsCoverageQuery","supportsExportClip","supportsMensuration"])],a.prototype,"readCapabilitiesFromService",null);b.__decorate([d.property({readOnly:!0})],a.prototype,"connectionInfo",void 0);b.__decorate([k.reader("connectionInfo",["connectionUrl"])],a.prototype,"readConnectionInfo",null);b.__decorate([d.property()],a.prototype,"controller",void 0);
b.__decorate([d.property({type:String})],a.prototype,"copyright",void 0);b.__decorate([d.property({type:E})],a.prototype,"coverage",void 0);b.__decorate([d.property({type:Number})],a.prototype,"currentTime",null);b.__decorate([d.property({type:String})],a.prototype,"description",void 0);b.__decorate([d.property({type:Number})],a.prototype,"duration",null);b.__decorate([d.property({type:Boolean})],a.prototype,"ended",null);b.__decorate([d.property({type:C})],a.prototype,"frame",void 0);b.__decorate([d.property({type:Number})],
a.prototype,"frameCount",void 0);b.__decorate([d.property({type:F})],a.prototype,"initialExtent",void 0);b.__decorate([d.property({type:Boolean})],a.prototype,"loop",null);b.__decorate([d.property({readOnly:!0})],a.prototype,"metadata",null);b.__decorate([d.property({type:Boolean})],a.prototype,"muted",null);b.__decorate([d.property({type:z})],a.prototype,"playbackInfo",void 0);b.__decorate([d.property({type:Number})],a.prototype,"playbackRate",null);b.__decorate([d.property({type:String})],a.prototype,
"playerUrl",null);b.__decorate([d.property({readOnly:!0})],a.prototype,"playing",null);b.__decorate([d.property({readOnly:!0,json:{read:{source:"poster"}}})],a.prototype,"posterUrl",void 0);b.__decorate([d.property({type:String})],a.prototype,"protocol",void 0);b.__decorate([d.property({readOnly:!0})],a.prototype,"qualities",void 0);b.__decorate([d.property({readOnly:!0})],a.prototype,"serviceItemId",void 0);b.__decorate([d.property()],a.prototype,"sourceJSON",void 0);b.__decorate([d.property()],
a.prototype,"spatialReference",void 0);b.__decorate([d.property({type:String})],a.prototype,"state",null);b.__decorate([d.property({type:B})],a.prototype,"telemetry",null);b.__decorate([d.property({type:l})],a.prototype,"telemetryDisplay",void 0);b.__decorate([d.property({readOnly:!0,nonNullable:!1,json:{read:{reader:g.readVideoTimeExtent,source:"time"}}})],a.prototype,"videoTimeExtent",void 0);b.__decorate([d.property({readOnly:!0,json:{read:{source:"name"}}})],a.prototype,"title",void 0);b.__decorate([d.property({readOnly:!0})],
a.prototype,"type",void 0);b.__decorate([d.property(y.url)],a.prototype,"url",void 0);b.__decorate([d.property({readOnly:!0})],a.prototype,"videoElement",null);b.__decorate([d.property({readOnly:!0})],a.prototype,"videoHeight",null);b.__decorate([d.property({readOnly:!0})],a.prototype,"videoWidth",null);b.__decorate([d.property({readOnly:!0})],a.prototype,"waiting",null);return a=b.__decorate([q.subclass("esri.layers.VideoLayer")],a)});