// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
require({cache:{"esri/layers/graphics/sources/WFSSource":function(){define("exports ../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/has ../../../core/Loadable ../../../core/Logger ../../../core/promiseUtils ../../../core/workers/workers ../../../core/accessorSupport/decorators/property ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ../../../geometry/support/typeUtils ./support/clientSideDefaults ../../ogc/wfsUtils ../../../rest/support/FeatureSet ../../../time/timeZoneUtils ../../../geometry/Extent".split(" "),
function(e,A,G,v,D,x,p,K,O,L,M,W,H,h,S,aa,l,X){e.WFSSource=class extends x{constructor(){super(...arguments);this._workerHandler=this._connection=null;this.capabilities=h.createCapabilities(!1,!1);this.type="wfs";this.refresh=K.debounce(async()=>{await this.load();const {extent:m}=await this._workerHandler.refresh({customParameters:this.layer.customParameters,maxRecordCount:this.layer.maxRecordCount,maxTotalRecordCount:this.layer.maxTotalRecordCount,maxPageCount:this.layer.maxPageCount});m&&(this.sourceJSON.extent=
m);return{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}})}load(m){this.addResolvingPromise(this._startWorker({signal:null!=m?m.signal:null}));return Promise.resolve(this)}destroy(){this._connection?.close();this._workerHandler=this._connection=null}async openPorts(){await this.load();return this._connection.openPorts()}async queryFeatures(m,w={}){m=await this.queryFeaturesJSON(m,w);return aa.fromJSON(m)}async queryFeaturesJSON(m,w={}){await this.load(w);return this._workerHandler.queryFeatures(m?
m.toJSON():void 0,w)}async queryFeatureCount(m,w={}){await this.load(w);return this._workerHandler.queryFeatureCount(m?m.toJSON():void 0,w)}async queryObjectIds(m,w={}){await this.load(w);return this._workerHandler.queryObjectIds(m?m.toJSON():void 0,w)}async queryExtent(m,w={}){await this.load(w);m=await this._workerHandler.queryExtent(m?m.toJSON():void 0,w);return{count:m.count,extent:X.fromJSON(m.extent)}}async querySnapping(m,w={}){await this.load(w);return this._workerHandler.querySnapping(m,
w)}async _createLoadOptions(m){const {url:w,customParameters:b,name:c,namespaceUri:n,fields:u,geometryType:B,maxRecordCount:I,maxPageCount:C,maxTotalRecordCount:T,swapXY:U}=this.layer;var y="defaults"===this.layer.originOf("spatialReference")?void 0:this.layer.spatialReference;if(!w)throw new v("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await S.getCapabilities(w,{customParameters:b,...m}));m=["fields","geometryType","name","namespaceUri",
"swapXY"].some(P=>null==this.layer[P])?await S.getWFSLayerInfo(this.wfsCapabilities,c,n,{spatialReference:y,customParameters:b,signal:m?.signal}):{...S.prepareWFSLayerFields(u??[]),geometryType:B,name:c,namespaceUri:n,spatialReference:y,swapXY:U};y=S.findFeatureType(this.wfsCapabilities.readFeatureTypes(),m.name,m.namespaceUri);const V=H.featureGeometryTypeKebabDictionary.toJSON(m.geometryType);var {operations:Q}=this.wfsCapabilities;const E=Q.GetFeature.url;Q=Q.GetFeature.outputFormat;return{customParameters:b,
featureType:y,fields:m.fields?.map(P=>P.toJSON())??[],geometryField:m.geometryField,geometryType:V,getFeatureUrl:E,getFeatureOutputFormat:Q,maxRecordCount:I,maxPageCount:C,maxTotalRecordCount:T,objectIdField:m.objectIdField,spatialReference:m.spatialReference?.toJSON(),swapXY:!!m.swapXY}}async _startWorker(m){const [w,b]=await K.eachAlways([this._createLoadOptions(m),O.open("WFSSourceWorker",{...m,strategy:D("feature-layers-workers")?"dedicated":"local",registryTarget:this})]);var c=w.error||b.error||
null;const n=b.value||null;if(c)throw n&&n.close(),c;c=w.value;this._connection=b.value;this._workerHandler=this._connection.createInvokeProxy();m=await this._workerHandler.load(c,m);for(const u of m.warnings)p.getLogger(this.layer).warn("#load()",`${u.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:u});this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:l.utc},extent:m.extent,fields:c.fields,geometryType:c.geometryType,objectIdField:c.objectIdField,
geometryField:c.geometryField,drawingInfo:h.createDrawingInfo(c.geometryType),name:c.featureType.title,wfsInfo:{name:c.featureType.name,featureUrl:c.getFeatureUrl,maxFeatures:c.maxRecordCount,swapXY:c.swapXY,supportedSpatialReferences:c.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:c.featureType.namespaceUri}}}};A.__decorate([L.property()],e.WFSSource.prototype,"capabilities",void 0);A.__decorate([L.property({constructOnly:!0})],e.WFSSource.prototype,"layer",void 0);A.__decorate([L.property()],
e.WFSSource.prototype,"sourceJSON",void 0);A.__decorate([L.property()],e.WFSSource.prototype,"type",void 0);A.__decorate([L.property()],e.WFSSource.prototype,"wfsCapabilities",void 0);e.WFSSource=A.__decorate([W.subclass("esri.layers.graphics.sources.WFSSource")],e.WFSSource);Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/ogc/wfsUtils":function(){define("exports ../../geometry ../../request ../../core/Error ../../core/iteratorUtils ../../core/urlUtils ../../geometry/projection ../../geometry/support/spatialReferenceUtils ../../geometry/support/typeUtils ../graphics/sources/geojson/geojson ./xmlUtils ../support/arcgisLayerUrl ../support/Field ../support/fieldUtils ../../geometry/SpatialReference ../../geometry/Extent".split(" "),
function(e,A,G,v,D,x,p,K,O,L,M,W,H,h,S,aa){function l(a){a=Q(a);P(a);N(a);a=a.firstElementChild;const d=D.cache(w(a));return{operations:X(a),get featureTypes(){return Array.from(d())},readFeatureTypes:d}}function X(a){let d=!1;const f={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}};let k=null,g=null;M.visitXML(a,{OperationsMetadata:{Parameter:q=>{if("outputFormat"===q.getAttribute("name"))return{AllowedValues:{Value:t=>{(t=t.textContent)&&
Z.has(t.toLowerCase())&&(k??=t)}}}},Operation:q=>{switch(q.getAttribute("name")){case "GetCapabilities":return{DCP:{HTTP:{Get:t=>{f.GetCapabilities.url=t.getAttribute("xlink:href")}}}};case "DescribeFeatureType":return{DCP:{HTTP:{Get:t=>{f.DescribeFeatureType.url=t.getAttribute("xlink:href")}}}};case "GetFeature":return{DCP:{HTTP:{Get:t=>{f.GetFeature.url=t.getAttribute("xlink:href")}}},Parameter:t=>{if("outputFormat"===t.getAttribute("name"))return{AllowedValues:{Value:J=>{(J=J.textContent)&&Z.has(J.toLowerCase())&&
(g??=J)}}}}}}},Constraint:q=>{switch(q.getAttribute("name")){case "KVPEncoding":return{DefaultValue:t=>{d="true"===t.textContent.toLowerCase()}};case "ImplementsResultPaging":return{DefaultValue:t=>{f.GetFeature.supportsPagination="true"===t.textContent.toLowerCase()}}}}}});f.GetFeature.outputFormat=g??k;if(!d)throw new v("wfs-layer:kvp-encoding-not-supported","WFS service doesn't support key/value pair (KVP) encoding");if(null==f.GetFeature.outputFormat)throw new v("wfs-layer:geojson-not-supported",
"WFS service doesn't support GeoJSON output format");return f}function m(a){a=parseInt(a.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);if(!Number.isNaN(a))return a}function w(a){return M.iterateXML(a,{FeatureTypeList:{FeatureType:d=>{const f={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",defaultSpatialReference:4326,supportedSpatialReferences:[]},k=new Set;M.visitXML(d,{Name:g=>{const {name:q,prefix:t}=E(g.textContent);f.typeName=
`${t}:${q}`;f.name=q;f.namespacePrefix=t;f.namespaceUri=g.lookupNamespaceURI(t)},Abstract:g=>{f.description=g.textContent},Title:g=>{f.title=g.textContent},WGS84BoundingBox:g=>{f.extent=b(g)},DefaultCRS:g=>{if(g=m(g))f.defaultSpatialReference=g,k.add(g)},OtherCRS:g=>{(g=m(g))&&k.add(g)}});f.title||(f.title=f.name);k.add(4326);f.supportedSpatialReferences.push(...k);return f}}})}function b(a){let d,f,k,g;for(const q of a.children)switch(q.localName){case "LowerCorner":[d,f]=q.textContent.split(" ").map(t=>
Number.parseFloat(t));break;case "UpperCorner":[k,g]=q.textContent.split(" ").map(t=>Number.parseFloat(t))}return{xmin:d,ymin:f,xmax:k,ymax:g,spatialReference:K.wgs84}}function c(a,d,f){return D.find(a,k=>f?k.name===d&&k.namespaceUri===f:k.typeName===d||k.name===d)}async function n(a,d,f,k={}){a=a.readFeatureTypes();f=d?c(a,d,f):a.next().value;({spatialReference:a=new S({wkid:f?.defaultSpatialReference})}=k);if(null==f){if(d)throw new v("wfs-layer:feature-type-not-found",`The type '${d}' could not be found in the service`);
throw new v("wfs-layer:empty-service","The service is empty");}d=new aa({...f.extent,spatialReference:S.WGS84});if(!K.equals(d.spatialReference,a))try{await p.initializeProjection(d.spatialReference,a,void 0,k),d=p.project(d,a)}catch{throw new v("wfs-layer:unsupported-spatial-reference","Projection not supported");}return{extent:d,spatialReference:a,featureType:f}}async function u(a,d,f,k={}){const {typeName:g}=d,[q,t]=await Promise.allSettled([C(a.operations.DescribeFeatureType.url,g,k),I(a,g,f,
k)]);a=R=>new v("wfs-layer:getWFSLayerTypeInfo-error",`An error occurred while getting info about the feature type '${g}'`,{error:R});if("rejected"===q.status)throw a(q.reason);if("rejected"===t.status)throw a(t.reason);const {fields:J,errors:F}=q.value??{};a=q.value?.geometryType||t.value?.geometryType;d=t.value?.swapXY??!1;if(null==a)throw new v("wfs-layer:unknown-geometry-type",`The geometry type could not be determined for type '${g}`,{typeName:g,geometryType:a,fields:J,errors:F});return{...B(J??
[]),geometryType:a,swapXY:d}}function B(a){const d=a.find(k=>"geometry"===k.type);let f=a.find(k=>"oid"===k.type);a=a.filter(k=>"geometry"!==k.type);f||(f=new H({name:"__esri_wfs_id__",type:"oid",alias:"__esri_wfs_id__"}),a.unshift(f));return{geometryField:d?.name??null,objectIdField:f.name,fields:a}}async function I(a,d,f,k={}){let g,q=!1;const [t,J]=await Promise.all([y(a.operations.GetFeature.url,d,f,a.operations.GetFeature.outputFormat,{...k,count:1}),G(a.operations.GetFeature.url,{responseType:"text",
query:V(d,f,void 0,{...k,count:1}),signal:k?.signal})]);if(a="FeatureCollection"===t.type&&t.features[0]?.geometry){g=O.featureGeometryTypeKebabDictionary.fromJSON(L.getGeometryType(a.type));switch(a.type){case "Point":var F=a.coordinates;break;case "LineString":case "MultiPoint":F=a.coordinates[0];break;case "MultiLineString":case "Polygon":F=a.coordinates[0][0];break;case "MultiPolygon":F=a.coordinates[0][0][0]}if(d=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(J.data))a=F[0].toFixed(3),
F=F[1].toFixed(3),f=parseFloat(d[1]).toFixed(3),d=parseFloat(d[2]).toFixed(3),a===d&&F===f&&(q=!0)}return{geometryType:g,swapXY:q}}async function C(a,d,f){a=await G(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:"2.0.0",TYPENAME:d,TYPENAMES:d,...f?.customParameters},signal:f?.signal});return T(d,a.data)}function T(a,d){const {name:f}=E(a);d=Q(d);N(d);var k=D.find(M.iterateXML(d.firstElementChild,{element:g=>g}),g=>g.getAttribute("name")===f);if(null!=k){const g=
k.getAttribute("type");if(k=g?D.find(M.iterateXML(d.firstElementChild,{complexType:q=>q}),q=>q.getAttribute("name")===E(g).name):D.find(M.iterateXML(k,{complexType:q=>q}),()=>!0))return U(k)}throw new v("wfs-layer:feature-type-not-found",`Type '${a}' not found in document`,{document:(new XMLSerializer).serializeToString(d)});}function U(a){const d=[],f=[];let k=void 0;var g=M.iterateXML(a,{complexContent:{extension:{sequence:{element:q=>q}}}});for(const q of g){g=q.getAttribute("name");if(!g)continue;
let t,J;q.hasAttribute("type")?t=E(q.getAttribute("type")).name:M.visitXML(q,{simpleType:{restriction:r=>{t=E(r.getAttribute("base")).name;return{maxLength:z=>{J=+z.getAttribute("value")}}}}});if(!t)continue;const F="true"===q.getAttribute("nillable");let R=!1;switch(t.toLowerCase()){case "integer":case "nonpositiveinteger":case "negativeinteger":case "long":case "int":case "short":case "byte":case "nonnegativeinteger":case "unsignedlong":case "unsignedint":case "unsignedshort":case "unsignedbyte":case "positiveinteger":f.push(new H({name:g,
alias:g,type:"integer",nullable:F,length:h.getFieldDefaultLength("integer")}));break;case "float":case "double":case "decimal":f.push(new H({name:g,alias:g,type:"double",nullable:F,length:h.getFieldDefaultLength("double")}));break;case "boolean":case "string":case "gyearmonth":case "gyear":case "gmonthday":case "gday":case "gmonth":case "anyuri":case "qname":case "notation":case "normalizedstring":case "token":case "language":case "idrefs":case "entities":case "nmtoken":case "nmtokens":case "name":case "ncname":case "id":case "idref":case "entity":case "duration":case "time":f.push(new H({name:g,
alias:g,type:"string",nullable:F,length:J??h.getFieldDefaultLength("string")}));break;case "datetime":case "date":f.push(new H({name:g,alias:g,type:"date",nullable:F,length:J??h.getFieldDefaultLength("date")}));break;case "pointpropertytype":k="point";R=!0;break;case "multipointpropertytype":k="multipoint";R=!0;break;case "curvepropertytype":case "multicurvepropertytype":case "multilinestringpropertytype":k="polyline";R=!0;break;case "surfacepropertytype":case "multisurfacepropertytype":case "multipolygonpropertytype":k=
"polygon";R=!0;break;case "geometrypropertytype":case "multigeometrypropertytype":R=!0;d.push(new v("wfs-layer:unknown-geometry-type",`geometry type '${t}' is not supported`,{type:(new XMLSerializer).serializeToString(a)}));break;default:d.push(new v("wfs-layer:unknown-field-type",`Unknown field type '${t}'`,{type:(new XMLSerializer).serializeToString(a)}))}R&&f.push(new H({name:g,alias:g,type:"geometry",nullable:F}))}for(const q of f)if("integer"===q.type&&!q.nullable&&da.has(q.name.toLowerCase())){q.type=
"oid";break}return{geometryType:k,fields:f,errors:d}}async function y(a,d,f,k,g){({data:a}=await G(a,{responseType:"text",query:V(d,f,k,g),signal:g?.signal}));a=a.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{return JSON.parse(a)}catch(q){throw new v("wfs-layer:malformed-json","Error while parsing the\u00a0response",{response:a,error:q});}}function V(a,d,f,k){return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:a,OUTPUTFORMAT:f,SRSNAME:"EPSG:"+("number"===typeof d?d:d.wkid),
STARTINDEX:k?.startIndex,COUNT:k?.count,...k?.customParameters}}function Q(a){return(new DOMParser).parseFromString(a.trim(),"text/xml")}function E(a){const [d,f]=a.split(":");return{prefix:f?d:"",name:f??d}}function P(a){if((a=a.firstElementChild?.getAttribute("version"))&&"2.0.0"!==a)throw new v("wfs-layer:unsupported-wfs-version",`Unsupported WFS version ${a}. Supported version: ${"2.0.0"}`);}function N(a){let d="",f="";M.visitXML(a.firstElementChild,{Exception:k=>{d=k.getAttribute("exceptionCode");
return{ExceptionText:g=>{f=g.textContent}}}});if(d)throw new v(`wfs-layer:${d}`,f);}function ca(a,d,f){const k={wkid:d.defaultSpatialReference};f=null!=f?.wkid?{wkid:f.wkid}:k;a=W.isArcGISUrl(a)||f.wkid&&d.supportedSpatialReferences.includes(f.wkid)?{wkid:f.wkid}:{wkid:d.defaultSpatialReference};return{spatialReference:f,getFeatureSpatialReference:a}}const Z=new Set(["application/geo+json","application/json","application/json; subtype\x3dgeojson","geojson","json"]),da=new Set(["objectid","fid"]);
e.describeFeatureType=C;e.findFeatureType=c;e.getCapabilities=async function(a,d){d=await G(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:"2.0.0",...d?.customParameters},signal:d?.signal});d=l(d.data);x.isHTTPSProtocol(a)&&(x.hasSameOrigin(a,d.operations.DescribeFeatureType.url,!0)&&(d.operations.DescribeFeatureType.url=x.toHTTPS(d.operations.DescribeFeatureType.url)),x.hasSameOrigin(a,d.operations.GetFeature.url,!0)&&(d.operations.GetFeature.url=x.toHTTPS(d.operations.GetFeature.url)));
return d};e.getFeature=y;e.getFeatureCount=async function(a,d,f){a=await G(a,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:"2.0.0",TYPENAMES:d,RESULTTYPE:"hits",...f?.customParameters},signal:f?.signal});a=/numberMatched=["'](?<numberMatched>\d+)["']/gi.exec(a.data);if(a?.groups)return+a.groups.numberMatched};e.getFeatureTypeInfo=n;e.getGetFeatureSpatialReference=ca;e.getWFSLayerInfo=async function(a,d,f,k={}){const {featureType:g,extent:q}=await n(a,d,f,k);({spatialReference:d}=
ca(a.operations.GetFeature.url,g,k.spatialReference));const {fields:t,geometryType:J,swapXY:F,objectIdField:R,geometryField:r}=await u(a,g,d,k);return{url:a.operations.GetCapabilities.url,name:g.name,namespaceUri:g.namespaceUri,fields:t,geometryField:r,geometryType:J,objectIdField:R,spatialReference:k.spatialReference??new S({wkid:g.defaultSpatialReference}),extent:q,swapXY:F,wfsCapabilities:a,customParameters:k.customParameters}};e.parseDescribeFeatureTypeResponse=T;e.parseGetCapabilitiesResponse=
l;e.prepareWFSLayerFields=B;e.wfsOidFieldName="__esri_wfs_id__";Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/graphics/sources/geojson/geojson":function(){define("exports ../../../../core/date ../../../../core/Error ../../../../geometry/support/spatialReferenceUtils ../../OptimizedFeature ../../OptimizedGeometry ../../../support/fieldUtils".split(" "),function(e,A,G,v,D,x,p){function*K(b){switch(b.type){case "Feature":yield b;break;case "FeatureCollection":for(const c of b.features)c&&
(yield c)}}function*O(b){if(b)switch(b.type){case "Point":yield b.coordinates;break;case "LineString":case "MultiPoint":yield*b.coordinates;break;case "MultiLineString":case "Polygon":for(const c of b.coordinates)yield*c;break;case "MultiPolygon":for(const c of b.coordinates)for(const n of c)yield*n}}function*L(b,c={}){const {geometryType:n,objectIdField:u}=c;for(const B of b){const {geometry:I,properties:C,id:T}=B;if(I&&w[I.type]!==n)continue;b=C||{};let U=void 0;u&&(U=b[u],null==T||U||(b[u]=U=T));
yield new D.OptimizedFeature(I?h(new x,I,c):null,b,null,U??void 0)}}function M(b){for(const c of b)if(2<c.length)return!0;return!1}function W(b){let c=0;for(let n=0;n<b.length;n++){const u=b[n],B=b[(n+1)%b.length];c+=u[0]*B[1]-B[0]*u[1]}return 0>=c}function H(b){const c=b[0],n=b[b.length-1];c[0]===n[0]&&c[1]===n[1]&&c[2]===n[2]||b.push(c);return b}function h(b,c,n){switch(c.type){case "LineString":return l(b,c.coordinates,n),b;case "MultiLineString":for(const B of c.coordinates)l(b,B,n);return b;
case "MultiPoint":return l(b,c.coordinates,n),b;case "MultiPolygon":for(var u of c.coordinates)for(S(b,u[0],n),c=1;c<u.length;c++)aa(b,u[c],n);return b;case "Point":return m(b,c.coordinates,n),b;case "Polygon":u=c.coordinates;S(b,u[0],n);for(c=1;c<u.length;c++)aa(b,u[c],n);return b}}function S(b,c,n){c=H(c);W(c)?l(b,c,n):X(b,c,n)}function aa(b,c,n){c=H(c);W(c)?X(b,c,n):l(b,c,n)}function l(b,c,n){for(const u of c)m(b,u,n);b.lengths.push(c.length)}function X(b,c,n){for(let u=c.length-1;0<=u;u--)m(b,
c[u],n);b.lengths.push(c.length)}function m(b,c,n){const [u,B,I]=c;b.coords.push(u,B);n.hasZ&&b.coords.push(I||0)}const w={LineString:"esriGeometryPolyline",MultiLineString:"esriGeometryPolyline",MultiPoint:"esriGeometryMultipoint",Point:"esriGeometryPoint",Polygon:"esriGeometryPolygon",MultiPolygon:"esriGeometryPolygon"};e.createOptimizedFeatures=function(b,c){return Array.from(L(K(b),c))};e.getGeometryType=function(b){return w[b]};e.inferLayerProperties=function(b,c={}){const n=[];var u=new Set;
const B=new Set;var I=!1;let C=null,T=!1,U=void 0;({geometryType:c=null}=c);var y=!1;for(const V of K(b)){const {geometry:Q,properties:E,id:P}=V;if(Q&&(c||=w[Q.type],w[Q.type]!==c))continue;I||(I=O(Q),I=M(I));!T&&(T=null!=P)&&(U=typeof P,E&&(C=Object.keys(E).filter(N=>E[N]===P)));E&&C&&T&&null!=P&&(1<C.length?C=C.filter(N=>E[N]===P):1===C.length&&(C=E[C[0]]===P?C:[]));if(!y&&E){b=!0;for(const N in E){if(u.has(N))continue;y=E[N];if(null==y){b=!1;B.add(N);continue}a:switch(typeof y){case "string":y=
A.isISO8601Date(y)?"esriFieldTypeDate":"esriFieldTypeString";break a;case "number":y="esriFieldTypeDouble";break a;default:y="unknown"}if("unknown"===y){B.add(N);continue}B.delete(N);u.add(N);const ca=p.normalizeFieldName(N);ca&&n.push({name:ca,alias:N,type:y})}y=b}}if(u=p.normalizeFieldName(1===C?.length&&C[0]||null)??void 0)for(const V of n)if(V.name===u&&p.isNumericField(V)){V.type="esriFieldTypeOID";break}return{fields:n,geometryType:c,hasZ:I,objectIdFieldName:u,objectIdFieldType:U,unknownFields:Array.from(B)}};
e.validateGeoJSON=function(b,c=4326){if(!b)throw new G("geojson-layer:empty","GeoJSON data is empty");if("Feature"!==b.type&&"FeatureCollection"!==b.type)throw new G("geojson-layer:unsupported-geojson-object","missing or not supported GeoJSON object type",{data:b});({crs:b}=b);if(b){var n="string"===typeof b?b:"name"===b.type?b.properties.name:"EPSG"===b.type?b.properties.code:null;c=v.isWGS84({wkid:c})?RegExp(".*(CRS84H?|4326)$","i"):new RegExp(`.*(${c})$`,"i");if(!n||!c.test(n))throw new G("geojson:unsupported-crs",
"unsupported GeoJSON 'crs' member",{crs:b});}};Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/core/date":function(){define(["exports"],function(e){function A(p){const K=new Date(p);if(Number.isNaN(K.getTime()))p=!1;else{var O=!0;if(x&&/\d+\W*$/.test(p)&&(p=p.match(/[a-zA-Z]{2,}/))){O=!1;let L=0;for(;!O&&L<=p.length;)O=!D.test(p[L]),L++;O=!O}p=O}return p?Number.isNaN(K.getTime())?null:K.getTime()-6E4*K.getTimezoneOffset():null}function G(p){p=v.exec(p);if(!p?.groups)return null;
p=p.groups;const K=+p.year,O=+p.month-1,L=+p.day,M=+(p.hours??0),W=+(p.minutes??0),H=+(p.seconds??0);if(23<M||59<W||59<H)return null;var h=p.ms??"0";h=h?+h.padEnd(3,"0").substring(0,3):0;p=p.isUTC||!p.offsetSign?Date.UTC(K,O,L,M,W,H,h):6E4*("+"===p.offsetSign?-1:1)*(60*+p.offsetHours+ +p.offsetMinutes)+Date.UTC(K,O,L,M,W,H,h);return Number.isNaN(p)?null:p}const v=/^(?:(?<year>-?\d{4,})-(?<month>\d{2})-(?<day>\d{2}))(?:T(?<hours>\d{2}):(?<minutes>\d{2}):(?<seconds>\d{2})(?:\.(?<ms>\d+))?)?(?:(?<isUTC>Z)|(?:(?<offsetSign>\+|-)(?<offsetHours>\d{2}):(?<offsetMinutes>\d{2})))?$/,
D=/^((jan(uary)?)|(feb(ruary)?)|(mar(ch)?)|(apr(il)?)|(may)|(jun(e)?)|(jul(y)?)|(aug(ust)?)|(sep(tember)?)|(oct(ober)?)|(nov(ember)?)|(dec(ember)?)|(am)|(pm)|(gmt)|(utc))$/i,x=!Number.isNaN((new Date("technology 10")).getTime());e.isDateString=function(p){return null!=G(p)||null!=A(p)};e.isISO8601Date=function(p){return v.test(p)};e.parseDate=function(p){return G(p)??A(p)};Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"esri/layers/ogc/xmlUtils":function(){define(["exports"],function(e){function A(v,
D){if(v&&D)for(const x of v.children)x.localName in D&&(v=D[x.localName],"function"===typeof v?(v=v(x))&&A(x,v):A(x,v))}function*G(v,D){for(const x of v.children)x.localName in D&&(v=D[x.localName],"function"===typeof v?yield v(x):yield*G(x,v))}e.iterateXML=G;e.visitXML=A;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})})},"*noref":1}});
define("../chunks/tslib.es6 ../geometry ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/PieChartRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../renderers/support/types ../core/MultiOriginJSONSupport ../core/object ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/RandomLCG ../core/has ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../geometry/support/typeUtils ./Layer ./graphics/sources/WFSSource ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/FeatureEffectLayer ./mixins/FeatureReductionLayer ./mixins/OperationalLayer ./mixins/OrderedLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./ogc/wfsUtils ./support/commonProperties ./support/Field ./support/fieldProperties ./support/fieldUtils ./support/LabelClass ./support/labelingInfo ../rest/support/Query ../support/popupUtils ../time/timeZoneUtils ../geometry/SpatialReference ../geometry/Extent".split(" "),function(e,
A,G,v,D,x,p,K,O,L,M,W,H,h,S,aa,l,X,m,w,b,c,n,u,B,I,C,T,U,y,V,Q,E,P,N,ca,Z,da,a,d,f,k,g,q,t,J,F){var R;A=a.defineFieldProperties();h=R=class extends V.OrderedLayer(C.CustomParametersMixin(U.FeatureReductionLayer(T.FeatureEffectLayer(I.BlendLayer(N.TemporalLayer(E.RefreshableLayer(P.ScaleRangeLayer(y.OperationalLayer(Q.PortalLayer(h.MultiOriginJSONMixin(u))))))))))){static fromWFSLayerInfo(r){const {customParameters:z,fields:Y,geometryField:ba,geometryType:ea,name:fa,namespaceUri:ha,objectIdField:ia,
spatialReference:ja,swapXY:ka,url:la,wfsCapabilities:ma}=r;return new R({customParameters:z,fields:Y,geometryField:ba,geometryType:ea,name:fa,namespaceUri:ha,objectIdField:ia,spatialReference:ja,swapXY:ka,url:la,wfsCapabilities:ma})}constructor(r){super(r);this.elevationInfo=this.displayField=this.definitionExpression=this.dateFieldsTimeZone=this.customParameters=this.copyright=null;this.featureUrl=void 0;this.geometryType=this.fullExtent=this.fieldsIndex=this.fields=null;this.labelsVisible=!0;this.labelingInfo=
null;this.legendEnabled=!0;this.objectIdField=null;this.operationalLayerType="WFS";this.maxRecordCount=3E3;this.maxPageCount=10;this.maxTotalRecordCount=2E5;this.mode=0;this.outFields=this.namespaceUri=this.name=null;this.popupEnabled=!0;this.popupTemplate=null;this.screenSizePerspectiveEnabled=!0;this.source=new B.WFSSource({layer:this});this.spatialReference=J.WGS84;this.spatialReferences=[4326];this.swapXY=void 0;this.title="WFS";this.type="wfs";this.url=null;this.version=void 0}destroy(){this.source?.destroy()}load(r){this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},
r).then(()=>this.source.load(r)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl});this.revert("objectIdField fields timeInfo spatialReference name namespaceUri".split(" "),"service");d.fixRendererFields(this.renderer,this.fieldsIndex);d.fixTimeInfoFields(this.timeInfo,this.fieldsIndex)}));return Promise.resolve(this)}get capabilities(){return this.source?.capabilities}get createQueryVersion(){this.commitProperty("definitionExpression");this.commitProperty("timeExtent");
this.commitProperty("timeOffset");this.commitProperty("geometryType");this.commitProperty("capabilities");return(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(r,z,Y){r=r.filter(ba=>ba.name!==ca.wfsOidFieldName);this.geometryField&&r.unshift(new da({name:this.geometryField,alias:this.geometryField,type:"geometry"}));S.setDeepValue(Y,r.map(ba=>ba.toJSON()),z)}get parsedUrl(){return aa.urlToObject(this.url)}set renderer(r){d.fixRendererFields(r,
this.fieldsIndex);this._set("renderer",r)}get wfsCapabilities(){return this.source?.wfsCapabilities}set wfsCapabilities(r){this.source&&(this.source.wfsCapabilities=r)}createPopupTemplate(r){return q.createPopupTemplate(this,r)}createQuery(){const r=new g;r.returnGeometry=!0;r.outFields=["*"];r.where=this.definitionExpression||"1\x3d1";const {timeOffset:z,timeExtent:Y}=this;r.timeExtent=null!=z&&null!=Y?Y.offset(-z.value,z.unit):Y||null;return r}getFieldDomain(r,z){return this.getField(r)?.domain}getField(r){return this.fieldsIndex?.get(r)}queryFeatures(r,
z){return this.load().then(()=>this.source.queryFeatures(g.from(r)||this.createQuery(),z)).then(Y=>{if(Y?.features)for(const ba of Y.features)ba.layer=ba.sourceLayer=this;return Y})}queryObjectIds(r,z){return this.load().then(()=>this.source.queryObjectIds(g.from(r)||this.createQuery(),z))}queryFeatureCount(r,z){return this.load().then(()=>this.source.queryFeatureCount(g.from(r)||this.createQuery(),z))}queryExtent(r,z){return this.load().then(()=>this.source.queryExtent(g.from(r)||this.createQuery(),
z))}async hasDataChanged(){try{const {dataChanged:r,updates:z}=await this.source.refresh();null!=z&&this.read(z,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0});return r}catch{}return!1}};e.__decorate([l.property({readOnly:!0})],h.prototype,"capabilities",null);e.__decorate([l.property({type:String})],h.prototype,"copyright",void 0);e.__decorate([l.property({readOnly:!0})],h.prototype,"createQueryVersion",null);e.__decorate([l.property({json:{name:"wfsInfo.customParameters",write:{overridePolicy(r){return{enabled:!!(r&&
0<Object.keys(r).length),ignoreOrigin:!0}}}}})],h.prototype,"customParameters",void 0);e.__decorate([l.property(t.timeZoneProperty("dateFieldsTimeReference"))],h.prototype,"dateFieldsTimeZone",void 0);e.__decorate([l.property({readOnly:!0})],h.prototype,"defaultPopupTemplate",null);e.__decorate([l.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],h.prototype,"definitionExpression",void 0);e.__decorate([l.property({type:String})],h.prototype,
"displayField",void 0);e.__decorate([l.property(Z.elevationInfo)],h.prototype,"elevationInfo",void 0);e.__decorate([l.property({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],h.prototype,"featureUrl",void 0);e.__decorate([l.property({type:[da],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],h.prototype,"fields",void 0);e.__decorate([c.writer("fields")],h.prototype,"writeFields",null);
e.__decorate([l.property(A.fieldsIndex)],h.prototype,"fieldsIndex",void 0);e.__decorate([l.property({type:F,json:{name:"extent"}})],h.prototype,"fullExtent",void 0);e.__decorate([l.property()],h.prototype,"geometryField",void 0);e.__decorate([l.property({type:String,json:{read:{source:"layerDefinition.geometryType",reader:n.featureGeometryTypeKebabDictionary.read},write:{target:"layerDefinition.geometryType",writer:n.featureGeometryTypeKebabDictionary.write,ignoreOrigin:!0},origins:{service:{read:n.featureGeometryTypeKebabDictionary.read}}}})],
h.prototype,"geometryType",void 0);e.__decorate([l.property({type:String})],h.prototype,"id",void 0);e.__decorate([l.property(Z.labelsVisible)],h.prototype,"labelsVisible",void 0);e.__decorate([l.property({type:[f],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:k.reader},write:!0}})],h.prototype,"labelingInfo",void 0);e.__decorate([l.property(Z.legendEnabled)],h.prototype,"legendEnabled",void 0);e.__decorate([l.property({type:["show","hide"]})],h.prototype,"listMode",void 0);e.__decorate([l.property({type:String})],
h.prototype,"objectIdField",void 0);e.__decorate([l.property({type:["WFS"]})],h.prototype,"operationalLayerType",void 0);e.__decorate([l.property({type:X.Integer,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],h.prototype,"maxRecordCount",void 0);e.__decorate([l.property({type:X.Integer})],h.prototype,"maxPageCount",void 0);e.__decorate([l.property({type:X.Integer})],h.prototype,"maxTotalRecordCount",void 0);e.__decorate([l.property({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,
isRequired:!0}}}}})],h.prototype,"mode",void 0);e.__decorate([l.property({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],h.prototype,"name",void 0);e.__decorate([l.property({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],h.prototype,"namespaceUri",void 0);e.__decorate([l.property(Z.opacityDrawingInfo)],h.prototype,"opacity",void 0);e.__decorate([l.property(A.outFields)],h.prototype,"outFields",void 0);e.__decorate([l.property({readOnly:!0})],
h.prototype,"parsedUrl",null);e.__decorate([l.property(Z.popupEnabled)],h.prototype,"popupEnabled",void 0);e.__decorate([l.property({type:G,json:{name:"popupInfo",write:!0}})],h.prototype,"popupTemplate",void 0);e.__decorate([l.property({types:H.rendererTypes,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:H.webSceneRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],h.prototype,"renderer",
null);e.__decorate([l.property(Z.screenSizePerspectiveEnabled)],h.prototype,"screenSizePerspectiveEnabled",void 0);e.__decorate([l.property({readOnly:!0})],h.prototype,"source",void 0);e.__decorate([l.property({type:J,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],h.prototype,"spatialReference",void 0);e.__decorate([l.property({readOnly:!0,type:[X.Integer],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,
isRequired:!0}}})],h.prototype,"spatialReferences",void 0);e.__decorate([l.property({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],h.prototype,"swapXY",void 0);e.__decorate([l.property({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],h.prototype,"title",void 0);e.__decorate([l.property({json:{read:!1},readOnly:!0})],h.prototype,"type",void 0);e.__decorate([l.property(Z.url)],h.prototype,"url",void 0);e.__decorate([l.property({type:String,
readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],h.prototype,"version",void 0);e.__decorate([l.property()],h.prototype,"wfsCapabilities",null);return h=R=e.__decorate([b.subclass("esri.layers.WFSLayer")],h)});