// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Error","../../../core/sql/WhereClauseCache","../../support/fieldType"],function(g,h,l,t){function m(a,b,c={}){const d=n(b,a);if(!d)throw c=u.getError(b,a),new h("unsupported-query","invalid SQL expression",{expression:b,error:c});a=c.expressionName||"expression";if(c.validateStandardized&&!d.isStandardized)throw new h("unsupported-query",`${a} is not standard`,{expression:b});if(c.validateAggregate&&!d.isAggregate)throw new h("unsupported-query",`${a} does not contain a valid aggregate function`,
{expression:b});return d.fieldNames}function n(a,b){return a?u.get(a,b):null}function v(a){return/\((.*?)\)/.test(a)?a:a.split(" as ")[0]}function p(a,b,c,d={}){const e=new Map;y(e,a,b,d.allowedFieldTypes??z,c);if(e.size)throw new h("unsupported-query",`${d.expressionName??"expression"} contains invalid or missing fields`,{errors:Array.from(e.values()),query:d.query});}function y(a,b,c,d,e){e=e.includes("*")?[...c,...e.filter(f=>"*"!==f)]:e;for(const f of e)if(b.get(f))w(a,b,c,d,f);else try{const k=
v(f),q=m(b,k,{validateStandardized:!0});for(const r of q)w(a,b,c,d,r)}catch(k){a.set(f,{type:"expression-error",expression:f,error:k})}}function w(a,b,c,d,e){(b=b.get(e))?c.has(b.name)?"all"!==d&&!1===d?.has(b.type)&&a.set(e,{type:"invalid-type",fieldName:b.name,fieldType:t.kebabDict.fromJSON(b.type),allowedFieldTypes:Array.from(d,f=>t.kebabDict.fromJSON(f))}):a.set(e,{type:"missing-field",fieldName:b.name}):a.set(e,{type:"invalid-field",fieldName:e})}const u=new l.WhereClauseCache(50,500);l=new Set("esriFieldTypeOID esriFieldTypeSmallInteger esriFieldTypeBigInteger esriFieldTypeInteger esriFieldTypeSingle esriFieldTypeDouble esriFieldTypeLong".split(" "));
const x=new Set(["esriFieldTypeDate","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"]),z=new Set(["esriFieldTypeString","esriFieldTypeGUID","esriFieldTypeGlobalID",...l,...x]);g.allDateAndTimeFieldTypes=x;g.getAliasFromFieldName=function(a){return a.split(" as ")[1]};g.getExpressionFromFieldName=v;g.getWhereClause=n;g.numericFieldTypes=l;g.validateFields=p;g.validateHaving=function(a,b,c,d,e){if(!c)return!0;const f=m(a,c,{validateAggregate:!0,expressionName:"having clause"});
p(a,b,f,{expressionName:"having clause",query:e});if(!n(c,a)?.getExpressions().every(k=>{const {aggregateType:q,field:r}=k,A=a.get(r)?.name;return d.some(B=>{const {onStatisticField:C,statisticType:D}=B;return a.get(C)?.name===A&&D.toLowerCase().trim()===q})}))throw new h("unsupported-query","expressions in having clause should also exist in outStatistics",{having:c});return!0};g.validateWhere=function(a,b,c,d){if(!c)return!0;c=m(a,c,{validateStandardized:!0,expressionName:"where clause"});p(a,b,
c,{expressionName:"where clause",query:d});return!0};Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});