// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../Graphic ../../core/Collection ../../core/Error ../../core/lang ../../core/Logger ../../core/promiseUtils ../../core/urlUtils ../../core/uuid ../../geometry/support/normalizeUtils ../mixins/EditBusLayer ../support/fieldUtils ../support/infoFor3D ../support/layerUtils".split(" "),function(k,D,E,g,F,G,H,I,J,K,t,L,u,p){function v(a){return"object"===typeof a&&null!=a&&"objectId"in a&&!!a.objectId}function w(a){return"object"===typeof a&&null!=a&&"globalId"in a&&!!a.globalId}async function M(a,
b,f,e){await a.load();if(null==b?.applyEdits)throw new g(`${a.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:a});if(!p.getEffectiveEditingEnabled(a))throw new g(`${a.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:a});const {edits:d,options:c}=await N(a,f,e);return d.addFeatures?.length||d.updateFeatures?.length||d.deleteFeatures?.length||d.addAttachments?.length||d.updateAttachments?.length||d.deleteAttachments?.length?{edits:d,results:await b.applyEdits(d,
c)}:{edits:d,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}async function N(a,b,f){const e=p.getEffectiveLayerCapabilities(a),d=null!=a.infoFor3D;x(b,e,f,!(!b||!(b.addFeatures||b.updateFeatures||b.deleteFeatures)),!(!b||!(b.addAttachments||b.updateAttachments||b.deleteAttachments)),`${a.type}-layer`);if(!e.data.isVersioned&&f?.gdbVersion)throw new g(`${a.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");
if(!e.editing.supportsRollbackOnFailure&&f?.rollbackOnFailureEnabled)throw new g(`${a.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");const c={...f};null!=c.rollbackOnFailureEnabled||e.editing.supportsRollbackOnFailure||(c.rollbackOnFailureEnabled=!0);c.rollbackOnFailureEnabled||"original-and-current-features"!==c.returnServiceEditsOption||(!1===c.rollbackOnFailureEnabled&&G.getLogger("esri.layers.graphics.editingSupport").warn(`${a.type}-layer:invalid-parameter`,
"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true, but 'rollBackOnFailure' was set to false. 'rollBackOnFailure' has been overwritten and set to true."),c.rollbackOnFailureEnabled=!0);if(!e.editing.supportsReturnServiceEditsInSourceSpatialReference&&c.returnServiceEditsInSourceSR)throw new g(`${a.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");
if(c.returnServiceEditsInSourceSR&&"original-and-current-features"!==c.returnServiceEditsOption)throw new g(`${a.type}-layer:invalid-parameter`,"'returnServiceEditsInSourceSR' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");b=y(b,e,`${a.type}-layer`);const l=f?.globalIdUsed||d,m=a.fields.filter(h=>"big-integer"===h.type||"oid"===h.type&&8<=(h.length||0));if(l){const {globalIdField:h}=a;if(null==h)throw new g(`${a.type}-layer:invalid-parameter`,"Layer does not specify a global id field.");
b.addFeatures.forEach(n=>{({attributes:n}=n);null==n[h]&&(n[h]=J.generateBracedUUID())})}b.addFeatures.forEach(h=>{q(h,a,l,m);z(h,a)});b.updateFeatures.forEach(h=>{q(h,a,l,m);z(h,a);const n=p.getEffectiveLayerCapabilities(a);if("geometry"in h&&null!=h.geometry&&!n?.editing.supportsGeometryUpdate)throw new g(`${a.type}-layer:unsupported-operation`,"Layer does not support geometry updates.");});b.deleteFeatures.forEach(h=>{q(h,a,l,m)});b.addAttachments.forEach(h=>A(h,a));b.updateAttachments.forEach(h=>
A(h,a));d&&await O(b,a);return{edits:await B(b),options:c}}function q(a,b,f,e){if(f){if("attributes"in a&&!a.attributes[b.globalIdField])throw new g(`${b.type}-layer:invalid-parameter`,`Feature should have '${b.globalIdField}' when 'globalIdUsed' is true`);if(!("attributes"in a||a.globalId))throw new g(`${b.type}-layer:invalid-parameter`,"`'globalId' of the feature should be passed when 'globalIdUsed' is true");}if(e.length&&"attributes"in a)for(const d of e)if(f=a.attributes[d.name],void 0!==f&&
!L.isValidFieldValue(d,f))throw new g(`${b.type}-layer:invalid-parameter`,`Big-integer field '${d.name}' of the feature must be less than ${Number.MAX_SAFE_INTEGER}`,{feature:a});if("geometry"in a&&null!=a.geometry){if(a.geometry.hasZ&&!1===b.capabilities?.data.supportsZ)throw new g(`${b.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(a.geometry.hasM&&!1===b.capabilities?.data.supportsM)throw new g(`${b.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.");
}}function z(a,b){if("geometry"in a&&"mesh"===a.geometry?.type&&null!=b.infoFor3D&&({geometry:a}=a,"georeferenced"===a.vertexSpace.type))throw new g(`${b.type}-layer:georeferenced-mesh-unsupported`,"Uploading georeferenced meshes to a layer is not supported.");}function A(a,b){const {feature:f,attachment:e}=a;if(!f||"attributes"in f&&!f.attributes[b.globalIdField])throw new g(`${b.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in f||
f.globalId))throw new g(`${b.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!e.globalId)throw new g(`${b.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!e.data&&!e.uploadId)throw new g(`${b.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(e.data instanceof File&&e.data.name||e.name))throw new g(`${b.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");
if(!b.capabilities?.editing.supportsUploadWithItemId&&e.uploadId)throw new g(`${b.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"===typeof e.data&&(a=I.dataComponents(e.data))&&!a.isBase64)throw new g(`${b.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string");}async function B(a){const b=a.addFeatures??[],f=a.updateFeatures??[];var e=b.concat(f).map(l=>
l.geometry);e=await K.normalizeCentralMeridian(e);const d=b.length,c=f.length;e.slice(0,d).forEach((l,m)=>b[m].geometry=l);e.slice(d,d+c).forEach((l,m)=>f[m].geometry=l);return a}function C(a){return{addFeatures:Array.from(a?.addFeatures??[]),updateFeatures:Array.from(a?.updateFeatures??[]),deleteFeatures:a&&E.isCollection(a.deleteFeatures)?a.deleteFeatures.toArray():a.deleteFeatures||[],addAttachments:a.addAttachments||[],updateAttachments:a.updateAttachments||[],deleteAttachments:a.deleteAttachments||
[]}}function y(a,b,f){a=C(a);if(a.addFeatures?.length&&!b.operations.supportsAdd)throw new g(`${f}:unsupported-operation`,"Layer does not support adding features.");if(a.updateFeatures?.length&&!b.operations.supportsUpdate)throw new g(`${f}:unsupported-operation`,"Layer does not support updating features.");if(a.deleteFeatures?.length&&!b.operations.supportsDelete)throw new g(`${f}:unsupported-operation`,"Layer does not support deleting features.");a.addFeatures=a.addFeatures.map(r);a.updateFeatures=
a.updateFeatures.map(r);a.addAssetFeatures=[];return a}function x(a,b,f,e,d,c){if(!a||!e&&!d)throw new g(`${c}:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!b.editing.supportsGlobalId&&f?.globalIdUsed)throw new g(`${c}:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!b.editing.supportsGlobalId&&d)throw new g(`${c}:invalid-parameter`,
"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if(!f?.globalIdUsed&&d)throw new g(`${c}:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");}function r(a){const b=new D;a.attributes||(a.attributes={});b.geometry=a.geometry;b.attributes=a.attributes;return b}async function O(a,b){if(null!=b.infoFor3D){var {infoFor3D:f}=
b,e=u.getMimeTypeFormatId("model/gltf-binary",f.supportedFormats)??u.getFilenameFormatId("glb",f.supportedFormats);if(!e||!f.editFormats.includes(e))throw new g(`${b.type}-layer:binary-gltf-asset-not-supported`,"3DObjectFeatureLayer requires binary glTF (.glb) support for updating mesh geometry.");a.addAssetFeatures??(a.addAssetFeatures=[]);({addAssetFeatures:b}=a);for(const d of a.addFeatures??[])"mesh"===d?.geometry?.type&&b.push(d);for(const d of a.updateFeatures??[])"mesh"===d?.geometry?.type&&
b.push(d)}}k.applyEdits=async function(a,b,f,e={}){var d="gdbVersion"in a?a.gdbVersion:null;d=e.gdbVersion??d;t.isEditBusLayer(a)&&a.url?d=t.emitApplyEditsEvent(a.url,a.layerId,d,"original-and-current-features"===e.returnServiceEditsOption):(d=H.createResolver(),d.promise.then(c=>{(c.addedFeatures.length||c.updatedFeatures.length||c.deletedFeatures.length||c.addedAttachments.length||c.updatedAttachments.length||c.deletedAttachments.length)&&a.emit("edits",c)}),a.emit("apply-edits",{result:d.promise}));
try{const {results:c,edits:l}=await M(a,b,f,e);b=h=>h.filter(n=>!n.error).map(F.clone);const m={edits:l,addedFeatures:b(c.addFeatureResults),updatedFeatures:b(c.updateFeatureResults),deletedFeatures:b(c.deleteFeatureResults),addedAttachments:b(c.addAttachmentResults),updatedAttachments:b(c.updateAttachmentResults),deletedAttachments:b(c.deleteAttachmentResults),exceededTransferLimit:!1,historicMoment:c.editMoment?new Date(c.editMoment):null,globalIdToObjectId:e.globalIdToObjectId};c.editedFeatureResults?.length&&
(m.editedFeatures=c.editedFeatureResults);d.resolve(m);return c}catch(c){throw d.reject(c),c;}};k.checkEditingCapabilities=x;k.isFeatureIdentifierArrayWithGlobalId=function(a){return a.every(w)};k.isFeatureIdentifierArrayWithObjectId=function(a){return a.every(v)};k.isFeatureIdentifierWithGlobalId=w;k.isFeatureIdentifierWithObjectId=v;k.normalizeCollections=C;k.normalizeEdits=y;k.normalizeGeometries=B;k.shallowCloneFeature=r;k.uploadAssets=function(a,b,f,e){if(null==b?.applyEdits)throw new g(`${a.type}-layer:no-editing-support`,
"Layer source does not support applyEdits capability",{layer:a});if(!b.uploadAssets)throw new g(`${a.type}-layer:no-asset-upload-support`,"Layer source does not support uploadAssets capability",{layer:a});return b.uploadAssets(f,e)};Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});