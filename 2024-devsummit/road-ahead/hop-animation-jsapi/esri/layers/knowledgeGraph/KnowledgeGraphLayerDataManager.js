// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/tslib.es6 ../../geometry ../../core/Accessor ../../core/Error ../../core/Logger ../../core/MapUtils ../../core/sql ../../core/accessorSupport/decorators/property ../../core/has ../../core/RandomLCG ../../core/accessorSupport/decorators/subclass ../../geohash/geohashUtils ../../geometry/Polygon ../../geometry/projection ../../geometry/support/spatialReferenceUtils ./SessionMemoryStorage ./supportUtils ../../rest/knowledgeGraphService ../../rest/knowledgeGraph/GraphQueryStreaming ../../rest/support/Query ../../geometry/Extent".split(" "),
function(u,z,W,Q,H,N,C,O,B,X,Y,R,P,S,J,K,L,T,M,D,U,V){u.KnowledgeGraphLayerDataManager=class extends Q{constructor(b){super(b);this._processingCacheUpdatesLookup=new Map;this.knowledgeGraph=null;this.inclusionModeDefinition={generateAllSublayers:!0,namedTypeDefinitions:new Map};this.entityTypeNames=new Set;this.relationshipTypeNames=new Set;this.geographicLookup=new Map;this.sublayerCaches=new Map;this.nodeConnectionsLookup=new Map;this.relationshipConnectionsLookup=new Map;this.memberIdTypeLookup=
new Map;const a=new Map;b.knowledgeGraph.dataModel.entityTypes?.forEach(f=>{f.name&&(a.set(f.name,"entity"),this._processingCacheUpdatesLookup.set(f.name,[]),b.inclusionModeDefinition&&!b.inclusionModeDefinition?.generateAllSublayers||this.entityTypeNames.add(f.name),f.properties?.forEach(d=>{d.geometryType&&"esriGeometryNull"!==d.geometryType&&this.geographicLookup.set(f.name,{name:d.name??"",geometryType:d.geometryType})}))});b.knowledgeGraph.dataModel.relationshipTypes?.forEach(f=>{f.name&&(a.set(f.name,
"relationship"),this._processingCacheUpdatesLookup.set(f.name,[]),b.inclusionModeDefinition&&!b.inclusionModeDefinition?.generateAllSublayers||this.relationshipTypeNames.add(f.name),f.properties?.forEach(d=>{d.geometryType&&"esriGeometryNull"!==d.geometryType&&this.geographicLookup.set(f.name,{name:d.name??"",geometryType:d.geometryType})}))});b.inclusionModeDefinition?.namedTypeDefinitions.forEach((f,d)=>{if("entity"===a.get(d))this.entityTypeNames.add(d);else if("relationship"===a.get(d))this.relationshipTypeNames.add(d);
else{N.getLogger(this).warn(`A named type, ${d}, was in the inclusion list that wasn't in the data model and will be removed`);b.inclusionModeDefinition?.namedTypeDefinitions.delete(d);return}const p=new Map;f.members?.forEach(n=>{C.getOrCreateMapValue(this.memberIdTypeLookup,n.id,()=>new Set).add(d);const m=this.getById(n.id);m&&p.set(n.id,m)});this.sublayerCaches.set(d,p)})}addToLayer(b){b.forEach(({typeName:a,id:f})=>{if(!this.inclusionModeDefinition)throw new H("knowledge-graph:layer-data-manager",
"You cannot add to a layer's exclusion list if it was not created with an exclusion list originally");if(this.inclusionModeDefinition.namedTypeDefinitions.has(a))this.inclusionModeDefinition.namedTypeDefinitions.has(a)&&(d=this.inclusionModeDefinition.namedTypeDefinitions.get(a),d.members||(d.members=new Map),d.members.set(f,{id:f}),C.getOrCreateMapValue(this.memberIdTypeLookup,f,()=>new Set).add(a));else{var d=new Map;d.set(f,{id:f});this.inclusionModeDefinition.namedTypeDefinitions.set(a,{useAllData:!1,
members:d});C.getOrCreateMapValue(this.memberIdTypeLookup,f,()=>new Set).add(a)}})}getById(b){return L.getInstance().readFromStoreById(b)}async getData(b,a,f){if(a.objectType.name&&this.inclusionModeDefinition?.namedTypeDefinitions&&0<this.inclusionModeDefinition.namedTypeDefinitions.size&&!this.inclusionModeDefinition.namedTypeDefinitions.has(a.objectType.name))return[];b=b?b:new U({where:"1\x3d1",outFields:["*"]});if("link-chart"===a.parentCompositeLayer.type){const d=a.parentCompositeLayer;f=this._processingCacheUpdatesLookup.get(a.objectType.name??
"");const p=b.outFields,n=b.geometry;let m="",q="";n&&n.extent&&(m=P.encodeGeohash(n.extent.ymin,n.extent.xmin,12),q=P.encodeGeohash(n.extent.ymax,n.extent.xmax,12));p&&1===p.length&&"ESRI__ID"===p[0]&&"1\x3d1"===b.where||await Promise.all(f??[]);const c=[];(this.sublayerCaches.has(a.objectType.name??"")?Array.from(this.sublayerCaches.get(a.objectType.name)?.values()):[]).forEach(e=>{this.relationshipTypeNames.has(a.objectType.name)?e.geometry=d.relationshipLinkChartDiagramLookup.get(e.attributes[a.objectIdField]):
e.geometry=d.entityLinkChartDiagramLookup.get(e.attributes[a.objectIdField]);e.attributes.ESRI__LAYOUT_GEOMETRY=e.geometry;if(m&&q){const h=d.linkChartGeohashLookup.get(e.attributes[a.objectIdField]);h?h>=m&&h<=q&&c.push(e):c.push(e)}else c.push(e)});return c}return this.retrieveDataFromService(b,a,f)}async getConnectedRecordIds(b,a){const f=[];let d="";const p=[],n=new Map;b.forEach(m=>{if(this.memberIdTypeLookup.has(m))for(const q of this.memberIdTypeLookup.get(m)){if(!this.entityTypeNames.has(q))break;
n.has(q)?n.get(q)?.push(m):n.set(q,[m])}});if(a&&0!==a?.length){for(const m of a)d=d+m+"|";d=d.slice(0,-1)}n.forEach((m,q)=>{let c;c=a&&0!==a?.length?`MATCH (n:${q})-[r:${d}]-(m) WHERE id(n) IN $ids RETURN id(r), type(r), id(m), labels(m)[0]`:`MATCH (n:${q})-[r]-(m) WHERE id(n) IN $ids RETURN id(r), type(r), id(m), labels(m)[0]`;q=new Promise(e=>{(async()=>{const h=(await M.executeQueryStreaming(this.knowledgeGraph,new D({openCypherQuery:c,bindParameters:{ids:m}}))).resultRowsStream.getReader();try{for(;;){const {done:k,
value:t}=await h.read();if(k)break;for(let g=0;g<t.length;g++){const r=t[g];f.push({id:r[0],typeName:r[1]});f.push({id:r[2],typeName:r[3]})}}}catch(k){if("AbortError"===k.name)N.getLogger(this).info("Request aborted as expected");else throw k;}})().then(()=>{e()})});p.push(q)});this.refreshCacheContent();await Promise.all(p);return f}async refreshCacheContent(b,a,f,d=!0){const p=L.getInstance(),n=[],m=new Map,q=new Map;this.knowledgeGraph.dataModel.entityTypes?.forEach(c=>{c.name&&q.set(c.name,c)});
this.knowledgeGraph.dataModel.relationshipTypes?.forEach(c=>{c.name&&q.set(c.name,c)});b||this.inclusionModeDefinition?b?b.forEach(c=>{if(this.memberIdTypeLookup.has(c))for(const e of this.memberIdTypeLookup.get(c))m.has(e)?m.get(e)?.push(c):m.set(e,[c])}):this.inclusionModeDefinition?.namedTypeDefinitions?.forEach((c,e)=>{c.useAllData?m.set(e,null):c.members&&c.members.forEach(h=>{m.has(e)&&null!==m.get(e)?m.get(e)?.push(h.id):m.set(e,[h.id])})}):(this.knowledgeGraph.dataModel.entityTypes?.forEach(c=>
{c.name&&m.set(c.name,null)}),this.knowledgeGraph.dataModel.entityTypes?.forEach(c=>{c.name&&m.set(c.name,null)}));for(const [c,e]of m)b=new Promise(h=>{(async()=>{const k=new Set,t=[];let g="",r=!1;a||q.get(c)?.properties?.forEach(w=>{w.name&&k.add(w.name)});if(f&&this.geographicLookup.has(c)){var x=this.geographicLookup.get(c)?.name;x&&k.add(x)}if(this.entityTypeNames.has(c))g=`MATCH (n:${c}) ${e?"WHERE id(n) IN $ids ":""}return ID(n)`,k.forEach(w=>{g+=`, n.${w}`;t.push(w)});else if(this.relationshipTypeNames.has(c))r=
!0,g=`MATCH ()-[n:${c}]->() ${e?"WHERE id(n) IN $ids ":""}return ID(n), id(startNode(n)), id(endNode(n))`,k.forEach(w=>{g+=`, n.${w}`;t.push(w)});else throw new H("knowledge-graph:layer-data-manager",`The graph type of ${c} could not be determined. Was this type set in the KG data model and inclusion definition?`);x=e?new D({openCypherQuery:g,bindParameters:{ids:e}}):new D({openCypherQuery:g});for(x=(await M.executeQueryStreaming(this.knowledgeGraph,x)).resultRowsStream.getReader();;){const {done:w,
value:E}=await x.read();if(w)break;var F=[];for(let v=0;v<E.length;v++){const G=E[v];let A=0,I=0;const y={properties:{}};y.id=G[A];A++;I++;r&&(y.originId=G[A],A++,I++,y.destinationId=G[A],A++,I++,C.getOrCreateMapValue(this.nodeConnectionsLookup,y.originId,()=>new Set).add(y.id),C.getOrCreateMapValue(this.nodeConnectionsLookup,y.destinationId,()=>new Set).add(y.id),C.getOrCreateMapValue(this.relationshipConnectionsLookup,y.id,()=>[y.originId,y.destinationId]));for(;A<G.length;A++)y.properties[t[A-
I]]=G[A];F.push(y)}F=p.writeToStore(F,"ESRI__ID",this.geographicLookup.get(c)?.name);this.sublayerCaches.has(c)||this.sublayerCaches.set(c,new Map);d&&!this.inclusionModeDefinition?.namedTypeDefinitions.has(c)&&this.inclusionModeDefinition?.namedTypeDefinitions.set(c,{useAllData:!1,members:new Map});d&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(c).members&&(this.inclusionModeDefinition.namedTypeDefinitions.get(c).members=new Map);const l=this.sublayerCaches.get(c);F.forEach(v=>{l?.set(v.attributes.ESRI__ID,
v);d&&!this.inclusionModeDefinition?.namedTypeDefinitions.get(c).members.has(v.attributes.ESRI__ID)&&(this.inclusionModeDefinition?.namedTypeDefinitions.get(c).members.set(v.attributes.ESRI__ID,{id:v.attributes.ESRI__ID}),C.getOrCreateMapValue(this.memberIdTypeLookup,v.attributes.ESRI__ID,()=>new Set).add(c))})}})().then(()=>{h(null)})}),n.push(b),this._processingCacheUpdatesLookup.get(c)?.push(b);await Promise.all(n)}removeFromLayer(b){const a=new Set,f=new Set(b.map(d=>d.id));for(const d of b)a.add(d.typeName),
1===this.memberIdTypeLookup.get(d.id)?.size?this.memberIdTypeLookup.delete(d.id):this.memberIdTypeLookup.get(d.id)?.delete(d.typeName),this.inclusionModeDefinition?.namedTypeDefinitions.forEach((p,n)=>{n===d.typeName&&p.members?.has(d.id)&&p.members.delete(d.id)});a.forEach(d=>{this.sublayerCaches.get(d)?.forEach((p,n)=>{f.has(n)&&this.sublayerCaches.get(d)?.delete(n)})})}async retrieveDataFromService(b,a,f){const d=L.getInstance(),p=new Set,n=[];let m="",q=[];const c="relationship"===a.graphType;
var e=this.inclusionModeDefinition?.namedTypeDefinitions?.get(a.objectType.name)?.useAllData,h=a.parentCompositeLayer.sublayerIdsCache.get(a.objectType.name);e=!e&&h?Array.from(h).sort():null;if(this.inclusionModeDefinition?.namedTypeDefinitions?.get(a.objectType.name)?.useAllData)this.inclusionModeDefinition?.namedTypeDefinitions?.get(a.objectType.name)?.useAllData&&null!=b.objectIds&&(e=b.objectIds);else if(null!=b.objectIds&&e&&0<e.length){const g=b.objectIds;b.objectIds=e.filter(r=>g.includes(r))}else if(null!=
b.objectIds)e=b.objectIds;else{if(this.inclusionModeDefinition?.namedTypeDefinitions.has(a.objectType.name)&&(!this.inclusionModeDefinition.namedTypeDefinitions.get(a.objectType.name)?.members||1>this.inclusionModeDefinition.namedTypeDefinitions.get(a.objectType.name)?.members?.size))return b.objectIds=[],[];b.objectIds=e}null!=b.outFields&&(h=b.outFields,h.includes("*")?a.fields.forEach(g=>{p.add(g.name)}):h.forEach(g=>{"ESRI__ID"!==g&&g!==a.geometryFieldName&&p.add(g)}));if(null!=b.geometry){var k=
b.geometry;h=a.parentCompositeLayer.dataManager.knowledgeGraph.serviceDefinition;e=h?.spatialReference;var t=h?.serviceCapabilities?.geometryCapabilities;h=t?.geometryMaxBoundingRectangleSizeX;t=t?.geometryMaxBoundingRectangleSizeY;k?.extent?.spatialReference&&!k.spatialReference?.isWGS84?(await J.initializeProjection(k.extent.spatialReference,K.wgs84),k=J.project(k.extent,K.wgs84)):k=k.extent;if(h&&t&&e){4326!==e.wkid&&(e=new V({spatialReference:e,xmax:h,ymax:t}),e=J.project(e,K.wgs84),h=e.xmax,
t=e.ymax);if(k.xmax-k.xmin>h)throw new H("knowledge-graph:layer-data-manager",`Extent x bounds should be within ${h}\u00b0 latitude, limit exceeded`);if(k.ymax-k.ymin>t)throw new H("knowledge-graph:layer-data-manager",`Extent y bounds should be within ${t}\u00b0 longitude, limit exceeded`);}if(null!=b.where&&"1\x3d1"!==b.where){const g=await O.parseWhereClause(b.where.toUpperCase(),a.fieldsIndex);a.fields.forEach(r=>{g.fieldNames.includes(r.name)&&p.add(r.name)})}m=c?`Match ()-[n:${a.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${a.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))`:
`Match (n:${a.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${a.geometryFieldName}) return ID(n)`;a.geometryFieldName&&p.add(a.geometryFieldName);p.forEach(g=>{m+=`, n.${g}`;n.push(g)});b=new D({openCypherQuery:m,bindParameters:{param_filter_geom:new S({rings:T.extentToInBoundsRings(k)})}})}else{h="";if(null!=b.where&&"1\x3d1"!==b.where){const r=await O.parseWhereClause(b.where,a.fieldsIndex);a.fields.forEach(l=>{r.fieldNames.includes(l.name)&&p.add(l.name)});const x=new Set(["column-reference",
"string","number","binary-expression"]),F=new Set("\x3d \x3c \x3c\x3d \x3c\x3e \x3e \x3e\x3d AND OR LIKE".split(" "));let w=!1;const E=l=>{if("column-reference"===l.type)return`n.${l.column}`;if("string"===l.type)return`'${l.value}'`;if("number"===l.type)return`${l.value}`;if("binary-expression"===l.type&&x.has(l.left.type)&&x.has(l.right.type)&&F.has(l.operator))return`${E(l.left)} ${l.operator} ${E(l.right)}`;if("binary-expression"===l.type&&"LIKE"===l.operator){let v="";if("function"===l.left.type&&
"column-reference"===l.left.args.value[0].type)v+=`lower(n.${l.left.args.value[0].column})`;else if("column-reference"===l.left.type)v+=`lower(n.${l.left.column})`;else return w=!0,"";v+=" CONTAINS (";if("string"===l.right.type)l=l.right.value,"%"===l.charAt(0)&&(l=l.slice(1)),"%"===l.charAt(l.length-1)&&(l=l.slice(0,-1)),v+=`'${l.toLowerCase()}')`;else return w=!0,"";return v}w=!0;return""};h=E(r.parseTree);w&&(h="")}let g="";g=c?`Match ()-[n:${a.objectType.name}]->()`:`Match (n:${a.objectType.name})`;
k=!1;e&&(k=!0,g+=" WHERE ID(n) IN $ids");h&&(g=k?g+" AND":g+" WHERE",g+=` ${h}`);g+=" return ID(n)";c&&(g+=", id(startNode(n)), id(endNode(n))");b.returnGeometry&&a.geometryFieldName&&p.add(a.geometryFieldName);p.forEach(r=>{g+=`, n.${r}`;n.push(r)});b=e?new D({openCypherQuery:g,bindParameters:{ids:e}}):new D({openCypherQuery:g})}for(f=(await M.executeQueryStreaming(a.parentCompositeLayer.dataManager.knowledgeGraph,b,f)).resultRowsStream.getReader();;){const {done:g,value:r}=await f.read();if(g)break;
b=[];for(e=0;e<r.length;e++){h=r[e];t=k=0;const x={properties:{}};x.id=h[k];k++;t++;c&&(x.originId=h[k],k++,t++,x.destinationId=h[k],k++,t++);for(;k<h.length;k++)x.properties[n[k-t]]=h[k];b.push(x)}q=q.concat(d.writeToStore(b,"ESRI__ID",a.parentCompositeLayer.dataManager.geographicLookup.get(a.objectType.name)?.name))}return q}};z.__decorate([B.property()],u.KnowledgeGraphLayerDataManager.prototype,"knowledgeGraph",void 0);z.__decorate([B.property()],u.KnowledgeGraphLayerDataManager.prototype,"inclusionModeDefinition",
void 0);z.__decorate([B.property()],u.KnowledgeGraphLayerDataManager.prototype,"entityTypeNames",void 0);z.__decorate([B.property()],u.KnowledgeGraphLayerDataManager.prototype,"relationshipTypeNames",void 0);z.__decorate([B.property()],u.KnowledgeGraphLayerDataManager.prototype,"geographicLookup",void 0);z.__decorate([B.property()],u.KnowledgeGraphLayerDataManager.prototype,"sublayerCaches",void 0);z.__decorate([B.property()],u.KnowledgeGraphLayerDataManager.prototype,"nodeConnectionsLookup",void 0);
z.__decorate([B.property()],u.KnowledgeGraphLayerDataManager.prototype,"relationshipConnectionsLookup",void 0);z.__decorate([B.property()],u.KnowledgeGraphLayerDataManager.prototype,"memberIdTypeLookup",void 0);u.KnowledgeGraphLayerDataManager=z.__decorate([R.subclass("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager")],u.KnowledgeGraphLayerDataManager);u.geohashEncodingPrecision=12;u.mockDestinationIdFieldName="ESRI__DESTINATION_ID";u.mockLayoutGeometryFieldName="ESRI__LAYOUT_GEOMETRY";
u.mockOidFieldName="ESRI__ID";u.mockOriginIdFieldName="ESRI__ORIGIN_ID";Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});