// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["require","exports"],function(d,f){const e=a=>Object.freeze(Object.defineProperty({__proto__:null,default:a},Symbol.toStringTag,{value:"Module"}));f.typeModuleMap={ArcGISAnnotationLayer:()=>Promise.resolve(null),ArcGISDimensionLayer:async()=>(await new Promise((a,b)=>d(["../DimensionLayer"],c=>a(e(c)),b))).default,ArcGISFeatureLayer:async()=>(await new Promise((a,b)=>d(["../FeatureLayer"],c=>a(e(c)),b))).default,ArcGISImageServiceLayer:async()=>(await new Promise((a,b)=>d(["../ImageryLayer"],
c=>a(e(c)),b))).default,ArcGISImageServiceVectorLayer:()=>Promise.resolve(null),ArcGISMapServiceLayer:async()=>(await new Promise((a,b)=>d(["../MapImageLayer"],c=>a(e(c)),b))).default,ArcGISSceneServiceLayer:async()=>(await new Promise((a,b)=>d(["../SceneLayer"],c=>a(e(c)),b))).default,ArcGISStreamLayer:async()=>(await new Promise((a,b)=>d(["../StreamLayer"],c=>a(e(c)),b))).default,ArcGISTiledElevationServiceLayer:async()=>(await new Promise((a,b)=>d(["../ElevationLayer"],c=>a(e(c)),b))).default,
ArcGISTiledImageServiceLayer:async()=>(await new Promise((a,b)=>d(["../ImageryTileLayer"],c=>a(e(c)),b))).default,ArcGISTiledMapServiceLayer:async()=>(await new Promise((a,b)=>d(["../TileLayer"],c=>a(e(c)),b))).default,BingMapsAerial:async()=>(await new Promise((a,b)=>d(["../BingMapsLayer"],c=>a(e(c)),b))).default,BingMapsRoad:async()=>(await new Promise((a,b)=>d(["../BingMapsLayer"],c=>a(e(c)),b))).default,BingMapsHybrid:async()=>(await new Promise((a,b)=>d(["../BingMapsLayer"],c=>a(e(c)),b))).default,
BuildingSceneLayer:async()=>(await new Promise((a,b)=>d(["../BuildingSceneLayer"],c=>a(e(c)),b))).default,CatalogLayer:async()=>(await new Promise((a,b)=>d(["../CatalogLayer"],c=>a(e(c)),b))).default,CSV:async()=>(await new Promise((a,b)=>d(["../CSVLayer"],c=>a(e(c)),b))).default,GeoRSS:async()=>(await new Promise((a,b)=>d(["../GeoRSSLayer"],c=>a(e(c)),b))).default,GeoJSON:async()=>(await new Promise((a,b)=>d(["../GeoJSONLayer"],c=>a(e(c)),b))).default,GroupLayer:async()=>(await new Promise((a,b)=>
d(["../GroupLayer"],c=>a(e(c)),b))).default,IntegratedMeshLayer:async()=>(await new Promise((a,b)=>d(["../IntegratedMeshLayer"],c=>a(e(c)),b))).default,KML:async()=>(await new Promise((a,b)=>d(["../KMLLayer"],c=>a(e(c)),b))).default,KnowledgeGraphLayer:()=>Promise.resolve(null),MediaLayer:async()=>(await new Promise((a,b)=>d(["../MediaLayer"],c=>a(e(c)),b))).default,LineOfSightLayer:async()=>(await new Promise((a,b)=>d(["../LineOfSightLayer"],c=>a(e(c)),b))).default,OGCFeatureLayer:async()=>(await new Promise((a,
b)=>d(["../OGCFeatureLayer"],c=>a(e(c)),b))).default,OpenStreetMap:async()=>(await new Promise((a,b)=>d(["../OpenStreetMapLayer"],c=>a(e(c)),b))).default,OrientedImageryLayer:async()=>(await new Promise((a,b)=>d(["../OrientedImageryLayer"],c=>a(e(c)),b))).default,PointCloudLayer:async()=>(await new Promise((a,b)=>d(["../PointCloudLayer"],c=>a(e(c)),b))).default,VectorTileLayer:async()=>(await new Promise((a,b)=>d(["../VectorTileLayer"],c=>a(e(c)),b))).default,Voxel:async()=>(await new Promise((a,
b)=>d(["../VoxelLayer"],c=>a(e(c)),b))).default,WebTiledLayer:async()=>(await new Promise((a,b)=>d(["../WebTileLayer"],c=>a(e(c)),b))).default,WFS:async()=>(await new Promise((a,b)=>d(["../WFSLayer"],c=>a(e(c)),b))).default,SubtypeGroupLayer:async()=>(await new Promise((a,b)=>d(["../SubtypeGroupLayer"],c=>a(e(c)),b))).default,WMS:async()=>(await new Promise((a,b)=>d(["../WMSLayer"],c=>a(e(c)),b))).default,RasterDataLayer:()=>Promise.resolve(null),RasterDataElevationLayer:()=>Promise.resolve(null),
IntegratedMesh3DTilesLayer:async()=>(await new Promise((a,b)=>d(["../IntegratedMesh3DTilesLayer"],c=>a(e(c)),b))).default};Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});