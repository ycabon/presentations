// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../geometry ../../../core/Clonable ../../../core/Error ../../../core/JSONSupport ../../../core/Logger ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/decorators/cast ../../../core/accessorSupport/decorators/enumeration ../../../core/accessorSupport/decorators/reader ../../../core/accessorSupport/decorators/subclass ../../../core/accessorSupport/decorators/writer ./CameraOrientation ./cameraOrientationFactory ./utils ../enums/CameraOrientationType ../../../geometry/Point".split(" "),
function(b,a,t,p,u,v,h,w,x,k,y,q,z,A,n,B,r){a=class extends t.ClonableMixin(u.JSONSupport){constructor(e){super(e);this.name=this.elevationSource=this.elevation=this.cameraOrientation=null}read(e,c){const d={},{attributes:f,layer:g,geometry:l}=e;for(const m in f)d[m.toLowerCase()]=f[m];super.read({geometry:l,layer:g??{},...d},c)}readCameraHeading(e,c){const {cameraheading:d,camheading:f,layer:g}=c;return d??f??g.cameraHeading}readCameraHeight(e,c){const {cameraheight:d,avghtag:f,layer:g}=c;return d??
f??g.cameraHeight}readCamOffset(e,c){const {cameraoffset:d,camoffset:f}=c;return d?.split(";").map(Number)??f?.split(";").map(Number)??null}writeCameraOffset(e,c){e&&(c.cameraOffset=e.join(";"))}readCameraOrientation(e,c){const {cameraorientation:d,camori:f}=c;return d??f}readCameraPitch(e,c){const {camerapitch:d,campitch:f,layer:g}=c;return d??f??g.cameraPitch}readCameraRoll(e,c){const {cameraroll:d,camroll:f,layer:g}=c;return d??f??g.cameraRoll}readDepthImage(e,c){const {depthimage:d,depthimg:f,
layer:g}=c,{depthImagePathPrefix:l,depthImagePathSuffix:m}=g??{};return n.appendPrefixAndSuffix(d??f??null,l,m)}readElevationSource(e,c){const {elevationsource:d,layer:f}=c,{demPathSuffix:g,demPathPrefix:l}=f;return d?(e=this._parseIfJSON(d),n.getEffectiveElevationSource(e,l,g)):f.effectiveElevationSource}readFarDistance(e,c){const {fardistance:d,fardist:f,layer:g}=c;return d??f??g.farDistance}readHFOV(e,c){const {horizontalfieldofview:d,hfov:f,layer:g}=c;return d??f??g.horizontalFieldOfView}readImageURL(e,
c){const {imagepath:d,layer:f}=c;if(!d)throw new p("exposure-point:missing-attribute-value","a value for imagePath is missing in attribute table",{exposurePoint:this});const {imagePathPrefix:g,imagePathSuffix:l}=f;return n.appendPrefixAndSuffix(d,g,l)}readImageRotation(e,c){const {imagerotation:d,imgrot:f,layer:g}=c;return d??f??g.imageRotation}get isHorizontal(){return"horizontal"===this.orientedImageryType}get isInspection(){return"inspection"===this.orientedImageryType}get isNadir(){return"nadir"===
this.orientedImageryType}get isOblique(){return"oblique"===this.orientedImageryType}get isSpherical(){return"360"===this.orientedImageryType}get location(){const {cameraOrientation:e,geometry:c,cameraHeight:d,elevation:f}=this;if(e){const {type:g,x:l,y:m,z:C,horizontalWKID:D}=e;return new r({x:l,y:m,z:C,spatialReference:{wkid:g===B.CameraOrientationType.LTP?4326:D}})}if("number"!==typeof d){throw new p("exposure-point:missing-default-value","a value for cameraHeight is missing in default properties");
throw void 0;}c.z=(f??0)+d;return c}readNearDistance(e,c){const {neardistance:d,neardist:f,layer:g}=c;return d??f??g.nearDistance}readOrientationAccuracy(e,c){const {accuracy:d,orientationaccuracy:f}=c;return f?.split(";").map(Number)??d?.split(";").map(Number)??null}writeOrientationAccuracy(e,c){e&&(c.orientationAccuracy=e.join(";"))}readOIType(e,c){const {orientedimagerytype:d,oitype:f,camerapitch:g,campitch:l,layer:m}=c;e=n.orientedImageryTypeMap.read(d??f??m.orientedImageryType);c=g??l??m.cameraPitch;
return"oblique"===e?10>c?"nadir":"oblique":e}readVFOV(e,c){const {verticalfieldofview:d,vfov:f,layer:g}=c;return d??f??g.verticalFieldOfView}_parseIfJSON(e){let c=null;try{c=JSON.parse(e)}catch(d){v.getLogger(this).error("couldn't parse the given elevation source JSON",e,d)}return c}};b.__decorate([h.property({type:Date,json:{write:{enabled:!0,target:"aquisitionDate"},name:"acquisitiondate"}})],a.prototype,"acquisitionDate",void 0);b.__decorate([h.property({type:Number,json:{write:!0,read:{source:["cameraheading",
"camheading","layer.cameraHeading"]}}})],a.prototype,"cameraHeading",void 0);b.__decorate([k.reader("cameraHeading")],a.prototype,"readCameraHeading",null);b.__decorate([h.property({type:Number,json:{write:!0}})],a.prototype,"cameraHeight",void 0);b.__decorate([k.reader("cameraHeight",["cameraheight","avghtag","layer.cameraHeight"])],a.prototype,"readCameraHeight",null);b.__decorate([h.property()],a.prototype,"cameraOffset",void 0);b.__decorate([k.reader("cameraOffset",["cameraoffset","camoffset"])],
a.prototype,"readCamOffset",null);b.__decorate([q.writer("cameraOffset")],a.prototype,"writeCameraOffset",null);b.__decorate([h.property({json:{write:!0},type:z}),w.cast(e=>e?A.getCameraOrientation(e):null)],a.prototype,"cameraOrientation",void 0);b.__decorate([k.reader("cameraOrientation",["cameraorientation","camori"])],a.prototype,"readCameraOrientation",null);b.__decorate([h.property({type:Number,json:{write:!0}})],a.prototype,"cameraPitch",void 0);b.__decorate([k.reader("cameraPitch",["camerapitch",
"campitch","layer.cameraPitch"])],a.prototype,"readCameraPitch",null);b.__decorate([h.property({type:Number,json:{write:!0}})],a.prototype,"cameraRoll",void 0);b.__decorate([k.reader("cameraRoll",["cameraroll","camroll","layer.cameraRoll"])],a.prototype,"readCameraRoll",null);b.__decorate([h.property({json:{write:!0},type:String})],a.prototype,"depthImage",void 0);b.__decorate([k.reader("depthImage",["depthimage","depthimg"])],a.prototype,"readDepthImage",null);b.__decorate([h.property({type:Number,
json:{write:!0}})],a.prototype,"elevation",void 0);b.__decorate([h.property({json:{write:!0}})],a.prototype,"elevationSource",void 0);b.__decorate([k.reader("elevationSource",["elevationsource","layer.effectiveElevationSource"])],a.prototype,"readElevationSource",null);b.__decorate([h.property({json:{name:"exposurestationid",write:{target:"exposureStationId"}},type:String})],a.prototype,"exposureStationId",void 0);b.__decorate([h.property({type:Number,json:{write:!0}})],a.prototype,"farDistance",
void 0);b.__decorate([k.reader("farDistance",["fardistance","fardist","layer.farDistance"])],a.prototype,"readFarDistance",null);b.__decorate([h.property({type:r,json:{name:"geometry"}})],a.prototype,"geometry",void 0);b.__decorate([h.property({type:Number,json:{write:!0}})],a.prototype,"horizontalFieldOfView",void 0);b.__decorate([k.reader("horizontalFieldOfView",["horizontalfieldofview","hfov","layer.horizontalFieldOfView"])],a.prototype,"readHFOV",null);b.__decorate([h.property({json:{write:!0},
type:String})],a.prototype,"imagePath",void 0);b.__decorate([k.reader("imagePath",["imagepath"])],a.prototype,"readImageURL",null);b.__decorate([h.property({type:Number,json:{write:!0}})],a.prototype,"imageRotation",void 0);b.__decorate([k.reader("imageRotation",["imagerotation","imgrot","layer.imageRotation"])],a.prototype,"readImageRotation",null);b.__decorate([h.property()],a.prototype,"isHorizontal",null);b.__decorate([h.property()],a.prototype,"isInspection",null);b.__decorate([h.property()],
a.prototype,"isNadir",null);b.__decorate([h.property()],a.prototype,"isOblique",null);b.__decorate([h.property()],a.prototype,"isSpherical",null);b.__decorate([h.property()],a.prototype,"location",null);b.__decorate([h.property({json:{write:!0},type:String})],a.prototype,"name",void 0);b.__decorate([h.property({type:Number,json:{write:!0}})],a.prototype,"nearDistance",void 0);b.__decorate([k.reader("nearDistance",["neardistance","neardist","layer.nearDistance"])],a.prototype,"readNearDistance",null);
b.__decorate([h.property({json:{write:!0,name:"objectid"},type:Number})],a.prototype,"objectId",void 0);b.__decorate([h.property()],a.prototype,"orientationAccuracy",void 0);b.__decorate([k.reader("orientationAccuracy",["accuracy","orientationaccuracy"])],a.prototype,"readOrientationAccuracy",null);b.__decorate([q.writer("orientationAccuracy")],a.prototype,"writeOrientationAccuracy",null);b.__decorate([x.enumeration(n.orientedImageryTypeMap)],a.prototype,"orientedImageryType",void 0);b.__decorate([k.reader("orientedImageryType",
["orientedimagerytype","oitype","layer.orientedImageryType"])],a.prototype,"readOIType",null);b.__decorate([h.property({type:Number,json:{name:"sortorder",write:{target:"sortOrder"}}})],a.prototype,"sortOrder",void 0);b.__decorate([h.property({type:Number,json:{write:!0}})],a.prototype,"verticalFieldOfView",void 0);b.__decorate([k.reader("verticalFieldOfView",["verticalfieldofview","vfov","layer.verticalFieldOfView"])],a.prototype,"readVFOV",null);return a=b.__decorate([y.subclass("esri.layers.orientedImagery.core.ExposurePoint")],
a)});