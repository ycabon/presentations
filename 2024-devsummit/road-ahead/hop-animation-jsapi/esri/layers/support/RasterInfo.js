// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../chunks/tslib.es6 ../../core/JSONSupport ../../core/lang ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/accessorSupport/decorators/subclass ../../geometry/Extent ../../geometry/SpatialReference ./RasterBandInfo ./RasterSensorInfo ./RasterStorageInfo".split(" "),function(b,a,e,c,r,t,m,k,n,l,p,q){var h;a=h=class extends a.JSONSupport{constructor(d){super(d);this.extent=this.colormap=this.bandCount=this.attributeTable=null;this.format=void 0;this.histograms=
this.width=this.height=null;this.keyProperties={};this.pixelType=this.pixelSize=this.noDataValue=this.multidimensionalInfo=null;this.isPseudoSpatialReference=!1;this.transform=this.storageInfo=this.statistics=this.spatialReference=null}get bandInfos(){var d=this.keyProperties.BandProperties,{bandCount:f}=this;if(!d?.length||d.length<f){d=[];for(let g=1;g<=f;g++)d.push(new l({name:"band_"+g}));return d}f=d.map(g=>l.fromJSON(g));for(d=0;d<f.length;d++)f[d].name=f[d].name||"band_"+(d+1);return f}get dataType(){const d=
this.keyProperties?.DataType?.toLowerCase()??"generic";return"stdtime"===d?"standard-time":d}get nativeExtent(){return this._get("nativeExtent")||this.extent}set nativeExtent(d){d&&this._set("nativeExtent",d)}get nativePixelSize(){if(null==this.transform||!this.transform.affectsPixelSize)return this.pixelSize;const d=this.nativeExtent;return{x:d.width/this.width,y:d.height/this.height}}get hasMultidimensionalTranspose(){return!!this.storageInfo?.transposeInfo}get sensorInfo(){if(this.keyProperties?.SensorName)return p.fromJSON(this.keyProperties)}clone(){return new h({attributeTable:e.clone(this.attributeTable),
bandCount:this.bandCount,colormap:e.clone(this.colormap),extent:e.clone(this.extent),nativePixelSize:e.clone(this.nativePixelSize),format:this.format,height:this.height,width:this.width,histograms:e.clone(this.histograms),keyProperties:e.clone(this.keyProperties),multidimensionalInfo:e.clone(this.multidimensionalInfo),noDataValue:this.noDataValue,pixelSize:e.clone(this.pixelSize),pixelType:this.pixelType,isPseudoSpatialReference:this.isPseudoSpatialReference,spatialReference:e.clone(this.spatialReference),
statistics:e.clone(this.statistics),storageInfo:e.clone(this.storageInfo),transform:e.clone(this.transform)})}};b.__decorate([c.property({json:{write:!0}})],a.prototype,"attributeTable",void 0);b.__decorate([c.property({json:{write:!0}})],a.prototype,"bandCount",void 0);b.__decorate([c.property({readOnly:!0})],a.prototype,"bandInfos",null);b.__decorate([c.property({json:{write:!0}})],a.prototype,"colormap",void 0);b.__decorate([c.property({type:String,readOnly:!0})],a.prototype,"dataType",null);b.__decorate([c.property({type:k,
json:{write:!0}})],a.prototype,"extent",void 0);b.__decorate([c.property({type:k,json:{write:!0}})],a.prototype,"nativeExtent",null);b.__decorate([c.property({json:{write:!0}})],a.prototype,"nativePixelSize",null);b.__decorate([c.property({json:{write:!0}})],a.prototype,"format",void 0);b.__decorate([c.property({json:{write:!0}})],a.prototype,"height",void 0);b.__decorate([c.property({json:{write:!0}})],a.prototype,"width",void 0);b.__decorate([c.property({json:{write:!0}})],a.prototype,"hasMultidimensionalTranspose",
null);b.__decorate([c.property({json:{write:!0}})],a.prototype,"histograms",void 0);b.__decorate([c.property({json:{write:!0}})],a.prototype,"keyProperties",void 0);b.__decorate([c.property({json:{write:!0}})],a.prototype,"multidimensionalInfo",void 0);b.__decorate([c.property({json:{write:!0}})],a.prototype,"noDataValue",void 0);b.__decorate([c.property({json:{write:!0}})],a.prototype,"pixelSize",void 0);b.__decorate([c.property({json:{write:!0}})],a.prototype,"pixelType",void 0);b.__decorate([c.property()],
a.prototype,"isPseudoSpatialReference",void 0);b.__decorate([c.property({readOnly:!0})],a.prototype,"sensorInfo",null);b.__decorate([c.property({type:n,json:{write:!0}})],a.prototype,"spatialReference",void 0);b.__decorate([c.property({json:{write:!0}})],a.prototype,"statistics",void 0);b.__decorate([c.property({type:q,json:{write:!0}})],a.prototype,"storageInfo",void 0);b.__decorate([c.property({json:{write:!0}})],a.prototype,"transform",void 0);return a=h=b.__decorate([m.subclass("esri.layers.support.RasterInfo")],
a)});