// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["require","exports"],function(d,f){const e=a=>Object.freeze(Object.defineProperty({__proto__:null,default:a},Symbol.toStringTag,{value:"Module"}));f.layerLookupMap={BingMapsLayer:async()=>(await new Promise((a,b)=>d(["../BingMapsLayer"],c=>a(e(c)),b))).default,BuildingSceneLayer:async()=>(await new Promise((a,b)=>d(["../BuildingSceneLayer"],c=>a(e(c)),b))).default,CatalogLayer:async()=>(await new Promise((a,b)=>d(["../CatalogLayer"],c=>a(e(c)),b))).default,CSVLayer:async()=>(await new Promise((a,
b)=>d(["../CSVLayer"],c=>a(e(c)),b))).default,DimensionLayer:async()=>(await new Promise((a,b)=>d(["../DimensionLayer"],c=>a(e(c)),b))).default,ElevationLayer:async()=>(await new Promise((a,b)=>d(["../ElevationLayer"],c=>a(e(c)),b))).default,FeatureLayer:async()=>(await new Promise((a,b)=>d(["../FeatureLayer"],c=>a(e(c)),b))).default,GeoJSONLayer:async()=>(await new Promise((a,b)=>d(["../GeoJSONLayer"],c=>a(e(c)),b))).default,GeoRSSLayer:async()=>(await new Promise((a,b)=>d(["../GeoRSSLayer"],c=>
a(e(c)),b))).default,GroupLayer:async()=>(await new Promise((a,b)=>d(["../GroupLayer"],c=>a(e(c)),b))).default,ImageryLayer:async()=>(await new Promise((a,b)=>d(["../ImageryLayer"],c=>a(e(c)),b))).default,ImageryTileLayer:async()=>(await new Promise((a,b)=>d(["../ImageryTileLayer"],c=>a(e(c)),b))).default,IntegratedMeshLayer:async()=>(await new Promise((a,b)=>d(["../IntegratedMeshLayer"],c=>a(e(c)),b))).default,KMLLayer:async()=>(await new Promise((a,b)=>d(["../KMLLayer"],c=>a(e(c)),b))).default,
LineOfSightLayer:async()=>(await new Promise((a,b)=>d(["../LineOfSightLayer"],c=>a(e(c)),b))).default,LinkChartLayer:async()=>(await new Promise((a,b)=>d(["../LinkChartLayer"],c=>a(e(c)),b))).default,MapImageLayer:async()=>(await new Promise((a,b)=>d(["../MapImageLayer"],c=>a(e(c)),b))).default,MapNotesLayer:async()=>(await new Promise((a,b)=>d(["../MapNotesLayer"],c=>a(e(c)),b))).default,MediaLayer:async()=>(await new Promise((a,b)=>d(["../MediaLayer"],c=>a(e(c)),b))).default,OGCFeatureLayer:async()=>
(await new Promise((a,b)=>d(["../OGCFeatureLayer"],c=>a(e(c)),b))).default,OpenStreetMapLayer:async()=>(await new Promise((a,b)=>d(["../OpenStreetMapLayer"],c=>a(e(c)),b))).default,OrientedImageryLayer:async()=>(await new Promise((a,b)=>d(["../OrientedImageryLayer"],c=>a(e(c)),b))).default,PointCloudLayer:async()=>(await new Promise((a,b)=>d(["../PointCloudLayer"],c=>a(e(c)),b))).default,RouteLayer:async()=>(await new Promise((a,b)=>d(["../RouteLayer"],c=>a(e(c)),b))).default,SceneLayer:async()=>
(await new Promise((a,b)=>d(["../SceneLayer"],c=>a(e(c)),b))).default,StreamLayer:async()=>(await new Promise((a,b)=>d(["../StreamLayer"],c=>a(e(c)),b))).default,SubtypeGroupLayer:async()=>(await new Promise((a,b)=>d(["../SubtypeGroupLayer"],c=>a(e(c)),b))).default,TileLayer:async()=>(await new Promise((a,b)=>d(["../TileLayer"],c=>a(e(c)),b))).default,IntegratedMesh3DTilesLayer:async()=>(await new Promise((a,b)=>d(["../IntegratedMesh3DTilesLayer"],c=>a(e(c)),b))).default,UnknownLayer:async()=>(await new Promise((a,
b)=>d(["../UnknownLayer"],c=>a(e(c)),b))).default,UnsupportedLayer:async()=>(await new Promise((a,b)=>d(["../UnsupportedLayer"],c=>a(e(c)),b))).default,VectorTileLayer:async()=>(await new Promise((a,b)=>d(["../VectorTileLayer"],c=>a(e(c)),b))).default,VoxelLayer:async()=>(await new Promise((a,b)=>d(["../VoxelLayer"],c=>a(e(c)),b))).default,WFSLayer:async()=>(await new Promise((a,b)=>d(["../WFSLayer"],c=>a(e(c)),b))).default,WMSLayer:async()=>(await new Promise((a,b)=>d(["../WMSLayer"],c=>a(e(c)),
b))).default,WMTSLayer:async()=>(await new Promise((a,b)=>d(["../WMTSLayer"],c=>a(e(c)),b))).default,WebTileLayer:async()=>(await new Promise((a,b)=>d(["../WebTileLayer"],c=>a(e(c)),b))).default};Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});