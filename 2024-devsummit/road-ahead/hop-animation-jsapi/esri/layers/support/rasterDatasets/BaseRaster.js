// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../geometry ../../../request ../../../core/Error ../../../core/JSONSupport ../../../core/Logger ../../../core/Promise ../../../core/promiseUtils ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/RandomLCG ../../../core/has ../../../core/accessorSupport/decorators/subclass ../arcgisLayerUrl ../commonProperties ../DimensionalDefinition ../LOD ../RasterStorageInfo ../TileInfo ./multidimensionalUtils ./RawBlockCache ../rasterFormats/pixelRangeUtils ../rasterFormats/RasterCodec ../rasterFunctions/pixelUtils ../rasterFunctions/rasterProjectionHelper ../rasterFunctions/vectorFieldUtils ../../../views/support/QueueProcessor ../../../geometry/Extent ../../../geometry/Point ../../../geometry/SpatialReference".split(" "),
function(y,w,W,R,X,Y,Z,aa,A,ba,pa,qa,ca,da,ea,fa,ha,ia,S,K,D,ja,ka,I,v,T,la,H,E,ma){let na=0;w=class extends Z.EsriPromiseMixin(X.JSONSupport){constructor(){super(...arguments);this._tileFetchQueue=new la.QueueProcessor({concurrency:32,process:(a,b)=>this._fetchRawTile(a.pyramidLevel,a.row,a.col,{...a.options,signal:b})});this.datasetFormat=this.datasetName=null;this.hasUniqueSourceStorageInfo=!0;this.rasterInfo=null;this.ioConfig={sampling:"closest"}}async init(){const a=v.load();this.addResolvingPromise(a);
await this.when()}normalizeCtorArgs(a){a?.ioConfig&&(a={...a,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:S.create(),...a.ioConfig}});return a}get _isGlobalWrappableSource(){const {rasterInfo:a}=this,b=v.getWorldWidth(a.spatialReference);return null!=b&&a.extent.width>=b/2}get _hasNoneOrGCSShiftTransform(){const {transform:a}=this.rasterInfo;return null==a||"gcs-shift"===a.type}set rasterJobHandler(a){this._set("rasterJobHandler",a);"Function"===this.datasetFormat&&this.primaryRasters?.rasters?.forEach(b=>
b.rasterJobHandler=a)}get rasterId(){return this.url||`rasterId-${na++}`}set url(a){this._set("url",da.sanitizeUrl(a,Y.getLogger(this)))}async open(a){throw new R("BaseRaster:open-not-implemented","open() is not implemented");}async fetchTile(a,b,d,c={}){const e=c.tileInfo||this.rasterInfo.storageInfo.tileInfo;a=this.getTileExtentFromTileInfo(a,b,d,e);c={noClip:!0,...c};return this.fetchPixels(a,e.size[0],e.size[1],c)}async identify(a,b={}){a=ba.ensureClass(E,a).clone().normalize();const {multidimensionalDefinition:d,
timeExtent:c}=b;var {rasterInfo:e}=this;const {hasMultidimensionalTranspose:f,multidimensionalInfo:g}=e;var {transposedVariableName:h}=b,k=null!=g&&f&&(null!=c||K.isMultiSliceOrRangeDefinition(d));k&&!h&&(h=null!=d&&0<d.length?d[0].variableName??void 0:g.variables[0].name,b={...b,transposedVariableName:h});b=this._getRequestOptionsWithSliceId(b);const {spatialReference:l,extent:p}=e;var {datumTransformation:n}=b;n=v.projectPoint(a,l,n);if(!p.intersects(n)||null!=e.transform&&(n=e.transform.inverseTransform(n),
!e.nativeExtent.intersects(n)))return{location:n,value:null};let r=0;var q=null!=h&&null!=g&&e.hasMultidimensionalTranspose;if("Function"===this.datasetFormat){k=this.primaryRasters.rasters[0];if(q)return k.identify(n,b);({pixelSize:q}=e);b=3*q.x/2;q=3*q.y/2;b=new H({xmin:n.x-b,xmax:n.x+b,ymin:n.y-q,ymax:n.y+q,spatialReference:l});q={interpolation:"nearest"};({pixelBlock:k}=await k.fetchPixels(b,3,3,q));({pixelBlock:b}=await this.fetchPixels(b,3,3,q));if(null==k)return{location:n,value:null};k=!k.mask||
k.mask[4]?k.pixels.map(B=>B[4]):null;var m;null!=b&&(m=!b.mask||b.mask[4]?b.pixels.map(B=>B[4]):void 0);return{location:n,value:k,processedValue:m,pyramidLevel:0}}if(!q)if(b.srcResolution)r=v.snapPyramid(b.srcResolution,e,this.ioConfig.sampling).pyramidLevel;else if(r=await this.computeBestPyramidLevelForLocation(a,b),null==r)return{location:n,value:null};m=this.identifyPixelLocation(n,r,null,q);if(null===m)return{location:n,value:null};const {row:t,col:u,rowOffset:x,colOffset:z,blockWidth:F}=m;m=
D.getRasterId(this.rasterId,h??b.sliceId);e=`${r}/${t}/${u}`;h=D.getBlock(m,null,e);null==h&&(h=this.fetchRawTile(r,t,u,b),D.putBlock(m,null,e,h));m=await h;return m?.pixels?.length?this._processIdentifyResult(m,{srcLocation:n,position:x*F+z,pyramidLevel:r,useTransposedTile:!!q,requestSomeSlices:k,identifyOptions:b}):{location:n,value:null}}async fetchPixels(a,b,d,c={}){a=v.shiftExtent(a);c=this._getRequestOptionsWithSliceId(c);var {_hasNoneOrGCSShiftTransform:e}=this;if(c.requestRawData&&e)return this._fetchPixels(a,
b,d,c);var f=v.getWorldWidth(a.spatialReference),g=v.getWorldWrapCount(a);if(null==f||0===g||1===g&&this._isGlobalWrappableSource&&e)return this._fetchPixels(a,b,d,c);if(3<=g)return{extent:a,pixelBlock:null};const h=[],{xmin:k,xmax:l}=a,p=Math.round(f/(l-k)*b),n=p-Math.round((f/2-k)/(l-k)*b);let r=0;e=[];for(let m=0;m<=g;m++){var q=new H({xmin:0===m?k:-f/2,xmax:m===g?l-f*m:f/2,ymin:a.ymin,ymax:a.ymax,spatialReference:a.spatialReference});const t=0===m?p-n:m===g?b-r:p;r+=t;e.push(t);q=c.disableWrapAround&&
0<m?null:this._fetchPixels(q,t,d,c);h.push(q)}f=(await Promise.all(h)).map(m=>m?.pixelBlock);g=null;b={width:b,height:d};g=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:b,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:e},c)).pixelBlock:I.mosaic(f,b,{blockWidths:e});c=v.projectExtent(a,this.rasterInfo.spatialReference,c.datumTransformation);return{extent:a,srcExtent:c,pixelBlock:g}}async fetchRawPixels(a,
b,d,c={}){b={x:Math.floor(b.x),y:Math.floor(b.y)};const e=await this._fetchRawTiles(a,b,d,c),{nativeExtent:f,nativePixelSize:g,storageInfo:h}=this.rasterInfo;var k=2**a,l=g.x*k;k*=g.y;l=new H({xmin:f.xmin+l*b.x,xmax:f.xmin+l*(b.x+d.width-1),ymin:f.ymax-k*(b.y+d.height-1),ymax:f.ymax-k*b.y,spatialReference:f.spatialReference});if(!e)return{extent:l,srcExtent:l,pixelBlock:null};const {pixelBlocks:p,mosaicSize:n}=e;if(1===p.length&&null!=p[0]&&p[0].width===d.width&&p[0].height===d.height)return{extent:l,
srcExtent:l,pixelBlock:e.pixelBlocks[0]};a={x:b.x%(0<a?h.pyramidBlockWidth:h.blockWidth),y:b.y%(0<a?h.pyramidBlockHeight:h.blockHeight)};d=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:n,destDimension:d,clipOffset:a,clipSize:d,coefs:null,sampleSpacing:null,interpolation:c.interpolation,alignmentInfo:null,blockWidths:null},c)).pixelBlock:I.mosaic(p,n,{clipOffset:a,clipSize:d});return{extent:l,srcExtent:l,pixelBlock:d}}fetchRawTile(a,b,d,c){throw new R("BaseRaster:read-not-implemented",
"fetchRawTile() is not implemented");}computeExtent(a){return v.projectExtent(this.rasterInfo.extent,a)}decodePixelBlock(a,b){return!this.rasterJobHandler||b.useCanvas?ka.decode(a,b):this.rasterJobHandler.decode({data:a,options:b})}async request(a,b,d=0){const {customFetchParameters:c}=this.ioConfig,{range:e,query:f,headers:g}=b;d=d??b.retryCount??this.ioConfig.retryCount;const h=e?{Range:`bytes=${e.from}-${e.to}`}:null;try{return await W(a,{...b,query:{...f,...c},headers:{...g,...h}})}catch(k){if(0<
d)return d--,this.request(a,b,d);throw k;}}getSliceIndex(a){const {multidimensionalInfo:b}=this.rasterInfo;return null==b||null==a||0===a.length?null:K.getSliceIndex(a,b)}getTileExtentFromTileInfo(a,b,d,c){a=c.lodAt(a);return this.getTileExtent({x:a.resolution,y:a.resolution},b,d,c.origin,c.spatialReference,c.size)}updateTileInfo(){const {storageInfo:a,spatialReference:b,extent:d,pixelSize:c}=this.rasterInfo;if(!a.tileInfo){const f=[];var e=a.maximumPyramidLevel||0;let g=Math.max(c.x,c.y),h=1/.0254*
96*g;for(let k=0;k<=e;k++)f.unshift(new ha({level:e-k,resolution:g,scale:h})),g*=2,h*=2;e=new E({x:d.xmin,y:d.ymax,spatialReference:b});a.tileInfo=new S({origin:e,size:[a.blockWidth,a.blockHeight],spatialReference:b,lods:f});a.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(a,b=512,d=512,c){const {width:e,height:f,nativeExtent:g,pixelSize:h,spatialReference:k}=a,l=new E({x:g.xmin,y:g.ymax,spatialReference:k});null==c&&(c=Math.max(0,Math.round(Math.log(Math.max(e,f))/Math.LN2-8)));const p=this.computeBlockBoundary(g,
512,512,{x:g.xmin,y:g.ymax},[h],c);a.storageInfo=new ia({blockWidth:b,blockHeight:d,pyramidBlockWidth:b,pyramidBlockHeight:d,origin:l,firstPyramidLevel:1,maximumPyramidLevel:c,blockBoundary:p})}async computeBestPyramidLevelForLocation(a,b){return 0}computeBlockBoundary(a,b,d,c,e,f=0,g=2){if(1===e.length&&0<f){e=[...e];let {x:l,y:p}=e[0];for(let n=0;n<f;n++)l*=g,p*=g,e.push({x:l,y:p})}f=[];const {x:h,y:k}=c;for(c=0;c<e.length;c++){const {x:l,y:p}=e[c];f.push({minCol:Math.floor((a.xmin-h+.1*l)/b/l),
maxCol:Math.floor((a.xmax-h-.1*l)/b/l),minRow:Math.floor((k-a.ymax+.1*p)/d/p),maxRow:Math.floor((k-a.ymin-.1*p)/d/p)})}return f}getPyramidPixelSize(a){const {nativePixelSize:b}=this.rasterInfo,{pyramidResolutions:d,pyramidScalingFactor:c}=this.rasterInfo.storageInfo;if(0===a)return b;if(null!=d&&d.length)return d[a-1];a=c**a;return{x:b.x*a,y:b.y*a}}identifyPixelLocation(a,b,d,c){const {spatialReference:e,nativeExtent:f,storageInfo:g}=this.rasterInfo,{maximumPyramidLevel:h,origin:k,transposeInfo:l}=
g,p=c&&null!=l?l.tileSize[0]:g.blockWidth;c=c&&null!=l?l.tileSize[1]:g.blockHeight;a=v.projectPoint(a,e,d);if(!f.intersects(a)||0>b||b>h)return null;d=this.getPyramidPixelSize(b);const {x:n,y:r}=d;d=(k.y-a.y)/r/c;const q=(a.x-k.x)/n/p;return{pyramidLevel:b,row:Math.floor(d),col:Math.floor(q),rowOffset:Math.min(c-1,Math.floor((d-Math.floor(d))*c)),colOffset:Math.min(p-1,Math.floor((q-Math.floor(q))*p)),blockWidth:p,srcLocation:a}}getTileExtent(a,b,d,c,e,f){const [g,h]=f;d=c.x+d*g*a.x;b=c.y-b*h*a.y;
return new H({xmin:d,xmax:d+g*a.x,ymin:b-h*a.y,ymax:b,spatialReference:e})}getBlockWidthHeight(a){return{blockWidth:0<a?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:0<a?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(a,b,d){a=this.rasterInfo.storageInfo.blockBoundary[a];return!a||a.maxRow<b||a.maxCol<d||a.minRow>b||a.minCol>d}updateImageSpaceRasterInfo(a){const {extent:b,pixelSize:d}=a;if(-.5!==
b.xmin||.5!==b.ymax||1!==d.x||1!==d.y||null!=a.transform){var {width:c,height:e}=a,f=ma.WebMercator;a.spatialReference=f;a.extent=a.nativeExtent=new H({xmin:-.5,ymax:.5,xmax:c-.5,ymin:.5-e,spatialReference:f});a.isPseudoSpatialReference=!0;a.transform=null;a.pixelSize=new E({x:1,y:1,spatialReference:f});var {extent:g,storageInfo:h}=a;if(h&&(h.origin=new E({x:g.xmin,y:g.ymax,spatialReference:f}),{tileInfo:f}=h,f)){f.origin=h.origin;const k=(a.nativePixelSize.x+a.nativePixelSize.y)/2;f.lods.forEach((l,
p)=>{l.resolution=k*2**p;l.scale=96*l.resolution/.0254})}}}async _fetchPixels(a,b,d,c={}){var e=v.getWorldWrapCount(a);if(2<=e)return{extent:a,pixelBlock:null};var f=this._getSourceDataInfo(a,b,d,c);const {pyramidLevel:g,srcResolution:h,srcExtent:k,srcWidth:l,srcHeight:p,ul:n}=f;if(0===l||0===p)return{extent:a,srcExtent:k,pixelBlock:null};var {rasterInfo:r}=this,q=r.transform,m="gcs-shift"===q?.type,t=null!=v.getWorldWidth(a.spatialReference);if(m||!t)e=v.getWorldWrapCount(f.srcExtent,m);f=await this._fetchRawTiles(g,
n,{width:l,height:p,wrapCount:e},c);if(!f)return{extent:a,srcExtent:k,pixelBlock:null};var u=r.storageInfo;m=0<g?u.pyramidBlockWidth:u.blockWidth;var x=0<g?u.pyramidBlockHeight:u.blockHeight;let {x:z,y:F}=r.pixelSize;if(0<g){const {pyramidResolutions:C,pyramidScalingFactor:G}=u;null!=C&&C[g-1]?{x:z,y:F}=C[g-1]:(u=G**g,z*=u,F*=u)}var B=r.spatialReference;r=new E({x:z,y:F,spatialReference:B});const L=m===l&&x===p&&0===n.x%m&&0===n.y%x;u=new E({x:(a.xmax-a.xmin)/b,y:(a.ymax-a.ymin)/d,spatialReference:a.spatialReference});
const M=!a.spatialReference.equals(B),N=B.isGeographic?1E-9:1E-4;({datumTransformation:B}=c);if(!M&&L&&1===f.pixelBlocks.length&&m===b&&x===d&&this._isSameResolution(h,u,N))return{extent:a,srcExtent:k,srcTilePixelSize:r,pixelBlock:f.pixelBlocks[0]};m=t&&null!=v.getWorldWidth(k.spatialReference)&&this._hasNoneOrGCSShiftTransform;(t=c.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector"))&&!this.rasterJobHandler&&await v.load();e=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:a,
srcBufferExtent:f.extent,pixelSize:u.toJSON(),datumTransformation:B,rasterTransform:q,hasWrapAround:0<e||m,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:t},c):v.getProjectionOffsetGrid({projectedExtent:a,srcBufferExtent:f.extent,pixelSize:u,datumTransformation:B,rasterTransform:q,hasWrapAround:0<e||m,isAdaptive:!1,includeGCSGrid:t});q=!c.requestRawData;m={rows:e.spacing[0],cols:e.spacing[1]};x=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(g,f.extent.xmin):
void 0;const {pixelBlocks:O,mosaicSize:J,isPartiallyFilled:P}=f;f=null;this.rasterJobHandler?(b=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:O,srcMosaicSize:J,destDimension:q?{width:b,height:d}:null,coefs:q?e.coefficients:null,sampleSpacing:q?m:null,projectDirections:t,gcsGrid:t?e.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:c.interpolation,alignmentInfo:x,blockWidths:null},c),{pixelBlock:q,localNorthDirections:f}=b):(x=I.mosaic(O,J,{alignmentInfo:x}),q=
q?I.approximateTransform(x,{width:b,height:d},e.coefficients,m,c.interpolation):x,t&&e.gcsGrid&&(f=I.getLocalArithmeticNorthRotations({width:b,height:d},e.gcsGrid),q=T.convertToLocalDirections(q,this.rasterInfo.dataType,f)));return c.requestRawData||t?{extent:a,srcExtent:k,srcTilePixelSize:r,pixelBlock:q,transformGrid:e,localNorthDirections:f,isPartiallyFilled:P}:{extent:a,srcExtent:k,srcTilePixelSize:r,pixelBlock:q}}async _fetchRawTiles(a,b,d,c){const {origin:e,blockBoundary:f}=this.rasterInfo.storageInfo,
{blockWidth:g,blockHeight:h}=this.getBlockWidthHeight(a);let {x:k,y:l}=b,{width:p,height:n,wrapCount:r}=d;var q=this._getRasterTileAlignmentInfo(a,0);c.buffer&&(k-=c.buffer.cols,l-=c.buffer.rows,p+=2*c.buffer.cols,n+=2*c.buffer.rows);var m=0,t=0;let u=0;r&&null!=q&&({worldColumnCountFromOrigin:t,originColumnOffset:u,rightPadding:m}=q,t*q.blockWidth-m>=k+p&&(m=0));b=Math.floor(k/g);d=Math.floor(l/h);const x=Math.floor((k+p+m-1)/g);m=Math.floor((l+n+m-1)/h);var z=f[a];if(!z)return null;const {minRow:F,
minCol:B,maxCol:L,maxRow:M}=z;if(0===r&&(m<F||x<B||d>M||b>L))return null;z=[];let N=!1;const O=null==this.ioConfig.allowPartialFill?c.allowPartialFill:this.ioConfig.allowPartialFill;for(let C=d;C<=m;C++)for(let G=b;G<=x;G++){let Q=G;!c.disableWrapAround&&r&&null!=q&&t<=G&&(Q=G-t-u);if(C>=F&&Q>=B&&M>=C&&L>=Q){const U=this._tileFetchQueue.push({pyramidLevel:a,row:C,col:Q,options:c},{signal:c.signal});O?z.push(new Promise(V=>{U.then(oa=>V(oa)).catch(()=>{N=!0;V(null)})})):z.push(U)}else z.push(Promise.resolve(null))}if(0===
z.length)return null;c=await Promise.all(z);q={height:(m-d+1)*h,width:(x-b+1)*g};({spatialReference:t}=this.rasterInfo);a=this.getPyramidPixelSize(a);const {x:J,y:P}=a;return{extent:new H({xmin:e.x+b*g*J,xmax:e.x+(x+1)*g*J,ymin:e.y-(m+1)*h*P,ymax:e.y-d*h*P,spatialReference:t}),pixelBlocks:c,mosaicSize:q,isPartiallyFilled:N}}_isSameResolution(a,b,d){return Math.abs(a.x-b.x)<d&&Math.abs(a.y-b.y)<d}_fetchRawTile(a,b,d,c){var e=this.rasterInfo.storageInfo.blockBoundary[a];if(!e)return Promise.resolve(null);
const {minRow:f,minCol:g,maxCol:h,maxRow:k}=e;if(b<f||d<g||b>k||d>h)return Promise.resolve(null);const l=D.getRasterId(this.rasterId,c.sliceId),p=`${a}/${b}/${d}`;e=D.getBlock(l,c.registryId,p);if(null==e){const n=new AbortController;e=this.fetchRawTile(a,b,d,{...c,signal:n.signal});D.putBlock(l,c.registryId,p,e,n);e.catch(()=>D.deleteBlock(l,c.registryId,p))}if(c.signal)aa.onAbort(c,()=>{D.decreaseRefCount(l,c.registryId,p)});return e}_computeMagDirValues(a){const {bandCount:b,dataType:d}=this.rasterInfo;
if((2!==b||"vector-magdir"!==d)&&"vector-uv"!==d||2!==a?.length||!a[0]?.length)return null;var c=a[0].length;if("vector-magdir"===d)return c=a[1].map(h=>(h+360)%360),[a[0],c];const [e,f]=a;a=[];const g=[];for(let h=0;h<c;h++){const [k,l]=T.uvComponentToVector([e[h],f[h]]);a.push(k);g.push(l)}return[a,g]}_getRasterTileAlignmentInfo(a,b){null==this._rasterTileAlignmentInfo&&(this._rasterTileAlignmentInfo=v.getRasterDatasetAlignmentInfo(this.rasterInfo));return null==this._rasterTileAlignmentInfo.pyramidsInfo?
null:{startX:b,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[a]}}_getSourceDataInfo(a,b,d,c={}){const e={datumTransformation:c.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};c.srcResolution&&(e.srcResolution=c.srcResolution,this._updateSourceDataInfo(a,e));var f=this.rasterInfo.storageInfo.maximumPyramidLevel||
0;const {srcWidth:g,srcHeight:h,pyramidLevel:k}=e;var l=g/b;const p=h/d,n=k<f&&16<=l*p;var r=k===f&&this._requireTooManySrcTiles(g,h,b,d);if(n||r||0===g||0===h){r=new E({x:(a.xmax-a.xmin)/b,y:(a.ymax-a.ymin)/d,spatialReference:a.spatialReference});r=v.projectResolution(r,this.rasterInfo.spatialReference,a,e.datumTransformation);const q=!r||c.srcResolution&&r.x+r.y<c.srcResolution.x+c.srcResolution.y;n&&c.srcResolution&&q&&(l=Math.round(Math.log(Math.max(l,p))/Math.LN2)-1,f-k+3>=l&&(f=2**l,r={x:c.srcResolution.x*
f,y:c.srcResolution.y*f}));r&&(e.srcResolution=r,this._updateSourceDataInfo(a,e))}this._requireTooManySrcTiles(e.srcWidth,e.srcHeight,b,d)&&(e.srcWidth=0,e.srcHeight=0);return e}_requireTooManySrcTiles(a,b,d,c){const {tileInfo:e}=this.rasterInfo.storageInfo;return Math.ceil(a/e.size[0])*Math.ceil(b/e.size[1])>=256*Math.max(1,(d+c)/1024)||8<a/d||8<b/c}_updateSourceDataInfo(a,b){b.srcWidth=0;b.srcHeight=0;var {rasterInfo:d}=this,c=d.spatialReference;const {srcResolution:e,datumTransformation:f}=b,{pyramidLevel:g,
pyramidResolution:h,excessiveReading:k}=v.snapPyramid(e,d,this.ioConfig.sampling);if(!k&&(a=b.srcExtent||v.projectExtent(a,c,f),null!=a)){(c=d.transform)&&(a=c.inverseTransform(a));b.srcExtent=a;var {x:l,y:p}=d.storageInfo.origin;d=Math.floor((a.xmin-l)/h.x+.1);c=Math.floor((p-a.ymax)/h.y+.1);var n=Math.floor((a.xmax-l)/h.x-.1),r=Math.floor((p-a.ymin)/h.y-.1);n=a.width<.1*h.x?0:n-d+1;a=a.height<.1*h.y?0:r-c+1;b.pyramidLevel=g;b.pyramidResolution=h;b.srcWidth=n;b.srcHeight=a;b.ul={x:d,y:c}}}_getRequestOptionsWithSliceId(a){null!=
this.rasterInfo.multidimensionalInfo&&null==a.sliceId&&(a={...a,sliceId:this.getSliceIndex(a.multidimensionalDefinition)});return a}_processIdentifyResult(a,b){const {srcLocation:d,position:c,pyramidLevel:e,useTransposedTile:f}=b,g=a.pixels[0].length/a.width/a.height;if(a.mask&&!a.mask[c])return{location:d,value:null};const {multidimensionalInfo:h}=this.rasterInfo;if(null==h||!f)return b=a.pixels.map(m=>m[c]),a={location:d,value:b,pyramidLevel:e},b=this._computeMagDirValues(b.map(m=>[m])),b?.length&&
(a.magdirValue=b.map(m=>m[0])),a;let k=a.pixels.map(m=>m.slice(c*g,c*g+g)),l=this._computeMagDirValues(k);const {requestSomeSlices:p,identifyOptions:n}=b;let r=K.createSlices(h,n.transposedVariableName);if(p){const m=K.getSliceIds(r,n.multidimensionalDefinition,n.timeExtent);k=k.map(t=>m.map(u=>t[u]));l=l?.map(t=>m.map(u=>t[u]));r=m.map(t=>r[t])}b=a.noDataValues||this.rasterInfo.noDataValue;a={pixels:k,pixelType:a.pixelType};let q;null!=b&&(ja.convertNoDataToMask(a,b),q=a.mask);a=r.map((m,t)=>{m=
{value:0===q?.[t]?null:k.map(u=>u[t]),multidimensionalDefinition:m.multidimensionalDefinition.map(u=>new fa({...u,isSlice:!0}))};l?.length&&(m.magdirValue=[l[0][t],l[1][t]]);return m});return{location:d,value:null,dataSeries:a,pyramidLevel:e}}};y.__decorate([A.property()],w.prototype,"_rasterTileAlignmentInfo",void 0);y.__decorate([A.property()],w.prototype,"_tileFetchQueue",void 0);y.__decorate([A.property({readOnly:!0})],w.prototype,"_isGlobalWrappableSource",null);y.__decorate([A.property({readOnly:!0})],
w.prototype,"_hasNoneOrGCSShiftTransform",null);y.__decorate([A.property()],w.prototype,"rasterJobHandler",null);y.__decorate([A.property({readOnly:!0})],w.prototype,"rasterId",null);y.__decorate([A.property(ea.url)],w.prototype,"url",null);y.__decorate([A.property({type:String,json:{write:!0}})],w.prototype,"datasetName",void 0);y.__decorate([A.property({type:String,json:{write:!0}})],w.prototype,"datasetFormat",void 0);y.__decorate([A.property()],w.prototype,"hasUniqueSourceStorageInfo",void 0);
y.__decorate([A.property()],w.prototype,"rasterInfo",void 0);y.__decorate([A.property()],w.prototype,"ioConfig",void 0);y.__decorate([A.property()],w.prototype,"sourceJSON",void 0);return w=y.__decorate([ca.subclass("esri.layers.support.rasterDatasets.BaseRaster")],w)});