// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ../PixelBlock ../RasterInfo ../RasterStorageInfo ./BaseRaster ./pamParser ./xmlUtilities ../rasterFormats/utils ../rasterFunctions/stretchUtils ../../../geometry/SpatialReference ../../../geometry/Extent ../../../geometry/Point".split(" "),function(z,x,A,B,N,O,P,G,H,
I,J,K,D,r,L,M,y,E,F){const v=new Map;v.set("Int8","s8");v.set("UInt8","u8");v.set("Int16","s16");v.set("UInt16","u16");v.set("Int32","s32");v.set("UInt32","u32");v.set("Float32","f32");v.set("Float64","f32");v.set("Double64","f32");const w=new Map;w.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"});w.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"});w.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"});w.set("jpeg",{blobExtension:".pjg",
isOneSegment:!0,decoderFormat:"jpg"});x=class extends K{constructor(){super(...arguments);this._storageIndex=this._files=null;this.datasetFormat="MRF"}async open(a){await this.init();this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);var b=a?a.signal:null,c=await this.request(this.url,{responseType:"xml",signal:b});const {rasterInfo:d,files:g}=this._parseHeader(c.data),{skipMapInfo:m,skipExtensions:p=[]}=this.ioConfig;p.includes("aux.xml")||m||(a=await this._fetchAuxiliaryData(a),null!=
a&&(d.statistics=a.statistics??d.statistics,(d.histograms=a.histograms)&&null==d.statistics&&(d.statistics=M.estimateStatisticsFromHistograms(a.histograms))));m&&this.updateImageSpaceRasterInfo(d);this._set("rasterInfo",d);this._files=g;b=await this.request(g.index,{responseType:"array-buffer",signal:b});this._storageIndex=this._parseIndex(b.data);const {blockWidth:e,blockHeight:q}=this.rasterInfo.storageInfo;b=this.rasterInfo.storageInfo.pyramidScalingFactor;const {width:t,height:k}=this.rasterInfo;
a=[];c=this._getBandSegmentCount();let h=0,f=-1;for(;h<this._storageIndex.length;){f++;const l=Math.ceil(t/e/b**f)-1,u=Math.ceil(k/q/b**f)-1;h+=(l+1)*(u+1)*c*4;a.push({maxRow:u,maxCol:l,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=a;0<f&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=f);this.updateTileInfo()}async fetchRawTile(a,b,c,d={}){const {blockWidth:g,blockHeight:m,blockBoundary:p}=this.rasterInfo.storageInfo;var e=p[a];if(!e||
e.maxRow<b||e.maxCol<c||e.minRow>b||e.minCol>c)return null;const {bandCount:q,pixelType:t}=this.rasterInfo,{ranges:k,actualTileWidth:h,actualTileHeight:f}=this._getTileLocation(a,b,c);if(!k||0===k.length)return null;if(0===k[0].from&&0===k[0].to)return a=new Uint8Array(g*m),new H({width:g,height:m,pixels:null,mask:a,validPixelCount:0});({bandIds:b}=this.ioConfig);c=this._getBandSegmentCount();e=[];for(a=a=0;a<c;a++)b&&!b.includes(a)||e.push(this.request(this._files.data,{range:{from:k[a].from,to:k[a].to},
responseType:"array-buffer",signal:d.signal}));d=await Promise.all(e);a=d.map(n=>n.data.byteLength).reduce((n,C)=>n+C);e=new Uint8Array(a);const l=[];let u=0;for(a=0;a<c;a++)l.push(u),e.set(new Uint8Array(d[a].data),u),u+=d[a].data.byteLength;a=w.get(this.rasterInfo.storageInfo.compression).decoderFormat;b=await this.decodePixelBlock(e.buffer,{width:g,height:m,format:a,planes:b?.length||q,offsets:l,pixelType:t});if(null==b)return null;({noDataValue:c}=this.rasterInfo);if(null!=c&&"lerc"!==a&&!b.mask&&
(c=c[0],null!=c)){d=b.width*b.height;e=new Uint8Array(d);if(1E24<Math.abs(c))for(a=0;a<d;a++)1E-6<Math.abs((b.pixels[0][a]-c)/c)&&(e[a]=1);else for(a=0;a<d;a++)b.pixels[0][a]!==c&&(e[a]=1);b.mask=e}d=c=0;if(h!==g||f!==m)if(e=b.mask)for(a=0;a<m;a++)for(d=a*g,c=a<f?h:0;c<g;c++)e[d+c]=0;else for(e=new Uint8Array(g*m),b.mask=e,a=0;a<f;a++)for(d=a*g,c=0;c<h;c++)e[d+c]=1;return b}_parseIndex(a){if(0<a.byteLength%16)throw Error("invalid array buffer must be multiples of 16");let b,c,d,g,m;if(L.isPlatformLittleEndian){b=
new Uint8Array(a);d=new ArrayBuffer(a.byteLength);c=new Uint8Array(d);for(g=0;g<a.byteLength/4;g++)for(m=0;4>m;m++)c[4*g+m]=b[4*g+3-m];a=new Uint32Array(d)}else a=new Uint32Array(a);return a}_getBandSegmentCount(){return w.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(a,b,c){const {blockWidth:d,blockHeight:g,pyramidScalingFactor:m}=this.rasterInfo.storageInfo,{width:p,height:e}=this.rasterInfo,q=this._getBandSegmentCount();let t,k;var h,f=0;
let l=0;for(h=0;h<a;h++)l=m**h,t=Math.ceil(p/d/l),k=Math.ceil(e/g/l),f+=t*k;l=m**a;t=Math.ceil(p/d/l);k=Math.ceil(e/g/l);f=4*(f+(b*t+c))*q;a=this._storageIndex.subarray(f,f+4*q);f=h=0;const u=[];for(let n=0;n<q;n++)h=a[4*n]*2**32+a[4*n+1],f=h+a[4*n+2]*2**32+a[4*n+3],u.push({from:h,to:f});return{ranges:u,actualTileWidth:c<t-1?d:Math.ceil(p/l)-d*(t-1),actualTileHeight:b<k-1?g:Math.ceil(e/l)-g*(k-1)}}_parseHeader(a){var b=r.getElement(a,"MRF_META/Raster");if(!b)throw new A("mrf:open","not a valid MRF format");
var c=r.getElement(b,"Size"),d=parseInt(c.getAttribute("x"),10),g=parseInt(c.getAttribute("y"),10);const m=parseInt(c.getAttribute("c"),10);c=(r.getElementValue(b,"Compression")||"none").toLowerCase();if(!w.has(c))throw new A("mrf:open","currently does not support compression "+c);var p=r.getElementValue(b,"DataType")||"UInt8";const e=v.get(p);if(null==e)throw new A("mrf:open","currently does not support pixel type "+p);var q=r.getElement(b,"PageSize");p=parseInt(q.getAttribute("x"),10);q=parseInt(q.getAttribute("y"),
10);b=r.getElement(b,"DataValues");let t;b&&(b=b.getAttribute("NoData"),null!=b&&(t=b.trim().split(" ").map(C=>parseFloat(C))));if(r.getElement(a,"MRF_META/CachedSource"))throw new A("mrf:open","currently does not support MRF referencing other data files");var k=r.getElement(a,"MRF_META/GeoTags"),h=r.getElement(k,"BoundingBox");b=!1;if(null!=h){var f=parseFloat(h.getAttribute("minx"));var l=parseFloat(h.getAttribute("miny")),u=parseFloat(h.getAttribute("maxx"));h=parseFloat(h.getAttribute("maxy"));
var n=r.getElementValue(k,"Projection")||"";k=y.WGS84;"LOCAL_CS[]"!==n?n.toLowerCase().startsWith("epsg:")?(n=Number(n.slice(5)),isNaN(n)||0===n||(k=new y({wkid:n}))):k=D.parseSpatialReference(n)??y.WGS84:(b=!0,k=new y({wkid:3857}));f=new E(f,l,u,h);f.spatialReference=k}else b=!0,f=new E({xmin:-.5,ymin:.5-g,xmax:d-.5,ymax:.5,spatialReference:new y({wkid:3857})});l=r.getElement(a,"MRF_META/Rsets");u=parseInt(l?.getAttribute("scale")||"2",10);l=f.spatialReference;p=new J({origin:new F({x:f.xmin,y:f.ymax,
spatialReference:l}),blockWidth:p,blockHeight:q,pyramidBlockWidth:p,pyramidBlockHeight:q,compression:c,pyramidScalingFactor:u});q=new F({x:f.width/d,y:f.height/g,spatialReference:l});d=new I({width:d,height:g,extent:f,isPseudoSpatialReference:b,spatialReference:l,bandCount:m,pixelType:e,pixelSize:q,noDataValue:t,storageInfo:p});g=r.getElementValue(a,"datafile");a=r.getElementValue(a,"IndexFile");a={mrf:this.url,index:a||this.url.replace(".mrf",".idx"),data:g||this.url.replace(".mrf",w.get(c).blobExtension)};
return{rasterInfo:d,files:a}}async _fetchAuxiliaryData(a){try{const {data:b}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:a?.signal});return D.parsePAMInfo(b)}catch{return null}}};z.__decorate([B.property()],x.prototype,"_files",void 0);z.__decorate([B.property()],x.prototype,"_storageIndex",void 0);z.__decorate([B.property({type:String,json:{write:!0}})],x.prototype,"datasetFormat",void 0);return x=z.__decorate([G.subclass("esri.layers.support.rasterIO.MRFRaster")],x)});