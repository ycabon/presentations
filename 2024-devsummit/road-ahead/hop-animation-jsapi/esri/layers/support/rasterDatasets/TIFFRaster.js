// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../geometry ../../../core/arrayUtils ../../../core/Error ../../../core/Logger ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/accessorSupport/decorators/subclass ../RasterInfo ../RasterStorageInfo ./BaseRaster ./DBFParser ./pamParser ../rasterFormats/TiffDecoder ../rasterFormats/TiffTags ../rasterFunctions/stretchUtils ../rasterTransforms/PolynomialTransform ../../../rest/support/FeatureSet ../../../geometry/SpatialReference ../../../geometry/Extent ../../../geometry/Point".split(" "),
function(A,x,K,E,L,F,X,M,N,O,P,Q,I,y,G,R,S,T,U,J,B){x=class extends P{constructor(){super(...arguments);this._headerInfo=this._files=null;this._bufferSize=1048576;this.datasetFormat="TIFF"}async open(b){await this.init();var a=b?b.signal:null,{data:c}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:a});if(!c)throw new E("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));
const {littleEndian:d,firstIFDPos:f,isBigTiff:h}=y.parseSignature(c);var e=[];await this._readIFDs(e,c,d,f,0,h?8:4,a);const {imageInfo:k,rasterInfo:g}=this._parseIFDs(e);a=y.getPyramidIFDs(e);c=y.getMaskIFDs(e);this._headerInfo={littleEndian:d,isBigTiff:h,ifds:e,pyramidIFDs:a,maskIFDs:c,...k};this._set("rasterInfo",g);if(!k.isSupported)throw new E("tiffraster:open","this tiff is not supported: "+k.message);if(!k.tileWidth)throw new E("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");
g.isPseudoSpatialReference&&L.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");a=e[0].get("PREDICTOR")?.values?.[0];if(3===e[0].get("SAMPLEFORMAT")?.values?.[0]&&2===a)throw new E("tiffraster:open","unsupported horizontal difference encoding. Predictor\x3d3 is supported for floating point data");const {skipMapInfo:p,skipExtensions:t=[]}=this.ioConfig;t.includes("aux.xml")||p||(e=await this._fetchAuxiliaryMetaData(b),
null!=e&&this._processPAMInfo(e,g));t.includes("vat.dbf")||1!==g.bandCount||"u8"!==g.pixelType||p||(g.attributeTable=await this._fetchAuxiliaryTable(b),null!=g.attributeTable&&(g.keyProperties.DataType="thematic"));p&&this.updateImageSpaceRasterInfo(g);this.updateTileInfo()}async fetchRawTile(b,a,c,d={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(b,a,c))return null;const f=await this._fetchRawTiffTile(b,a,c,!1,d);null!=f&&this._headerInfo.hasMaskBand&&(b=await this._fetchRawTiffTile(b,
a,c,!0,d),null!=b&&b.pixels[0]instanceof Uint8Array&&(f.mask=b.pixels[0]));return f}_parseIFDs(b){const a=y.getImageInfo(b),{width:c,height:d,tileWidth:f,tileHeight:h,planes:e,pixelType:k,compression:g,firstPyramidLevel:p,maximumPyramidLevel:t,pyramidBlockWidth:w,pyramidBlockHeight:q,tileBoundary:v,affine:l,metadata:u}=a;let m=I.parseSpatialReference(a.extent.spatialReference?.wkt||a.extent.spatialReference?.wkid);var r=!!a.isPseudoGeographic;null==m&&(r=!0,m=new U({wkid:3857}));const n=new J({...a.extent,
spatialReference:m});var C=n?new B({x:n.xmin,y:n.ymax,spatialReference:m}):new B({x:0,y:0});C=new O({blockWidth:f,blockHeight:h,pyramidBlockWidth:w,pyramidBlockHeight:q,compression:g,origin:C,firstPyramidLevel:p,maximumPyramidLevel:t,blockBoundary:v});const V=new B({x:(n.xmax-n.xmin)/c,y:(n.ymax-n.ymin)/d,spatialReference:m}),W=u?{BandProperties:u.bandProperties,DataType:u.dataType}:{};let H=null;var D=b[0].get("PHOTOMETRICINTERPRETATION")?.values?.[0];b=b[0].get("COLORMAP")?.values;if(3>=D&&3<b?.length&&
0===b.length%3){H=[];D=b.length/3;for(let z=0;z<D;z++)H.push([z,b[z]>>>8,b[z+D]>>>8,b[z+2*D]>>>8])}r=new N({width:c,height:d,bandCount:e,pixelType:k,pixelSize:V,storageInfo:C,spatialReference:m,isPseudoSpatialReference:r,keyProperties:W,extent:n,colormap:H,statistics:u?u.statistics:null});l?.length&&(r.nativeExtent=new J({xmin:-.5,ymin:.5-d,xmax:c-.5,ymax:.5,spatialReference:m}),r.transform=new S({polynomialOrder:1,forwardCoefficients:[l[2]+l[0]/2,l[5]-l[3]/2,l[0],l[3],-l[1],-l[4]]}),r.extent=r.transform.forwardTransform(r.nativeExtent),
r.pixelSize=new B({x:(n.xmax-n.xmin)/c,y:(n.ymax-n.ymin)/d,spatialReference:m}),C.origin.x=-.5,C.origin.y=.5);return{imageInfo:a,rasterInfo:r}}_processPAMInfo(b,a){a.statistics=b.statistics??a.statistics;(a.histograms=b.histograms)&&null==a.statistics&&(a.statistics=R.estimateStatisticsFromHistograms(b.histograms));if(b.transform&&null==a.transform){a.transform=b.transform;a.nativeExtent=a.extent;const c=a.transform.forwardTransform(a.nativeExtent);a.pixelSize=new B({x:(c.xmax-c.xmin)/a.width,y:(c.ymax-
c.ymin)/a.height,spatialReference:a.spatialReference});a.extent=c}a.isPseudoSpatialReference&&b.spatialReference&&(a.spatialReference=b.spatialReference,a.extent.spatialReference=a.nativeExtent.spatialReference=a.storageInfo.origin.spatialReference=a.spatialReference)}async _readIFDs(b,a,c,d,f,h=4,e){if(!d)return null;if(d>=a.byteLength||0>d)a=(await this.request(this.url,{range:{from:d+f,to:d+f+this._bufferSize},responseType:"array-buffer",signal:e})).data,f=d+f,d=0;d=await this._readIFD(a,c,d,f,
G.tiffTags,h,e);b.push(d.ifd);if(!d.nextIFD)return null;await this._readIFDs(b,a,c,d.nextIFD-f,f,h,e)}async _readIFD(b,a,c,d,f=G.tiffTags,h=4,e){if(!b)return null;c=y.parseIFD(b,a,c,d,f,h);if(c.success){const k=[];c.ifd?.forEach(g=>{g.values||k.push(g)});0<k.length&&(h=k.map(g=>g.offlineOffsetSize).filter(K.isSome),f=Math.min.apply(null,h.map(g=>g[0])),Math.min.apply(null,h.map(g=>g[0]+g[1]))-f<=this._bufferSize&&({data:h}=await this.request(this.url,{range:{from:f,to:f+this._bufferSize},responseType:"array-buffer",
signal:e}),b=h,d=f,k.forEach(g=>y.parseFieldValues(b,a,g,d))));c.ifd?.has("GEOKEYDIRECTORY")&&(f=c.ifd.get("GEOKEYDIRECTORY"),(h=f?.values)&&4<h.length&&(h=h[0]+"."+h[1]+"."+h[2],e=await this._readIFD(b,a,f.valueOffset+6-d,d,G.geoKeys,2,e),f.data=e.ifd,f.data&&f.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[h]})));return c}if(c.requiredBufferSize&&c.requiredBufferSize!==b.byteLength)return b=(await this.request(this.url,{range:{from:d,to:d+c.requiredBufferSize+4},responseType:"array-buffer",
signal:e})).data,b.byteLength<c.requiredBufferSize?null:this._readIFD(b,a,0,d,G.tiffTags,4,e)}async _fetchRawTiffTile(b,a,c,d,f={}){a=this._getTileLocation(b,a,c,d);if(!a)return null;const {ranges:h,actualTileWidth:e,actualTileHeight:k,ifd:g}=a;a=h.map(q=>this.request(this.url,{range:q,responseType:"array-buffer",signal:f.signal}));a=await Promise.all(a);c=a.map(q=>q.data.byteLength).reduce((q,v)=>q+v);c=1===a.length?a[0].data:new ArrayBuffer(c);d=[0];var p=[0];if(1<a.length){const q=new Uint8Array(c);
for(let v=0,l=0;v<a.length;v++){const u=a[v].data;q.set(new Uint8Array(u),l);d[v]=l;l+=u.byteLength;p[v]=u.byteLength}}const {blockWidth:t,blockHeight:w}=this.getBlockWidthHeight(b);b=await this.decodePixelBlock(c,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:g,offsets:d,sizes:p},width:t,height:w,planes:null,pixelType:null});if(null==b)return null;if(e!==t||k!==w)if(p=b.mask)for(a=0;a<w;a++)for(d=a*t,c=a<k?e:0;c<t;c++)p[d+c]=0;else for(p=new Uint8Array(t*w),b.mask=p,a=0;a<k;a++)for(d=
a*t,c=0;c<e;c++)p[d+c]=1;return b}_getTileLocation(b,a,c,d=!1){const {firstPyramidLevel:f,blockBoundary:h}=this.rasterInfo.storageInfo;var e=0===b?0:b-(f-1);({_headerInfo:b}=this);if(!b)return null;d=d?b.maskIFDs[e]:0===e?b?.ifds[0]:b?.pyramidIFDs[e-1];if(!d)return null;var k=y.isBSQConfig(d,b);b=d.get("TILEOFFSETS")?.values;if(void 0===b)return null;const g=d.get("TILEBYTECOUNTS")?.values,{minRow:p,minCol:t,maxRow:w,maxCol:q}=h[e];if(a>w||c>q||a<p||c<t)return null;e=d.get("IMAGEWIDTH")?.values?.[0];
const v=d.get("IMAGELENGTH")?.values?.[0],l=d.get("TILEWIDTH")?.values?.[0],u=d.get("TILELENGTH")?.values?.[0],m=[];if(k){({bandCount:k}=this.rasterInfo);for(let r=0;r<k;r++){const n=r*(w+1)*(q+1)+a*(q+1)+c;m[r]={from:b[n],to:b[n]+g[n]-1}}}else k=a*(q+1)+c,m.push({from:b[k],to:b[k]+g[k]-1});for(b=0;b<m.length;b++)if(null==m[b].from||!m[b].to||0>m[b].to)return null;return{ranges:m,ifd:d,actualTileWidth:c===q?e%l||l:l,actualTileHeight:a===w?v%u||u:u}}async _fetchAuxiliaryMetaData(b){try{const {data:a}=
await this.request(this.url+".aux.xml",{responseType:"xml",signal:b?.signal});return I.parsePAMInfo(a)}catch{return null}}async _fetchAuxiliaryTable(b){try{const {data:a}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:b?.signal}),c=Q.parse(a);return c?.recordSet?T.fromJSON(c.recordSet):null}catch{return null}}};A.__decorate([F.property()],x.prototype,"_files",void 0);A.__decorate([F.property()],x.prototype,"_headerInfo",void 0);A.__decorate([F.property()],x.prototype,"_bufferSize",
void 0);A.__decorate([F.property({type:String,json:{write:!0}})],x.prototype,"datasetFormat",void 0);return x=A.__decorate([M.subclass("esri.layers.support.rasterDatasets.TIFFRaster")],x)});