// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ./BandArithmeticFunctionArguments ./bandIndexUtils ./BaseRasterFunction".split(" "),function(h,k,g,q,r,l,m,d,n){const p=new Set(["vari","mtvi2","rtvi-core","evi"]);g=class extends n{constructor(){super(...arguments);this.functionName="BandArithmetic";this.functionArguments=null;this.rasterArgumentNames=
["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");var b=this.sourceRasterInfos[0];if(2>b.bandCount)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};b=b.clone();b.pixelType=this.outputPixelType;b.bandCount="sultan"===this.functionArguments.method?3:1;this._removeStatsHistColormapVAT(b);b.keyProperties={...b.keyProperties,BandProperties:void 0};this.rasterInfo=b;return{success:!0,supportsGPU:!["custom",
"gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(b){b=b.pixelBlocks?.[0];if(null==b)return b;const {method:a,bandIndexes:e}=this.functionArguments,c=e.split(" ").map(f=>parseFloat(f));return d.calculateBandIndex(b,{method:a,bandIndexes:c,equation:e})}_getWebGLParameters(){const b=this.functionArguments.bandIndexes.split(" ").map(f=>parseFloat(f)-1);2===b.length&&b.push(0);var a=this.isInputBandIdsSwizzled?[0,1,2]:b;const e=new Float32Array(3);({method:c}=this.functionArguments);
switch(c){case "gndvi":case "nbr":case "ndbi":case "ndvi":case "ndvi-re":case "ndsi":case "ndmi":case "mndwi":a=d.getBandMatrix3([a[0],a[1],0]);var c="ndxi";break;case "ndwi":a=d.getBandMatrix3([a[1],a[0],0]);c="ndxi";break;case "sr":case "sr-re":case "iron-oxide":case "ferrous-minerals":case "clay-minerals":a=d.getBandMatrix3([a[0],a[1],0]);c="sr";break;case "ci-g":case "ci-re":a=d.getBandMatrix3([a[0],a[1],0]);c="ci";break;case "savi":a=d.getBandMatrix3([a[0],a[1],0]);c="savi";e[0]=b[2]+1;break;
case "tsavi":a=d.getBandMatrix3([a[0],a[1],0]);c="tsavi";e[0]=b[2]+1;e[1]=b[3]+1;e[2]=b[4]+1;break;case "msavi":a=d.getBandMatrix3([a[0],a[1],0]);c="msavi";break;case "gemi":a=d.getBandMatrix3([a[0],a[1],0]);c="gemi";break;case "pvi":a=d.getBandMatrix3([a[0],a[1],0]);c="tsavi";e[0]=b[2]+1;e[1]=b[3]+1;break;case "vari":a=d.getBandMatrix3([a[0],a[1],a[2]]);c="vari";break;case "mtvi2":a=d.getBandMatrix3([a[0],a[1],a[2]]);c="mtvi";break;case "rtvi-core":a=d.getBandMatrix3([a[0],a[1],a[2]]);c="rtvicore";
break;case "evi":a=d.getBandMatrix3([a[0],a[1],a[2]]);c="evi";break;case "wndwi":a=d.getBandMatrix3([a[0],a[1],0]);c="wndwi";e[0]=b[3]?b[3]+1:.5;break;case "bai":a=d.getBandMatrix3([a[1],a[0],0]);c="bai";break;default:a=d.getBandMatrix3([0,1,2]),c="custom"}return{bandIndexMat3:a,indexType:c,adjustments:e}}_getInputBandIds(b){if("custom"===this.functionArguments.method)return b;var a=this.functionArguments.bandIndexes.split(" ").map(f=>parseFloat(f)-1);const e=b.length;a=a.map(f=>f>=e?e-1:f);const c=
p.has(this.functionArguments.method)?3:2;a=a.slice(0,c).map(f=>b[f]);2===a.length&&a.push(0);return a}};h.__decorate([k.property({json:{write:!0,name:"rasterFunction"}})],g.prototype,"functionName",void 0);h.__decorate([k.property({type:m,json:{write:!0,name:"rasterFunctionArguments"}})],g.prototype,"functionArguments",void 0);h.__decorate([k.property()],g.prototype,"rasterArgumentNames",void 0);return g=h.__decorate([l.subclass("esri.layers.support.rasterFunctions.BandArithmeticFunction")],g)});