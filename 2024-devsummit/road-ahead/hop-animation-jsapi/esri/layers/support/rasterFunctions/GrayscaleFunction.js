// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ./BaseRasterFunction ./conversionUtils ./GrayscaleFunctionArguments".split(" "),function(d,e,c,n,p,g,h,k,l){c=class extends h{constructor(){super(...arguments);this.functionName="Grayscale";this.functionArguments=null;this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const {conversionParameters:a}=
this.functionArguments,b=a.reduce((f,m)=>f+m);return a.map(f=>f/b)}_bindSourceRasters(){var {conversionParameters:a}=this.functionArguments;if(!a?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const b=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(b.pixelType);b.pixelType=this.outputPixelType;a=3===a.length||3===b.bandCount&&3<a.length;b.bandCount=1;this._removeStatsHistColormapVAT(b);this.rasterInfo=b;return{success:!0,supportsGPU:a}}_processPixels(a){a=
a.pixelBlocks?.[0];return null==a?null:k.grayscale(a,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};d.__decorate([e.property({json:{write:!0,name:"rasterFunction"}})],c.prototype,"functionName",void 0);d.__decorate([e.property({type:l,json:{write:!0,name:"rasterFunctionArguments"}})],c.prototype,"functionArguments",void 0);d.__decorate([e.property()],c.prototype,"rasterArgumentNames",void 0);d.__decorate([e.property()],c.prototype,"_normalizedWeights",
null);return c=d.__decorate([g.subclass("esri.layers.support.rasterFunctions.GrayscaleFunction")],c)});