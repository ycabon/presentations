// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ./bandIndexUtils ./BaseRasterFunction ./NDVIFunctionArguments".split(" "),function(f,g,e,u,v,k,h,l,m){e=class extends l{constructor(){super(...arguments);this.functionName="NDVI";this.functionArguments=null;this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const {scientificOutput:b,visibleBandID:c,
infraredBandID:d}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(b?"f32":"u8");var a=this.sourceRasterInfos[0];const n=Math.max(c,d);if(2>a.bandCount||n>=a.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};a=a.clone();a.pixelType=this.outputPixelType;a.colormap=null;a.histograms=null;a.bandCount=1;a.keyProperties={...a.keyProperties,BandProperties:void 0};const [p,q,r,t]=b?[-1,1,0,.1]:[0,200,100,10];a.statistics=
[{min:p,max:q,avg:r,stddev:t}];this.rasterInfo=a;return{success:!0,supportsGPU:!0}}_processPixels(b){b=b.pixelBlocks?.[0];if(null==b)return null;const {visibleBandID:c,infraredBandID:d,scientificOutput:a}=this.functionArguments;return h.calculateNDVI(b,c,d,!a)}_getWebGLParameters(){const {visibleBandID:b,infraredBandID:c,scientificOutput:d}=this.functionArguments;return{bandIndexMat3:h.getBandMatrix3(this.isInputBandIdsSwizzled?[0,1,2]:[c,b,0]),scaled:!d}}_getInputBandIds(b){const {visibleBandID:c,
infraredBandID:d}=this.functionArguments;return[d,c,0].map(a=>b[a])}};f.__decorate([g.property({json:{write:!0,name:"rasterFunction"}})],e.prototype,"functionName",void 0);f.__decorate([g.property({type:m,json:{write:!0,name:"rasterFunctionArguments"}})],e.prototype,"functionArguments",void 0);f.__decorate([g.property()],e.prototype,"rasterArgumentNames",void 0);return e=f.__decorate([k.subclass("esri.layers.support.rasterFunctions.NDVIFunction")],e)});