// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../core/jsonMap ../../../core/lang ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/accessorSupport/decorators/enumeration ../../../core/accessorSupport/decorators/subclass ../../../core/accessorSupport/decorators/writer ./BaseFunctionArguments".split(" "),function(b,f,g,c,q,r,k,l,m,a){var h;f=new f.JSONMap({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},
{useNumericKeys:!0});a=h=class extends a{constructor(){super(...arguments);this.dynamicRangeAdjustment=this.computeGamma=!1;this.gamma=[];this.statistics=this.histograms=null;this.stretchType="none";this.useGamma=!1}writeStatistics(d,n,p){d?.length&&(Array.isArray(d[0])||(d=d.map(e=>[e.min,e.max,e.avg,e.stddev])),n[p]=d)}clone(){return new h({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:g.clone(this.statistics),
gamma:g.clone(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:g.clone(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};b.__decorate([c.property({type:Boolean,json:{write:!0}})],a.prototype,"computeGamma",void 0);b.__decorate([c.property({type:Boolean,json:{name:"dra",write:!0}})],a.prototype,"dynamicRangeAdjustment",void 0);
b.__decorate([c.property({type:[Number],json:{write:!0}})],a.prototype,"gamma",void 0);b.__decorate([c.property()],a.prototype,"histograms",void 0);b.__decorate([c.property({type:Number,json:{write:!0}})],a.prototype,"maxPercent",void 0);b.__decorate([c.property({type:Number,json:{write:!0}})],a.prototype,"minPercent",void 0);b.__decorate([c.property({type:Number,json:{write:!0}})],a.prototype,"numberOfStandardDeviations",void 0);b.__decorate([c.property({type:Number,json:{name:"max",write:!0}})],
a.prototype,"outputMax",void 0);b.__decorate([c.property({type:Number,json:{name:"min",write:!0}})],a.prototype,"outputMin",void 0);b.__decorate([c.property({type:Number,json:{write:!0}})],a.prototype,"sigmoidStrengthLevel",void 0);b.__decorate([c.property({json:{type:[[Number]],write:!0}})],a.prototype,"statistics",void 0);b.__decorate([m.writer("statistics")],a.prototype,"writeStatistics",null);b.__decorate([k.enumeration(f)],a.prototype,"stretchType",void 0);b.__decorate([c.property({type:Boolean,
json:{write:!0}})],a.prototype,"useGamma",void 0);return a=h=b.__decorate([l.subclass("esri.layers.support.rasterFunctions.StretchFunctionArguments")],a)});