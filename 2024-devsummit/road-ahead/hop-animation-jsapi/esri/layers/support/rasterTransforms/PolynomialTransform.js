// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../geometry ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/enumeration ../../../core/accessorSupport/decorators/reader ../../../core/accessorSupport/decorators/subclass ../../../core/accessorSupport/decorators/writer ./BaseRasterTransform ../../../geometry/Point ../../../geometry/Extent".split(" "),function(m,k,q,C,D,E,y,u,z,v,A,w,B){function r(a,b,e){const {x:c,
y:d}=b;if(2>e)return{x:a[0]+c*a[2]+d*a[4],y:a[1]+c*a[3]+d*a[5]};if(2===e){b=c*c;e=d*d;var f=c*d;return{x:a[0]+c*a[2]+d*a[4]+b*a[6]+f*a[8]+e*a[10],y:a[1]+c*a[3]+d*a[5]+b*a[7]+f*a[9]+e*a[11]}}b=c*c;e=d*d;f=c*d;const g=b*c,n=b*d,h=c*e,l=d*e;return{x:a[0]+c*a[2]+d*a[4]+b*a[6]+f*a[8]+e*a[10]+g*a[12]+n*a[14]+h*a[16]+l*a[18],y:a[1]+c*a[3]+d*a[5]+b*a[7]+f*a[9]+e*a[11]+g*a[13]+n*a[15]+h*a[17]+l*a[19]}}function x(a,b,e){const {xmin:c,ymin:d,xmax:f,ymax:g,spatialReference:n}=b;b=[];if(2>e)b.push({x:c,y:g}),
b.push({x:f,y:g}),b.push({x:c,y:d}),b.push({x:f,y:d});else{var h=10;for(var l=0;l<h;l++)b.push({x:c,y:d+(g-d)*l/(h-1)}),b.push({x:f,y:d+(g-d)*l/(h-1)});h=8;for(l=1;l<=h;l++)b.push({x:c+(f-c)*l/h,y:d}),b.push({x:c+(f-c)*l/h,y:g})}b=b.map(p=>r(a,p,e));h=b.map(p=>p.x);b=b.map(p=>p.y);return new B({xmin:Math.min.apply(null,h),xmax:Math.max.apply(null,h),ymin:Math.min.apply(null,b),ymax:Math.max.apply(null,b),spatialReference:n})}var t;k=t=class extends A{constructor(){super(...arguments);this.polynomialOrder=
1;this.type="polynomial"}readForwardCoefficients(a,b){const {coeffX:e,coeffY:c}=b;if(!e?.length||!c?.length||e.length!==c.length)return null;a=[];for(b=0;b<e.length;b++)a.push(e[b]),a.push(c[b]);return a}writeForwardCoefficients(a,b,e){e=[];const c=[];for(let d=0;d<a?.length;d++)0===d%2?e.push(a[d]):c.push(a[d]);b.coeffX=e;b.coeffY=c}get inverseCoefficients(){var a=this._get("inverseCoefficients"),b=this._get("forwardCoefficients");if(!a&&b&&2>this.polynomialOrder){const [e,c,d,f,g,n]=b;a=d*n-g*f;
b=g*f-d*n;a=[(g*c-e*n)/a,(d*c-e*f)/b,n/a,f/b,-g/a,-d/b]}return a}set inverseCoefficients(a){this._set("inverseCoefficients",a)}readInverseCoefficients(a,b){const {inverseCoeffX:e,inverseCoeffY:c}=b;if(!e?.length||!c?.length||e.length!==c.length)return null;a=[];for(b=0;b<e.length;b++)a.push(e[b]),a.push(c[b]);return a}writeInverseCoefficients(a,b,e){e=[];const c=[];for(let d=0;d<a?.length;d++)0===d%2?e.push(a[d]):c.push(a[d]);b.inverseCoeffX=e;b.inverseCoeffY=c}get affectsPixelSize(){return 0<this.polynomialOrder}forwardTransform(a){if("point"===
a.type){const b=r(this.forwardCoefficients,a,this.polynomialOrder);return new w({x:b.x,y:b.y,spatialReference:a.spatialReference})}return x(this.forwardCoefficients,a,this.polynomialOrder)}inverseTransform(a){if("point"===a.type){const b=r(this.inverseCoefficients,a,this.polynomialOrder);return new w({x:b.x,y:b.y,spatialReference:a.spatialReference})}return x(this.inverseCoefficients,a,this.polynomialOrder)}clone(){return new t({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?
[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};m.__decorate([q.property({json:{write:!0}})],k.prototype,"polynomialOrder",void 0);m.__decorate([q.property()],k.prototype,"forwardCoefficients",void 0);m.__decorate([u.reader("forwardCoefficients",["coeffX","coeffY"])],k.prototype,"readForwardCoefficients",null);m.__decorate([v.writer("forwardCoefficients")],k.prototype,"writeForwardCoefficients",null);m.__decorate([q.property({json:{write:!0}})],
k.prototype,"inverseCoefficients",null);m.__decorate([u.reader("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],k.prototype,"readInverseCoefficients",null);m.__decorate([v.writer("inverseCoefficients")],k.prototype,"writeInverseCoefficients",null);m.__decorate([q.property()],k.prototype,"affectsPixelSize",null);m.__decorate([y.enumeration({PolynomialXform:"polynomial"})],k.prototype,"type",void 0);return k=t=m.__decorate([z.subclass("esri.layers.support.rasterTransforms.PolynomialTransform")],
k)});