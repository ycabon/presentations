// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../geometry ../request ../geometry/support/normalizeUtils ../geometry/support/spatialReferenceUtils ./utils ./support/FindImagesResult ./support/ImageAngleResult ./support/ImageAreaResult ./support/ImageBoundaryResult ./support/ImageDistanceResult ./support/ImageGPSInfoResult ./support/ImageHeightResult ./support/ImageIdentifyResult ./support/ImagePixelLocationResult ./support/ImagePointResult ./support/ImageSampleResult ./support/ImageUrlResult ./support/MeasureAreaFromImageResult ./support/MeasureLengthFromImageResult ../geometry/SpatialReference ../geometry/support/jsonUtils".split(" "),
function(g,N,h,m,x,e,y,z,A,B,C,D,E,F,G,H,I,J,K,L,u,r){function t(b){const a=b?.time;if(a&&(null!=a.start||null!=a.end)){const c=[];null!=a.start&&c.push(a.start);null==a.end||c.includes(a.end)||c.push(a.end);b.time=c.join(",")}}async function v(b,a,c){b=e.parseUrl(b);var d=await m.normalizeCentralMeridian(a.geometry?[a.geometry]:[]);a=a.toJSON();t(a);d=d?.[0];null!=d&&(a.geometry=k(d));b=e.encode({...b.query,f:"json",...a});return e.asValidOptions(b,c)}async function q(b,a,c,d){b=e.parseUrl(b);c=
await m.normalizeCentralMeridian(c);a=a.toJSON();null!=c[0]&&(a.fromGeometry=JSON.stringify(k(c[0])));null!=c[1]&&(a.toGeometry=JSON.stringify(k(c[1])));a=e.encode({...b.query,f:"json",...a});d=e.asValidOptions(a,d);({data:d}=await h(b.path+"/measure",d));return d}async function w(b,a,c){b=e.parseUrl(b);a=a.toJSON();a=e.encode({...b.query,f:"json",...a});c=e.asValidOptions(a,c);({data:c}=await h(b.path+"/measureFromImage",c));return c}function k(b){const a=b.toJSON();b.spatialReference?.imageCoordinateSystem&&
(a.spatialReference=p(b.spatialReference));return a}function p(b){const {imageCoordinateSystem:a}=b;if(a){const {id:c,referenceServiceName:d}=a;return null!=c?d?{icsid:c,icsns:d}:{icsid:c}:{ics:a}}return b.toJSON()}function n(b,a){if(!b.imageCoordinateSystem)return x.srToRESTValue(b);b=p(b);const {icsid:c,icsns:d}=b;return null==c||null!=d&&!a?.toLowerCase().includes("/"+d.toLowerCase()+"/")?JSON.stringify(b):`0:${c}`}g.computeAngles=async function(b,a,c){var d=a.toJSON();null!=d.angleName&&(d.angleName=
d.angleName.join(","));a?.point?.spatialReference?.imageCoordinateSystem&&(d.point.spatialReference=p(a.point.spatialReference));a?.spatialReference?.imageCoordinateSystem&&(d.spatialReference=n(a.spatialReference));b=e.parseUrl(b);d=e.encode({...b.query,f:"json",...d});c=e.asValidOptions(d,c);({data:c}=await h(`${b.path}/computeAngles`,c));c.spatialReference=c.spatialReference?null!=c.spatialReference.geodataXform?new u({wkid:0,imageCoordinateSystem:c.spatialReference}):u.fromJSON(c.spatialReference):
null;"NaN"===c.north&&(c.north=null);"NaN"===c.up&&(c.up=null);return new z(c)};g.computeHistograms=async function(b,a,c){a=await v(b,a,c);b=e.parseUrl(b);({data:b}=await h(`${b.path}/computeHistograms`,a));return{histograms:b.histograms}};g.computePixelSpaceLocations=async function(b,a,c){var d=a.toJSON();({geometries:a}=a);if(a)for(let f=0;f<a.length;f++)a[f].spatialReference?.imageCoordinateSystem&&(d.geometries.geometries[f].spatialReference=p(a[f].spatialReference));b=e.parseUrl(b);d=e.encode({...b.query,
f:"json",...d});c=e.asValidOptions(d,c);({data:c}=await h(`${b.path}/computePixelLocation`,c));return G.fromJSON(c)};g.computeStatisticsHistograms=async function(b,a,c){a=await v(b,a,c);b=e.parseUrl(b);({data:b}=await h(`${b.path}/computeStatisticsHistograms`,a));({statistics:a}=b);a?.length&&a.forEach(d=>{d.avg=d.mean;d.stddev=d.standardDeviation});return{statistics:a,histograms:b.histograms}};g.findImages=async function(b,a,c){var d=a.toJSON();const f=await m.normalizeCentralMeridian([a.fromGeometry,
a.toGeometry]);null!=f[0]&&(d.fromGeometry=k(f[0]),f[0].spatialReference&&(d.inSR=n(f[0].spatialReference)));null!=f[1]&&(d.toGeometry=k(f[1]));a.objectIds?.length&&(d.objectIds=d.objectIds.join(","));b=e.parseUrl(b);d=e.encode({...b.query,f:"json",...d});c=e.asValidOptions(d,c);({data:c}=await h(`${b.path}/find`,c));return y.fromJSON(c)};g.getImageSpatialReferenceJSON=p;g.getImageSpatialReferenceQueryParameter=n;g.getImageUrl=async function(b,a,c){a=a.toJSON();b=e.parseUrl(b);a=e.encode({...b.query,
f:"json",...a});c=e.asValidOptions(a,c);({data:c}=await h(`${b.path}/getImageUrl`,c));return J.fromJSON(c)};g.getSamples=async function(b,a,c){var d=a.toJSON();t(d);d.outFields?.length&&(d.outFields=d.outFields.join(","));a=(await m.normalizeCentralMeridian(a.geometry))?.[0];null!=a&&(d.geometry=k(a));b=e.parseUrl(b);d=e.encode({...b.query,f:"json",...d});c=e.asValidOptions(d,c);({data:c}=await h(`${b.path}/getSamples`,c));c=c?.samples?.map(f=>{const l="NaN"===f.value||""===f.value?null:f.value.split(" ").map(M=>
Number(M));return{...f,pixelValue:l}});return I.fromJSON({samples:c})};g.identify=async function(b,a,c){const d=e.parseUrl(b);return m.normalizeCentralMeridian(a.geometry?[a.geometry]:[]).then(f=>{var l=a.toJSON();f=f?.[0];null!=f&&(l.geometry=JSON.stringify(k(f)));l=e.encode({...d.query,f:"json",...l});l=e.asValidOptions(l,c);return h(d.path+"/identify",l)}).then(f=>F.fromJSON(f.data))};g.imageToMap=async function(b,a,c){var d=a.toJSON();a.geometry.spatialReference.imageCoordinateSystem&&(d.geometry=
k(a.geometry));a.depthOffset&&a.adjust||delete d.options;b=e.parseUrl(b);d=e.encode({...b.query,f:"json",...d});c=e.asValidOptions(d,c);({data:c}=await h(`${b.path}/imageToMap`,c));return r.fromJSON(c)};g.imageToMapMultiray=async function(b,a,c){var d=a.toJSON();a.rasterIds?.length&&(d.rasterIds=a.rasterIds.join(","));b=e.parseUrl(b);d=e.encode({...b.query,f:"json",...d});c=e.asValidOptions(d,c);({data:c}=await h(`${b.path}/imageToMapMultiray`,c));return r.fromJSON(c)};g.mapToImage=async function(b,
a,c){var d=a.toJSON();const f=(await m.normalizeCentralMeridian(a.geometry))?.[0];null!=f&&(d.geometry=k(f));a.visibleOnly||delete d.options;if(a=f?.spatialReference??a.geometry?.spatialReference)d.inSR=n(a);b=e.parseUrl(b);d=e.encode({...b.query,f:"json",...d});c=e.asValidOptions(d,c);({data:c}=await h(`${b.path}/mapToImage`,c));return r.fromJSON(c)};g.measureAreaAndPerimeter=async function(b,a,c){b=await q(b,a,[a.geometry],c);return A.fromJSON(b)};g.measureAreaFromImage=async function(b,a,c){b=
await w(b,a,c);return K.fromJSON(b)};g.measureDistanceAndAngle=async function(b,a,c){b=await q(b,a,[a.fromGeometry,a.toGeometry],c);return C.fromJSON(b)};g.measureHeight=async function(b,a,c){b=await q(b,a,[a.fromGeometry,a.toGeometry],c);return E.fromJSON(b)};g.measureLengthFromImage=async function(b,a,c){b=await w(b,a,c);return L.fromJSON(b)};g.measurePointOrCentroid=async function(b,a,c){b=await q(b,a,[a.geometry],c);return H.fromJSON(b)};g.queryBoundary=async function(b,a,c){b=e.parseUrl(b);const d=
a.toJSON();a.outSpatialReference&&(d.outSR=n(a.outSpatialReference));a=e.encode({...b.query,f:"json",...d});c=e.asValidOptions(a,c);({data:c}=await h(b.path+"/queryBoundary",c));return B.fromJSON(c)};g.queryGPSInfo=async function(b,a,c){var d=a.toJSON();t(d);d.objectIds?.length&&(d.objectIds=d.objectIds.join(","));d.geometry||d.objectIds||d.time||d.where||(d.where="1\x3d1");const f=(await m.normalizeCentralMeridian(a.geometry))?.[0];null!=f&&(d.geometry=k(f));if(a=f?.spatialReference??a.geometry?.spatialReference)d.inSR=
n(a);b=e.parseUrl(b);d=e.encode({...b.query,f:"json",...d});c=e.asValidOptions(d,c);({data:c}=await h(`${b.path}/queryGPSInfo`,c));return D.fromJSON(c)};Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});