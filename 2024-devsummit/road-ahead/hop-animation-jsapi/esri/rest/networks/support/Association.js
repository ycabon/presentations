// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../geometry ../../../core/JSONSupport ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/reader ../../../core/accessorSupport/decorators/subclass ../../../core/accessorSupport/decorators/writer ./NetworkElement ../../../geometry/Polyline".split(" "),function(c,b,k,e,n,p,q,g,l,h,f,m){b=class extends k.JSONSupport{constructor(a){super(a);this.status=this.isContentVisible=
this.errorCode=this.percentAlong=this.errorMessage=this.geometry=this.toNetworkElement=this.fromNetworkElement=this.associationType=this.globalId=null}readFromNetworkElement(a,d){a=new f;a.globalId=d.fromGlobalId;a.networkSourceId=d.fromNetworkSourceId;a.terminalId=d.fromTerminalId;return a}writeFromNetworkElement(a,d){a&&(d.fromGlobalId=a.globalId,d.fromNetworkSourceId=a.networkSourceId,d.fromTerminalId=a.terminalId)}readToNetworkElement(a,d){a=new f;a.globalId=d.toGlobalId;a.networkSourceId=d.toNetworkSourceId;
a.terminalId=d.toTerminalId;return a}writeToNetworkElement(a,d){a&&(d.toGlobalId=a.globalId,d.toNetworkSourceId=a.networkSourceId,d.toTerminalId=a.terminalId)}};c.__decorate([e.property({type:String,json:{write:!0}})],b.prototype,"globalId",void 0);c.__decorate([e.property({type:["attachment","connectivity","containment"],json:{write:!0}})],b.prototype,"associationType",void 0);c.__decorate([e.property({type:f,json:{write:{target:{fromGlobalId:{type:String},fromNetworkSourceId:{type:Number},fromTerminalId:{type:Number}}},
read:{source:["fromGlobalId","fromNetworkSourceId","fromTerminalId"]}}})],b.prototype,"fromNetworkElement",void 0);c.__decorate([g.reader("fromNetworkElement")],b.prototype,"readFromNetworkElement",null);c.__decorate([h.writer("fromNetworkElement")],b.prototype,"writeFromNetworkElement",null);c.__decorate([e.property({type:f,json:{write:{target:{toGlobalId:{type:String},toNetworkSourceId:{type:Number},toTerminalId:{type:Number}}},read:{source:["toGlobalId","toNetworkSourceId","toTerminalId"]}}})],
b.prototype,"toNetworkElement",void 0);c.__decorate([g.reader("toNetworkElement")],b.prototype,"readToNetworkElement",null);c.__decorate([h.writer("toNetworkElement")],b.prototype,"writeToNetworkElement",null);c.__decorate([e.property({type:m,json:{write:!0}})],b.prototype,"geometry",void 0);c.__decorate([e.property({type:String,json:{write:!0}})],b.prototype,"errorMessage",void 0);c.__decorate([e.property({type:Number,json:{write:!0}})],b.prototype,"percentAlong",void 0);c.__decorate([e.property({type:Number,
json:{write:!0}})],b.prototype,"errorCode",void 0);c.__decorate([e.property({type:Boolean,json:{write:!0}})],b.prototype,"isContentVisible",void 0);c.__decorate([e.property({type:Number,json:{write:!0}})],b.prototype,"status",void 0);return b=c.__decorate([l.subclass("esri.rest.networks.support.Association")],b)});