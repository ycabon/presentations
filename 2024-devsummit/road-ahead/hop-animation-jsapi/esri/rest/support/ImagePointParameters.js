// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../chunks/tslib.es6 ../../geometry ../../core/lang ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/accessorSupport/decorators/subclass ../../core/accessorSupport/decorators/writer ../../geometry/support/jsonUtils ./BaseImageMeasureParameters".split(" "),function(c,k,l,f,a,q,m,n,h,d){var g;a=g=class extends d.BaseImageMeasureParameters{constructor(){super(...arguments);this.type="point";this.geometry=null;this.is3D=!1}writeGeometry(b,e,p){null!=
b&&(e.geometryType=h.getJsonType(b),e[p]=b.toJSON())}get measureOperation(){const {is3D:b,geometry:e}=this;return"point"===e.type?b?"point-3D":"point":b?"centroid-3D":"centroid"}clone(){return new g(l.clone({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};c.__decorate([f.property({types:k.geometryTypes,json:{name:"fromGeometry",read:h.fromJSON}})],a.prototype,"geometry",void 0);c.__decorate([n.writer("geometry")],a.prototype,"writeGeometry",
null);c.__decorate([f.property({type:d.measureOperationJSONMap.apiValues,json:{read:d.measureOperationJSONMap.read,write:d.measureOperationJSONMap.write}})],a.prototype,"measureOperation",null);c.__decorate([f.property({json:{read:!0}})],a.prototype,"is3D",void 0);return a=g=c.__decorate([m.subclass("esri.rest.support.ImagePointParameters")],a)});