// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../intl ../../core/Error ./support/utils ../support/binningUtils ../../intl/messages".split(" "),function(m,u,e,f,n,q){async function r(a){const {layer:b,renderer:c}=a;await b.load();if("binning"!==b.featureReduction?.type)throw new e("bins-label-schemes:invalid-parameters","featureReduction type of the layer is not valid");a=c||b.featureReduction.renderer;if(!a)throw new e("bins-label-schemes:invalid-parameters","'renderer' is not valid");return{layer:b,renderer:a}}async function g(a,
b,c,h){const d=f.getAggregateFieldInfo(a,b);if(!d)return null;b=f.createLabelExpressionForAggregateField(b,c,d,h);b=f.createLabelClass(b,!0);return{name:`binning-${a}`,labelingInfo:[b],fieldName:a}}function t(a){let b=[];a=a.featureReduction;"fields"in a&&(b=a.fields.map(c=>c.name));return b}m.getLabelSchemes=async function(a){const [{renderer:b,layer:c},h]=await Promise.all([r(a),q.fetchMessageBundle("esri/smartMapping/t9n/smartMapping")]);var d=h.clusters.predominantNoneValue;if(a.field){d=await g(a.field,
c,b,d);if(!d)throw new e("bins-label-schemes:invalid-parameters","'field' is not a valid aggregate field");return{primaryScheme:d,secondarySchemes:[]}}a=await g(n.aggregateCountField,c);const p=[];var l=t(c).filter(k=>k.toLowerCase()!==n.aggregateCountField.toLowerCase());for(const k of l)(l=await g(k,c,b,d))&&p.push(l);return{primaryScheme:a,secondarySchemes:p}};Object.defineProperty(m,Symbol.toStringTag,{value:"Module"})});