// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../../chunks/tslib.es6 ../../../../core/Error ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../geometry/Extent ../../../../layers/support/rasterFunctions/stretchUtils ./RasterLayerAdapter".split(" "),function(n,p,q,h,w,x,r,t,u,v){h=class extends v{async generateRasterInfo(a){const {layer:b}=this,f=a?.rasterFunction;if("imagery-tile"===b.type&&f)try{return b.generateRasterInfo(f,
{signal:a?.signal})}catch{return b.serviceRasterInfo}return this.rasterInfo}async estimateStatisticsHistograms(a){const {layer:b}=this,f=`${b.rasterFunction?.functionName??"default"}${b.multidimensionalDefinition?.[0]?.variableName??""}`;var g=this._statsCache.get(f);if(g)return g;({raster:g}=b);const {extent:c,width:d,height:e}=this._getSamplePixelBlockDescriptor(g.rasterInfo);({pixelBlock:a}=await b.fetchPixels(c,d,e,a));if(null==a)throw new p("raster-layer-adapter","Unable to estimate histograms");
(a=u.estimateStatisticsHistograms(a))&&this._statsCache.put(f,a);return a}supportsMultidirectionalHillshade(){return!0}load(a){this.addResolvingPromise(this.layer.load(a).then(()=>this.rasterInfo=this.layer.raster.rasterInfo));return Promise.resolve(this)}_getSamplePixelBlockDescriptor(a,b=1E3){const {pyramidScalingFactor:f,maximumPyramidLevel:g}=a.storageInfo;let {extent:c,width:d,height:e,pixelSize:k}=a,m=Math.ceil(Math.log(Math.max(d,e)/b)/Math.log(f))-1,l=a=0;m<=g?(b=f**m,d=Math.floor(d/b),e=
Math.floor(e/b)):(m=0,d=Math.min(d,b),e=Math.min(e,b),a=Math.max(Math.floor(d/2-500),0),l=Math.max(Math.floor(e/2-500),0),c=new t({xmin:c.xmin+a*k.x,xmax:Math.min(c.xmax,c.xmin+a*k.x*b),ymin:c.ymin+l*k.y,ymax:Math.min(c.ymax,c.ymin+l*k.y*b)}));return{extent:c,width:d,height:e,origin:{x:a,y:l}}}};n.__decorate([q.property()],h.prototype,"layer",void 0);return h=n.__decorate([r.subclass("esri.smartMapping.support.adapters.ImageryTileLayerAdapter")],h)});