// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports","../../../Color","../../../renderers/support/colorRampUtils","../../../rest/support/AlgorithmicColorRamp","../../../rest/support/MultipartColorRamp"],function(f,g,e,h,l){function k(a){const {fromColor:b,toColor:d,colorRamps:c}=a;a=c?c.map(m=>new g(m.fromColor)):[new g(b)];a.push(c?new g(c[c.length-1].toColor):new g(d));return a}f.convertColorRampToColormap=e.convertColorRampToColormap;f.all=function(){return e.predefinedJsonColorRamps.filter(a=>"white-to-black"!==a.id).map(a=>{const b=
e.colorRampDict.toJSON(a.id);a=k(a);return{name:b,colors:a}})};f.byName=function(a){const b=e.colorRampDict.fromJSON(a);var d=e.predefinedJsonColorRamps.filter(c=>"white-to-black"!==c.id).find(c=>c.id===b);return d?(d=k(d),{name:a,colors:d}):null};f.convertColorRampToRasterFunctionArgument=function(a){return e.getRFxArgColorRampValue(a)};f.createColorRamp=function(a){const {colors:b,algorithm:d="cie-lab"}=a;if(2>b.length)return null;if(2===b.length)return new h({algorithm:d,fromColor:b[0],toColor:b[1]});
a=[];for(let c=0;c<b.length-1;c++)a?.push(new h({algorithm:d,fromColor:b[c],toColor:b[c+1]}));return new l({colorRamps:a})};f.getColorRampName=function(a){a=e.getColorRampId(a);if(!a)return null;"white-to-black"===a.id&&(a.id="black-to-white",a.inverted=!a.inverted);const {id:b,inverted:d}=a;return{name:e.colorRampDict.toJSON(b),inverted:d}};f.names=function(){return e.colorRampDict.jsonValues.filter(a=>"White to Black"!==a)};Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});