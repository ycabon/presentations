// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../core/Error ../../layers/support/fieldUtils ../../renderers/support/heatmapUtils ./support/utils ../support/utils ../support/adapters/support/layerUtils".split(" "),function(f,k,l,g,m,c){async function n(a){if(!a?.layer||!a.view)throw new f("heatmap-statistics:missing-parameters","'layer' and 'view' parameters are required");var b=[c.LayerType.CSVLayer,c.LayerType.FeatureLayer,c.LayerType.GeoJSONLayer,c.LayerType.OGCFeatureLayer,c.LayerType.OrientedImageryLayer,c.LayerType.WFSLayer];
const {layer:e,...p}=a;a=c.createLayerAdapter(e,b);if(!a)throw new f("heatmap-statistics:invalid-parameters","'layer' must be one of these types: "+c.getLayerTypeLabels(b).join(", "));b={layerAdapter:a,...p};b.radius=null==b.radius?null==b.blurRadius?18:l.gaussianBlurRadiusPxToKernelDensityRadiusPt(b.blurRadius):b.radius;await a.load(null!=b.signal?{signal:b.signal}:null);var d=b.field;const h=d?a.getField(d):null;d=await m.getFieldsList({field:d});if(d=g.verifyBasicFieldValidity(a,d,"heatmap-statistics:invalid-parameters"))throw d;
if(h&&(a=g.verifyFieldType(a,h,"heatmap-statistics:invalid-parameters",q)))throw a;return b}const q=k.numericTypes;return async function(a){const {layerAdapter:b,...e}=await n(a);return b.heatmapStatistics(e)}});