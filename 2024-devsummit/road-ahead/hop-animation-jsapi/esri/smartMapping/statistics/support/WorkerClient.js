// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Error","../../../core/workers/workers"],function(e,c,f){class d{constructor(){this.connection=null}async open(a){this.connection=await f.open("statsWorker",{strategy:"distributed",signal:a})}destroy(){this.connection?.close()}static getInstance(){d.instance||(d.instance=new d);return d.instance}async summaryStatistics(a,b){if(!this.connection)throw new c("worker-client:summary-statistics","connection is required");return this.connection.invoke("summaryStatistics",
{attribute:a,features:b})}async uniqueValues(a,b){if(!this.connection)throw new c("worker-client:unique-values","connection is required");return this.connection.invoke("uniqueValues",{attribute:a,features:b})}async classBreaks(a,b){if(!this.connection)throw new c("worker-client:class-breaks","connection is required");return this.connection.invoke("classBreaks",{attribute:a,features:b})}async histogram(a,b){if(!this.connection)throw new c("worker-client:histogram","connection is required");return this.connection.invoke("histogram",
{attribute:a,features:b})}async heatmapStatistics(a,b){if(!this.connection)throw new c("worker-client:heatmap-statistics","connection is required");return this.connection.invoke("heatmapStatistics",{attribute:a,features:b})}}e.WorkerClient=d;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});