// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/arrayUtils ../../../../core/promiseUtils ../../../../layers/support/CodedValue ../../../../core/has ../../../../layers/support/CodedValueDomain ../../../../layers/support/Domain ../../../../layers/support/InheritedDomain ../../../../layers/support/RangeDomain ../../../../layers/support/Field ../../../../layers/support/fieldUtils ../../../../rest/support/StatisticDefinition ../../../statistics/support/predominanceUtils ../../../statistics/support/utils ../../utils ../../../../statistics/utils".split(" "),
function(k,O,P,Q,Y,R,Z,aa,ba,S,G,H,T,w,x,y){function C(a){const {field:b,normalizationType:c,normalizationField:d,normalizationTotal:e,layer:f}=a;a=x.isIntegerField(f,b);let l=b;"percent-of-total"===c?l=`((${a?x.castIntegerFieldToFloat(b):b} / ${e}) * 100)`:"log"===c?l=`(log(${b}) * ${U})`:"field"===c?l=`(${a?x.castIntegerFieldToFloat(b):b} / ${d})`:"natural-log"===c?l=`(log(${a?x.castIntegerFieldToFloat(b):b}))`:"square-root"===c&&(l=`(power(${a?x.castIntegerFieldToFloat(b):b}, 0.5))`);return l}
function I(a,b){let c;b=b.toLowerCase();if(a)for(const d in a)if(d.toLowerCase()!==b){c=a[d];break}return c}function z(a,b){let c;b=b.toLowerCase();if(a)for(const d in a)if(d.toLowerCase()===b){c=a[d];break}return c}function D(a,b){if(b)for(const c in a)a[c].label=b[c];return{count:a}}async function E(a,b,c){var d=a?c.getField(a):null;if(d=d?c.getFieldDomain(d.name):null)return d;({uniqueValueInfos:a}=await c.uniqueValues({field:a,sqlWhere:b.sqlWhere,features:b.features,useFeaturesInView:b.useFeaturesInView,
view:b.view,signal:b.signal}));a=a.map(e=>new Q.CodedValue({code:e.value}));return new R({codedValues:a})}function J(a,b){return x.getDateDiffSQL(a,new Date(0),b,"milliseconds").sqlExpression}function K(a){return a?x.castIntegerFieldToFloat(["HOUR","MINUTE","SECOND"].map(b=>`(${`EXTRACT(${b} FROM ${a}) * ${V[b]}`})`).join(" + ")):null}function L(a,b){switch(a.statisticType){case "avg":case "avg_angle":return"double";case "count":return"integer";case "min":case "max":case "sum":return a.onStatisticField?
b.get(a.onStatisticField)?.type??null:a.onStatisticExpression?"string"===a.onStatisticExpression.returnType?null:"double":null;case "mode":return a.onStatisticField?b.get(a.onStatisticField)?.type??null:a.onStatisticExpression?"string"===a.onStatisticExpression.returnType?"string":"double":null;default:return null}}function M(a,b){return x.isAnyDateField(b)?J(a,b?.name):G.isTimeOnlyField(b)?K(b?.name):null}function F(a,b){b&&(a.geometry=b.geometry,a.spatialRelationship=b.spatialRelationship)}function W(a,
b,c,d,e,f,l){const m=[],g=b.length;for(let n=0;n<g;n++){const t=w.mergeWhereClauses(d,w.mergeWhereClauses(c+" \x3e\x3d "+b[n][0],null!==b[n][1]?c+(n===g-1?" \x3c\x3d ":" \x3c ")+b[n][1]:""));m.push(t)}return Promise.allSettled(m.map(n=>a.queryFeatureCount({whereClause:n,view:e,filter:f,signal:l})))}const X=/_value$/i,U=Math.LOG10E,V={SECOND:1E3,MINUTE:6E4,HOUR:36E5};k.defaultNumBins=10;k.ensureFeaturesJSON=function(a){return a.map(b=>b.toJSON())};k.generateBinParams=function(a){const b=[],c=a.classBreaks,
d=c[0].minValue,e=c[c.length-1].maxValue;c.forEach(f=>{b.push([f.minValue,f.maxValue])});return{min:d,max:e,intervals:b,sqlExpr:C({field:a.field,normalizationType:a.normalizationType,normalizationField:a.normalizationField,normalizationTotal:a.normalizationTotal,layer:a.layer}),excludeZerosExpr:a.where,normTotal:a.normalizationTotal}};k.getAggregateFieldType=L;k.getBins=function(a,b,c,d=10,e,f,l){const {min:m,max:g,normTotal:n,excludeZerosExpr:t}=b,p=b.intervals||y.getEqualIntervalBins(m,g,d);return W(a,
p,b.sqlExpr||c,t,e,f,l).then(r=>({bins:r.map((u,q)=>({minValue:p[q][0],maxValue:p[q][1],count:"fulfilled"===u.status?u.value:0})),minValue:m,maxValue:g,normalizationTotal:n}))};k.getDomainsForFields=async function(a,b){if(!a.returnAllCodedValues)return[];const {field:c,field2:d,field3:e}=a;if(c&&!d)return(b=(a=c?b.getField(c):null)?b.getFieldDomain(a.name):null)?[b]:[];const f=[];c&&(f.push(E(c,a,b)),d&&(f.push(E(d,a,b)),e&&f.push(E(e,a,b))));return Promise.all(f)};k.getFeatureReductionFields=function(a){const b=
"featureReduction"in a?a.featureReduction:null;return((null!=b&&"fields"in b?b.fields:null)??[]).map(c=>{const d=L(c,a.fieldsIndex);return d?new S({type:d,name:c.name,alias:c.alias}):null}).filter(O.isSome)};k.getFieldExpr=C;k.getHistogramFromFeatureSet=function(a,b,c,d,e){const f={};a&&a.features&&a.features.forEach(m=>{var g=m.attributes;m=I(g,"countOFExpr");g=z(g,"countOFExpr");null!=m&&null!=g&&0!==m&&(f[m]=g)});const l=[];y.getEqualIntervalBins(b,c,d).forEach((m,g)=>{g=(g+1).toString();l.push({minValue:m[0],
maxValue:m[1],count:f.hasOwnProperty(g)?f[g]:0})});return{bins:l,minValue:b,maxValue:c,normalizationTotal:e}};k.getMissingFields=function(a,b,c){const d=[];if(b)for(const e of b)(b=a.getField(e))&&c&&"availableFields"in c&&!c.availableFields?.includes(b.name)&&d.push(b.name);return d};k.getMissingFieldsForBinning=function(a,b){const c=[];a=a.layer;a="featureReduction"in a?a.featureReduction:null;const d=null!=a&&"fields"in a?a.fields?.map(e=>e.name?.toLowerCase()).filter(Boolean):[];if("binning"!==
a?.type||!b)return c;for(const e of b)d.includes(e.toLowerCase())||c.push(e);return c};k.getPredominantCategoriesFromUVInfos=function(a,b){const c=new Set(a.map(e=>e.value)),d=b.filter(e=>!c.has(e));for(const e of d)a.push({value:e,count:0});a.sort((e,f)=>b.indexOf(e.value)-b.indexOf(f.value));for(const e of a)e.value===T.noDominantCategoryField&&(e.value=null);return{predominantCategoryInfos:a}};k.getSQLExpressionForDateOrTimeField=M;k.getSummaryStatisticsFromFeatureSet=function(a,b){a=a&&a.features;
if(0===a?.length)return{avg:null,count:0,max:null,median:null,min:null,nullcount:0,stddev:null,sum:null,variance:null};a=a?.[0]?.attributes;const c={};for(const d in a)c[d.replace(X,"").toLowerCase()]=a[d];null!=c.totalcount&&c.totalcount>=c.count&&(c.nullcount=c.totalcount-c.count);delete c.totalcount;c.min===c.max&&null!=c.min&&null==c.stddev&&(c.stddev=c.variance=0);b&&("min max avg stddev sum variance".split(" ").forEach(d=>{null!=c[d]&&(c[d]=Math.ceil(c[d]))}),c.min===c.max&&null!=c.min&&(c.avg=
c.min,c.stddev=c.variance=0));return c};k.getSummaryStatsQuery=function(a,b,c){const {field:d,normalizationType:e,normalizationField:f,normalizationTotal:l,minValue:m,maxValue:g,filter:n}=b;c=a.supportsSQLExpression?M(a,c)||b.sqlExpression:null;var t=C({field:d,normalizationType:e,normalizationField:f,normalizationTotal:l,layer:a});const p=c||t;t=p?w.getRangeExpr(p,m,g):null;var r=w.getSQLFilterForNormalization({field:d,normalizationField:f,normalizationType:e});b=w.mergeWhereClauses(b.sqlWhere,r);
b=w.mergeWhereClauses(b,t);const u=y.isNullCountSupported({normalizationField:f,normalizationType:e,sqlExpression:c,supportsSQLExpression:a.supportsSQLExpression,minValue:m,maxValue:g}),q=G.isStringField(a.getField(d??void 0));t=y.statisticTypes.filter(h=>"nullcount"===h?u:q?"count"===h:!0);r=a.createQuery();r.where=w.mergeWhereClauses(r.where,b);r.sqlFormat=c?"standard":null;r.outStatistics=t.map(h=>{const v=new H;let A=null,B=null,N=`${h}_value`;"variance"===h?(A="var",B=p):"nullcount"===h?(A="count",
B=a.objectIdField,N="totalcount_value"):"median"===h?(A="percentile-continuous",B=p,v.statisticParameters={value:.5}):(A=h,B=p);v.statisticType=A;v.onStatisticField=B;v.outStatisticFieldName=N;return v});F(r,n);return r};k.getUVQuery=function(a,b){const {field:c,field2:d,field3:e,sqlExpression:f}=b;var l=!(!c||!d);a=a.createQuery();a.where=w.mergeWhereClauses(a.where,b.sqlWhere);a.sqlFormat=f?"standard":null;var m=l?null:c;l=l?"1":f;const g="countOF"+(m||"Expr"),n=new H;n.statisticType="count";n.onStatisticField=
l?"1":m;n.outStatisticFieldName=g;a.outStatistics=[n].filter(Boolean);a.groupByFieldsForStatistics=[c||f,d,e].filter(Boolean);F(a,b.filter);return a};k.getUniqueValuesFromFeatureSet=function(a,b){a=a&&a.features;const {field:c,field2:d,field3:e,fieldDelimiter:f,layer:l,view:m,signal:g,labels:n}=b,t=`countOF${c&&d?"Expr":c||"Expr"}`,p={};let r=!1;a.forEach(u=>{var q=u.attributes;u=z(q,t);var h=c?z(q,c):I(q,t);let v=d?z(q,d):null;q=e?z(q,e):null;null===h&&0===u&&(r=!0);if(null==h||"string"===typeof h&&
""===h.trim())h=null;d&&(null==v||"string"===typeof v&&""===v.trim())&&(v=null);e&&(null==q||"string"===typeof q&&""===q.trim())&&(q=null);d&&(h=`${y.processNullValue(h)}${f}${y.processNullValue(v)}`,e&&(h=`${h}${f}${y.processNullValue(q)}`));null==p[h]?p[h]={count:u,data:h}:p[h].count+=u});return c&&r?l.queryFeatureCount({whereClause:c+" is NULL",view:m,signal:g}).then(u=>{p["null"].count+=u||0;return D(p,n)}).catch(()=>{P.throwIfAborted(g);return D(p,n)}):Promise.resolve(D(p,n))};k.getViewInfoParams=
function(a){return{viewingMode:"2d"===a.type?"map":a.viewingMode,scale:a.scale,spatialReference:a.spatialReference?.toJSON()}};k.msForTimeOnlyFieldSQL=K;k.msSinceUnixEpochSQL=J;k.updateQueryWithFeatureFilter=F;Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});