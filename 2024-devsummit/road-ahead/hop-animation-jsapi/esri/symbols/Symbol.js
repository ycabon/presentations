// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../chunks/tslib.es6 ../Color ../core/jsonMap ../core/JSONSupport ../core/accessorSupport/decorators/property ../core/has ../core/Logger ../core/RandomLCG ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass".split(" "),function(c,e,d,b,f,l,m,n,g,h){d=new d.JSONMap({esriSMS:"simple-marker",esriPMS:"picture-marker",esriSLS:"simple-line",esriSFS:"simple-fill",esriPFS:"picture-fill",esriTS:"text",esriSHD:"shield-label-symbol",PointSymbol3D:"point-3d",LineSymbol3D:"line-3d",
PolygonSymbol3D:"polygon-3d",WebStyleSymbol:"web-style",MeshSymbol3D:"mesh-3d",LabelSymbol3D:"label-3d",CIMSymbolReference:"cim"});let k=0;b=class extends b.JSONSupport{constructor(a){super(a);this.id=`sym${k++}`;this.type=null;this.color=new e([0,0,0,1])}readColor(a){return null!=a?.[0]?[a[0],a[1],a[2],a[3]/255]:a}async collectRequiredFields(a,p){}hash(){return JSON.stringify(this.toJSON())}clone(){}};c.__decorate([f.property({type:d.apiValues,readOnly:!0,json:{read:!1,write:{ignoreOrigin:!0,writer:d.write}}})],
b.prototype,"type",void 0);c.__decorate([f.property({type:e,json:{write:{allowNull:!0}}})],b.prototype,"color",void 0);c.__decorate([g.reader("color")],b.prototype,"readColor",null);return b=c.__decorate([h.subclass("esri.symbols.Symbol")],b)});