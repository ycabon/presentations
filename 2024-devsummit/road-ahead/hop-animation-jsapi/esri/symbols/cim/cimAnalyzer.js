// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../core/colorUtils ../../core/fontUtils ../../core/lang ../../core/Logger ../../core/screenUtils ./CIMSymbolHelper ./defaultCIMValues ./enums ./OverrideHelper ./SDFHelper ./utils ./effects/CIMEffectHelper ../../views/2d/engine/webgl/definitions".split(" "),function(M,V,W,N,X,Q,R,E,D,G,I,h,S,Y){function O(a){return a&&0===a.indexOf("Level_")&&(a=parseInt(a.substr(6),10),!isNaN(a))?a:0}function Z(a){var d=a.symbolLayers;if(!d||2!==d.length)return!1;a=d.find(c=>c.effects?.find(b=>
"CIMGeometricEffectDashes"===b.type));d=d.find(c=>c.effects?.find(b=>"CIMGeometricEffectAddControlPoints"===b.type));return!!a||!!d}function T(a){return N.clone(a).map(d=>({...d,propertyName:h.uncapitalize(d.propertyName)}))}class aa{constructor(a){this._cimLayers=[];this._poMap={};this._primitiveOverrides=[];a&&(this._resourceManager=a)}analyzeSymbolReference(a,d,c){this._cimLayers=c??[];if(!a)return this._cimLayers;this._reset();if(a.primitiveOverrides){this._primitiveOverrides=a.primitiveOverrides;
for(const b of this._primitiveOverrides)(c=b.valueExpressionInfo)?this._setPoMap(b.primitiveName,b.propertyName,c):null!=b.value&&(c=b.value,b.propertyName.includes("Color")&&(V.isRGB(c)&&(c=h.colorToArray(c)),c=h.normalizeAlpha(c)),this._setPoMap(b.primitiveName,b.propertyName,c))}this._analyzeSymbol(a.symbol,d);return this._cimLayers}_reset(){this._cimLayers=[];this._poMap={};this._primitiveOverrides=[]}_analyzeSymbol(a,d){switch(a?.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":this._analyzeMultiLayerSymbol(a,
d)}}_analyzeMultiLayerSymbol(a,d){const c=a?.symbolLayers;if(c){var b=a.effects,g=D.Alignment.SCREEN,f=R.CIMSymbolHelper.getSize(a)??0;"CIMPointSymbol"===a.type&&"Map"===a.angleAlignment&&(g=D.Alignment.MAP);for(var l="CIMPolygonSymbol"===a.type,k=c.length;k--;){const m=c[k];if(!m||!1===m.enable)continue;let t;b?.length&&(t=[...b]);var e=m.effects;e?.length&&(b?t.push(...e):t=[...e]);e=null;if(t){e=[];for(const p of t){var n=G.OverrideHelper.findEffectOverrides(p,this._primitiveOverrides);n&&e.push(n)}}G.OverrideHelper.findApplicableOverrides(m,
this._primitiveOverrides,[]);switch(m.type){case "CIMSolidFill":this._analyzeSolidFill(m,e);break;case "CIMPictureFill":this._analyzePictureFill(m,e);break;case "CIMHatchFill":this._analyzeHatchFill(m,e);break;case "CIMGradientFill":this._analyzeGradientFill(m,e);break;case "CIMSolidStroke":this._analyzeSolidStroke(m,e,l,f);break;case "CIMPictureStroke":this._analyzePictureStroke(m,e,l,f);break;case "CIMGradientStroke":this._analyzeGradientStroke(m,e,l,f);break;case "CIMCharacterMarker":case "CIMPictureMarker":case "CIMVectorMarker":if("CIMLineSymbol"===
a.type||"CIMPolygonSymbol"===a.type)g=(g=m.markerPlacement)&&g.angleToLine?D.Alignment.MAP:D.Alignment.SCREEN;n=[];var q=m.primitiveName;q&&n.push(q);q=l&&h.isCIMMarkerStrokePlacement(m.markerPlacement);this._analyzeMarker(m,e,null,n,g,f,d,[],!1,q);break;default:X.getLogger("esri.symbols.cim.cimAnalyzer").error("Cannot analyze CIM layer",m.type)}}}}_analyzeSolidFill(a,d){const {primitiveName:c,type:b}=a,g=h.normalizeAlpha(a.color);this._cimLayers.push({type:"fill",spriteRasterizationParam:null,colorLocked:!!a.colorLocked,
color:this._getValueOrOverrideExpression(b,c,"Color",g),height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,effects:d,applyRandomOffset:!1,sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!1})}_analyzePictureFill(a,d){const {primitiveName:c,type:b}=a,g=h.getTintColor(a),f=h.getValue(a.height,E.defaultCIMValues.CIMPictureFill.height);let l=h.getValue(a.scaleX,1);if("width"in a&&"number"===typeof a.width){var k=a.width;let e=1;const n=this._resourceManager.getResource(a.url);null!=n&&(e=n.width/n.height);
l/=f/k*e}k={type:"sprite-rasterization-param",resource:a,overrides:this._getPrimitiveMaterialOverrides(c,b)};this._cimLayers.push({type:"fill",spriteRasterizationParam:k,colorLocked:!!a.colorLocked,effects:d,color:this._getValueOrOverrideExpression(b,c,"TintColor",g),height:this._getValueOrOverrideExpression(b,c,"Height",f),scaleX:this._getValueOrOverrideExpression(b,c,"ScaleX",l),angle:this._getValueOrOverrideExpression(b,c,"Rotation",h.getValue(a.rotation)),offsetX:this._getValueOrOverrideExpression(b,
c,"OffsetX",h.getValue(a.offsetX)),offsetY:this._getValueOrOverrideExpression(b,c,"OffsetY",h.getValue(a.offsetY)),applyRandomOffset:!1,sampleAlphaOnly:!1,hasUnresolvedReplacementColor:!1})}_analyzeHatchFill(a,d){const {primitiveName:c,type:b}=a;var g=this._analyzeMaterialOverrides(c,["Rotation","OffsetX","OffsetY"]);g=this._normalizePrimitiveOverrideProps(g);let f=[255,255,255,1],l=!1;if(a.lineSymbol?.symbolLayers)for(const e of a.lineSymbol.symbolLayers){if("CIMSolidStroke"!==e.type)continue;const n=
e.primitiveName??c;l||!n||e.colorLocked||null==this._poMap[n]?.Color&&null==this._poMap[n]?.StrokeColor||(f=h.normalizeAlpha(e.color),f=this._maybeGetValueOrOverrideExpression(n,"StrokeColor")??this._getValueOrOverrideExpression(b,n,"Color",f),l=!0);var k=this._maybeGetValueOrOverrideExpression(n,"StrokeWidth");if(k){let q=null,m=null;"number"===typeof k?q=k:m=k.valueExpressionInfo;(k=g.find(t=>"strokeWidth"===t.propertyName))?k.propertyName="width":(k={type:"CIMPrimitiveOverride",primitiveName:n,
propertyName:"width",valueExpressionInfo:m,value:q,defaultValue:h.getDefaultCIMValue(b,"width")},g.push(k))}}this._cimLayers.push({type:"fill",spriteRasterizationParam:{type:"sprite-rasterization-param",resource:a,overrides:g},colorLocked:!!a.colorLocked,effects:d,color:f,height:this._getValueOrOverrideExpression(b,c,"Separation",h.getValue(a.separation,E.defaultCIMValues.CIMHatchFill.separation)),scaleX:1,angle:this._getValueOrOverrideExpression(b,c,"Rotation",h.getValue(a.rotation)),offsetX:this._getValueOrOverrideExpression(b,
c,"OffsetX",h.getValue(a.offsetX)),offsetY:this._getValueOrOverrideExpression(b,c,"OffsetY",h.getValue(a.offsetY)),applyRandomOffset:!1,sampleAlphaOnly:!0,hasUnresolvedReplacementColor:!l})}_analyzeGradientFill(a,d){this._cimLayers.push({type:"fill",spriteRasterizationParam:null,colorLocked:!!a.colorLocked,effects:d,color:[128,128,128,1],height:0,angle:0,offsetX:0,offsetY:0,scaleX:1,applyRandomOffset:!1,sampleAlphaOnly:!1,hasUnresolvedReplacementColor:!1})}_analyzeSolidStroke(a,d,c,b){const {primitiveName:g,
type:f}=a,l=h.normalizeAlpha(a.color),k=h.getValue(a.width,E.defaultCIMValues.CIMSolidStroke.width),e=a.capStyle??D.LineCapStyle.Butt,n=a.joinStyle??D.LineJoinStyle.Bevel,q=a.miterLimit;let m=[];this._analyzePrimitiveOverrides(g,d,null,null)&&(m=this._getPrimitiveMaterialOverrides(g,f));let t,p;if(d&&d instanceof Array&&0<d.length){const r=d[d.length-1].effect;r&&"CIMGeometricEffectDashes"===r.type&&"NoConstraint"===r.lineDashEnding&&null===r.offsetAlongLine&&(t=r.dashTemplate,p=r.scaleDash,d=[...d],
d.pop())}this._cimLayers.push({type:"line",spriteRasterizationParam:void 0!==t?{type:"sprite-rasterization-param",resource:{type:"dash",dashTemplate:t,capStyle:e},overrides:m}:null,isOutline:c,colorLocked:!!a.colorLocked,effects:d,color:this._getValueOrOverrideExpression(f,g,"Color",l),width:this._getValueOrOverrideExpression(f,g,"Width",k),cap:this._getValueOrOverrideExpression(f,g,"CapStyle",e),join:this._getValueOrOverrideExpression(f,g,"JoinStyle",n),miterLimit:q&&this._getValueOrOverrideExpression(f,
g,"MiterLimit",q),referenceWidth:b,zOrder:O(a.name),dashTemplate:t,scaleDash:p,sampleAlphaOnly:!0})}_analyzePictureStroke(a,d,c,b){const {primitiveName:g,type:f}=a,l=h.getTintColor(a),k=h.getValue(a.width,E.defaultCIMValues.CIMPictureStroke.width),e=a.capStyle??D.LineCapStyle.Butt,n=a.joinStyle??D.LineJoinStyle.Bevel,q=a.miterLimit,m={type:"sprite-rasterization-param",resource:a,overrides:this._getPrimitiveMaterialOverrides(g,f)};this._cimLayers.push({type:"line",spriteRasterizationParam:m,isOutline:c,
colorLocked:!!a.colorLocked,effects:d,color:this._getValueOrOverrideExpression(f,g,"TintColor",l),width:this._getValueOrOverrideExpression(f,g,"Width",k),cap:this._getValueOrOverrideExpression(f,g,"CapStyle",e),join:this._getValueOrOverrideExpression(f,g,"JoinStyle",n),miterLimit:q&&this._getValueOrOverrideExpression(f,g,"MiterLimit",q),referenceWidth:b,zOrder:O(a.name),dashTemplate:null,scaleDash:!1,sampleAlphaOnly:!1})}_analyzeGradientStroke(a,d,c,b){const {primitiveName:g,type:f}=a,l=h.getValue(a.width,
E.defaultCIMValues.CIMSolidStroke.width),k=a.capStyle??D.LineCapStyle.Butt,e=a.joinStyle??D.LineJoinStyle.Bevel,n=a.miterLimit;this._cimLayers.push({type:"line",spriteRasterizationParam:null,isOutline:c,colorLocked:!!a.colorLocked,effects:d,color:[128,128,128,1],width:this._getValueOrOverrideExpression(f,g,"Width",l),cap:this._getValueOrOverrideExpression(f,g,"CapStyle",k),join:this._getValueOrOverrideExpression(f,g,"JoinStyle",e),miterLimit:n&&this._getValueOrOverrideExpression(f,g,"MiterLimit",
n),referenceWidth:b,zOrder:O(a.name),dashTemplate:null,scaleDash:!1,sampleAlphaOnly:!1})}_analyzeMarker(a,d,c,b,g,f,l,k,e=!1,n=!1){e||=!!a.colorLocked;if(!this._analyzeMarkerInsidePolygon(a,d,e)){var q=h.getValue(a.size,E.defaultCIMValues.CIMVectorMarker.size),m=h.getValue(a.rotation),t=h.getValue(a.offsetX),p=h.getValue(a.offsetY),{primitiveName:r,type:v}=a;q=this._getValueOrOverrideExpression(v,r,"Size",q);m=this._getValueOrOverrideExpression(v,r,"Rotation",m);t=this._getValueOrOverrideExpression(v,
r,"OffsetX",t);p=this._getValueOrOverrideExpression(v,r,"OffsetY",p);switch(a.type){case "CIMPictureMarker":this._analyzePictureMarker(a,d,c,b,g,f,q,m,t,p,k,e,n);break;case "CIMVectorMarker":this._analyzeVectorMarker(a,d,c,b,g,f,q,m,t,p,k,l,e,n)}}}_analyzeMarkerInsidePolygon(a,d,c){const {markerPlacement:b,type:g}=a;if(!b||"CIMMarkerPlacementInsidePolygon"!==b.type)return!1;if("CIMVectorMarker"===g||"CIMPictureMarker"===g){var f=a.primitiveName;if(f&&this._analyzePrimitiveOverrides([f],d,null,null)||
(f=b.primitiveName)&&this._analyzePrimitiveOverrides([f],d,null,null))return!1;if("CIMVectorMarker"===g){if({markerGraphics:f}=a,f)for(var l of f)if({symbol:f}=l,"CIMPolygonSymbol"===f?.type&&f.symbolLayers){({symbolLayers:f}=f);for(var k of f)if("CIMSolidStroke"===k.type)return!1}}else if({animatedSymbolProperties:l}=a,l)return!1}k=Math.abs(b.stepX);f=Math.abs(b.stepY);if(0===k||0===f)return!0;if("Random"===b.gridType){l=Q.px2pt(Y.randomInsidePolygonTextureSize);const e=Math.max(Math.floor(l/k),
1);l=f*Math.max(Math.floor(l/f),1);k=e*k/l}else b.shiftOddRows?(l=2*f,k=k/f*.5):(l=f,k/=f);f=h.getTintColor(a);this._cimLayers.push({type:"fill",spriteRasterizationParam:"CIMCharacterMarker"===a.type?null:{type:"sprite-rasterization-param",resource:a,overrides:[]},colorLocked:c,effects:d,color:f,height:l,scaleX:k,angle:b.gridAngle,offsetX:h.getValue(b.offsetX),offsetY:h.getValue(b.offsetY),applyRandomOffset:"Random"===b.gridType,sampleAlphaOnly:"CIMPictureMarker"!==a.type,hasUnresolvedReplacementColor:!0});
return!0}_analyzePictureMarker(a,d,c,b,g,f,l,k,e,n,q,m,t){const {primitiveName:p,type:r}=a;let v=h.getValue(a.scaleX,1);const A=h.getTintColor(a);c||=this._createMarkerPlacementOverrideExpression(a.markerPlacement);const w=this._createAnimatedSymbolPropertiesOverrideExpression(a.animatedSymbolProperties),x=a.anchorPoint??{x:0,y:0};if("width"in a&&"number"===typeof a.width){var y=a.width;let u=1;var z=this._resourceManager.getResource(a.url);null!=z&&(u=z.width/z.height);z=h.getValue(a.size);v/=z/
y*u}b=[...b];a.primitiveName&&b.push(a.primitiveName);a.animatedSymbolProperties||w?y={type:"animated",url:a.url,playAnimation:a.animatedSymbolProperties?.playAnimation,reverseAnimation:a.animatedSymbolProperties?.reverseAnimation,randomizeStartTime:a.animatedSymbolProperties?.randomizeStartTime,randomizeStartSeed:a.animatedSymbolProperties?.randomizeStartSeed,startTimeOffset:a.animatedSymbolProperties?.startTimeOffset,duration:a.animatedSymbolProperties?.duration,repeatType:a.animatedSymbolProperties?.repeatType,
repeatDelay:a.animatedSymbolProperties?.repeatDelay}:(y=N.clone(a),y.markerPlacement=null);b={type:"sprite-rasterization-param",resource:y,overrides:this._getMaterialOverrides(b,r)};w&&b.overrides.push(...w.overrides);this._cimLayers.push({type:"marker",spriteRasterizationParam:b,colorLocked:m,effects:d,scaleSymbolsProportionally:!1,alignment:g,size:l,scaleX:this._getValueOrOverrideExpression(r,p,"ScaleX",v),rotation:k,offsetX:e,offsetY:n,transform:{type:"cim-marker-transform-param",params:q},color:this._getValueOrOverrideExpression(r,
p,"TintColor",A),anchorPoint:{x:x.x,y:x.y},isAbsoluteAnchorPoint:"Relative"!==a.anchorPointUnits,outlineColor:[0,0,0,0],outlineWidth:0,frameHeight:0,rotateClockwise:!!a.rotateClockwise,referenceSize:f,sizeRatio:1,isOutline:t,markerPlacement:c,animatedSymbolProperties:w})}_analyzeVectorMarker(a,d,c,b,g,f,l,k,e,n,q,m,t,p){var r=a.markerGraphics;if(r){var v=a.frame,A=0;if(A=v?v.ymax-v.ymin:f)l={offsetX:e,offsetY:n,rotation:k,size:l,frameHeight:A,rotateClockWise:!!a.rotateClockwise},q=[...q,l];c||=this._createMarkerPlacementOverrideExpression(a.markerPlacement);
for(const x of r)if(x&&(r=x.symbol)){(l=x.primitiveName)&&b.push(l);var w=void 0;if(("CIMPointSymbol"===r.type||"CIMTextSymbol"===r.type)&&v){k=w=0;e=x.geometry;"x"in e&&"y"in e&&(w+=e.x-.5*(v.xmin+v.xmax),k+=e.y-.5*(v.ymin+v.ymax));if(e=a.anchorPoint)"Absolute"===a.anchorPointUnits?(w-=e.x,k-=e.y):v&&(w-=(v.xmax-v.xmin)*e.x,k-=(v.ymax-v.ymin)*e.y);w={offsetX:w,offsetY:k,rotation:0,size:0,frameHeight:0,rotateClockWise:!1};w=[...q,w]}switch(r.type){case "CIMPointSymbol":case "CIMLineSymbol":case "CIMPolygonSymbol":m||
Z(r)?this._analyzeMultiLayerGraphicNonSDF(a,d,c,null,x,b,g,f,w??q,A,t,p):this._analyzeMultiLayerGraphic(a,d,c,null,x,b,g,f,w??q,A,t,p);break;case "CIMTextSymbol":this._analyzeTextGraphic(d,c,x,b,g,f,w??q,t)}l&&b.pop()}}}_analyzeMultiLayerGraphic(a,d,c,b,g,f,l,k,e,n,q,m){var t=g.symbol;const p=t.symbolLayers;if(p){var r=p.length;if(p&&2===p.length&&p[0].enable&&p[1].enable&&"CIMSolidStroke"===p[0].type&&"CIMSolidFill"===p[1].type&&null==p[0].path&&null==p[1].path&&!p[0].effects&&!p[1].effects)this._analyzeCompositeMarkerGraphic(a,
d,c,b,g,p,l,k,e,n,q,m);else{var v=this._resourceManager.geometryEngine;if(t=S.CIMEffectHelper.applyEffects(t.effects,g.geometry,v))for(;r--;){const u=p[r];if(!u||!1===u.enable)continue;const F=u.primitiveName;F&&f.push(F);switch(u.type){case "CIMSolidFill":case "CIMSolidStroke":var A=S.CIMEffectHelper.applyEffects(u.effects,t,v),w=I.getExtent(A);if(!w)continue;const J="Relative"!==a.anchorPointUnits,[P,K,L]=I.getSDFMetrics(w,a.frame,a.size,a.anchorPoint,J);w="CIMSolidFill"===u.type;A={type:"sdf",
geom:A,asFill:w};const {path:H}=u;var x=w?h.normalizeAlpha(h.getFillColor(u)):null==H?h.normalizeAlpha(h.getStrokeColor(u)):[0,0,0,0],y=w?[0,0,0,0]:h.normalizeAlpha(h.getStrokeColor(u)),z=h.getStrokeWidth(u)??0;if(!w&&!z)break;const B=g.primitiveName;let C=null;w&&!u.colorLocked&&(C=this._maybeGetValueOrOverrideExpression(B,"FillColor"));let U=null;w||u.colorLocked||(U=this._maybeGetValueOrOverrideExpression(B,"StrokeColor"));x=C??this._getValueOrOverrideExpression(u.type,F,"Color",x);y=U??this._getValueOrOverrideExpression(u.type,
F,"Color",y);z=this._maybeGetValueOrOverrideExpression(B,"StrokeWidth")??this._getValueOrOverrideExpression(u.type,F,"Width",z);this._cimLayers.push({type:"marker",spriteRasterizationParam:H?{type:"sprite-rasterization-param",resource:{type:"path",path:H,asFill:w},overrides:[]}:{type:"sprite-rasterization-param",resource:A,overrides:[]},colorLocked:!!u.colorLocked||!!q,effects:d,scaleSymbolsProportionally:!!a.scaleSymbolsProportionally,alignment:l,anchorPoint:{x:K,y:L},isAbsoluteAnchorPoint:J,size:n,
rotation:0,offsetX:0,offsetY:0,scaleX:1,transform:{type:"cim-marker-transform-param",params:e},frameHeight:n,rotateClockwise:!1,referenceSize:k,sizeRatio:P,color:x,outlineColor:y,outlineWidth:z,isOutline:m,markerPlacement:c,animatedSymbolProperties:b});break;case "CIMPictureMarker":case "CIMVectorMarker":u.markerPlacement?this._analyzeMultiLayerGraphicNonSDF(a,d,c,b,g,f,l,k,e,n,!!u.colorLocked||!!q,m):this._analyzeMarker(u,d,c,f,l,k,!1,e,q,m);break;default:this._analyzeMultiLayerGraphicNonSDF(a,d,
c,b,g,f,l,k,e,n,!!u.colorLocked||!!q,m)}F&&f.pop()}}}}_analyzeTextGraphic(a,d,c,b,g,f,l,k){G.OverrideHelper.findApplicableOverrides(c,this._primitiveOverrides,[]);var e=c.geometry;if("x"in e&&"y"in e){e=c.symbol;var n=h.fromCIMFontDecoration(e),q=h.fromCIMFontStyle(e.fontStyleName),m=W.getFontFamily(e.fontFamilyName);e.font={family:m,decoration:n,...q};var t=h.getValue(e.height,E.defaultCIMValues.CIMTextSymbol.height),p=h.getValue(e.angle),r=h.getValue(e.offsetX),v=h.getValue(e.offsetY),A=h.normalizeAlpha(h.getFillColor(e)),
w=h.normalizeAlpha(h.getStrokeColor(e)),x=h.getStrokeWidth(e)??0;x||(w=h.normalizeAlpha(h.getFillColor(e.haloSymbol)),x=h.getValue(e.haloSize));var y=!1;if(e.symbol?.symbolLayers)for(var z of e.symbol.symbolLayers)null!=h.normalizeAlpha(h.getFillColor(z))&&(y=!!z.colorLocked);var u=c.primitiveName;z=null;y||(z=this._maybeGetValueOrOverrideExpression(u,"FillColor"));var F=this._maybeGetValueOrOverrideExpression(u,"TextSize"),J=this._maybeGetValueOrOverrideExpression(u,"TextAngle"),P=this._maybeGetValueOrOverrideExpression(u,
"TextOffsetX");u=this._maybeGetValueOrOverrideExpression(u,"TextOffsetY");var K=null,L=null,H=0;if(e.callout&&"CIMBackgroundCallout"===e.callout.type){var B=e.callout;if(B.backgroundSymbol&&(B=B.backgroundSymbol.symbolLayers))for(var C of B)"CIMSolidFill"===C.type?K=h.normalizeAlpha(C.color):"CIMSolidStroke"===C.type&&(L=h.normalizeAlpha(C.color),H=h.getValue(C.width,E.defaultCIMValues.CIMSolidStroke.width))}C=this._getValueOrOverrideExpression(e.type,c.primitiveName,"TextString",c.textString??"");
null!=C&&({fontStyleName:B}=e,m+=B?"-"+B.toLowerCase():"-regular",b=this._getMaterialOverrides(b,e.type),b.push(...this._getPrimitiveMaterialOverrides(c.primitiveName,e.type)),this._cimLayers.push({type:"text",lineWidth:null,textRasterizationParam:{type:"text-rasterization-param",resource:{type:"text",textString:c.textString??"",font:e.font,symbol:e,primitiveName:c.primitiveName},overrides:b},colorLocked:!!k||!!y,effects:a,alignment:g,anchorPoint:{x:0,y:0},isAbsoluteAnchorPoint:!1,fontName:m,decoration:n,
weight:q.weight,style:q.style,size:F??t,angle:J??p,offsetX:P??r,offsetY:u??v,transform:{type:"cim-marker-transform-param",params:l},horizontalAlignment:h.fromCIMHorizontalAlignment(e.horizontalAlignment),verticalAlignment:h.fromCIMVerticalAlignment(e.verticalAlignment),text:C,color:z??this._getValueOrOverrideExpression(e.type,c.primitiveName,"Color",A),outlineColor:w,outlineSize:x,backgroundColor:K,borderLineColor:L,borderLineWidth:H,referenceSize:f,sizeRatio:1,markerPlacement:d}))}}_analyzeMultiLayerGraphicNonSDF(a,
d,c,b,g,f,l,k,e,n,q,m){g=this._buildSimpleMarker(a,g);var t=this._analyzeMaterialOverrides(a.primitiveName,["Rotation","OffsetX","OffsetY"]);t=this._normalizePrimitiveOverrideProps(t);const [p,r,v]=R.CIMSymbolHelper.getTextureAnchor(g,this._resourceManager);f=this._getMaterialOverrides(f,a.type);f.push(...t);this._cimLayers.push({type:"marker",spriteRasterizationParam:{type:"sprite-rasterization-param",resource:{...g,avoidSDFRasterization:!0},overrides:f},colorLocked:q,effects:d,scaleSymbolsProportionally:!!a.scaleSymbolsProportionally,
alignment:l,anchorPoint:{x:p,y:r},isAbsoluteAnchorPoint:!1,size:n,rotation:0,offsetX:0,offsetY:0,transform:{type:"cim-marker-transform-param",params:e},color:[255,255,255,1],outlineColor:[0,0,0,0],outlineWidth:0,scaleX:1,frameHeight:n,rotateClockwise:!!a.rotateClockwise,referenceSize:k,sizeRatio:v/Q.pt2px(a.size),isOutline:m,markerPlacement:c,animatedSymbolProperties:b})}_createMarkerPlacementOverrideExpression(a){if(!a)return null;const d=[];G.OverrideHelper.findApplicableOverrides(a,this._primitiveOverrides,
d);return{type:"cim-marker-placement-info",placement:a,overrides:T(d)}}_createAnimatedSymbolPropertiesOverrideExpression(a){if(!a)return null;const d=[];G.OverrideHelper.findApplicableOverrides(a,this._primitiveOverrides,d);return{type:"cim-animation-info",animation:a,overrides:T(d)}}_buildSimpleMarker(a,d){return{type:a.type,enable:!0,name:a.name,colorLocked:a.colorLocked,primitiveName:a.primitiveName,anchorPoint:a.anchorPoint,anchorPointUnits:a.anchorPointUnits,offsetX:0,offsetY:0,rotateClockwise:a.rotateClockwise,
rotation:0,size:a.size,billboardMode3D:a.billboardMode3D,depth3D:a.depth3D,frame:a.frame,markerGraphics:[d],scaleSymbolsProportionally:a.scaleSymbolsProportionally,respectFrame:a.respectFrame,clippingPath:a.clippingPath}}_analyzeCompositeMarkerGraphic(a,d,c,b,g,f,l,k,e,n,q,m){const t=g.geometry;var p=f[0],r=f[1],v=I.getExtent(t);if(v){f="Relative"!==a.anchorPointUnits;var [A,w,x]=I.getSDFMetrics(v,a.frame,a.size,a.anchorPoint,f);({path:v}=r);var y=r.primitiveName,z=p.primitiveName;g=g.primitiveName;
var u=null;r.colorLocked||q||(u=this._maybeGetValueOrOverrideExpression(g,"FillColor"));r=u??this._getValueOrOverrideExpression(r.type,y,"Color",h.normalizeAlpha(r.color));y=null;p.colorLocked||q||(y=this._maybeGetValueOrOverrideExpression(g,"StrokeColor"));y=y??this._getValueOrOverrideExpression(p.type,z,"Color",h.normalizeAlpha(p.color));p=this._maybeGetValueOrOverrideExpression(g,"StrokeWidth")??this._getValueOrOverrideExpression(p.type,z,"Width",h.getValue(p.width,E.defaultCIMValues.CIMSolidStroke.width));
this._cimLayers.push({type:"marker",spriteRasterizationParam:{type:"sprite-rasterization-param",resource:v?{type:"path",path:v,asFill:!0}:{type:"sdf",geom:t,asFill:!0},overrides:[]},colorLocked:q,effects:d,scaleSymbolsProportionally:!!a.scaleSymbolsProportionally,alignment:l,anchorPoint:{x:w,y:x},isAbsoluteAnchorPoint:f,size:n,rotation:0,offsetX:0,offsetY:0,scaleX:1,transform:{type:"cim-marker-transform-param",params:e},frameHeight:n,rotateClockwise:!1,referenceSize:k,sizeRatio:A,color:r,outlineColor:y,
outlineWidth:p,isOutline:m,markerPlacement:c,animatedSymbolProperties:b})}}_setPoMap(a,d,c){let b;this._poMap[a]?b=this._poMap[a]:(b={},this._poMap[a]=b);b[d]=c}_maybeGetValueOrOverrideExpression(a,d,c){return this._getValueOrOverrideExpression("",a,d,c,!1)}_getValueOrOverrideExpression(a,d,c,b,g=!0){g&&!h.isValidCIMValue(b)&&(b=h.getDefaultCIMValue(a,c.toLowerCase()));if(null==d)return b;a=this._poMap[d];if(null==a)return b;c=a[c];return"string"===typeof c||"number"===typeof c||Array.isArray(c)?
c:c?{valueExpressionInfo:c,defaultValue:b}:b}_analyzePrimitiveOverrides(a,d,c,b){if(null==a)return!1;"string"===typeof a&&(a=[a]);for(const g of this._primitiveOverrides)if(a.includes(g.primitiveName)&&g.valueExpressionInfo)return!0;if(null!=d)for(const g of d)if(0<g?.overrides.length)return!0;if(null!=c)for(const g of c)if(0<g?.overrides.length)return!0;if(null!=b)for(const g of b)if(0<g?.overrides.length)return!0;return!1}_getMaterialOverrides(a,d){if(!a)return[];const c=[];for(const b of a)c.push(...this._getPrimitiveMaterialOverrides(b,
d));return c}_getPrimitiveMaterialOverrides(a,d){if(!a)return[];const c=this._normalizePrimitiveOverrideProps(this._primitiveOverrides.filter(b=>b.primitiveName===a));c.forEach(b=>b.defaultValue=h.getDefaultCIMValue(d,b.propertyName.toLowerCase()));return c}_analyzeMaterialOverrides(a,d){return this._primitiveOverrides.filter(c=>c.primitiveName!==a||!d.includes(c.propertyName))}_normalizePrimitiveOverrideProps(a){return a.map(d=>({...d,propertyName:h.uncapitalize(d.propertyName)}))}}M.CIMAnalyzer=
aa;M.analyzeCIMResource=function(a,d){if(!d||0===d.length)return a;a=N.clone(a);G.OverrideHelper.applyOverrides(a,d);return a};Object.defineProperty(M,Symbol.toStringTag,{value:"Module"})});