// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("require ../chunks/tslib.es6 ../request ../core/Error ../core/JSONSupport ../core/Loadable ../core/urlUtils ../core/accessorSupport/decorators/property ../core/has ../core/Logger ../core/RandomLCG ../core/accessorSupport/decorators/reader ../core/accessorSupport/decorators/subclass ../core/accessorSupport/decorators/writer ../layers/mixins/EditBusLayer ../rest/utils ./support/EditMomentStack ./support/versionManagementUtils".split(" "),function(h,n,x,y,l,z,v,r,G,H,I,A,B,C,p,D,E,g){const q=
a=>Object.freeze(Object.defineProperty({__proto__:null,default:a},Symbol.toStringTag,{value:"Module"}));l=class extends l.JSONSupportMixin(z){constructor(a){super(a);this.capabilities=this.defaultVersionIdentifier=this.name=this.sourceJSON=this.url=null;this._applyEditsHandler=b=>{const {serviceUrl:c,gdbVersion:d,result:e}=b;c===this._featureServiceUrl&&e.then(f=>{(f=f.historicMoment)&&this._addMomentToVersionItem(d,f)})}}initialize(){this.url=v.removeTrailingSlash(this.url);this._featureServiceUrl=
this.url.replace(/\/VersionManagementServer/i,"/FeatureServer");g.versionCollection.has(this.url)||g.versionCollection.set(this.url,new Map);const a=(g.versionCollectionCount.get(this.url)??0)+1;g.versionCollectionCount.set(this.url,a);this.when().then(()=>this.addHandles(p.onApplyEditsEvent(this._applyEditsHandler)),()=>{})}destroy(){const a=(g.versionCollectionCount.get(this.url)??1)-1;g.versionCollectionCount.set(this.url,a);0===a&&g.versionCollection.delete(this.url);g.defaultVersionNameLookup.delete(this._featureServiceUrl)}read(a,
b){this.sourceJSON=a;super.read(a,b)}readDefaultVersionIdentifier(a,b){return{name:b.defaultVersionName,guid:b.defaultVersionGuid}}writeDefaultVersionIdentifier(a,b){b.defaultVersionName=a.name;b.defaultVersionGuid=a.guid}load(a){this.addResolvingPromise(this._fetchService(this.url,a));return Promise.resolve(this)}async createVersion(a){const [{createVersion:b},{default:c}]=await Promise.all([new Promise((d,e)=>h(["../rest/versionManagement/createVersion"],d,e)),new Promise((d,e)=>h(["../rest/versionManagement/support/CreateVersionParameters"],
f=>d(q(f)),e))]);a=c.from(a);return b(this.url,a)}async deleteVersion(a){const [{deleteVersion:b},{default:c}]=await Promise.all([new Promise((e,f)=>h(["../rest/versionManagement/deleteVersion"],e,f)),new Promise((e,f)=>h(["../rest/versionManagement/support/DeleteVersionParameters"],k=>e(q(k)),f))]);let d=void 0;a.guid&&g.versionCollection.get(this.url)?.has(a.guid)&&(d=g.currentSessionId??void 0);a=new c({versionName:a.name,sessionId:d});return b(this.url,a)}async getVersionInfoExtended(a){const {getVersion:b}=
await new Promise((c,d)=>h(["../rest/versionManagement/getVersion"],c,d));return b(this.url,a.guid)}async getVersionInfos(a={}){const [{getVersionInfos:b},{default:c}]=await Promise.all([new Promise((d,e)=>h(["../rest/versionManagement/getVersionInfos"],d,e)),new Promise((d,e)=>h(["../rest/versionManagement/support/GetVersionInfosParameters"],f=>d(q(f)),e))]);a=c.from(a);return b(this.url,a)}async reconcile(a,b={}){const [{reconcile:c},{default:d}]=await Promise.all([new Promise((e,f)=>h(["../rest/versionManagement/gdbVersion/reconcile"],
e,f)),new Promise((e,f)=>h(["../rest/versionManagement/gdbVersion/support/ReconcileParameters"],k=>e(q(k)),f))]);b=d.from(b);b.sessionId=g.currentSessionId;return c(this.url,a.guid,b)}async post(a){const [{post:b},{default:c}]=await Promise.all([new Promise((e,f)=>h(["../rest/versionManagement/gdbVersion/post"],e,f)),new Promise((e,f)=>h(["../rest/versionManagement/gdbVersion/support/PostParameters"],k=>e(q(k)),f))]),d=c.from({sessionId:g.currentSessionId});return b(this.url,a.guid,d)}async alterVersion(a,
b){const [{alterVersion:c},{default:d}]=await Promise.all([new Promise((e,f)=>h(["../rest/versionManagement/gdbVersion/alterVersion"],e,f)),new Promise((e,f)=>h(["../rest/versionManagement/gdbVersion/support/AlterVersionParameters"],k=>e(q(k)),f))]);b=d.from(b);return c(this.url,a.guid,b)}async startReading(a){var {startReading:b}=await new Promise((c,d)=>h(["../rest/versionManagement/gdbVersion/startReading"],c,d));if(b=await b(this.url,a.guid,g.currentSessionId)){const c=await this.getVersionInfoExtended(a),
d=new Date(c.modifiedDate);this._addOrUpdateItem(a.guid,{name:c.versionIdentifier.name,moment:d,lockType:"read"});p.emitUpdateMomentEvent(this._featureServiceUrl,null,a.name,d)}return b}async stopReading(a){var {stopReading:b}=await new Promise((c,d)=>h(["../rest/versionManagement/gdbVersion/stopReading"],c,d));if(b=await b(this.url,a.guid,g.currentSessionId))g.versionCollection.get(this.url)?.delete(a.guid),p.emitUpdateMomentEvent(this._featureServiceUrl,null,a.name,null);return b}async startEditing(a){var {startEditing:b}=
await new Promise((d,e)=>h(["../rest/versionManagement/gdbVersion/startEditing"],d,e));if(b=await b(this.url,a.guid,g.currentSessionId)){var c=await this.getVersionInfoExtended(a);c=new Date(c.modifiedDate);const d=new E(c);this._addOrUpdateItem(a.guid,{name:a.name,moment:c,lockType:"edit",stack:d});p.emitUpdateMomentEvent(this._featureServiceUrl,null,a.name,c)}return b}async stopEditing(a,b){if(b){var c=g.versionCollection.get(this.url)?.get(a.guid);if(c?.stack?.canRedo()){const [{deleteForwardEdits:d},
{default:e}]=await Promise.all([new Promise((f,k)=>h(["../rest/versionManagement/gdbVersion/deleteForwardEdits"],f,k)),new Promise((f,k)=>h(["../rest/versionManagement/gdbVersion/support/DeleteForwardEditsParameters"],u=>f(q(u)),k))]);if(!await d(this.url,a.guid,new e({sessionId:g.currentSessionId,moment:c.moment})))return!1}}({stopEditing:c}=await new Promise((d,e)=>h(["../rest/versionManagement/gdbVersion/stopEditing"],d,e)));if(b=await c(this.url,a.guid,g.currentSessionId,b))c=await this.getVersionInfoExtended(a),
c=new Date(c.modifiedDate),this._addOrUpdateItem(a.guid,{name:a.name,moment:c,lockType:"read",editMomentStack:void 0}),p.emitUpdateMomentEvent(this._featureServiceUrl,null,a.name,c);return b}getLockType(a){return g.versionCollection.get(this.url)?.get(a.guid)?.lockType??"none"}changeVersionInternal(a,b,c){let d=null,e=null,f=null,k=null;const u=m=>!m||m===this.defaultVersionIdentifier.name,F=m=>{const t=g.versionCollection?.get(this.url)?.get(m.guid);f=m.name;k=t?.moment??null},w=(m,t)=>m||t?m&&t?
m.toISOString()===t.toISOString():!1:!0;if("name"in b){if("none"!==this.getLockType(b))return!1;d=b.name;e=null}else d=this.defaultVersionIdentifier.name,e=b;"name"in c?F(c):(f=this.defaultVersionIdentifier.name,k=c);u(d)&&u(a.gdbVersion)&&w(a.historicMoment,e)?(a.gdbVersion=f,a.historicMoment=k):d===a.gdbVersion&&w(a.historicMoment,e)&&(a.gdbVersion=f,a.historicMoment=k);return!0}async changeVersion(a,b,c){if("name"in c&&!await this.getVersionInfoExtended(c))throw new y("version-management-service:invalid-version",
"version does not exist");if("networkServiceUrl"in a){if(this._featureServiceUrl.toLowerCase()===a.featureServiceUrl.toLowerCase())return this.changeVersionInternal(a,b,c)}else{let d;"layers"in a?(d=a.allTables.concat(a.allLayers),a.utilityNetworks&&a.utilityNetworks.forEach(e=>{this._featureServiceUrl.toLowerCase()===e.featureServiceUrl.toLowerCase()&&this.changeVersionInternal(e,b,c)})):d=a;for(const e of d)if("feature"===e.type||"subtype-group"===e.type){if(a=e.url.replace(/^(.*\/FeatureServer)\/\d+$/,
"$1"),this._featureServiceUrl.toLowerCase()===a.toLowerCase()&&!this.changeVersionInternal(e,b,c))return!1}else if("group"===e.type){a=e.allTables.concat(e.allLayers);for(const f of a)if("feature"===f.type||"subtype-group"===f.type)if(a=f.url.replace(/^(.*\/FeatureServer)\/\d+$/,"$1"),this._featureServiceUrl.toLowerCase()===a.toLowerCase()&&!this.changeVersionInternal(f,b,c))return!1}}return!0}async getVersionIdentifierFromName(a){try{return(await this.getVersionInfos({includeHidden:!0})).find(b=>
b.versionIdentifier.name===a)?.versionIdentifier||null}catch{return null}}async getVersionIdentifierFromGuid(a){const {getVersion:b}=await new Promise((c,d)=>h(["../rest/versionManagement/getVersion"],c,d));try{return(await b(this.url,a)).versionIdentifier}catch{return null}}canUndo(a){return!!g.versionCollection.get(this.url)?.get(a.guid)?.stack?.canUndo()}canRedo(a){return!!g.versionCollection.get(this.url)?.get(a.guid)?.stack?.canRedo()}undo(a){const b=g.versionCollection.get(this.url)?.get(a.guid);
var c=b?.stack?.undo()||void 0;b&&c&&(c=b.stack.peek(),p.emitUpdateMomentEvent(this._featureServiceUrl,null,a.name,c),g.versionCollection.get(this.url)?.set(a.guid,{...b,moment:c}))}redo(a){const b=g.versionCollection.get(this.url)?.get(a.guid),c=b?.stack?.redo()||void 0;b&&c&&(p.emitUpdateMomentEvent(this._featureServiceUrl,null,a.name,c),g.versionCollection.get(this.url)?.set(a.guid,{...b,moment:c}))}_addMomentToVersionItem(a,b){const c=g.versionCollection.get(this.url);if(c)for(const [d,e]of c)e.name===
a&&this._addToStack(d,b)}_canAddToStack(a,b){return a?(a=a.getTime(),b=b.getTime(),a<b):!0}_addToStack(a,b){const c=g.versionCollection.get(this.url),d=c?.get(a);return d?.stack?(this._canAddToStack(d.stack.peek(),b)&&d.stack.push(b),c.set(a,{...d,moment:b}),!0):!1}_addOrUpdateItem(a,b){const c=g.versionCollection.get(this.url),d=c?.get(a);return d?(c.set(a,{...d,...b}),!0):b.name&&b.lockType?(c?.set(a,{...b,lockType:b.lockType}),!0):!1}async _fetchService(a,b){this.sourceJSON?(this.read(this.sourceJSON,
{origin:"service",url:D.parseUrl(a)}),a=(new v.Url(this.url)).host,g.defaultVersionNameLookup.set(a,this.defaultVersionIdentifier.name)):(a=await x(a,{responseType:"json",query:{f:"json"},...b}),this.read(a.data))}};n.__decorate([r.property()],l.prototype,"url",void 0);n.__decorate([r.property()],l.prototype,"sourceJSON",void 0);n.__decorate([r.property({type:String,json:{write:!0}})],l.prototype,"name",void 0);n.__decorate([r.property({json:{write:{target:{defaultVersionName:{type:String},defaultVersionGuid:{type:String}}},
read:{source:["defaultVersionName","defaultVersionGuid"]}}})],l.prototype,"defaultVersionIdentifier",void 0);n.__decorate([A.reader("defaultVersionIdentifier",["defaultVersionName","defaultVersionGuid"])],l.prototype,"readDefaultVersionIdentifier",null);n.__decorate([C.writer("defaultVersionIdentifier",{defaultVersionName:{type:String},defaultVersionGuid:{type:String}})],l.prototype,"writeDefaultVersionIdentifier",null);n.__decorate([r.property({json:{write:!0}})],l.prototype,"capabilities",void 0);
return l=n.__decorate([B.subclass("esri.versionManagement.VersionManagementService")],l)});