// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/maybe ../../../../core/libs/gl-matrix-2/math/mat3 ../../../../core/libs/gl-matrix-2/factories/mat3f32 ../../../../core/libs/gl-matrix-2/factories/vec2f32 ../DisplayObject ../../../webgl/enums ../../../webgl/rasterUtils".split(" "),function(g,m,f,q,h,r,n,k){const t={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",
type:"stretch"};class p extends r.DisplayObject{constructor(a=null,b=null,c=null){super();this._colormapTextureInvalidated=this._textureInvalidated=!0;this._colormap=this._colormapTexture=this._transformGridTexture=this._rasterTextureBandIds=this._rasterTexture=null;this._supportsBilinearTexture=!0;this._processedTexture=null;this.functionTextures=[];this.projected=!1;this.stencilRef=0;this.coordScale=[1,1];this._processed=!1;this.height=this._symbolizerParameters=null;this.isRendereredSource=!1;
this.pixelRatio=1;this.rotation=this.resolution=0;this.rawPixelData=this._source=null;this._suspended=!1;this.width=this._transformGrid=this._interpolation=this._bandIds=null;this.y=this.x=0;this.source=a;this.transformGrid=b;this.interpolation=c}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(a){this._processedTexture!==a&&(this._disposeTextures(!0),this._processedTexture=a)}get rasterTexture(){return this._rasterTexture}set rasterTexture(a){this._rasterTexture!==
a&&(this._rasterTexture?.dispose(),this._rasterTexture=a);null==a&&(this.projected=!1)}get processed(){return this._processed}set processed(a){this._processed=a;a||(m.disposeMaybe(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||t}set symbolizerParameters(a){this._symbolizerParameters!==a&&(this._symbolizerParameters=a,this._colormapTextureInvalidated=!0,this.commonUniforms=null)}get source(){return this._source}set source(a){this._source!==
a&&(this._source=a,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=this._rasterTexture=null),this.commonUniforms=null,this.projected=!1,this.invalidateTexture())}get suspended(){return this._suspended}set suspended(a){this._suspended&&!a&&this.stage&&(this.ready(),this.requestRender());this._suspended=a}get bandIds(){return this._bandIds}set bandIds(a){this._bandIds=a;this._isBandIdschanged(a)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||
"nearest"}set interpolation(a){this._interpolation=a;this._rasterTexture&&this._rasterTexture.setSamplingMode("bilinear"===this._getTextureSamplingMethod(a||"nearest")?n.TextureSamplingMode.LINEAR:n.TextureSamplingMode.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(a){this._transformGrid!==a&&(this._transformGrid=a,this._transformGridTexture=m.disposeMaybe(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(a=
!1){a=a||this.projected;return[a?this.width:this.source?.width||this.width,a?this.height:this.source?.height||this.height]}getRasterCellSize(){const a=this.rawPixelData?.srcPixelSize,{projected:b,resolution:c}=this;return a&&!b?[a.x,a.y]:[c,c]}_createTransforms(){return{displayViewScreenMat3:q.create()}}setTransform(a){const b=f.identity(this.transforms.displayViewScreenMat3),[c,e]=a.toScreenNoRotation([0,0],[this.x,this.y]);var d=this.resolution/this.pixelRatio/a.resolution;const l=d*this.width;
d*=this.height;const u=Math.PI*this.rotation/180;f.translate(b,b,h.fromValues(c,e));f.translate(b,b,h.fromValues(l/2,d/2));f.rotate(b,b,-u);f.translate(b,b,h.fromValues(-l/2,-d/2));f.scaleByVec2(b,b,h.fromValues(l,d));f.multiply(this.transforms.displayViewScreenMat3,a.displayViewMat3,b)}getTextures({forProcessing:a=!1,useProcessedTexture:b=!1}={}){const c=b?this._processedTexture??this._rasterTexture:this._rasterTexture,e=[],d=[];if(!c)return{names:e,textures:d};this._transformGridTexture&&!this.projected&&
(d.push(this._transformGridTexture),e.push("u_transformGrid"));if(b)return d.push(c),e.push("u_image"),this._colormapTexture&&(d.push(this._colormapTexture),e.push("u_colormap")),{names:e,textures:d};d.push(c);e.push("u_image");this._colormapTexture&&!a&&(d.push(this._colormapTexture),e.push("u_colormap"));return{names:e,textures:d}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:a}){if(this.stage){var b=this._isValidSource(this.source);b&&this._colormapTextureInvalidated&&
(this._colormapTextureInvalidated=!1,this._updateColormapTexture(a));this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(a),this._rasterTexture&&(b?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=k.createTransformTexture(a,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}else this._disposeTextures()}updateProcessedTexture(){const {functionTextures:a}=this;0!==a.length&&(this.processedTexture=
a.shift(),a.forEach(b=>b?.dispose()),a.length=0)}_createOrDestroyRasterTexture(a){const b=this.source?.extractBands(this.bandIds);if(this._isValidSource(b)){var c=!this._isBandIdschanged(this.bandIds);if(this._rasterTexture){if(c)return;this._rasterTexture.dispose();this._rasterTexture=this._rasterTextureBandIds=null}this._supportsBilinearTexture=!!a.capabilities.textureFloat?.textureFloatLinear;c=this._getTextureSamplingMethod(this.interpolation);this._rasterTexture=k.createRasterTexture(a,b,c,this.isRendereredSource||
!a.capabilities.textureFloat?.textureFloat);this._processed=this.projected=!1;this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}else this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=this._rasterTextureBandIds=null)}_isBandIdschanged(a){const b=this._rasterTextureBandIds;return!(null==b&&null==a||b&&a&&b.join("")===a.join(""))}_isValidSource(a){return null!=a&&0<a.pixels?.length}_getTextureSamplingMethod(a){var {type:b}=this.symbolizerParameters;b="lut"===b||"hillshade"===
b||"stretch"===b&&1===this.symbolizerParameters.bandCount;return!this._supportsBilinearTexture||b||"bilinear"!==a&&"cubic"!==a?"nearest":"bilinear"}_updateColormapTexture(a){const b=this._colormap,c=this.symbolizerParameters.colormap;if(!c)this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormap=null;else if(!b)this._colormapTexture=k.createColormapTexture(a,c),this._colormap=c;else if(c.length!==b.length||c.some((e,d)=>e!==b[d]))this._colormapTexture&&(this._colormapTexture.dispose(),
this._colormapTexture=null),this._colormapTexture=k.createColormapTexture(a,c),this._colormap=c}_disposeTextures(a=!1){!this._transformGridTexture||a&&!this.projected||(this._transformGridTexture.dispose(),this._transformGridTexture=null);!a&&this._colormapTexture&&(this._colormapTexture.dispose(),this._colormap=this._colormapTexture=null,this._colormapTextureInvalidated=!0);!a&&this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=this._rasterTexture=null);this._processedTexture&&
(this._processedTexture.dispose(),this._processedTexture=null)}}class v extends p{get source(){return this._source}}g.RasterBitmap=p;g.RasterBitmapWithSource=v;g.hasSource=function(a){return null!=a.source};Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});