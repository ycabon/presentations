// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["../../../../core/promiseUtils","./enums","./WorkerTile","./style/StyleRepository"],function(m,k,n,p){class q{constructor(){this._spriteInfo={};this._glyphInfo={};this._sourceDataMaxLOD=25}reset(){this._spriteInfo={};this._glyphInfo={};return Promise.resolve()}getLayers(){return this._styleRepository?.layers??[]}async createTileAndParse(a,c){var {key:b}=a;const f={};for(const d of Object.keys(a.sourceName2DataAndRefKey))f[d]=a.sourceName2DataAndRefKey[d].refKey;b=new n(b,f,this,this._styleRepository);
try{return await b.parse({...a,sourceDataMaxLOD:this._sourceDataMaxLOD},c)}catch(d){b.setObsolete();b.release();if(!m.isAbortError(d))throw d;return null}}updateStyle(a){if(a&&0!==a.length&&this._styleRepository){var c=this._styleRepository;for(const b of a)switch(a=b.data,b.type){case k.StyleUpdateType.PAINTER_CHANGED:c.setPaintProperties(a.layer,a.paint);break;case k.StyleUpdateType.LAYOUT_CHANGED:c.setLayoutProperties(a.layer,a.layout);break;case k.StyleUpdateType.LAYER_REMOVED:c.deleteStyleLayer(a.layer);
break;case k.StyleUpdateType.LAYER_CHANGED:c.setStyleLayer(a.layer,a.index);break;case k.StyleUpdateType.SPRITES_CHANGED:this._spriteInfo={}}}}setStyle(a){const {style:c,sourceDataMaxLOD:b}=a;this._styleRepository=new p(c);this._sourceDataMaxLOD=b;this._spriteInfo={};this._glyphInfo={}}fetchSprites(a,c,b){const f=[],d=this._spriteInfo;for(const e of a)void 0===d[e.name]&&f.push(e);return 0===f.length?Promise.resolve():c.invoke("getSprites",f,{signal:b?.signal}).then(e=>{for(const h in e)d[h]=e[h]})}getSpriteItems(){return this._spriteInfo}fetchGlyphs(a,
c,b,f,d){const e=[];let h=this._glyphInfo[c];h?b.forEach(g=>{h[g]||e.push(g)}):(h=this._glyphInfo[c]=[],b.forEach(g=>e.push(g)));return 0===e.length?Promise.resolve():f.invoke("getGlyphs",{tileID:a,font:c,codePoints:e},d).then(g=>{for(let l=0;l<g.length;l++)g[l]&&(h[l]=g[l])})}getGlyphItems(a){return this._glyphInfo[a]}}return q});