// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports","./util"],function(r,m){class w{constructor(b,a,d){this.tileCoordRange=b;this._visibleTiles=a;this._createUnique=d;this._tiles=new Map;this._uniqueSymbolsReferences=new Map}get uniqueSymbols(){null==this._uniqueSymbolLayerArray&&(this._uniqueSymbolLayerArray=this._createUniqueSymbolLayerArray());return this._uniqueSymbolLayerArray}get uniqueSymbolsReferences(){return this._uniqueSymbolsReferences}add(b,a){this._uniqueSymbolLayerArray=null;let d=this._tiles.get(b.id);d||(d={symbols:new Map},
this._tiles.set(b.id,d));var c=new Map;if(a)for(var e of a)d.symbols.has(e)&&(c.set(e,d.symbols.get(e)),d.symbols.delete(e));else for(var [f]of b.layerData)d.symbols.has(f)&&(c.set(f,d.symbols.get(f)),d.symbols.delete(f));this._removeSymbols(c);a=b.symbols;c=new Map;for(const [g,h]of a)if(e=h.length,32<=e){f=this.tileCoordRange;do f/=2,e/=4;while(8<e&&64<f);e=new m.GridIndex(this.tileCoordRange,this.tileCoordRange,f);c.set(g,{flat:h,index:e});d.symbols.set(g,{flat:h,index:e});for(const k of h)e.getCell(k.xTile,
k.yTile).push(k)}else c.set(g,{flat:h}),d.symbols.set(g,{flat:h});this._addSymbols(b.key,a)}deleteStyleLayers(b){this._uniqueSymbolLayerArray=null;for(const [a,d]of this._tiles){const c=new Map;for(const e of b)d.symbols.has(e)&&(c.set(e,d.symbols.get(e)),d.symbols.delete(e));this._removeSymbols(c);0===d.symbols.size&&this._tiles.delete(a)}}removeTile(b){this._uniqueSymbolLayerArray=null;const a=this._tiles.get(b.id);if(a){var d=new Map;for(const [c]of b.symbols)a.symbols.has(c)&&(d.set(c,a.symbols.get(c)),
a.symbols.delete(c));this._removeSymbols(d);0===a.symbols.size&&this._tiles.delete(b.id)}}querySymbols(b,a,d,c){c=[];var e=this.uniqueSymbols;for(const g of e){e=g.styleLayerUID;var f=g.uniqueSymbols;for(const h of f)(f=h.tileSymbols.find(k=>k.selectedForRendering))&&m.isSearchCircleOverlapingSymbol(f,b,a*(window.devicePixelRatio||1),d)&&c.push({vtlSymbol:f,styleLayerUID:e,tileKey:f.tile.key})}return c}_removeSymbols(b){for(const [d,{flat:c}]of b)for(const e of c){b=e.unique;var a=b.tileSymbols;const f=
a.length-1;for(let g=0;g<f;g++)if(a[g]===e){a[g]=a[f];break}a.length=f;0===f&&(a=this._uniqueSymbolsReferences.get(d),a.delete(b),0===a.size&&this._uniqueSymbolsReferences.delete(d));e.unique=null}}_addSymbols(b,a){if(0!==a.size){var d=this._visibleTiles;for(const c of d)c.parentTile||c.key.world!==b.world||c.key.level===b.level&&!c.key.equals(b)||this._matchSymbols(c,b,a);for(const [c,e]of a)for(const f of e)null==f.unique&&(b=this._createUnique(),f.unique=b,b.tileSymbols.push(f),a=this._uniqueSymbolsReferences.get(c),
a||(a=new Set,this._uniqueSymbolsReferences.set(c,a)),a.add(b))}}_matchSymbols(b,a,d){if(b.key.level>a.level){var c=b.key.level-a.level;if(b.key.row>>c!==a.row||b.key.col>>c!==a.col)return}if(a.level>b.key.level&&(c=a.level-b.key.level,a.row>>c!==b.key.row||a.col>>c!==b.key.col))return;if(a.equals(b.key))for(var e of b.childrenTiles)this._matchSymbols(e,a,d);else{e=new Map;for(const [h,k]of d){var f=[];for(const l of k)d=m.tileCoordChange(this.tileCoordRange,l.xTile,a.level,a.col,b.key.level,b.key.col),
c=m.tileCoordChange(this.tileCoordRange,l.yTile,a.level,a.row,b.key.level,b.key.row),0<=d&&d<this.tileCoordRange&&0<=c&&c<this.tileCoordRange&&f.push({symbol:l,xTransformed:d,yTransformed:c});d=[];c=b.key.level<a.level?1:1<<b.key.level-a.level;const n=this._tiles.get(b.id).symbols.get(h);if(n){const l=n.flat;for(const q of f){var g=!1;let t;const u=q.xTransformed,v=q.yTransformed;t=null!=n.index?n.index.getCell(u,v):l;f=q.symbol;const x=f.hash;for(const p of t)if(x===p.hash&&Math.abs(u-p.xTile)<=
c&&Math.abs(v-p.yTile)<=c){g=p.unique;f.unique=g;g.tileSymbols.push(f);g=!0;break}g||d.push(f)}}0<d.length&&e.set(h,d)}for(const h of b.childrenTiles)this._matchSymbols(h,a,e)}}_createUniqueSymbolLayerArray(){var b=this._uniqueSymbolsReferences;const a=Array(b.size);let d=0;for(const [c,e]of b){const f=Array(e.size);b=0;for(const g of e)f[b++]=g;a[d]={styleLayerUID:c,uniqueSymbols:f};d++}return a}}r.SymbolRepository=w;Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});