// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["../expression/expression","../expression/types"],function(e,f){class c{constructor(a){this._expression=a}filter(a,b){if(!this._expression)return!0;try{return this._expression.evaluate(a,b)}catch(d){return console.log(d.message),!0}}static createFilter(a){if(!a)return null;this.isLegacyFilter(a)&&(a=this.convertLegacyFilter(a));try{const b=e.createExpression(a,null,f.booleanType);return new c(b)}catch(b){return console.log(b.message),null}}static isLegacyFilter(a){if(!Array.isArray(a)||0===
a.length)return!0;switch(a[0]){case "\x3d\x3d":case "!\x3d":case "\x3e":case "\x3c":case "\x3e\x3d":case "\x3c\x3d":return 3===a.length&&"string"===typeof a[1]&&!Array.isArray(a[2]);case "in":return 3<=a.length&&"string"===typeof a[1]&&!Array.isArray(a[2]);case "!in":return!0;case "any":case "all":for(let b=1;b<a.length;b++)if(this.isLegacyFilter(a[b]))return!0;return!1;case "none":return!0;case "has":return 2===a.length&&("$id"===a[1]||"$type"===a[1]);case "!has":return!0;default:return!1}}static convertLegacyFilter(a){if(!Array.isArray(a)||
0===a.length)return!0;const b=a[0];if(1===a.length)return"any"!==b;switch(b){case "\x3d\x3d":return c.convertComparison("\x3d\x3d",a[1],a[2]);case "!\x3d":return c.negate(c.convertComparison("\x3d\x3d",a[1],a[2]));case "\x3e":case "\x3c":case "\x3e\x3d":case "\x3c\x3d":return c.convertComparison(b,a[1],a[2]);case "in":return c.convertIn(a[1],a.slice(2));case "!in":return c.negate(c.convertIn(a[1],a.slice(2)));case "any":case "all":case "none":return c.convertCombining(b,a.slice(1));case "has":return c.convertHas(a[1]);
case "!has":return c.negate(c.convertHas(a[1]));default:throw Error("Unexpected legacy filter.");}}static convertComparison(a,b,d){switch(b){case "$type":return[a,["geometry-type"],d];case "$id":return[a,["id"],d];default:return[a,["get",b],d]}}static convertIn(a,b){switch(a){case "$type":return["in",["geometry-type"],["literal",b]];case "$id":return["in",["id"],["literal",b]];default:return["in",["get",a],["literal",b]]}}static convertHas(a){switch(a){case "$type":return!0;case "$id":return["has-id"];
default:return["has",a]}}static convertCombining(a,b){return[a].concat(b.map(this.convertLegacyFilter))}static negate(a){return["!",a]}}return c});