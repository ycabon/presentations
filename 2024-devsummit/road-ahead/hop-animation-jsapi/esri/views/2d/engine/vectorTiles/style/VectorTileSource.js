// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../../../core/lang ../../../../../core/urlUtils ../../../../../geometry/Extent ../../../../../layers/support/TileInfo ../../../../../layers/support/TilemapCache ../TilemapIndex ../TilemapRequest ./VectorTilesRequestManager".split(" "),function(k,g,h,l,m,n,p,q){class r{constructor(a,b,d){this.initialExtent=this.fullExtent=this.capabilities=this.tileInfo=this.tilemap=null;this.name=a;this.sourceUrl=b;a=g.urlToObject(this.sourceUrl);b=k.clone(d);var c=b.tiles;if(a)for(var e=0;e<c.length;e++){var f=
g.urlToObject(c[e]);f&&(g.isAbsolute(f.path)||(f.path=g.join(a.path,f.path)),c[e]=g.addQueryParameters(f.path,{...a.query,...f.query}))}this.tileServers=c;e=d.capabilities&&d.capabilities.split(",").map(t=>t.toLowerCase().trim());c=!0===d?.exportTilesAllowed;e=!0===e?.includes("tilemap");f=c&&d.hasOwnProperty("maxExportTilesCount")?d.maxExportTilesCount:0;this.capabilities={operations:{supportsExportTiles:c,supportsTileMap:e},exportTiles:c?{maxExportTilesCount:+f}:null};this.tileInfo=l.fromJSON(b.tileInfo);
c=d.tileMap?g.addQueryParameters(g.join(a.path,d.tileMap),a.query??{}):null;e?(this.type="vector-tile",this.tilemap=new p(new m.TilemapCache({layer:{parsedUrl:a,tileInfo:this.tileInfo},minLOD:b.minLOD??this.tileInfo.lods[0].level,maxLOD:b.maxLOD??this.tileInfo.lods[this.tileInfo.lods.length-1].level}),c)):c&&(this.tilemap=new n(c));this.fullExtent=h.fromJSON(d.fullExtent);this.initialExtent=h.fromJSON(d.initialExtent)}destroy(){this.tilemap?.destroy()}async getRefKey(a,b){return await this.tilemap?.dataKey(a,
b)??a}requestTile(a,b,d,c){return q.request(this.tileServers[b%this.tileServers.length],a,b,d,c)}isCompatibleWith(a){var b=this.tileInfo;a=a.tileInfo;if(!b.spatialReference.equals(a.spatialReference)||!b.origin.equals(a.origin)||Math.round(b.dpi)!==Math.round(a.dpi))return!1;b=b.lods;a=a.lods;const d=Math.min(b.length,a.length);for(let c=0;c<d;c++){const e=b[c],f=a[c];if(e.level!==f.level||Math.round(e.scale)!==Math.round(f.scale))return!1}return!0}}return r});