// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/Error ../../../../core/has ../../../../core/Logger ../../../../core/promiseUtils ./definitions ./DisplayId ./Utils ../../../webgl/enums ../../../webgl/FramebufferObject ../../../webgl/Texture ../../../webgl/TextureDescriptor".split(" "),function(v,w,l,C,D,g,x,m,q,E,y,z){const A=()=>C.getLogger("esri.views.2d.engine.webgl.AttributeStoreView");class B{constructor(a,b,c,d){this._lastTexture=this._texture=null;this._fbos={};this.texelSize=4;const {buffer:e,pixelType:f,
textureOnly:h}=a;a=m.getPixelArrayCtor(f);this.blockIndex=d;this.shared=c;this.pixelType=f;this.size=b;this.textureOnly=h;h||(this.data=new a(e));this._resetRange()}destroy(){this._texture?.dispose();for(const a in this._fbos){const b=this._fbos[a];b&&("0"===a&&b.detachColorTexture(),b.dispose());this._fbos[a]=null}this._texture=null}get _textureDesc(){const a=new z.TextureDescriptor;a.wrapMode=q.TextureWrapMode.CLAMP_TO_EDGE;a.samplingMode=q.TextureSamplingMode.NEAREST;a.dataType=this.pixelType;
a.width=this.size;a.height=this.size;return a}setData(a,b,c){a=x.getDisplayIdTexel(a);const d=this.data;b=a*this.texelSize+b;!d||b>=d.length||(d[b]=c,this.dirtyStart=Math.min(this.dirtyStart,a),this.dirtyEnd=Math.max(this.dirtyEnd,a))}getData(a,b){if(null==this.data)return null;a=x.getDisplayIdTexel(a)*this.texelSize+b;return!this.data||a>=this.data.length?null:this.data[a]}getTexture(a){return this._texture??this._initTexture(a)}getFBO(a,b=0){if(!this._fbos[b]){const c=0===b?this.getTexture(a):this._textureDesc;
this._fbos[b]=new E.FramebufferObject(a,c)}return this._fbos[b]}get hasDirty(){return this.dirtyEnd>=this.dirtyStart}updateTexture(a,b){try{const k=this.dirtyStart,n=this.dirtyEnd;if(this.hasDirty){l("esri-2d-update-debug")&&console.debug(`Version[${b}] AttributeStoreView.updateTexture`,{start:k,end:n,firstBytes:new Uint8Array(this.data.buffer.slice(0,16)),block:this});this._resetRange();var c=this.data.buffer,d=this.getTexture(a),e=(k-k%this.size)/this.size,f=(n-n%this.size)/this.size,h=e*this.size*
4,r=4*(this.size+f*this.size)-h,p=m.getPixelArrayCtor(this.pixelType),t=new p(c,h*p.BYTES_PER_ELEMENT,r),u=this.size;a=f-e+1;a>this.size?A().error(new w("mapview-webgl","Out-of-bounds index when updating AttributeData")):d.updateData(0,0,e,u,a,t)}}catch(k){}}update(a){const {data:b,start:c,end:d}=a;if(null!=b&&null!=this.data){const e=this.data,f=c*this.texelSize;for(let h=0;h<b.length;h++)a.layout&1<<h%this.texelSize&&(e[f+h]=b[h])}this.dirtyStart=Math.min(this.dirtyStart,c);this.dirtyEnd=Math.max(this.dirtyEnd,
d)}resize(a,b){const c=this.size;this.size=b;this.textureOnly?c!==this.size&&(this._lastTexture=this._texture,this._texture=null):(b=m.getPixelArrayCtor(this.pixelType),this.destroy(),this.data=new b(a.buffer))}_resetRange(){this.dirtyStart=2147483647;this.dirtyEnd=0}_initTexture(a){const b=new y.Texture(a,this._textureDesc,this.data??void 0);if(null!=this._lastTexture&&this._fbos[0]){const e=this._lastTexture.descriptor.width,f=this._lastTexture.descriptor.height,h=this._lastTexture.descriptor.dataType,
r=this._lastTexture.descriptor.pixelFormat,p=this.getFBO(a);var c=m.getPixelBytes(h),d=m.getPixelArrayCtor(h);c=new ArrayBuffer(e*f*c*this.texelSize);d=new d(c);c=a.getBoundFramebufferObject();const {x:t,y:u,width:k,height:n}=a.getViewport();a.bindFramebuffer(p);p.readPixels(0,0,e,f,r,h,d);b.updateData(0,0,0,2*e,f/2,d);a.setViewport(t,u,k,n);a.bindFramebuffer(c)}this.destroy();return this._texture=b}}class F{constructor(){this.size=0;this._locked=this._initialized=!1;this._version=0;this._forceNextUpload=
!1}initialize(a){const {blocks:b,shared:c,size:d}=a;this.shared=c;this.size=d;l("esri-2d-update-debug")&&console.debug("AttributeStoreView.initialize",{message:a});if(null==this._data)this._data=b.map((e,f)=>null!=e?new B(e,d,c,f):null);else for(a=0;a<this._data.length;a++){const e=this._data[a],f=b[a];null!=f&&(null==e?this._data[a]=new B(f,d,c,a):e.resize(f,d))}this._initialized=!0}destroy(){for(const a of this._data??[])a?.destroy();this._defaultTexture?.dispose();this._pendingAttributeUpdate&&
this._pendingAttributeUpdate.resolver.reject()}isEmpty(){return null==this._data}getBlock(a){return null==this._data?null:this._data[a]}setLabelMinZoom(a,b){this.setData(a,0,1,b)}getLabelMinZoom(a){return this.getData(a,0,1,255)}getFilterFlags(a){return this.getData(a,0,0,0)}getVVSize(a){return this.getData(a,g.AttributeDataType.VV,0,0)}getData(a,b,c,d){if(!this._data)return 0;b=this._data[b];if(null==b)return 0;a=b.getData(a,c);return null!=a?a:d}setData(a,b,c,d){this._data[b].setData(a,c,d)}lockTextureUpload(){this._locked=
!0}unlockTextureUpload(){this._locked=!1;this._forceNextUpload=!0}async requestUpdate(a){if(this._pendingAttributeUpdate)A().error(new w("mapview-webgl","Tried to update attribute data with a pending update"));else{var b=D.createResolver();this._version=a.version;this._pendingAttributeUpdate={data:a,resolver:b};l("esri-2d-update-debug")&&console.debug(`Version[${this._version}] AttributeStoreView.requestUpdate`,{message:a});return b.promise}}update(){if(this._initialized&&(!this._locked||this._forceNextUpload)&&
(this._forceNextUpload=!1,null!=this._pendingAttributeUpdate)){const {data:a}=this._pendingAttributeUpdate,b=this._data;for(let c=0;c<a.blocks.length;c++){const d=a.blocks[c],e=b[c];null!=e&&null!=d&&(l("esri-2d-update-debug")&&console.debug(`Version[${this._version}] CpuBlock[${c}] AttributeStoreView.update`,{block:d}),e.update(d))}this._pendingAttributeUpdate.resolver.resolve();this._pendingAttributeUpdate=null;l("esri-2d-update-debug")&&console.debug(`Version[${this._version}] AttributeStoreView.update`)}}getUniforms(a){return{filterFlags:{texture:this._getTexture(a,
g.AttributeDataType.FilterFlags),unit:g.filterFlagsUnit},animation:{texture:this._getTexture(a,g.AttributeDataType.Animation),unit:g.animationUnit},gpgpu:{texture:this._getTexture(a,g.AttributeDataType.GPGPU),unit:g.gpgpuUnit},visualVariableData:{texture:this._getTexture(a,g.AttributeDataType.VV),unit:g.visualVariableUnit},dataDriven0:{texture:this._getTexture(a,g.AttributeDataType.DD0),unit:g.dataDrivenUnit0},dataDriven1:{texture:this._getTexture(a,g.AttributeDataType.DD1),unit:g.dataDrivenUnit1},
dataDriven2:{texture:this._getTexture(a,g.AttributeDataType.DD2),unit:g.dataDrivenUnit2},size:this.size}}_getTexture(a,b){b=this._data?.[b];if(!b)return this._getDefaultTexture(a);b.updateTexture(a,this._version);return b.getTexture(a)}_getDefaultTexture(a){if(null==this._defaultTexture){const b=new z.TextureDescriptor;b.wrapMode=q.TextureWrapMode.CLAMP_TO_EDGE;b.samplingMode=q.TextureSamplingMode.NEAREST;b.width=1;b.height=1;this._defaultTexture=new y.Texture(a,b,new Uint8Array(4))}return this._defaultTexture}}
v.AttributeStoreView=F;Object.defineProperty(v,Symbol.toStringTag,{value:"Module"})});