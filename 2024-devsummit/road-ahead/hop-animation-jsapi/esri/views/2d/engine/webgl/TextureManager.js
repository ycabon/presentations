// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../../config ../../../../request ../../../../core/BidiText ../../../../core/Error ../../../../core/fontUtils ../../../../core/has ../../../../core/Logger ../../../../core/promiseUtils ../../../../core/screenUtils ../../../../core/string ../../../../symbols/cim/CIMResourceManager ../../../../symbols/cim/CIMSymbolHelper ../../../../symbols/cim/Rasterizer ./definitions ./enums ./GlyphMosaic ./GlyphSource ./SDFConverter ./SpriteMosaic ./Utils ./animatedFormats/AnimatableTextureResource ../../../support/QueueProcessor ../../../webgl/enums".split(" "),
function(y,z,A,t,B,C,D,u,p,E,F,G,H,k,q,I,J,K,L,v,M,N,w){function r(a){switch(a.type){case "CIMVectorMarker":case "CIMPictureMarker":return a&&"markerPlacement"in a&&a.markerPlacement&&"CIMMarkerPlacementInsidePolygon"===a.markerPlacement.type;default:return!0}}const l=(a,b,c)=>D.getLogger("esri.views.2d.engine.webgl.TextureManager").error(new t(a,b,c));class x{static fromMosaic(a,b){return new x(a,b.page,b.sdf)}constructor(a,b,c){this.mosaicType=a;this.page=b;this.sdf=c}}class O{constructor(a){this._requestRender=
a;this._resourceManager=new F;this._invalidFontsMap=new Map;this._sdfConverter=new K(k.sdfTextureSize);this._bindingInfos=[];this._hashToBindingIndex=new Map;this._ongoingRasterizations=new Map;this._imageRequestQueue=new N.QueueProcessor({concurrency:10,process:async(b,c)=>{u.throwIfAborted(c);try{return await z(b,{responseType:"image",signal:c})}catch(d){if(!u.isAbortError(d))throw new t("mapview-invalid-resource",`Could not fetch requested resource at ${b}`,d);throw d;}}});this._spriteMosaic=new L(2048,
2048,500);this._glyphSource=new J(`${y.fontsUrl}/{fontstack}/{range}.pbf`);this._glyphMosaic=new I(1024,1024,this._glyphSource);this._rasterizer=new H(this.resourceManager)}dispose(){this._spriteMosaic.dispose();this._glyphMosaic.dispose();this._rasterizer.dispose();this._sdfConverter.dispose();this._sdfConverter=this._glyphMosaic=this._spriteMosaic=null;this._hashToBindingIndex.clear();this._bindingInfos=this._hashToBindingIndex=null;this._ongoingRasterizations.clear();this._ongoingRasterizations=
null;this._imageRequestQueue.clear();this._imageRequestQueue=null;this._resourceManager.destroy()}get sprites(){return this._spriteMosaic}get glyphs(){return this._glyphMosaic}get resourceManager(){return this._resourceManager}async rasterizeItem(a,b){if(null==a)return l("mapview-null-resource","Unable to rasterize null resource"),null;if("cim-rasterization-info"!==a.type)return l("mapview-unexpected-resource","Unable to rasterize resource"),null;({resource:a}=a);if("text"===a.type){b=await this._rasterizeText(a,
b);for(var c of b.glyphs)this._setTextureBinding(q.MosaicType.GLYPH,c);return b}(c=await this._rasterizeSprite(a,b))&&this._setTextureBinding(q.MosaicType.SPRITE,c);return c}getMosaicInfo(a,b,c=!1){a=this._getTextureBindingInfo(a,b,c);return a?{size:a.size,texture:{texture:a.texture,unit:"sprite"===a.type?k.textureBindingSpriteAtlas:k.textureBindingGlyphAtlas}}:(l("mapview-invalid-resource",`Unable to find resource for ${b}`),{size:[0,0],texture:{texture:null,unit:0}})}_getTextureBindingInfo(a,b,
c){var d=this._bindingInfos[b-1];b=d.page;c=c?w.TextureSamplingMode.LINEAR_MIPMAP_LINEAR:w.TextureSamplingMode.LINEAR;switch(d.mosaicType){case q.MosaicType.SPRITE:d=this.sprites.getWidth(b);var f=this.sprites.getHeight(b);d=[d,f];a=this._spriteMosaic.getTexture(a,b);a.setSamplingMode(c);return{type:"sprite",texture:a,size:d};case q.MosaicType.GLYPH:return d=[this.glyphs.width,this.glyphs.height],f=this._glyphMosaic.getTexture(a,b),this._glyphMosaic.bind(a,c,b,k.textureBindingGlyphAtlas),f.setSamplingMode(c),
{type:"glyph",texture:f,size:d};default:return l("mapview-texture-manager",`Cannot handle unknown type ${d.mosaicType}`),null}}_hashMosaic(a,b){return 1|a<<1|(b.sdf?1:0)<<2|b.page<<3}_setTextureBinding(a,b){const c=this._hashMosaic(a,b);this._hashToBindingIndex.has(c)||(a=x.fromMosaic(a,b),this._hashToBindingIndex.set(c,this._bindingInfos.length+1),this._bindingInfos.push(a));b.textureBinding=this._hashToBindingIndex.get(c)}async _rasterizeText(a,b){const {font:c,textString:d}=a;a=B.getFullyQualifiedFontName(c);
var f=this._invalidFontsMap.has(a);const [e,g]=A.bidiText(d),h=v.charCodes(e);try{return f=f?"arial-unicode-ms-regular":a,C("esri-2d-stabilize-glyphs")&&await this._glyphMosaic.preloadASCIIGlyphCache(f),{type:"glyphs",glyphs:await this._glyphMosaic.getGlyphItems(f,h,b),isRightToLeft:g}}catch(m){return l("mapview-invalid-resource",`Couldn't find font ${a}. Falling back to Arial Unicode MS Regular`),this._invalidFontsMap.set(a,!0),{type:"glyphs",glyphs:await this._glyphMosaic.getGlyphItems("arial-unicode-ms-regular",
h,b),isRightToLeft:g}}}_hashSpriteResource(a){switch(a.type){case "path":return`path:${a.path}.${a.asFill?1:0}`;case "CIMPictureMarker":return`${a.type}:${a.url}:${a.size}`;case "CIMPictureFill":return`${a.type}:${a.url}:${a.height}`;case "CIMPictureStroke":return`${a.type}:${a.url}:${a.width}`;case "dash":return`dash:${a.capStyle}.${a.dashTemplate.join("")}`;case "sdf":return`sdf:${JSON.stringify(a.geom)}.${a.asFill?1:0}`;case "fill-style":return`fill_style:${a.style}`;case "animated":return JSON.stringify(a);
case "CIMHatchFill":return JSON.stringify(a);case "CIMVectorMarker":return JSON.stringify(a)}}async _rasterizeSprite(a,b){if(!a)return null;const c=E.numericHash(this._hashSpriteResource(a));if(this._spriteMosaic.has(c))return this._spriteMosaic.getSpriteItem(c);if("url"in a&&a.url||"CIMPictureFill"===a.type||"CIMPictureStroke"===a.type||"CIMPictureMarker"===a.type||"CIMVectorMarker"===a.type){const d=[];G.CIMSymbolHelper.fetchResources({type:"CIMPointSymbol",symbolLayers:[a]},this._resourceManager,
d);0<d.length&&await Promise.all(d)}switch(a.type){case "CIMPictureMarker":return"CIMMarkerPlacementInsidePolygon"===a.markerPlacement?.type?this._rasterizeJSONResource(c,a):this._handleAsyncResource(c,a,b);case "animated":return this._handleAsyncResource(c,a,b);case "CIMPictureFill":case "CIMPictureStroke":case "path":return this._handleAsyncResource(c,a,b);case "sdf":case "dash":case "fill-style":case "CIMVectorMarker":case "CIMHatchFill":return this._rasterizeJSONResource(c,a)}}_rasterizeJSONResource(a,
b){var c=this._rasterizer,d=c.rasterizeJSONResource;a:{switch(b.type){case "fill-style":case "CIMHatchFill":var f=k.patternFillRasterizationScale;break a}f=1}if(c=d.call(c,b,f)){const {size:e,image:g,sdf:h,simplePattern:m,rasterizationScale:n}=c;return this._addItemToMosaic(a,e,{type:"static",data:g},r(b),h,m,n)}return null}async _handleAsyncResource(a,b,c){if(this._ongoingRasterizations.has(a))return this._ongoingRasterizations.get(a);b="path"===b.type?this._handleSVG(b,a,c):this._handleImage(b,
a,c);this._ongoingRasterizations.set(a,b);b.finally(()=>this._ongoingRasterizations.delete(a));return b}async _handleSVG(a,b,c){const d=[k.sdfTextureSize,k.sdfTextureSize],{asFill:f}=a;a=await this._sdfConverter.draw(a.path,f,c);return this._addItemToMosaic(b,d,{type:"static",data:new Uint32Array(a.buffer)},!1,!0,!0)}async _handleGIFOrPNG(a,b,c){const d=this.resourceManager.getResource(a.url);if(null==d)return null;const {width:f,height:e}=d;if(d instanceof HTMLImageElement){if("animated"===a.type)return l("mapview-unexpected-resource",
"Attempt to configure animations for a non-animated image."),null;const {size:h,sdf:m,image:n}=this._rasterizer.rasterizeImageResource(f,e,d,"colorSubstitutions"in a?a.colorSubstitutions:void 0);return this._addItemToMosaic(b,h,{type:"static",data:n},r(a),m,!1)}let g;"animated"===a.type?(c=!1,g={playAnimation:a.playAnimation,reverseAnimation:a.reverseAnimation,randomizeStartTime:a.randomizeStartTime,randomizeStartSeed:a.randomizeStartSeed,startTimeOffset:a.startTimeOffset,duration:a.duration,repeatType:a.repeatType,
repeatDelay:a.repeatDelay},a=a.startGroup||0):(c=r(a),g={},a=0);a=new M.AnimatableTextureResource(d,this._requestRender,g,a);return this._addItemToMosaic(b,[a.width,a.height],{type:"animated",data:a},c,!1,!1)}async _handleImage(a,b,c){const d=a.url;var f;(f=d&&(d.includes(".gif")||null!=d&&d.startsWith("data:image/gif")))||(f=d&&(d.includes(".png")||null!=d&&d.startsWith("data:image/png")));if(f)return this._handleGIFOrPNG(a,b,c);if("animated"===a.type)return l("mapview-unexpected-resource","Attempt to configure animations for a non-animated image."),
null;try{let e;const g=this.resourceManager.getResource(d);if(null!=g&&g instanceof HTMLImageElement)e=g;else{const {data:P}=await this._imageRequestQueue.push(d,{...c});e=P}v.isSVGImage(d)&&("width"in a&&"height"in a?(e.width=p.pt2px(a.width),e.height=p.pt2px(a.height)):"cim"in a&&(e.width=p.pt2px(a.width??a.scaleX*a.size),e.height=p.pt2px(a.size)));if(!e.width||!e.height)return null;const {size:h,sdf:m,image:n}=this._rasterizer.rasterizeImageResource(e.width,e.height,e,"colorSubstitutions"in a?
a.colorSubstitutions:void 0);return this._addItemToMosaic(b,h,{type:"static",data:n},r(a),m,!1)}catch(e){if(!u.isAbortError(e))throw new t("mapview-invalid-resource",`Could not fetch requested resource at ${d}. ${e.message}`);throw e;}}_addItemToMosaic(a,b,c,d,f,e,g){return this._spriteMosaic.addSpriteItem(a,b,c,d,f,e,g)}}return O});