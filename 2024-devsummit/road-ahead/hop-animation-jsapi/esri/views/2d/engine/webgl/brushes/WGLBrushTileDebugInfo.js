// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../../../core/libs/gl-matrix-2/factories/vec4f32 ../DefaultVertexAttributeLayouts ../FeatureTile ./WGLBrush ../shaders/BackgroundPrograms ../shaders/TileInfoPrograms ../../../../webgl/BufferObject ../../../../webgl/enums ../../../../webgl/ProgramTemplate ../../../../webgl/Texture ../../../../webgl/TextureDescriptor ../../../../webgl/VertexArrayObject".split(" "),function(w,h,x,y,k,l,m,f,n,z,A,p){class B extends y{constructor(){super(...arguments);this._color=w.fromValues(1,0,0,1)}dispose(){this._outlineProgram?.dispose();
this._outlineProgram=null;this._tileInfoProgram?.dispose();this._tileInfoProgram=null;this._outlineVertexArrayObject?.dispose();this._outlineVertexArrayObject=null;this._tileInfoVertexArrayObject?.dispose();this._ctx=this._tileInfoVertexArrayObject=null}prepareState({context:a}){a.setBlendingEnabled(!0);a.setBlendFunctionSeparate(f.BlendFactor.ONE,f.BlendFactor.ONE_MINUS_SRC_ALPHA,f.BlendFactor.ONE,f.BlendFactor.ONE_MINUS_SRC_ALPHA);a.setColorMask(!0,!0,!0,!0);a.setStencilWriteMask(0);a.setStencilTestEnabled(!1)}draw(a,
c){const {context:b,requestRender:d,allowDelayedRender:e}=a;if(!(!c.isReady&&c instanceof x.FeatureTile&&c.hasData))if(this._loadWGLResources(b),!e||null==d||this._outlineProgram.compiled&&this._tileInfoProgram.compiled){b.bindVAO(this._outlineVertexArrayObject);b.useProgram(this._outlineProgram);this._outlineProgram.setUniformMatrix3fv("u_dvsMat3",c.transforms.displayViewScreenMat3);this._outlineProgram.setUniform2f("u_coord_range",c.rangeX,c.rangeY);this._outlineProgram.setUniform1f("u_depth",0);
this._outlineProgram.setUniform4fv("u_color",this._color);b.drawArrays(f.PrimitiveType.LINE_STRIP,0,4);if(a=this._getTexture(b,c))b.bindVAO(this._tileInfoVertexArrayObject),b.useProgram(this._tileInfoProgram),b.bindTexture(a,0),this._tileInfoProgram.setUniformMatrix3fv("u_dvsMat3",c.transforms.displayViewScreenMat3),this._tileInfoProgram.setUniform1f("u_depth",0),this._tileInfoProgram.setUniform2f("u_coord_ratio",c.rangeX/c.width,c.rangeY/c.height),this._tileInfoProgram.setUniform2f("u_delta",0,0),
this._tileInfoProgram.setUniform2f("u_dimensions",a.descriptor.width,a.descriptor.height),b.drawArrays(f.PrimitiveType.TRIANGLE_STRIP,0,4);b.bindVAO()}else d()}_loadWGLResources(a){if(!this._outlineProgram||!this._tileInfoProgram){var c=n.createProgram(a,k.background),b=n.createProgram(a,l.tileInfo),d=new Int8Array([0,0,1,0,1,1,0,1]);d=m.BufferObject.createVertex(a,f.Usage.STATIC_DRAW,d);d=new p.VertexArrayObject(a,k.background.attributes,h.Pos2b,{geometry:d});var e=new Int8Array([0,0,1,0,0,1,1,1]);
e=m.BufferObject.createVertex(a,f.Usage.STATIC_DRAW,e);a=new p.VertexArrayObject(a,l.tileInfo.attributes,h.Pos2b,{geometry:e});this._outlineProgram=c;this._tileInfoProgram=b;this._outlineVertexArrayObject=d;this._tileInfoVertexArrayObject=a}}_getTexture(a,c){if(!this._ctx){var b=document.createElement("canvas");b.width=512;b.height=512;this._ctx=b.getContext("2d")}c.tileDebugInfoTexture||(b=new A.TextureDescriptor,b.wrapMode=f.TextureWrapMode.CLAMP_TO_EDGE,b.samplingMode=f.TextureSamplingMode.LINEAR,
b.isImmutable=!0,b.width=512,b.height=512,c.tileDebugInfoTexture=new z.Texture(a,b));a=this._ctx;a.clearRect(0,0,a.canvas.width,a.canvas.height);a.textAlign="left";a.textBaseline="top";a.font="14px sans-serif";a.lineWidth=2;a.fillStyle="white";a.strokeStyle="black";var {debugSlot:d}=c;b=8+99.2*d;d=`${d}) ${c.key.id} (${c.constructor.name})`;a.strokeText(d,8,b);a.fillText(d,8,b);b+=16;({debugInfo:d}=c);if(d){const {length:q,minOrderedLength:r,minUnorderedLength:t,triangleCount:g}=d.display;if(0<q){var e=
`Length: ${q}`;a.strokeText(e,8,b);a.fillText(e,8,b);b+=16}r&&(e=`Min ordered length: ${r}`,a.strokeText(e,8,b),a.fillText(e,8,b),b+=16);t&&(e=`Min unordered length: ${t}`,a.strokeText(e,8,b),a.fillText(e,8,b),b+=16);0<g&&(1E5<g&&(a.fillStyle="red",a.strokeStyle="white"),e=`Triangle count: ${g}`,a.strokeText(e,8,b),a.fillText(e,8,b),b+=16);const {bytesUsed:u,bytesReserved:v}=d.memory;a.fillStyle="white";a.strokeStyle="black";if(0<u||0<v)d=`Memory usage: ${u} of ${v} bytes`,a.strokeText(d,8,b),a.fillText(d,
8,b),b+=16}c.tileDebugInfoTexture.setData(a.canvas);return c.tileDebugInfoTexture}}return B});