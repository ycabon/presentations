// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../core/has ../../../../../core/maybe ../PooledUint32Array ./FreeList ../../../../webgl/BufferObject ../../../../webgl/enums".split(" "),function(l,u,m,n,q,k,p){class r{constructor(b,a,c,d){this._pool=d;d=n.PooledUint32Array.create(a*c*Uint32Array.BYTES_PER_ELEMENT,this._pool);this.size=a;this.strideInt=c;this.bufferType=b;this.dirty={start:Infinity,end:0};this.memoryStats={bytesUsed:0,bytesReserved:a*c*Uint32Array.BYTES_PER_ELEMENT};this._gpu=null;this._cpu=d;this.clear()}get elementSize(){return this._cpu.length/
this.strideInt}get intSize(){return this.fillPointer*this.strideInt}get byteSize(){return this.intSize*Uint32Array.BYTES_PER_ELEMENT}get invalidated(){return 0<this.bufferSize&&!this._gpu}get invalidatedComputeBuffer(){return 0<this.bufferSize&&!this._gpuComputeTriangles}invalidate(){this._invalidateTriangleBuffer();this._gpu?.dispose();this._gpu=null}_invalidateTriangleBuffer(){this._gpuComputeTriangles?.dispose();this._gpuComputeTriangles=null}destroy(){this._gpu?.dispose();this._gpuComputeTriangles?.dispose();
this._cpu?.destroy()}clear(){this.dirty.start=Infinity;this.dirty.end=0;this.freeList=new q.FreeList({start:0,end:this._cpu.length/this.strideInt});this.fillPointer=0}ensure(b){if(!(this.maxAvailableSpace()>=b)&&b*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const a=this._cpu.length/this.strideInt;b=Math.round(1.25*(a+b));this._cpu.expand(b*this.strideInt*Uint32Array.BYTES_PER_ELEMENT);this.freeList.free(a,b-a);this.memoryStats.bytesReserved+=(b-a)*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}}set(b,
a){this._cpu.array[b]!==a&&(this._cpu.array[b]=a,this.dirty.start=Math.min(b,this.dirty.start),this.dirty.end=Math.max(b+1,this.dirty.end))}getGPUBuffer(b,a=!1){if(!this.bufferSize)return null;if(a){if("index"!==this.bufferType)throw Error("Tired to get triangle buffer, but target is not an index buffer");null==this._gpuComputeTriangles&&(this._gpuComputeTriangles=this._createComputeBuffer(b));return this._gpuComputeTriangles}null==this._gpu&&(this._gpu=this._createBuffer(b));return this._gpu}getView(b,
a){return this._cpu.getUint32View(b,a/Uint32Array.BYTES_PER_ELEMENT)}get bufferSize(){return this._cpu.length/this.strideInt}maxAvailableSpace(){return this.freeList.maxAvailableSpace()}insert(b,a,c,d){const g=c*this.strideInt;if(!g)return 0;b=new Uint32Array(b,a*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,g);a=this.freeList.firstFit(c);m.assertIsSome(a,"First fit region must be defined");const e=a*this.strideInt;this._cpu.array.set(b,e);if(0!==d)for(let f=0;f<b.length;f++)this._cpu.array[f+e]+=
d;this.dirty.start=Math.min(this.dirty.start,e);this.dirty.end=Math.max(this.dirty.end,e+g);this.fillPointer=Math.max(this.fillPointer,e+g);this.memoryStats.bytesUsed+=c*this.strideInt*Uint32Array.BYTES_PER_ELEMENT;return a}copyFrom(b,a,c,d,g){const e=c*this.strideInt;if(!e)return 0;var f=b._cpu.getUint32View(a*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,e);b=this.freeList.firstFit(c);m.assertIsSome(b,"First fit region must be defined");a=b*this.strideInt;this._cpu.array.set(f,a);if(0!==d)for(f=
0;f<e;f++)this._cpu.array[a+f*this.strideInt+g]+=d;this.dirty.start=Math.min(this.dirty.start,a);this.dirty.end=Math.max(this.dirty.end,a+e);this.fillPointer=Math.max(this.fillPointer,a+e);this.memoryStats.bytesUsed+=c*this.strideInt*Uint32Array.BYTES_PER_ELEMENT;return b}free(b,a,c){const d=b*this.strideInt,g=(b+a)*this.strideInt;if(!0===c)for(c=b;c!==b+a;c++)this._cpu.array[c*this.strideInt]=2147450879;this.dirty.start=Math.min(this.dirty.start,d);this.dirty.end=Math.max(this.dirty.end,g);this.freeList.free(b,
a);this.memoryStats.bytesUsed-=a*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}upload(){this.dirty.end&&(this._invalidateTriangleBuffer(),null!=this._gpu&&this._gpu.setSubData(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=Infinity,this.dirty.end=0)}reshuffle(b,a){if(0!==a.length){var c=b*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,d=this._cpu,g=n.PooledUint32Array.create(c,this._pool);for(const e of a)for(a=0;a<e.count;a++){const f=(e.dstFrom+a)*this.strideInt,
t=(e.srcFrom+a)*this.strideInt;for(let h=0;h<this.strideInt;h++)g.array[f+h]=d.array[t+h]+e.mutate}this._cpu.destroy();this._cpu=g;this.invalidate();this.dirty.start=0;this.dirty.end=b;this.freeList.clear();this.memoryStats.bytesUsed=this.memoryStats.bytesReserved=c}}_createBuffer(b){const a=p.Usage.DYNAMIC_DRAW;return"index"===this.bufferType?k.BufferObject.createIndex(b,a,this._cpu.array):k.BufferObject.createVertex(b,a,this._cpu.array)}_createComputeBuffer(b){const a=p.Usage.DYNAMIC_DRAW,c=new Uint32Array(this.fillPointer/
3);for(let d=0;d<this.fillPointer;d+=3)c[d/3]=this._cpu.array[d];return k.BufferObject.createIndex(b,a,c)}}l.MappedBuffer=r;Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});