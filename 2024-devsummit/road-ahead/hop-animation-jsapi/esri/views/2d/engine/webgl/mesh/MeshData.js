// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports","../DisplayEntity","../DisplayRecord","./VertexDataWriter","../util/Writer"],function(l,n,p,q,r){class t{constructor(a,b=0){this._id=a;this._sizeHint=b;this._entitySortKeyIndex=this._entityIdIndex=this._entityCountOffset=this._entityRecordCountOffset=0;this._instanceIdToVertexData=new Map;this._current={metric:null,writer:null,start:0,sortKey:0,instanceId:0,layoutHash:0,indexStart:0,vertexStart:0,textureKey:0,metricBoxLenPointer:0};this._entities=new r(Uint32Array,this._sizeHint*
n.byteSizeHint);this._entityCountOffset=this._entities.push(0)}get id(){return this._id}serialize(){const a=[],b=[],d=this._entities.buffer();for(const c of this._instanceIdToVertexData.values())b.push(c.serialize(a));return{message:{data:b,entities:d},transferList:a}}vertexCount(){return this._current.writer?.vertexCount??0}indexCount(){return this._current.writer?.indexCount??0}vertexEnsureSize(a){this._current.writer.vertexEnsureSize(a)}indexEnsureSize(a){this._current.writer.indexEnsureSize(a)}vertexWrite(a){this._current.writer.writeVertex(a)}vertexWriteRegion(a){this._current.writer.writeVertexRegion(a)}vertexWriteF32(a){this._current.writer.writeVertexF32(a)}recordBounds(a,
b,d,c){}indexWrite(a){this._current.writer.writeIndex(a)}metricStart(a){this._current.metric=a}metricEnd(){this._current.metric.bounds.length&&this._current.writer.writeMetric(this._current.metric)}metricBoxWrite(a){this._current.metric.bounds.push(a)}entityStart(a,b=a){this._entityIdIndex=this._entities.push(a);this._entitySortKeyIndex=this._entities.push(b);this._entityRecordCountOffset=this._entities.push(0)}entityRecordCount(){return this._entities.getValue(this._entityRecordCountOffset)}entityEnd(){0===
this.entityRecordCount()?this._entities.seek(this._entityIdIndex):this._entities.incr(this._entityCountOffset)}recordCount(){return this._entities.getValue(this._entityRecordCountOffset)}recordStart(a,b,d=0){this._current.writer=this._getVertexWriter(a,b);this._current.indexStart=this._current.writer.indexCount;this._current.vertexStart=this._current.writer.vertexCount;this._current.instanceId=a;this._current.layoutHash=b.hash;this._current.textureKey=d}recordEnd(a=0){const b=this._current.vertexStart,
d=this._current.writer.vertexCount-b;if(!d)return!1;const c=this._current.indexStart,e=this._current.writer.indexCount-c;this._entities.incr(this._entityRecordCountOffset);p.write(this._entities,this._current.instanceId,this._current.textureKey,c,e,b,d,a);return!0}copyLastFrom(a,b,d){var c=a._entities.getValue(a._entityIdIndex),e=this._entities.getValue(this._entityIdIndex);c!==e&&(e=a._entities.getValue(a._entitySortKeyIndex),this.entityStart(c,e));this.recordStart(a._current.instanceId,a._current.writer.layout,
a._current.textureKey);c=this._current.writer.layout.stride/Uint32Array.BYTES_PER_ELEMENT;var f=this._current.vertexStart,h=a._current.vertexStart-f;const u=this._current.writer.indexWriter;e=this._current.writer.vertexWriter;const m=a._current.writer.indexWriter;var g=a._current.writer.vertexWriter;for(let k=a._current.indexStart;k!==m.length;k++){const v=m.getValue(k);u.push(v-h)}for(a=a._current.vertexStart*c;a!==g.length;a++)h=g.getValue(a),e.push(h);a=this._current.writer.layout.position;g=a.packPrecisionFactor??
1;a=a.offset/Uint32Array.BYTES_PER_ELEMENT;b*=g;d*=g;for(f*=c;f<=e.length;f+=c)e.i1616Add(f+a,b,d);this.recordEnd()}_getVertexWriter(a,b){const {stride:d}=b,c=this._instanceIdToVertexData;c.has(a)||c.set(a,new q.VertexDataWriter(a,b,d,this._sizeHint));return c.get(a)}}l.MeshData=t;Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});