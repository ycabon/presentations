// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/tslib.es6 ../../../../../core/arrayUtils ../../../../../core/Logger ../../../../../core/string ./ShaderBuilder2D ./graph/glsl ./graph/GlslGraphWriter ./graph/ShaderGraphContext ./graph/ShaderGraphNode ./typed/TypedShaderProgram".split(" "),function(g,n,q,A,B,C,p,u,v,D,w){function l(b,a,c){const d=b.constructor[a]??[];b.constructor.hasOwnProperty(a)||Object.defineProperty(b.constructor,a,{value:d.slice()});b.constructor[a].push(c)}const x=b=>(a,c)=>{l(a,"builtins",
{builtin:b,propertyKey:c})},r=(b,a)=>(c,d)=>{c.constructor.builtins.push({builtin:b,propertyKey:d,typeCtor:a})};class t{}t.builtins=[];n.__decorate([r("gl_VertexID",p.Int)],t.prototype,"glVertexID",void 0);class E{}class m{}m.builtins=[];n.__decorate([r("gl_FragCoord",p.Vec4)],m.prototype,"glFragCoord",void 0);n.__decorate([r("gl_PointCoord",p.Vec2)],m.prototype,"glPointCoord",void 0);class y{}n.__decorate([x("gl_FragColor")],y.prototype,"glFragColor",void 0);class F{constructor(){this.type="uniform-group"}get _uniforms(){return this.constructor.uniforms??
[]}}class G{constructor(){this.logShader=!1;this.computeAttributes={}}get vertexInput(){const b=q.findLast(this._shaderModuleClass.inputs,a=>"vertex"===a.propertyKey&&0===a.parameterIndex);if(!b)throw Error("Unable to find vertex input parameter");return b}get computeInput(){return q.findLast(this._shaderModuleClass.inputs,b=>"vertex"===b.propertyKey&&1===b.parameterIndex)}get fragmentInput(){const b=q.findLast(this._shaderModuleClass.inputs,a=>"fragment"===a.propertyKey);if(!b)throw Error("Unable to find fragment input parameter");
return b}get transformFeedbackBindings(){return this.fragmentInput.inputCtor.transformFeedbackBindings??[]}get locations(){return[...this.vertexInput.inputCtor.locations,...(this.computeInput?.inputCtor.locations??[])]}get locationsMap(){const b=new Map,a=new Set;for(const c of this.locations)a.has(c.index)?A.getLogger("esri.views.2d.engine.webgl.shaderGraph.GraphShaderModule").warnOnce("mapview-rendering",`Unable to assigned attribute ${c.propertyKey} to ${c.index}. Index already in use`,{locationsMap:b}):
(b.set(c.propertyKey,c.index),a.add(c.index));return b}get locationInfo(){if(!this._locationInfo){const b=this.locationsMap,a=Array.from(b.entries()).map(([c,d])=>`${c}.${d}`).join(".");this._locationInfo={hash:B.numericHash(a),locations:b}}return this._locationInfo}get renamedLocationsMap(){const b=new Map;for(const a of this.locations)b.set("a_"+a.propertyKey,a.index);return b}get optionPropertyKeys(){if(!this._optionPropertyKeys){const b=new Set;for(const a of this._options)b.add(a.propertyKey);
this._optionPropertyKeys=b}return this._optionPropertyKeys}get _shaderModuleClass(){return this.constructor}get _defines(){return this._shaderModuleClass.defines??[]}get _options(){return this._shaderModuleClass.options??[]}get _uniforms(){return this._shaderModuleClass.uniforms??[]}getProgram(b,a,c,d){try{const {vertex:e,fragment:h,uniformBindings:k}=this._generateShaders(b,a,c,d);return new w.TypedShaderProgram(e,h,this.renamedLocationsMap,this.locationInfo,k,this.transformFeedbackBindings)}catch(e){return console.error("Failed to create program",
{error:e}),new w.TypedShaderProgram("","",this.renamedLocationsMap,this.locationInfo,[],this.transformFeedbackBindings)}}getDebugUniformClassInfo(b){var a=this._options.find(c=>c.propertyKey===b);if(a)return{type:"option",className:a.typeCtor};a=this._uniforms.find(c=>c.propertyKey===b);if(!a)throw Error(`Unable to find uniform class type for property: ${b}`);return{type:"required",className:a.typeCtor}}getShaderKey(b,a,c,d){const e=Object.keys(c).map(f=>`${f}.${c[f]}`).join("."),h=Object.keys(d).map(f=>
`${f}.${d[f]}`).join("."),k=Object.keys(a).filter(f=>this.optionPropertyKeys.has(f)&&a[f]).join(".");return`${this.constructor.name}.${b.hash}.${e}.${h}.${k}`}_generateShaders(b,a,c,d){const e=[];this._setDefines(c);this._setOptionalUniforms(e,a);this._setRequiredUniforms(e);a=this._hydrateVertexInput(d);d=this._injectPackPrecisionFactor(a,b);b=(c=this._hydrateComputeInput())&&this._injectPackPrecisionFactor(c,b);const h=this.vertex(d,b);b=this._hydrateFragmentInput(h);d=this.fragment(b);const k=
new Set;for(var f in d)D.setReachableUids(k,d[f]);f=this._getVertexInputBuiltins();f=v.ShaderGraphContext.createVertex({...a,...c},h,f,e,this.transformFeedbackBindings,k);(new u.GlslShaderWriter).write(f);a=this._getFragmentInputBuiltins(d);a.set("glPointCoord","gl_PointCoord");a=v.ShaderGraphContext.createFragment(b,d,a,e,f,this.transformFeedbackBindings);(new u.GlslShaderWriter).write(a);a=this._createShaderBuilder(f,a);f=a.generate("vertex",!1);a=a.generate("fragment",!1);this.logShader&&(console.log(f),
console.log(a));return{vertex:f,fragment:a,uniformBindings:e}}_setDefines(b){for(const a in b)this[a]=b[a]}_setOptionalUniforms(b,a){for(const c of this._options)this[c.propertyKey]=a[c.propertyKey]?this._hydrateUniformGroup(b,c):null}_setRequiredUniforms(b){for(const a of this._uniforms)this[a.propertyKey]=this._hydrateUniformGroup(b,a)}_hydrateUniformGroup(b,a){const c=new a.typeCtor;for(const d of c._uniforms??[]){const e=new d.typeCtor,h=`u_${a.propertyKey}_${d.propertyKey}`,k=e.type,f=[a.propertyKey,
d.propertyKey].join(".");if("type"in d.typeCtor&&"array"===d.typeCtor.type){const z=e;b.push({shaderModulePath:f,uniformName:h,uniformType:k,uniformArrayLength:z.size,uniformArrayElementType:z.elementType.type,uniformHydrated:e})}else b.push({shaderModulePath:f,uniformName:h,uniformType:k,uniformHydrated:e});c[d.propertyKey]=e}return c}_hydrateVertexInput(b){var a=this.vertexInput.inputCtor;const c=a.locations.reduce((d,e)=>!1===b[e.propertyKey]?d:{...d,[e.propertyKey]:new e.typeCtor},{});for(const {propertyKey:d,
typeCtor:e}of a.builtins)a=new e,c[d]=a;return c}_hydrateComputeInput(){return null==this.computeInput?null:this.computeInput.inputCtor.locations.reduce((b,a)=>({...b,[a.propertyKey]:new a.typeCtor}),{})}_injectPackPrecisionFactor(b,a){const c={};for(const d in b){const e=b[d],h=a.attributes.find(k=>k.name===d);if(h?.packPrecisionFactor){if("float"!==e.type&&"vec2"!==e.type&&"vec3"!==e.type&&"vec4"!==e.type)throw Error(`InternalError: packPrecisionFactor requires GenType, but found ${e.type}`);c[d]=
e.divide(new p.Float(h.packPrecisionFactor))}else c[d]=e}return c}_hydrateFragmentInput(b){const a={};for(const c in b)a[c]=b[c];for(const {propertyKey:c,typeCtor:d}of m.builtins)b=new d,a[c]=b;return a}_getVertexInputBuiltins(){const b=this.vertexInput.inputCtor,a=new Map;for(const {builtin:c,propertyKey:d}of b.builtins)a.set(d,c);return a}_getFragmentInputBuiltins(b){b=b.constructor;const a=new Map;for(const c of b.builtins??[])a.set(c.propertyKey,c.builtin);return a}_createShaderBuilder(b,a){const c=
new C.ShaderBuilder2D;this._insertDebugInfo(c);b.insertVertexShader(c);a.insertFragmentShader(c);return c}_insertDebugInfo(b){b.vertex.code.add("// DEFINES: ");b.vertex.code.add("// --------------------------------------------------------- ");for(const a of this._defines)this[a.propertyKey]?b.vertex.code.add(`//   ${a.propertyKey}: true`):b.vertex.code.add(`//   ${a.propertyKey}: false`);b.vertex.code.add("");b.vertex.code.add("// OPTIONS: ");b.vertex.code.add("// --------------------------------------------------------- ");
for(const a of this._options)this[a.propertyKey]?b.vertex.code.add(`//   ${a.propertyKey}: true`):b.vertex.code.add(`//   ${a.propertyKey}: false`)}}g.ComputeVertexInput=E;g.FragmentInput=m;g.FragmentOutput=y;g.GraphShaderModule=G;g.UniformGroup=F;g.VertexInput=t;g.builtin=x;g.define=(b,a)=>{l(b,"defines",{propertyKey:a})};g.input=b=>(a,c,d)=>{l(a,"inputs",{inputCtor:b,propertyKey:c,parameterIndex:d})};g.location=function(b,a){return(c,d)=>{l(c,"locations",{typeCtor:a,propertyKey:d,parameterIndex:null,
index:b})}};g.option=b=>(a,c)=>{l(a,"options",{typeCtor:b,propertyKey:c})};g.transformFeedback=function(b){return(a,c)=>{l(a,"transformFeedbackBindings",{propertyKey:c,parameterIndex:null,index:b})}};g.uniform=b=>(a,c)=>{l(a,"uniforms",{typeCtor:b,propertyKey:c})};Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});