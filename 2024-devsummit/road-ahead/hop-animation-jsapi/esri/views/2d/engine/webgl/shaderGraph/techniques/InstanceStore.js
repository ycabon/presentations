// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["../../../../../../core/string","./TechniqueInstance","./mesh/instanceIdUtils"],function(l,g,h){class m{constructor(){this._instanceById=new Map}destroy(){this._instanceById.clear()}get size(){return this._instanceById.size}updateStart(){this._instanceByIdNext=new Map}updateEnd(){if(!this._instanceByIdNext)throw Error("InternalError: Found updateEnd call without corresponding updateStart");for(var a of this._instanceById.keys())this._instanceByIdNext.has(a)||this._instanceById.delete(a);for(const [c,
d]of this._instanceByIdNext.entries())(a=this._instanceById.get(c))?a.setInput(d.getInput()):this._instanceById.set(c,d);this._instanceByIdNext=null}values(){return this._instanceById.values()}ensureInstance(a,c,d){var b=`${a.registryName}`;for(const e in c){const f=c[e];if("object"===typeof f&&"geometry"===e)for(const k in f)b+=`.${e}.${k}.${null!=f[k]}`;else b+=`.${e}.${null!=c[e]}`}if(null!=d)for(const e in d)d[e]&&(b+=`-${e}`);b=l.numericHash(b);if(this._instanceByIdNext)return a=new g.TechniqueInstance(h.castInstanceId(b),
a,a.meshWriter.name,c,d),this._instanceByIdNext.set(b,a),a;this._instanceById.has(b)||(a=new g.TechniqueInstance(h.castInstanceId(b),a,a.meshWriter.name,c,d),this._instanceById.set(b,a));return this._instanceById.get(b)}getInstance(a){return this._instanceById.get(a)}}return m});