// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../definitions ../featureTechniqueUtils ../Technique ./DotDensityPointShader ./DotDensityPolygonShader ./DotDensityResources ../mesh/MeshWriterRegistry ../shaders/FillShader ../../../../../../webgl/enums".split(" "),function(m,f,d,n,p,q,r,t,u,v){class w extends n.Technique{constructor(){super(...arguments);this.shaders={polygon:new q.DotDensityPolygonShader,point:new p.DotDensityPointShader,fill:new u.FillShader};this.meshWriter=t.meshWriterRegistry.DotDensityMeshWriter}render(a,
e){d.isHighlight(a)||d.isHittest(a)?this._renderPolygons(a,e):this._renderDotDensity(a,e)}_renderPolygons(a,e){const {context:b,painter:c}=a;c.setShader({shader:this.shaders.fill,uniforms:{...d.getFeatureUniforms(a,e.target),visualVariableColor:null,visualVariableOpacity:null},defines:{...d.getSelectionDefines(a)},optionalAttributes:{zoomRange:!1},useComputeBuffer:d.isHittest(a)});c.setPipelineState(d.getFeaturePipelineState(a));c.submitDraw(b,e)}_renderDotDensity(a,e){const {context:b,painter:c,
requiredLevel:x}=a,h=e.instance.getInput();this._resources||(this._resources=new r.DotDensityResources);var g=this._resources.getDotDensityTextures(b,f.tileSize,h.seed),l=1/2**(x-e.target.key.level),k=f.tileSize;k=k*window.devicePixelRatio*k*window.devicePixelRatio;const y=1/l*(h.dotScale?a.state.scale/h.dotScale:1)*h.dotValue*(1/l);c.setShader({shader:this.shaders.polygon,uniforms:{...d.getFeatureUniforms(a,e.target),instance:{isActive:h.isActive,colors:h.colors,dotValue:Math.max(1,y)},draw:{dotTexture0:{unit:f.textureBindingRenderer0,
texture:g[0]},dotTexture1:{unit:f.textureBindingRenderer1,texture:g[1]},tileZoomFactor:l,pixelRatio:window.devicePixelRatio,tileDotsOverArea:k/(f.tileSize*window.devicePixelRatio*f.tileSize*window.devicePixelRatio)}},defines:{...d.getSelectionDefines(a),blending:h.blending},optionalAttributes:{},useComputeBuffer:!1});c.setPipelineState(d.getFeaturePipelineState(a));g=b.getViewport();b.setViewport(0,0,f.tileSize,f.tileSize);l=b.getBoundFramebufferObject();k=this._resources.getFBO(b);b.bindFramebuffer(k);
b.setClearColor(0,0,0,0);c.setPipelineState({color:{write:[!0,!0,!0,!0],blendMode:"composite"},depth:!1,stencil:!1});c.updatePipelineState(b);b.clear(v.ClearBufferBit.COLOR_BUFFER_BIT);c.submitDraw(b,e);b.bindFramebuffer(l);b.setViewport(g.x,g.y,g.width,g.height);g=this._resources.getFBO(b).colorTexture;c.setShader({shader:this.shaders.point,uniforms:{view:d.getViewUniforms(a,e.target),instance:{dotSize:h.dotSize},draw:{locations:{unit:f.textureBindingRenderer0,texture:g},tileZoomFactor:1,pixelRatio:window.devicePixelRatio}},
defines:{...d.getSelectionDefines(a)},optionalAttributes:{},useComputeBuffer:!1});c.setPipelineState({color:{write:[!0,!0,!0,!0],blendMode:"composite"},depth:!1,stencil:!1});c.submitDrawMesh(b,this._resources.getDotDensityMesh(b))}shutdown(){super.shutdown();this._resources&&this._resources.destroy();this._resources=null}}m.DotDensityTechnique=w;Object.defineProperty(m,Symbol.toStringTag,{value:"Module"})});