// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../../core/Logger ../../../../../../../core/maybe ../featureTechniqueUtils ../Technique ../mesh/MeshWriterRegistry ../shaders/HeatmapAccumulateShader ../shaders/HeatmapResolveShader ../../../../../../webgl/enums ../../../../../../webgl/FramebufferObject ../../../../../../webgl/heatmapTextureUtils ../../../../../../webgl/RenderbufferDescriptor ../../../../../../webgl/Texture ../../../../../../webgl/TextureDescriptor".split(" "),function(q,x,r,h,y,z,A,B,e,C,D,E,F,t){function u(b,
c){c=1.5<c?.25:.5;return b<1/(2*c)?1:c}function v(b){return b.key.level+1}function m(b,c){const {referenceScale:a,radius:d}=b;return d*(0!==a?a/c.scale:1)}class G extends y.Technique{constructor(){super(...arguments);this.meshWriter=z.meshWriterRegistry.HeatmapMeshWriter;this.shaders={accumulate:new A.HeatmapAccumulateShader,resolve:new B.HeatmapResolveShader};this.postProcessingEnabled=!0;this._isBound=!1;this.overrideStencilRef=v}shutdown(){super.shutdown();this._prevFBO=null;this._accumulateFramebuffer=
r.disposeMaybe(this._accumulateFramebuffer);this._resolveGradientTexture=r.disposeMaybe(this._resolveGradientTexture);this._qualityProfile=this._prevGradientHash=null;this._unbind()}render(b,c){const {context:a,painter:d,state:g}=b,f=c.instance.getInput(),{isFieldActive:k}=f,l=this._loadQualityProfile(a);h.isHighlight(b)||(h.isHittest(b)||this._ensureBound(b,f),d.setShader({shader:this.shaders.accumulate,uniforms:{...h.getFeatureUniforms(b,c.target),kernelControls:{radius:m(f,g),isFieldActive:k?1:
0}},defines:{...h.getSelectionDefines(b),...l.defines},optionalAttributes:c.instance.optionalAttributes,useComputeBuffer:h.isHittest(b)}),b=h.isHittest(b)?H:w,d.setPipelineState(b),d.submitDraw(a,c))}postProcess(b,c){if(!h.isHittest(b)&&!h.isHighlight(b)&&null!=this._prevFBO&&null!=this._prevViewport&&null!=this._accumulateFramebuffer&&null!=this._resolveGradientTexture){var {context:a,painter:d}=b;({defines:b}=this._loadQualityProfile(a));var {minDensity:g,maxDensity:f,radius:k}=c.getInput();d.setShader({shader:this.shaders.resolve,
uniforms:{accumulatedDensity:{texture:{unit:8,texture:this._accumulateFramebuffer.colorTexture},minAndInvRange:[g,1/(f-g)],normalization:3/(k*k*Math.PI)},gradient:{texture:{unit:9,texture:this._resolveGradientTexture}}},defines:b,optionalAttributes:{},useComputeBuffer:!1});a.bindFramebuffer(this._prevFBO);a.setViewport(0,0,this._prevViewport.width,this._prevViewport.height);a.bindTexture(this._accumulateFramebuffer.colorTexture,8);a.bindTexture(this._resolveGradientTexture,9);d.setPipelineState(I);
d.submitDrawQuad(a);this._unbind()}}_unbind(){this._prevViewport=this._prevFBO=null;this._isBound=!1}_ensureBound(b,c){if(!this._isBound){var {context:a}=b;this._prevFBO=a.getBoundFramebufferObject();this._prevViewport=a.getViewport();this._ensureResources(b,c);this._updateResources(b,c);a.bindFramebuffer(this._accumulateFramebuffer);a.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height);a.setColorMask(!0,!0,!0,!0);a.setClearColor(0,0,0,0);a.clear(e.ClearBufferBit.COLOR_BUFFER_BIT);
this._isBound=!0}}_ensureResources({context:b,state:c,pixelRatio:a},d){if(null==this._accumulateFramebuffer){const {dataType:g,samplingMode:f,pixelFormat:k,internalFormat:l}=this._loadQualityProfile(b),{width:n,height:p}=this._prevViewport;a=u(m(d,c),a);c=n*a;d=p*a;a=new t.TextureDescriptor(c,d);a.pixelFormat=k;a.internalFormat=l;a.dataType=g;a.samplingMode=f;a.wrapMode=e.TextureWrapMode.CLAMP_TO_EDGE;c=new E.RenderbufferDescriptor(e.RenderbufferFormat.DEPTH_STENCIL,c,d);this._accumulateFramebuffer=
new C.FramebufferObject(b,a,c)}null==this._resolveGradientTexture&&(c=new t.TextureDescriptor,c.wrapMode=e.TextureWrapMode.CLAMP_TO_EDGE,this._resolveGradientTexture=new F.Texture(b,c))}_updateResources({context:b,state:c,pixelRatio:a},d){const {gradient:g,gradientHash:f}=d;this._prevGradientHash!==f&&(this._resolveGradientTexture.resize(g.length/4,1),this._resolveGradientTexture.setData(g),this._prevGradientHash=f);a=u(m(d,c),a);const {width:k,height:l}=this._prevViewport;c=k*a;a*=l;const {width:n,
height:p}=this._accumulateFramebuffer;n===c&&p===a||this._accumulateFramebuffer.resize(c,a);b.blitFramebuffer(this._prevFBO,this._accumulateFramebuffer,0,0,this._prevFBO.width,this._prevFBO.height,0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height,e.ClearBufferBit.STENCIL_BUFFER_BIT,e.TextureSamplingMode.NEAREST)}_loadQualityProfile(b){null==this._qualityProfile&&(b=D.loadHeatmapTextureConfiguration(b,x.getLogger("esri.views.2d.engine.webgl.shaderGraph.techniques.heatmap.HeatmapTechnique")),
this._qualityProfile={...b,defines:{usesHalfFloatPrecision:b.dataType!==e.PixelType.FLOAT}});return this._qualityProfile}}const w={color:{write:[!0,!0,!0,!0],blendMode:"additive"},depth:!1,stencil:{write:!1,test:{ref:v,compare:e.CompareFunction.GEQUAL,mask:255,op:{fail:e.StencilOperation.KEEP,zFail:e.StencilOperation.KEEP,zPass:e.StencilOperation.REPLACE}}}},H={...w,stencil:!1},I={color:{write:[!0,!0,!0,!0],blendMode:"composite"},depth:!1,stencil:!1};q.HeatmapTechnique=G;Object.defineProperty(q,Symbol.toStringTag,
{value:"Module"})});