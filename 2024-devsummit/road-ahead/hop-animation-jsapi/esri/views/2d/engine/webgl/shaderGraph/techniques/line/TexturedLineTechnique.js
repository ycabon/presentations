// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../enums ../featureTechniqueUtils ../Technique ./utils ../mesh/MeshWriterRegistry ../shaders/TexturedLineShader".split(" "),function(e,g,c,h,k,l,m){class n extends h.Technique{constructor(){super(...arguments);this.meshWriter=l.meshWriterRegistry.TexturedLineMeshWriter;this.shaders={geometry:new m.TexturedLineShader};this.symbologyPlane=g.FeatureSymbologyDrawOrder.LINE}render(a,b){const {context:f,painter:d,pixelRatio:p}=a;d.setShader({shader:this.shaders.geometry,uniforms:{...c.resolveDynamicUniforms(a,
b.target,b.instance.getInput().geometry),...c.getFeatureUniforms(a,b.target),antialiasingControls:k.getAntialiasingControls(p),mosaicInfo:d.textureManager.getMosaicInfo(f,b.textureKey)},defines:{...c.getSelectionDefines(a)},optionalAttributes:b.instance.optionalAttributes,useComputeBuffer:c.isHittest(a)});d.setPipelineState(c.getFeaturePipelineState(a));d.submitDraw(f,b)}}e.TexturedLineTechnique=n;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});