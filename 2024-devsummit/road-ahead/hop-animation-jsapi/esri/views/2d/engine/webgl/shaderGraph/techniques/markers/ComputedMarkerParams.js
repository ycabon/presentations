// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../../../core/screenUtils","../../../../../../../symbols/cim/enums","../../../../../../../symbols/cim/utils","../../../definitions"],function(y,d,B,C,u){class v{static from(b){return"width"in b?this.fromSimpleMeshParams(b):this.fromComplexMeshParams(b)}static fromSimpleMeshParams(b){const a=new v(b.sprite,b.color,b.outlineColor,b.minPixelBuffer,b.placement,b.scaleInfo,b.effects),{type:e,width:l,height:c,angle:m,outlineSize:g,referenceSize:p,sprite:h,overrideOutlineColor:n}=
b;a.rawWidth=d.pt2px(l);a.rawHeight=d.pt2px(c);a.angle=m;a.outlineSize=d.pt2px(g);a.referenceSize=d.pt2px(p);a.overrideOutlineColor=n;a.offsetX=d.pt2px(b.offsetX);a.offsetY=d.pt2px(b.offsetY);"simple"!==e||h.sdf||(a.rawWidth=h.width,a.rawHeight=h.height);a.sizeRatio=h.sdf?2:1;a._computeSize(b,!1);return a}static fromComplexMeshParams(b){const a=new v(b.sprite,b.color,b.outlineColor,b.minPixelBuffer,b.placement,b.scaleInfo,b.effects);let {alignment:e,transforms:l,size:c,scaleX:m,anchorX:g,anchorY:p,
angle:h,colorLocked:n,frameHeight:f,offsetX:k,offsetY:r,outlineSize:w,referenceSize:D,scaleFactor:t,sizeRatio:E,isAbsoluteAnchorPoint:F,rotateClockwise:x,scaleSymbolsProportionally:z,sprite:A}=b;if(l&&0<l.infos.length){var q=C.applyParentTransform(c,h,x,k,r,l);c=q.size;h=q.rotation;k=q.offsetX;r=q.offsetY;x=!1}t&&(c*=t,k*=t,r*=t);a.alignment=e;a.rawHeight=d.pt2px(c);a.rawWidth=A.width/A.height*m*a.rawHeight;a.referenceSize=d.pt2px(D);a.sizeRatio=E;a.angle=h;a.rotateClockwise=x;a.anchorX=g;a.anchorY=
p;a.offsetX=d.pt2px(k);a.offsetY=d.pt2px(r);F&&c&&(a.anchorX=g/c,a.anchorY=p/c);q=z&&f?c/f:1;a.outlineSize=0===w||isNaN(w)?0:Math.max(d.pt2px(w)*q,.75);a.scaleSymbolsProportionally=z;a.colorLocked=n;a._computeSize(b,!0);return a}constructor(b,a,e,l,c,m,g){this.sprite=b;this.color=a;this.outlineColor=e;this.minPixelBuffer=l;this.placement=c;this.scaleInfo=m;this.effects=g;this.referenceSize=this.outlineSize=this.angle=this.rawHeight=this.rawWidth=0;this.sizeRatio=1;this.alignment=B.Alignment.SCREEN;
this.colorLocked=this.overrideOutlineColor=this.scaleSymbolsProportionally=!1;this.offsetY=this.offsetX=this.texYmax=this.texXmax=this.texYmin=this.texXmin=this.computedHeight=this.computedWidth=this.anchorY=this.anchorX=0;this.rotateClockwise=!0}get boundsInfo(){return{size:Math.max(this.computedHeight,this.computedWidth),offsetX:this.offsetX,offsetY:this.offsetY}}_computeSize(b,a){const {sprite:e,hasSizeVV:l}=b;var c=!!e.sdf;const {rawWidth:m,rawHeight:g,sizeRatio:p,outlineSize:h}=this;b=m*p;const n=
g*p;if(c&&!l){var f=h+2;this.computedWidth=Math.min((a&&m>g?b:m)+f,b);this.computedHeight=Math.min(g+f,n)}else this.computedWidth=b,this.computedHeight=n;a=c?u.sdfTextureSize/Math.max(b,n):1;f=.5*(b-this.computedWidth)*a;var k=.5*(n-this.computedHeight)*a;a=e.rect.x+u.spritePadding+f;c=e.rect.y+u.spritePadding+k;f=a+e.width-2*f;k=c+e.height-2*k;this.texXmin=Math.floor(a);this.texYmin=Math.floor(c);this.texXmax=Math.ceil(f);this.texYmax=Math.ceil(k);this.computedWidth*=(this.texXmax-this.texXmin)/
(f-a);this.computedHeight*=(this.texYmax-this.texYmin)/(k-c);this.anchorX*=b/this.computedWidth;this.anchorY*=n/this.computedHeight}}y.ComputedMarkerParams=v;Object.defineProperty(y,Symbol.toStringTag,{value:"Module"})});