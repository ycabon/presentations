// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../../core/screenUtils ../../../../../../../core/libs/gl-matrix-2/math/mat2d ../../../../../../../core/libs/gl-matrix-2/factories/mat2df32 ../../../../../../../core/libs/gl-matrix-2/math/vec2 ../../../../../../../geometry/GeometryCursor ../../../../../../../symbols/cim/enums ../../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper ../../../definitions ../fill/meshWriterUtils ./ComputedMarkerParams ./markerConstants ../mesh/loadGeometryEngine ../mesh/MeshWriter ../../../../../../webgl/enums".split(" "),
function(r,v,p,w,q,x,y,z,A,k,B,m,C,D,l){function E(a,b,d,e,f=!1){const c=w.create();f=f?1:-1;a?p.fromRotation(c,f*t*a):p.identity(c);(b||d)&&p.translate(c,c,[b,-d]);e&&p.rotate(c,c,f*t*-e);return c}const t=3.14159265359/180,F=128/Math.PI,u={createComputedParams:a=>B.ComputedMarkerParams.from(a),attributes:{pos:{type:l.DataType.SHORT,count:2,pack:"position",packPrecisionFactor:10},id:{type:l.DataType.UNSIGNED_BYTE,count:3,pack:"id"},bitset:{type:l.DataType.UNSIGNED_BYTE,count:1,pack:({sprite:a,alignment:b,
scaleSymbolsProportionally:d,overrideOutlineColor:e,colorLocked:f})=>{let c=0;a.sdf&&(c|=k.getBitMask(m.MarkerConstants.bitset.isSDF));b===y.Alignment.MAP&&(c|=k.getBitMask(m.MarkerConstants.bitset.isMapAligned));d&&(c|=k.getBitMask(m.MarkerConstants.bitset.scaleSymbolsProportionally));e&&(c|=k.getBitMask(m.MarkerConstants.bitset.overrideOutlineColor));f&&(c|=k.getBitMask(m.MarkerConstants.bitset.colorLocked));return c}},zoomRange:{type:l.DataType.SHORT,count:2,packPrecisionFactor:A.minMaxZoomPrecisionFactor,
pack:({scaleInfo:a},{tileInfo:b})=>k.getMinMaxZoom(a,b)},offset:{type:l.DataType.SHORT,count:2,packPrecisionFactor:4,packAlternating:{count:4,pack:({angle:a,computedWidth:b,computedHeight:d,anchorX:e,anchorY:f,offsetX:c,offsetY:h,rotateClockwise:g})=>{a=E(0,c,h,-a,g);e=-(.5+e)*b;g=-(.5-f)*d;f=[e,g];c=[e+b,g];h=[e,g+d];b=[e+b,g+d];q.transformMat2d(f,f,a);q.transformMat2d(c,c,a);q.transformMat2d(h,h,a);q.transformMat2d(b,b,a);return[f,c,h,b]}}},textureUV:{type:l.DataType.SHORT,count:2,packPrecisionFactor:4,
packAlternating:{count:4,pack:({texXmax:a,texXmin:b,texYmax:d,texYmin:e})=>[[b,e],[a,e],[b,d],[a,d]]}},color:{type:l.DataType.UNSIGNED_BYTE,count:4,normalized:!0,pack:({color:a})=>k.processColorInput(a)},outlineColor:{type:l.DataType.UNSIGNED_BYTE,count:4,normalized:!0,pack:({outlineColor:a})=>k.processColorInput(a)},sizing:{type:l.DataType.UNSIGNED_BYTE,count:4,pack:({rawWidth:a,rawHeight:b,outlineSize:d,referenceSize:e})=>[k.packByteSqrt(Math.max(a,b),128),k.packByteSqrt(d,128),k.packByteSqrt(e,
128),0]},placementAngle:{type:l.DataType.UNSIGNED_BYTE,count:1,packTessellation:({placementAngle:a})=>{a*=F;a%=256;return Math.abs(0<=a?a:a+256)}},sizeRatio:{type:l.DataType.UNSIGNED_SHORT,count:1,packPrecisionFactor:64,pack:({sizeRatio:a})=>a}}};class G extends D.MeshWriter{constructor(){super(...arguments);this.vertexSpec=u}getBoundsInfo(){return this.evaluatedMeshParams.boundsInfo}_write(a,b,d){var e=this.evaluatedMeshParams.sprite?.textureBinding;const f=b.getDisplayId();a.recordStart(this.instanceId,
this.attributeLayout,e);e=this.evaluatedMeshParams.minPixelBuffer;const c=Math.max(this.evaluatedMeshParams.computedWidth,e),h=Math.max(this.evaluatedMeshParams.computedHeight,e);if(null!=this.evaluatedMeshParams.placement)this._writePlacedMarkers(a,b,d,c,h);else if(d&&d.nextPath())d.nextPoint(),b=d.x,d=d.y,a.recordBounds(b,d,c,h),this._writeQuad(a,f,b,d);else if("esriGeometryPolygon"===b.geometryType){b=b.readCentroidForDisplay();if(!b)return;const [g,n]=b.coords;a.recordBounds(g,n,c,h);this._writeQuad(a,
f,g,n)}else"esriGeometryPoint"===b.geometryType?(d=b.readXForDisplay(),b=b.readYForDisplay(),a.recordBounds(d,b,c,h),this._writeQuad(a,f,d,b)):b.readGeometryForDisplay()?.forEachVertex((g,n)=>{a.recordBounds(g,n,c,h);this._writeQuad(a,f,g,n)});a.recordEnd()}_writePlacedMarkers(a,b,d,e,f){if(d=d??x.GeometryCursor.fromFeatureSetReaderCIM(b)?.clone())if(d=z.CIMMarkerPlacementHelper.getPlacement(d,-1,this.evaluatedMeshParams.placement,v.pt2px(1),a.id,C.getGeometryEngine())){b=b.getDisplayId();for(var c=
d.next();null!=c;){const h=c.tx,g=-c.ty;c=-c.getAngle();a.recordBounds(h,g,e,f);this._writeQuad(a,b,h,g,c);c=d.next()}}}_writeQuad(a,b,d,e,f){const c=a.vertexCount();this._writeVertex(a,b,d,e,null==f?null:{placementAngle:f});a.indexWrite(c+0);a.indexWrite(c+1);a.indexWrite(c+2);a.indexWrite(c+1);a.indexWrite(c+3);a.indexWrite(c+2)}}r.MarkerMeshWriter=G;r.MarkerVertexSpec=u;Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});