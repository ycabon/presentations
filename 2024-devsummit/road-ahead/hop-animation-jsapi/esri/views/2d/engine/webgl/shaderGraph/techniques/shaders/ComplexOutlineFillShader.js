// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../../chunks/tslib.es6 ../../GraphShaderModule ../../graph/glsl ./AFeatureShader ./ComplexFillShader ./hittestUtils ./LineShader ./LocalTileOffset ./MosaicInfo ./OutlineFillShader ./PatternOutlineFillShader".split(" "),function(h,b,c,a,p,q,r,w,x,y,t,z){class e extends p.FeatureVertexInput{}b.__decorate([c.location(3,a.Vec4)],e.prototype,"color",void 0);b.__decorate([c.location(4,a.Vec4)],e.prototype,"tlbr",void 0);b.__decorate([c.location(5,a.Float)],e.prototype,"angle",
void 0);b.__decorate([c.location(6,a.Float)],e.prototype,"aux1",void 0);b.__decorate([c.location(7,a.Float)],e.prototype,"aux2",void 0);b.__decorate([c.location(8,a.Vec2)],e.prototype,"aux3",void 0);b.__decorate([c.location(9,a.Vec2)],e.prototype,"aux4",void 0);b.__decorate([c.location(10,a.Vec2)],e.prototype,"zoomRange",void 0);class A extends z.PatternOutlineFillFragmentInput{}class k extends t.AOutlineFillShader{vertex(d,f){const {aux1:g,aux2:l,aux3:u,aux4:v}=d;var n={...d,width:g,height:l,offset:u,
scale:v.multiply(.0625)},m={...d,halfWidth:g.multiply(.0625),referenceHalfWidth:l.multiply(.0625),offset:u.multiply(.0625),normal:v.subtract(128).multiply(.0625)};m=t.getOutlineFillVertexData(this,m);n=q.getComplexFillVertexData(this,n);const B=a.greaterThan(m.isOutline,new a.Float(.5));return{...m,...n,...this.maybeRunHittest(d,f,B)}}fragment(d){var {isOutline:f}=d;f=a.greaterThan(f,new a.Float(.5));var g=w.getLineFragmentColor(d,this.antialiasingControls.blur);const l=q.getComplexFillFragmentColor(this,
d);g=a.ifElse(f,g,l);f=a.ifElse(f,new a.Float(1/255),new a.Float(0));return this.getFragmentOutput(g,d,f)}hittest(d,f,g){return a.ifElse(g,r.failHittest(this.hittestRequest),r.hittestFill(this,d,f))}}b.__decorate([c.uniform(y.MosaicInfo)],k.prototype,"mosaicInfo",void 0);b.__decorate([c.uniform(x.LocalTileOffset)],k.prototype,"localTileOffset",void 0);b.__decorate([b.__param(0,c.input(e)),b.__param(1,c.input(p.BaseHittestVertexInput))],k.prototype,"vertex",null);b.__decorate([b.__param(0,c.input(A))],
k.prototype,"fragment",null);h.ComplexOutlineFillShader=k;h.ComplexOutlineFillVertexInput=e;h.packPrecision=16;h.signedToUnsignedByte=128;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});