// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../../chunks/tslib.es6 ../../GraphShaderModule ../../graph/glsl ./AFeatureShader ./constants ./hittestUtils ./VisualVariableColor ./VisualVariableOpacity ./VisualVariableSizeMinMaxValue ./VisualVariableSizeScaleStops ./VisualVariableSizeStops ./VisualVariableSizeUnitValue ./vvUtils".split(" "),function(h,d,e,a,r,v,x,G,H,I,J,K,L,t){function y(b){return a.max((new a.Float(v.thinLineWidthFactor)).multiply(a.step(b,new a.Float(v.thinLineHalfWidth))),new a.Float(1))}function z(b,
c){const {halfWidth:f,normal:m}=b;b=y(f);const p=a.length(m).multiply(f);return a.clamp(b.multiply(f.subtract(p)).divide(c.add(b).subtract(new a.Float(1))),new a.Float(0),new a.Float(1))}function A(b,c){const {id:f,offset:m,pos:p,normal:k,zoomRange:w}=c,{displayViewScreenMat3:M,displayViewMat3:N}=b.view,O=t.getVisualVariableColor(b,f,c.color),P=t.getVisualVariableOpacity(b,f);{const {id:Q,halfWidth:B,referenceHalfWidth:C}=c;t.hasVisualVariableSize(b)?(c=(new a.Float(2)).multiply(C),c=t.getVisualVariableSize(b,
Q,c),c=(new a.Float(.5)).multiply(B.divide(a.max(C,new a.Float(v.epsilon)))).multiply(c)):c=B}var n=(new a.Float(.5)).multiply(b.antialiasingControls.antialiasing);n=a.max(c.add(n),new a.Float(.45)).add((new a.Float(.1)).multiply(n));const D=y(n).multiply(n).multiply(m);var q=N.multiply(new a.Vec3(D,new a.Float(0)));q=M.multiply(new a.Vec3(p,new a.Float(1))).add(q);b=(new a.Float(2)).multiply(a.step(c,new a.Float(0))).add(b.clip(f,w));q=new a.Vec4(q.xy,b,1);b=new a.Vec4(q.xy,b,1);return{color:O,opacity:P,
halfWidth:n,normal:k,scaledOffset:D,scaledHalfWidth:c,glPosition:b}}function E(b,c){const {opacity:f,color:m}=b;b=z(b,c);return f.multiply(m).multiply(b)}class l extends r.FeatureVertexInput{}d.__decorate([e.location(3,a.Vec4)],l.prototype,"color",void 0);d.__decorate([e.location(4,a.Vec2)],l.prototype,"offset",void 0);d.__decorate([e.location(5,a.Vec2)],l.prototype,"normal",void 0);d.__decorate([e.location(6,a.Float)],l.prototype,"halfWidth",void 0);d.__decorate([e.location(7,a.Float)],l.prototype,
"referenceHalfWidth",void 0);d.__decorate([e.location(8,a.Vec2)],l.prototype,"zoomRange",void 0);class F extends r.FeatureFragmentInput{}class u extends e.UniformGroup{}d.__decorate([e.uniform(a.Float)],u.prototype,"antialiasing",void 0);d.__decorate([e.uniform(a.Float)],u.prototype,"blur",void 0);class g extends r.AFeatureShader{constructor(){super(...arguments);this.computeAttributes={pos:["nextPos1","nextPos2"]}}vertex(b,c){const f=A(this,b);return{...f,...this.maybeRunHittest(b,c,f.halfWidth)}}fragment(b){const c=
E(b,this.antialiasingControls.blur);return this.getFragmentOutput(c,b)}hittest(b,c,f){const {viewMat3:m,tileMat3:p}=this.view;var k=m.multiply(p);b=k.multiply(new a.Vec3(b.pos,1));const w=k.multiply(new a.Vec3(c.nextPos1,1));c=k.multiply(new a.Vec3(c.nextPos2,1));k=this.hittestRequest.position;return a.min(x.distPointSegment(k,b.xy,w.xy),x.distPointSegment(k,b.xy,c.xy)).subtract(f)}}d.__decorate([e.uniform(u)],g.prototype,"antialiasingControls",void 0);d.__decorate([e.option(G.VisualVariableColor)],
g.prototype,"visualVariableColor",void 0);d.__decorate([e.option(H.VisualVariableOpacity)],g.prototype,"visualVariableOpacity",void 0);d.__decorate([e.option(I.VisualVariableSizeMinMaxValue)],g.prototype,"visualVariableSizeMinMaxValue",void 0);d.__decorate([e.option(J.VisualVariableSizeScaleStops)],g.prototype,"visualVariableSizeScaleStops",void 0);d.__decorate([e.option(K.VisualVariableSizeStops)],g.prototype,"visualVariableSizeStops",void 0);d.__decorate([e.option(L.VisualVariableSizeUnitValue)],
g.prototype,"visualVariableSizeUnitValue",void 0);d.__decorate([d.__param(0,e.input(l)),d.__param(1,e.input(r.BaseHittestVertexInput))],g.prototype,"vertex",null);d.__decorate([d.__param(0,e.input(F))],g.prototype,"fragment",null);h.AntialiasingControls=u;h.LineFragmentInput=F;h.LineShader=g;h.LineVertexInput=l;h.getLineAntialiasing=z;h.getLineFragmentColor=E;h.getLineVertexData=A;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});