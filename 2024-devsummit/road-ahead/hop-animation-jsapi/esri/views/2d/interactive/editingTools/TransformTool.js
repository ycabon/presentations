// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../geometry ../../../../Graphic ../../../../symbols ../../../../core/colorUtils ../../../../core/maybe ../../../../core/reactiveUtils ../../../../core/unitUtils ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../core/libs/gl-matrix-2/math/vec2 ../../../../core/libs/gl-matrix-2/factories/vec2f64 ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../geometry/projection ../../../../chunks/boundedPlane ../../../../geometry/support/spatialReferenceUtils ../../../../layers/GraphicsLayer ../../../ViewingMode ./manipulations/DragManipulation ./manipulations/RotateManipulation ./manipulations/ScaleManipulation ./manipulations/utils ../../../input/keys ../../../interactive/InteractiveToolBase ../../../interactive/editGeometry/EditGeometry ../../../interactive/editGeometry/EditGeometryOperations ../../../interactive/editGeometry/interfaces ../../../interactive/editGeometry/operations/UpdateVertices ../../../interactive/editGeometry/support/editPlaneUtils ../../../support/hitTestSelectUtils ../../../support/screenUtils ../../../../geometry/Polygon ../../../../geometry/Point ../../../../symbols/SimpleFillSymbol ../../../../symbols/SimpleMarkerSymbol".split(" "),
function(g,m,Y,u,Z,x,F,G,y,q,aa,ba,ca,H,z,A,e,n,v,w,I,J,B,K,L,M,C,N,O,P,Q,D,R,S,T,U,V,p,W,E){const h={up:"ArrowUp",down:"ArrowDown",left:"ArrowLeft",right:"ArrowRight",plus:"+",minus:"-",toggleOpacity:"t",shift:"Shift",primaryKey:N.primaryKey},X=[[1,1],[1,-1],[-1,-1],[-1,1],[1,0],[0,-1],[-1,0],[0,1]];g.TransformTool=class extends O.InteractiveToolBase{constructor(a){super(a);this._graphic=this._initialGeometry=this._initialControlPoints=null;this._planeCache=w.create();this._displayPlaneCache=w.create();
this._mainAxisCache=A.create();this._rotationHandleCache=n.create();this._cornerA=n.create();this._cornerB=n.create();this._cornerC=n.create();this._cornerD=n.create();this._avgAB=n.create();this._avgBC=n.create();this._avgCD=n.create();this._avgDA=n.create();this._preserveAspectRatio=new C.PreserveAspectRatio;this._snapRotation=new C.SnapRotation;this._graphicsLayer=new J({internal:!0,listMode:"hide",visible:!1});this._sharedUndoStack=[];this._sharedRedoStack=[];this._isModifierActive=this._isOpacityToggled=
!1;this._factor=1;this.snapRotation=this.preserveAspectRatio=null}initialize(){this._initialize()}destroy(){const {map:a}=this.view;this._dragManipulation.destroy();this._rotateManipulation.destroy();this._scaleManipulations.forEach(c=>c.destroy());this._editGeometryOperations.destroy();a.removeMany([this._graphicsLayer]);this._graphicsLayer.removeAll();this._graphicsLayer=F.destroyMaybe(this._graphicsLayer);this._sharedRedoStack=this._sharedUndoStack=this._avgDA=this._avgCD=this._avgBC=this._avgAB=
this._cornerD=this._cornerC=this._cornerB=this._cornerA=this._mainAxisCache=this._rotationHandleCache=this._displayPlaneCache=this._planeCache=this._snapRotation=this._preserveAspectRatio=this._graphic=this._initialGeometry=this._initialControlPoints=null}get _plane(){const a=this._graphic.geometry;if(null==a)return null;const c=this._editGeometryOperations.data;var d=c.components[0].edges[0];d=z.subtract(this._mainAxisCache,d.leftVertex.pos,d.rightVertex.pos);z.normalize(d,d);let b=80*this.view.resolution;
const f=this.view.spatialReference;I.equals(f,a.spatialReference)&&(b*=y.getMetersPerUnitForSR(f)/y.getMetersPerUnitForSR(a.spatialReference));return S.calculateOrientedBounds(d,c,b,this._planeCache)}get _displayPlane(){var a=this._plane;if(!a)return null;const c=this._displayPlaneCache;w.copy(a,c);a=10*this.view.resolution;e.scale(c.basis1,c.basis1,1+a/e.length(c.basis1));e.scale(c.basis2,c.basis2,1+a/e.length(c.basis2));return c}get _backgroundGraphicGeometry(){const a=this._displayPlane;if(!a)return null;
const c=this.view.spatialReference;this._updateDisplayPlaneConrers(a);return new V({spatialReference:c,rings:[[this._cornerA,this._cornerB,this._cornerC,this._cornerD,this._cornerA]]})}get _rotateGraphicGeometry(){const a=this._plane;if(!a)return null;const c=this._rotationHandleCache;e.normalize(c,a.basis1);e.scale(c,c,30*this.view.resolution);e.add(c,c,a.origin);e.add(c,c,a.basis1);return new p({x:c[0],y:c[1],spatialReference:this.view.spatialReference})}get _scaleGraphicGeometries(){var a=this._displayPlane;
if(!a)return[];const c=this.view.spatialReference;this._updateDisplayPlaneConrers(a);const {_cornerA:d,_cornerB:b,_cornerC:f,_cornerD:k}=this;a=e.lerp(this._avgAB,d,b,.5);const l=e.lerp(this._avgBC,b,f,.5),r=e.lerp(this._avgCD,f,k,.5),t=e.lerp(this._avgDA,k,d,.5);return[new p({x:d[0],y:d[1],spatialReference:c}),new p({x:b[0],y:b[1],spatialReference:c}),new p({x:f[0],y:f[1],spatialReference:c}),new p({x:k[0],y:k[1],spatialReference:c}),new p({x:a[0],y:a[1],spatialReference:c}),new p({x:l[0],y:l[1],
spatialReference:c}),new p({x:r[0],y:r[1],spatialReference:c}),new p({x:t[0],y:t[1],spatialReference:c})]}onActivate(){this.visible=!0}onDeactivate(){this.visible=!1}onShow(){this._graphicsLayer.visible=!0}onHide(){this._graphicsLayer.visible=!1}canUndo(){return this._editGeometryOperations.canUndo}canRedo(){return this._editGeometryOperations.canRedo}undo(){this._editGeometryOperations.undo();this.updateGraphics()}redo(){this._editGeometryOperations.redo();this.updateGraphics()}refresh(){const {view:a,
target:c}=this,d=this._editGeometryOperations,b=d.data.components[0].vertices,f=P.EditGeometry.fromGeometry(v.project("georeference"in c?c.georeference.coords:c.geometry,a.spatialReference),B.ViewingMode.Local).components[0].vertices;b.forEach((k,l)=>{d.setVertexPosition(k,f[l].pos)});this.updateGraphics()}reset(){var {target:a}=this;"georeference"in a?(a=a.georeference,"control-points"===a.type&&(a.controlPoints=this._initialControlPoints)):a.geometry=this._initialGeometry;this.refresh();this._sharedUndoStack.length=
0;this._sharedRedoStack.length=0}updateGraphics(){const a=this._editGeometryOperations.data.geometry;"georeference"in this.target&&(this.target.georeference.coords=a);this._graphic.geometry=a;this._backgroundGraphic.geometry=this._backgroundGraphicGeometry;this._rotateGraphic.geometry=this._rotateGraphicGeometry;this._scaleGraphicGeometries.forEach((c,d)=>{this._scaleGraphics[d].geometry=c})}setSharedUndoStack(a){this._sharedUndoStack=a}setSharedRedoStack(a){this._sharedRedoStack=a}async _initialize(){const {view:a,
target:c}=this;if("georeference"in c){const b=c.georeference;this._graphic=new u({geometry:b.coords});this._initialControlPoints="control-points"===b.type?b.controlPoints:null}else this._graphic=c,this._initialGeometry=c.geometry;a.map.addMany([this._graphicsLayer]);a.focus();this.visible=!1;this.finishToolCreation();await this._loadProjectionEngine();this._editGeometryOperations=Q.EditGeometryOperations.fromGeometry(v.project(this._graphic.geometry,a.spatialReference),B.ViewingMode.Local);this._backgroundGraphic=
new u({symbol:new W({color:"transparent",outline:{type:"simple-line",color:a.effectiveTheme.accentColor,width:2}}),geometry:this._backgroundGraphicGeometry});this._rotateGraphic=new u({symbol:new E({color:x.getContrast(a.effectiveTheme.accentColor),outline:{type:"simple-line",color:a.effectiveTheme.accentColor,width:1}}),geometry:this._rotateGraphicGeometry});this._scaleGraphics=this._scaleGraphicGeometries.map(b=>new u({symbol:new E({size:6,style:"square",color:x.getContrast(a.effectiveTheme.accentColor),
outline:{type:"simple-line",color:a.effectiveTheme.accentColor,width:1}}),geometry:b}));this._graphicsLayer.graphics.addMany([this._backgroundGraphic,this._rotateGraphic,...this._scaleGraphics]);this._dragManipulation=new K.DragManipulation({tool:this,view:a,graphic:this._graphic});this._rotateManipulation=new L.RotateManipulation({tool:this,view:a,graphic:this._rotateGraphic,snapRotation:this._snapRotation});this._scaleManipulations=this._scaleGraphics.map((b,f)=>new M.ScaleManipulation({tool:this,
view:a,graphic:b,direction:X[f],preserveAspectRatio:this._preserveAspectRatio}));this.addHandles([this._dragManipulation.createDragPipeline(this._getInfo.bind(this),this._updateGraphics.bind(this)),this._rotateManipulation.createDragPipeline(this._getInfo.bind(this),this._updateGraphics.bind(this)),...this._scaleManipulations.map(b=>b.createDragPipeline(this._getInfo.bind(this),this._updateGraphics.bind(this))),G.watch(()=>this.view.scale,()=>this.active?this.updateGraphics():null),a.on("click",async b=>
{if(null==a.activeTool||a.activeTool===this){b=U.createScreenPointFromEvent(b);var f=[];a.map.allLayers.forEach(l=>{"vector-tile"!==l.type&&"imagery"!==l.type||f.push(l)});b=await this.view.hitTest(b,{exclude:f});var k=b.results;if(0===k.length)a.activeTool=null;else{b=T.findFirstGraphicHit(b.results);const l="georeference"in c;k=k.map(t=>"media"===t.type?t.element:null).filter(Boolean);const r=new Set([...this._graphicsLayer.graphics,l?null:c].filter(Boolean));(l?k.includes(c)||null!=b&&r.has(b.graphic):
null!=b&&r.has(b.graphic))?null==a.activeTool&&(a.activeTool=this):a.activeTool=null}}})]);const d=b=>{this.addHandles(b.events.on("grab-changed",f=>{"georeference"in c&&("start"===f.action?c.opacity*=.5:"end"===f.action&&(c.opacity*=2))}))};this._dragManipulation.forEachManipulator(d);this._rotateManipulation.forEachManipulator(d);this._scaleManipulations.forEach(b=>b.forEachManipulator(d));this.addHandles([a.on("key-down",b=>{a.activeTool===this&&(b.key!==h.shift||b.repeat||(null==this.preserveAspectRatio&&
(this._preserveAspectRatio.enabled=!this._preserveAspectRatio.enabled),null==this.snapRotation&&(this._snapRotation.enabled=!this._snapRotation.enabled),this._isModifierActive=!0,b.stopPropagation()),b.key!==h.toggleOpacity||b.repeat||("georeference"in c&&(c.opacity*=this._isOpacityToggled?2:.5,this._isOpacityToggled=!this._isOpacityToggled),b.stopPropagation()),b.key!==h.primaryKey||b.repeat||(this._factor=10,b.stopPropagation()),this._isModifierActive&&(b.key===h.plus&&(this._scale(this._factor),
b.stopPropagation()),b.key===h.minus&&(this._scale(-this._factor),b.stopPropagation()),b.key===h.up&&(this._move(0,this._factor),b.stopPropagation()),b.key===h.down&&(this._move(0,-this._factor),b.stopPropagation()),b.key===h.left&&(this._move(-this._factor,0),b.stopPropagation()),b.key===h.right&&(this._move(this._factor,0),b.stopPropagation())))}),a.on("key-up",b=>{a.activeTool===this&&(b.key===h.shift&&(null==this.preserveAspectRatio&&(this._preserveAspectRatio.enabled=!this._preserveAspectRatio.enabled),
null==this.snapRotation&&(this._snapRotation.enabled=!this._snapRotation.enabled),this._isModifierActive=!1,b.stopPropagation()),b.key===h.primaryKey&&(this._factor=1,b.stopPropagation()))})])}async _loadProjectionEngine(){return v.initializeProjection(this._graphic.geometry.spatialReference,this.view.spatialReference)}_updateDisplayPlaneConrers(a){const {basis1:c,basis2:d,origin:b}=a;a=this._cornerA;e.add(a,b,c);e.add(a,a,d);a=this._cornerB;e.add(a,b,c);e.subtract(a,a,d);a=this._cornerC;e.subtract(a,
b,c);e.subtract(a,a,d);a=this._cornerD;e.subtract(a,b,c);e.add(a,a,d)}_getInfo(){return{editGeometryOperations:this._editGeometryOperations,plane:this._plane,displayPlane:this._displayPlane}}_updateGraphics(a,c){"start"===a.action&&(this._sharedUndoStack.push({tool:this,operation:c}),this._sharedRedoStack.length=0);this.updateGraphics()}_scale(a){var c=this._editGeometryOperations;const d=[];for(var b of c.data.components)d.push(...b.vertices);b=c.data.geometry.extent?.width;a=(b+a*this.view.resolution)/
b;c=c.scaleVertices(d,this._plane.origin,A.UNIT_X,a,a,D.AccumulationBehavior.NEW_STEP,R.AccumulationType.REPLACE);this._sharedUndoStack.push({tool:this,operation:c});this._sharedRedoStack.length=0;this.updateGraphics()}_move(a,c){const d=this._editGeometryOperations,b=[];for(const f of d.data.components)b.push(...f.vertices);a=d.moveVertices(b,a*this.view.resolution,c*this.view.resolution,0,D.AccumulationBehavior.NEW_STEP);this._sharedUndoStack.push({tool:this,operation:a});this._sharedRedoStack.length=
0;this.updateGraphics()}};m.__decorate([q.property()],g.TransformTool.prototype,"_plane",null);m.__decorate([q.property()],g.TransformTool.prototype,"_backgroundGraphicGeometry",null);m.__decorate([q.property()],g.TransformTool.prototype,"_rotateGraphicGeometry",null);m.__decorate([q.property()],g.TransformTool.prototype,"_scaleGraphicGeometries",null);m.__decorate([q.property()],g.TransformTool.prototype,"preserveAspectRatio",void 0);m.__decorate([q.property()],g.TransformTool.prototype,"snapRotation",
void 0);m.__decorate([q.property({constructOnly:!0,nonNullable:!0})],g.TransformTool.prototype,"target",void 0);m.__decorate([q.property({constructOnly:!0})],g.TransformTool.prototype,"view",void 0);g.TransformTool=m.__decorate([H.subclass("esri.views.2d.interactive.editingTools.TransformTool")],g.TransformTool);g.keys=h;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});