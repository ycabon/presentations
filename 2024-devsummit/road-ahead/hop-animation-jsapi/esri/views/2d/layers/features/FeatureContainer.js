// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/has ../../../../core/Logger ../../../../core/promiseUtils ../../../../core/support/UpdatingHandles ../../engine/AFeatureContainer ../../engine/webgl/enums ./RenderState ../support/util".split(" "),function(k,f,u,g,l,m,e,n,p){class q{constructor(a,b){this.id=a;this.version=b;this._resolver=g.createResolver();this._done=!1}get done(){return this._done}get promise(){return this._resolver.promise}end(){this._resolver.resolve();this._done=!0}destroy(){this._resolver.reject()}}
class r extends m.AFeatureContainer{constructor(a){super(a.view.featuresTilingScheme);this.updatingHandles=new l.UpdatingHandles;this._hitTestsRequests=[];this._visibleTiles=new Set;this._subscriptions=new Map;this._layerView=a}renderChildren(a){for(const b of this.children)b.setTransform(a.state);super.renderChildren(a);this.attributeView.update();this.hasAnimation&&a.painter.effects.integrate.draw(a,a.attributeView);switch(a.drawPhase){case e.WGLDrawPhase.MAP:return this._renderMapPhase(a);case e.WGLDrawPhase.HIGHLIGHT:return this._renderHighlightPhase(a);
case e.WGLDrawPhase.LABEL:return this._renderLabelPhase(a)}}subscriptions(){return this._subscriptions.values()}get _instanceStore(){return this._store}get layerView(){return this._layerView}get hasLabels(){return 0<this._layerView.labelingCollisionInfos.length}get hasHighlight(){return this._layerView.hasHighlight()}get _layer(){return this._layerView.layer}_getExclusivePostprocessingInstance({drawPhase:a}){if(null==this._instanceStore)return null;let b=0,c=null;for(const d of this._instanceStore.values())d.techniqueRef.drawPhase&
a&&(b++,d.techniqueRef.postProcessingEnabled&&(c=d));return 1<b?null:c}_getOverrideStencilRef({drawPhase:a}){if(null==this._instanceStore)return null;let b=null;for(const c of this._instanceStore.values()){if(!(c.techniqueRef.drawPhase&a))continue;const {overrideStencilRef:d}=c.techniqueRef;if(null==b)b=d;else if(b!==d){b=null;break}}return b}get children(){return this._renderState?Array.from(this._renderState.tiles()).filter(a=>this._visibleTiles.has(a.key.id)):[]}initializeAttributeView(a){this.attributeView.initialize(a)}async updateAttributeView(a){await this.updatingHandles.addPromise(this.attributeView.requestUpdate(a));
this.hasLabels&&this._layerView.view.labelManager.requestUpdate()}updateSubscriptions(a){for(const {tileId:b,version:c}of a.subscribe)if(this._subscriptions.has(b))this._subscriptions.get(b).version=c;else{const d=new q(b,c);this._subscriptions.set(b,d);this.updatingHandles.addPromise(d.promise)}for(const b of a.unsubscribe)this._subscriptions.get(b)?.destroy(),this._subscriptions.delete(b),this.removeTile(b)}isDone(a){return this._renderState?this._renderState.isTileDone(a):!1}async updateRenderState(a){f("esri-2d-update-debug")&&
console.debug(`Version[${a}] FeatureContainer.updateRenderState`);this._renderStateNext=new n.RenderState(this._stage,a,this._tileInfoView)}getDisplayStatistics(a,b){return(a=this._statisticsByLevel.get(a))?a.get(b):null}updateStatistics(a,b){let c=this._statisticsByLevel.get(a);c||(c=new Map,this._statisticsByLevel.set(a,c));for(const d of b)c.set(d.fieldName,{minValue:d.minValue,maxValue:d.maxValue})}editStart(){this.attributeView.lockTextureUpload();this._renderState?.lockUploads()}editEnd(){this.attributeView.unlockTextureUpload();
this._renderState?.unlockUploads();this.requestRender()}updateStart(){this.attributeView.lockTextureUpload()}updateEnd(a,b){this.attributeView.unlockTextureUpload();f("esri-2d-update-debug")&&console.debug(`Version[${b}] FeatureContainer.update`);this.requestRender();this._store=a;this._renderStateNext&&(f("esri-2d-update-debug")&&console.debug(`Version[${this._renderStateNext.version}] FeatureContainer.update.swapRenderState`),this._renderState?.destroy(),this._renderState=this._renderStateNext,
this._renderStateNext=null)}setVisibleTiles(a){this._visibleTiles=a}async onMessage(a,b){g.throwIfAborted(b);if(this._subscriptions.has(a.id))if(b=this._subscriptions.get(a.id),b.version!==a.subscriptionVesrion)f("esri-2d-update-debug")&&console.debug(`Version[${`${a.subscriptionVesrion} != ${b.version}`}] Tile[${a.id}] FeatureContainer - Dropping message, outdated version]`,a);else{b=this._renderStateNext??this._renderState;if(!b)throw Error("InternalError: No renderState defined");b.version!==a.version&&
console.error(`InternalError: Version mismatch. [renderState: ${b.version}, message: ${a.version}]`);b.updateTile(a);a.end&&this._subscriptions.get(a.id).end();this.requestRender();this._layerView.view.labelManager.requestUpdate();this._layerView.requestUpdate()}}removeTile(a){if(this._renderState||this._renderStateNext)this._renderState&&this._renderState.removeTile(a),this._renderStateNext&&this._renderStateNext.removeTile(a)}hitTest(a){let b=this._hitTestsRequests.find(({x:d,y:h})=>d===a.x&&h===
a.y);const c=g.createResolver();b?b.resolvers.push(c):(b={x:a.x,y:a.y,resolvers:[c]},this._hitTestsRequests.push(b));this.requestRender();return c.promise}get hasAnimation(){return this.hasLabels}updateTransitionProperties(a,b){super.updateTransitionProperties(a,b);this._layerView.featureEffectView.transitionStep(a,b);this._layerView.featureEffectView.transitioning&&this.requestRender()}doRender(a){const {minScale:b,maxScale:c}=this._layer.effectiveScaleRange,d=a.state.scale;d<=(b||Infinity)&&d>=
c&&super.doRender(a)}afterRender(a){super.afterRender(a);this._hitTestsRequests.length&&this.requestRender()}setStencilReference(a){const b=this._getOverrideStencilRef(a);if(null!=b)for(const c of this.children)c.stencilRef=b(c);else super.setStencilReference(a)}_renderMapPhase(a){this._layerView.featureEffectView.hasEffects?(this._renderOutsideEffect(a),this._renderInsideEffect(a)):this._renderFeatures(a,e.FeatureSelection.All);0<this._hitTestsRequests.length&&this._renderHittest(a)}_renderHighlightPhase(a){this.hasHighlight&&
p.renderHighlight(a,!1,b=>{this._renderFeatures(b,e.FeatureSelection.Highlight)})}_renderLabelPhase(a){this._renderFeatures(a,e.FeatureSelection.All)}_renderInsideEffect(a){const b=a.painter.effects.insideEffect;b.bind(a);this._renderFeatures(a,e.FeatureSelection.InsideEffect);b.draw(a,this._layerView.featureEffectView.includedEffects);b.unbind()}_renderOutsideEffect(a){const b=a.painter.effects.outsideEffect;b.bind(a);this._renderFeatures(a,e.FeatureSelection.OutsideEffect);b.draw(a,this._layerView.featureEffectView.excludedEffects);
b.unbind()}_renderHittest(a){const {context:b}=a,c=a.painter.effects.hittest,d=b.getBoundFramebufferObject(),h=b.getViewport(),t=a.passOptions;c.bind(a);a.passOptions=c.createOptions(a,this._hitTestsRequests);this._renderFeatures(a,e.FeatureSelection.All);c.draw(a);c.unbind();b.bindFramebuffer(d);b.restoreViewport(h);a.passOptions=t}_renderFeatures(a,b){for(const d of this.children)if(d.visible){var c=f("featurelayer-force-marker-text-draw-order")?e.FeatureBatchingStrategy.STRICT_MARKERS_AND_TEXT:
e.FeatureBatchingStrategy.BATCHING;c=d.getDisplayList(a.drawPhase,this._instanceStore,c);a.selection=b;c?.render(a)}b=this._getExclusivePostprocessingInstance(a);null!=b&&b.techniqueRef.postProcess(a,b)}}k.FeatureContainer=r;Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});