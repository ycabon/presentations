// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/has ../../../../geometry/support/aaBoundingRect ../../tiling/TileInfoView ../../tiling/TileKey ../../tiling/TileQueue ../../tiling/TileStrategy ../../engine/webgl/FeatureTile ./support/tileUtils".split(" "),function(g,f,k,t,l,u,v,m,n){class p{constructor(a,b,c){this.stage=a;this.version=b;this._tileInfoView=c;this._tiles=new Map;this._pendingUpdates=[];this._locked=!1}destroy(){}tiles(){return this._tiles.values()}size(){return this._tiles.size}setTiles(a){this._tiles.clear();
for(const b of a)this._tiles.set(b.key.id,b)}lockUploads(){this._locked=!0}unlockUploads(){this._locked=!1;for(const a of this._pendingUpdates)this.updateTile(a);this._pendingUpdates=[]}updateTile(a){if(this._locked)this._pendingUpdates.push(a);else{f("esri-2d-update-debug")&&console.debug(`Version[${a.version}] Tile[${a.id}] Chunk[${a.debugInfo?.chunkId??"\x3cEnsureEnd\x3e"}] RenderState.updateTile [${a.type}]`,a);var b=this._ensureTile(a.id);if("update"===a.type){const [q,...r]=a.modify;b.onMessage({type:"update",
modify:q,remove:a.remove,end:a.end});for(const h of r){var c=this._tiles.get(h.tileId);if(c)c.onMessage({type:"update",modify:h,remove:a.remove,end:!1,isPixelBuffer:!0})}}else if(null==a.append)b.onMessage({type:"append",clear:a.clear,debugInfo:a.debugInfo,end:a.end});else{var [d,...e]=a.append;b.onMessage({type:"append",clear:a.clear,append:d,debugInfo:a.debugInfo,end:a.end});for(c of e)if(a=this._tiles.get(c.tileId))a.onMessage({type:"update",modify:c,remove:[],sort:!1,end:!1,isPixelBuffer:!0})}}}removeTile(a){const b=
this._tiles.get(a);f("esri-2d-update-debug")&&console.debug(`Tile[${a}] RenderState.removeTile`);b?.destroy();this._tiles.delete(a)}isTileDone(a){return(a=this._tiles.get(a.id))?a.isReady:!1}_ensureTile(a){if(!this._tiles.has(a)){const b=this._createTile(a);this._copyPixelBufferedEntitiesInto(b);this._tiles.set(a,b)}return this._tiles.get(a)}_createTile(a){f("esri-2d-update-debug")&&console.debug(`Version[${this.version}] Tile[${a}] RenderState.createTile`);a=new l(a);const b=this._tileInfoView.getTileBounds(k.create(),
a),c=this._tileInfoView.getTileResolution(a.level);a=new m.FeatureTile(a,c,b[0],b[3]);a.stage=this.stage;return a}_copyPixelBufferedEntitiesInto(a){let b=7;for(let d=-1;1>=d;d++)for(let e=-1;1>=e;e++)if(0!==d||0!==e){var c=n.getPow2NeighborKey(a.key,e,d,this._tileInfoView.tileInfo.isWrappable).id;c=this._tiles.get(c);null!=c&&a.copyPixelBufferedEntitesFrom(c,1<<b,e,d);b--}}}g.RenderState=p;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});