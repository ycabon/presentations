// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../core/has ../../../../../geohash/geohashUtils ../../../../../layers/graphics/featureConversionUtils ../../../../../layers/graphics/OptimizedFeature ../../../../../layers/support/FieldsIndex ../aggregation/ComputedAggregateField ./AAggregateStrategy ./AProcessorStrategy ../sources/FeatureSourceMessage ../support/ComputedAttributeStorage ../support/FeatureFilter ../support/FeatureMetadata ../support/FeatureSetReaderJSON ../../../tiling/TileKey".split(" "),function(m,q,
u,v,w,x,y,z,A,B,C,D,E,F,G){class r extends A.ASendState{constructor(a,b){super(a);this.bins=new Map;this.done=!1;this._store=b}reset(){this.destroy();this.bins.clear();this.done=!1;this.handledChunks.clear()}destroy(){for(const a of this.bins.values()){const b=a.cachedFeature?.objectId;null!=b&&this._store.releaseDisplayIdForObjectId(b)}}*features(){for(const a of this.bins.values())a.cachedFeature&&(yield a.cachedFeature)}getGeohashBounds(a,b){const c=this.subscription.tile;return u.getGeohashBounds(c.extent,
c.resolution,b,a)}}class t extends z.AAggregateStrategy{static async create(a,b,c,h){const f=new C.ComputedAttributeStorage({spatialReference:b}),n=a.fixedBinLevel,p=await Promise.all(a.fields.map(async g=>y.ComputedAggregateField.create(f,g)));a=a.featureFilter?await D.create({geometryType:c.service.geometryType,hasM:!1,hasZ:!1,timeInfo:c.service.timeInfo,fieldsIndex:new x(c.service.fields),spatialReference:b,filterJSON:a.featureFilter}):null;return new t({fields:p,geohashLevel:n,spatialReference:b,
featureFilter:a},c,h)}constructor(a,b,c){super(b,c,a.spatialReference,a.fields);this._indexOptions=a;this._metadata=new E.FeatureMetadata({geometryType:this.geometryType,objectIdField:"aggregateId",fields:this._indexOptions.fields})}get geometryType(){return"esriGeometryPolygon"}createState(a){return new r(a,this._attributeStore)}async *applyOverride(a){this._attributeStore.incrementDisplayIdGeneration();for(const b of this._sendStates.values())b.reset()}getDisplayFeatures(a){a=new Set(a);const b=
new Set,c=[];for(const h of this._sendStates.values())for(const f of h.features())a.has(f.displayId)&&!b.has(f.objectId)&&(c.push(v.convertToFeature(f,this.geometryType,!1,!1)),b.add(f.objectId));return{features:[],aggregates:c}}getFeatureObjectIdsForAggregate(a){for(const b of this._sendStates.values())for(const c of b.bins.values())if(c.id===a)return Array.from(c.objectIds);return[]}async *updateChunks(){if(this._source.chunks().length)for(const a of this._sendStates.values())yield*this._update(a,
this._source)}async *_update(a,b){const {handledChunks:c,subscription:h,bins:f}=a,{spatialReference:n,geohashLevel:p}=this._indexOptions;var g=h.tile;if(!a.done){for(var k of b.chunks())if(!c.has(k.chunkId)){c.add(k.chunkId);var e=k.queryInfo;if("tileId"in e&&(e=new G(e.tileId),e.level!==g.level||e.world!==g.key.world))continue;e=k.getGeohashIndex(this._indexOptions);var l=a.getGeohashBounds(n,p);e.putBins(f,l)}g=[];k=h.tile.transform;for(var d of f.values())d.cachedFeature?d.cachedFeature.attributes=
d.getAttributes():(e=d.getGeometry(this.spatialReference,k),l=new w.OptimizedFeature(e,d.getAttributes(),null),e||(l.centroid=d.getGeometryCentroid(this.spatialReference,k)),l.objectId=d.id,l.displayId=this._attributeStore.createDisplayIdForObjectId(d.id),d.cachedFeature=l),g.push(d.cachedFeature);this.events.emit("changed");a.done=!b.updateTracking.updating;b=F.FeatureSetReaderJSON.fromOptimizedFeatures(g,this._metadata,k);d=b.getCursor();for(g=a.subscription.tile.arcadeEvaluationOptions;d.next();)this._attributeStore.setAttributeData(d.getDisplayId(),
d,g);q("esri-2d-update-debug")&&console.debug(`Tile[${h.tile.key.id}] BinningStrategy.sendUpdates`);this._attributeStore.sendUpdates();q("esri-2d-update-debug")&&console.debug(`Tile[${h.tile.key.id}] BinningStrategy._sendUpdates.await`);yield new B.FeatureTileAppendMessage(a.subscription,b,!0,a.done,{})}}}m.BinningState=r;m.BinningStrategy=t;Object.defineProperty(m,Symbol.toStringTag,{value:"Module"})});