// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../request ../../../../../core/has ../../../../../core/promiseUtils ../../../../../core/accessorSupport/diffUtils ../../../../../layers/graphics/data/QueryEngine ../../../../../layers/support/FieldsIndex ../../../../../rest/query/operations/query ../FeatureStoreStatistics ./FeatureSourceQueryInfo ./StreamMessenger ./strategies/DrillDownTileLoadStrategy ./strategies/PagedTileLoadStrategy ./strategies/SnapshotLoadStrategy ./strategies/StreamLoadStrategy ./strategies/chunks/SourceChunkStore ../support/FeatureMetadata ../../support/UpdateTracking2D".split(" "),
function(h,l,g,k,f,m,n,p,q,r,t,u,v,w,x,y,z,A){class B{constructor(a,b,c,d){this._aggregateAdapter=a;this._subscriptions=b;this._onChange=c;this._connection=d;this._updateTracking=new A.UpdateTracking2D({debugName:"FeatureSource"});this._store=new y.FeatureSourceChunkStore(this._onChange)}destroy(){this._strategy?.destroy();this._store.destroy();this._streamMessenger?.destroy()}get _eventLog(){return this._connection.eventLog}get metadata(){if(!this._metadata)throw Error("InternalError: Metadata not defined. Was update called?");
return this._metadata}get service(){return this._schema.service}get store(){return this._store}get streamMessenger(){null==this._streamMessenger&&this._initStreamMessenger();return this._streamMessenger}get statistics(){return q.FeatureStoreStatistics.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){const {dataFilter:a}=this._schema,{objectIdField:b,geometryType:c,timeInfo:d}=this._schema.service,e=this._schema.availableFields;this._queryEngine=
new m.QueryEngine({featureStore:this._store,fieldsIndex:n.fromJSON(this._schema.service.fieldsIndex),geometryType:c,objectIdField:b,hasM:!1,hasZ:!1,spatialReference:a.outSpatialReference,cacheSpatialQueries:!0,aggregateAdapter:this._aggregateAdapter,timeInfo:d,definitionExpression:a.definitionExpression,availableFields:e})}return this._queryEngine}get isStream(){return"stream"===this._schema.type}chunks(){return Array.from(this._store.chunks())}onSubscribe(a){this._eventLog.onEvent({type:"subscribe",
tile:a.tile.id});const b=this._strategy?.load(a);b&&(b.then(()=>this._eventLog.onEvent({type:"loaded",tile:a.tile.id})).catch(c=>this._eventLog.onEvent({type:"error",tile:a.tile.id,error:c})),this._updateTracking.addPromise(b))}onResume(a){this._updateTracking.addPromise(k.ignoreAbortErrors(this._strategy?.load(a)))}onUnsubscribe(a){this._eventLog.onEvent({type:"unsubscribe",tile:a.tile.id});this._strategy?.unload(a)}getOverride(a){return this._updateTracking.addPromise(this._doGetOverride(a))}applyOverride(a){this._store.applyOverrides(a)}async update(a,
b){a=a.source;const c=f.diff(this._schema,a);if(!c)return!1;g("esri-2d-update-debug")&&console.debug(`Version[${b}] FeatureSource.update`,{changes:c});this._schema=a;this._metadata=new z.FeatureMetadata(this._schema.service);this._queryEngine?.destroy();this._queryEngine=null;null==this._lastEditDate&&"lastEditDate"in this._schema.service&&(this._lastEditDate=this._schema.service.lastEditDate);null==this._streamMessenger&&"stream"===this._schema.type&&this._initStreamMessenger();if(f.hasRootDiffOnly(c,
"sourceRefreshVersion")&&this._strategy?.refresh)return await this._strategy.refresh(),!0;if("feature"===a.type&&f.hasRootDiffOnly(c,"availableFields")&&!await this._queryLastEditDateChanged()){this._eventLog.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(a.availableFields),this._eventLog.onEvent({type:"updateFieldsEnd"})}catch(d){this._eventLog.onEvent({type:"updateFieldsError",error:d})}return!1}return f.hasRootDiff(c,"dataFilter")||f.hasRootDiff(c,"sourceRefreshVersion")?
(await this._updateStrategy(b),!0):!1}_initStreamMessenger(){null==this._streamMessenger&&(this._streamMessenger=new t.StreamMessenger(this._connection))}async _doGetOverride(a){return this._strategy.queryOverride(a)}async _queryLastEditDateChanged(){if(null==this._lastEditDate)return!1;var a=this._schema.service.source;a=(await l(a.path,{query:{...a.query,f:"json"},responseType:"json"})).data.editingInfo.lastEditDate;if(a===this._lastEditDate)return!1;this._lastEditDate=a;return!0}async _createStrategy(){var a=
this.service,b="isSourceHosted"in a&&a.isSourceHosted,c=Array.isArray(a.source);a=a.source&&"collection"in a.source;b=b||c||a;c=r.FeatureSourceQueryInfo.fromSchema(this._schema);return"stream"===this._schema.type?(b=new x.StreamLoadStrategy(this._schema.service,this._schema.dataFilter,this._store,{outSR:this._schema.dataFilter.outSpatialReference},this.metadata),this._streamMessenger.strategy=b):(a=await this._supportSnapshotMode(c))?new w.SnapshotLoadStrategy(this._schema.service,c,this._store,a.featureCount,
this.metadata,this._eventLog):b?new v.PagedTileLoadStrategy(this._schema.service,c,this._store,this.metadata,this._eventLog):new u.DrillDownTileLoadStrategy(this._schema.service,c,this._store,this.metadata,this._eventLog)}async _updateStrategy(a){const b=await this._createStrategy();this._eventLog.onEvent({type:"updateStrategyStart",about:b.about});const c=!!this._strategy;this._store.clear();this._strategy?.destroy();this._strategy=b;g("esri-2d-update-debug")&&console.debug(`Version[${a}] FeatureSource.updateStrategy`,
{strategy:b});var d=Array.from(this._subscriptions.values());if(d.length){d=Promise.all(d.map(e=>this._strategy.load(e).then(()=>this._eventLog.onEvent({type:"loaded",tile:e.tile.id})).catch(C=>this._eventLog.onEvent({type:"error",tile:e.tile.id,error:C}))));this._updateTracking.addPromise(d);try{c&&await d}catch(e){k.throwIfNotAbortError(e)}this._eventLog.onEvent({type:"updateStrategyEnd"});g("esri-2d-update-debug")&&console.debug(`Version[${a}] FeatureSource.updateStrategyEnd`,{strategy:b})}else this._eventLog.onEvent({type:"updateStrategyEnd"})}async _supportSnapshotMode(a){const b=
this._schema.service;if(!("supportsSnapshotMinThreshold"in b&&b.supportsSnapshotMinThreshold&&b.snapshotCountThresholds))return null;var c=b.source;a=a.createQuery();a.inner.orderByFields=[];a.inner.returnGeometry=!1;c=(await p.executeQueryForCount(c,a.inner,{query:a.customParameters})).data.count;const {min:d,max:e}=b.snapshotCountThresholds;return c<=d||b.supportsSnapshotMaxThreshold&&c<e?{featureCount:c}:null}}h.FeatureSource=B;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});