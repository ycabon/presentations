// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../TimeExtent","../../../../../core/has","../../../../../geometry/SpatialReference","../../../../../rest/support/Query"],function(f,l,g,m,n){class h{static fromSchema(a){{var b=a.service;const d="orderByFields"in b&&b.orderByFields?b.orderByFields:b.objectIdField+" ASC";b={returnCentroid:"esriGeometryPolygon"===b.geometryType,returnGeometry:!0,timeReferenceUnknownClient:"timeReferenceUnknownClient"in b?b.timeReferenceUnknownClient:!1,outSpatialReference:m.fromJSON(a.dataFilter.outSpatialReference),
orderByFields:[d],where:a.dataFilter.definitionExpression??"1\x3d1",outFields:a.availableFields};if("feature"===a.type){const {gdbVersion:c,historicMoment:e,timeExtent:k}=a.dataFilter;b={...b,gdbVersion:c,historicMoment:e?new Date(e):null,timeExtent:k?l.fromJSON(k):null,outFields:a.availableFields}}}return new h(b,a.dataFilter.customParameters,a.service.geometryType,"capabilities"in a.service?a.service.capabilities:null)}constructor(a,b,d,c){this._queryParams=a;this._customParameters=b;this._geometryType=
d;this._capabilities=c}get pageSize(){if(null==this._capabilities)throw Error("InternalError: Service does not support paged queries");const {query:a}=this._capabilities;return Math.min(8E3,(a.maxRecordCount??8E3)*((a.supportsMaxRecordCountFactor?4:null)??1))}updateFields(a){this._queryParams.outFields=a}createPatchFieldsQuery(a,b){a=a.clone();if("*"===this._queryParams.outFields[0]){if("*"===(a.outFields??[])[0])return null;a.outFields=this._queryParams.outFields}else{const d=new Set(this._queryParams.outFields),
c=[];for(const e of d)b.has(e)||c.push(e);if(0===c.length)return null;a.outFields=c}a.returnGeometry=!1;a.returnCentroid=!1;a.quantizationParameters=null;a.cacheHint=!0;return{inner:a,customParameters:this._customParameters}}createQuery(a={}){if(!this._queryParams)throw Error("InternalError: queryInfo should be defined");return{inner:new n({...this._queryParams,...a}),customParameters:this._customParameters}}createTileQuery(a,b){if(null==this._capabilities)throw Error("InternalError: Service does not support tile queries");
const d=this.createQuery(b),c=d.inner;c.quantizationParameters=b.quantizationParameters??a.getQuantizationParameters();c.resultType="tile";c.geometry=a.extent;if(this._capabilities.query.supportsQuantization)"esriGeometryPolyline"===this._geometryType&&(c.maxAllowableOffset=a.resolution*g("feature-polyline-generalization-factor"));else if("esriGeometryPolyline"===this._geometryType||"esriGeometryPolygon"===this._geometryType)c.maxAllowableOffset=a.resolution,"esriGeometryPolyline"===this._geometryType&&
(c.maxAllowableOffset*=g("feature-polyline-generalization-factor"));c.defaultSpatialReferenceEnabled=this._capabilities.query.supportsDefaultSpatialReference;c.compactGeometryEnabled=this._capabilities.query.supportsCompactGeometry;this._capabilities.query.supportsMaxRecordCountFactor&&(c.maxRecordCountFactor=4);return d}createPagedTileQuery(a,b){const d=this.pageSize;return this.createTileQuery(a,{start:d*b,num:d,returnExceededLimitFeatures:!0})}createPagedQuery(a){const b=this.pageSize;return this.createQuery({start:b*
a,num:b,returnExceededLimitFeatures:!0,maxRecordCountFactor:4})}}f.FeatureSourceQueryInfo=h;Object.defineProperty(f,Symbol.toStringTag,{value:"Module"})});