// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/has ../../../../core/ReactiveMap ../../../../core/reactiveUtils ../../../../core/accessorSupport/decorators/property ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../core/support/UpdatingHandles".split(" "),function(b,d,h,k,l,m,g,q,r,n,p){b.UpdateTracking2D=class extends h{constructor(a){super(a);this.debugName="";this._updatingHandles=new p.UpdatingHandles;
this._idToUpdatingState=new l}get updating(){const a=this._updatingHandles.updating||Array.from(this._idToUpdatingState.values()).some(c=>c);if(k("esri-2d-log-updating")){const c=Array.from(this._idToUpdatingState.entries()).map(([e,f])=>`-> ${e}: ${f}`).join("\n");console.log(`${this.debugName}: Updating: ${a}\n-> Handles: ${this._updatingHandles.updating}\n${c}`)}return a}addUpdateTracking(a,c){const e=m.watch(()=>c.updating,f=>this._idToUpdatingState.set(a,f),{sync:!0});this.addHandles(e)}addPromise(a){return this._updatingHandles.addPromise(a)}};
d.__decorate([g.property({constructOnly:!0})],b.UpdateTracking2D.prototype,"debugName",void 0);d.__decorate([g.property({readOnly:!0})],b.UpdateTracking2D.prototype,"updating",null);b.UpdateTracking2D=d.__decorate([n.subclass("esri.view.2d.layers.support.UpdateTracking2D")],b.UpdateTracking2D);Object.defineProperty(b,Symbol.toStringTag,{value:"Module"})});