// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/Error ../../../../core/has ../../../../core/Logger ../../../../core/MD5 ../../../../layers/support/AggregateField ../../../../layers/support/ExpressionInfo ../../../../renderers/support/AuthoringInfo".split(" "),function(h,t,n,u,p,m,q,v){function w(b,a,c){switch(b){case "sum":return`cluster_sum_${a}`;case "avg":case "avg_angle":return`cluster_avg_${a}`;case "mode":return`cluster_type_${a}`;case "avg_norm":return b=a.toLowerCase()+",norm:field,"+c.toLowerCase(),"cluster_avg_"+
p.createMD5Hash(b)}}function k(b,a,c,d){const g=p.createMD5Hash(a),e="mode"===c?`cluster_type_${g}`:"sum"===c?`cluster_sum_${g}`:`cluster_avg_${g}`;b.some(l=>l.name===e)||b.push(new m({name:e,isAutoGenerated:!0,onStatisticExpression:new q({expression:a,returnType:d}),statisticType:c}));return e}function f(b,a,c,d,g){if("cluster_count"===a||b.some(l=>l.name===a))return a;const e=w(c,a,g);b.some(l=>l.name===e)||("avg_norm"===c?b.push(new m({name:e,isAutoGenerated:!0,onStatisticExpression:new q({expression:`$feature.${a} / $feature.${g}`,
returnType:d}),statisticType:"avg"})):b.push(new m({name:e,isAutoGenerated:!0,onStatisticField:a,statisticType:c})));return e}n.add("esri-cluster-arcade-enabled",!0);const x=n("esri-cluster-arcade-enabled"),r=b=>{const a=c=>u.getLogger("esri.views.2d.layers.support.clusterUtils").error(new t("Unsupported-renderer",c,{renderer:b}));if(!b)return!1;switch(b.type){case "unique-value":if(b.field2||b.field3)return a("FeatureReductionCluster does not support multi-field UniqueValueRenderers"),!1;break;case "class-breaks":if(b.normalizationField){const c=
b.normalizationType;if("field"!==c)return a(`FeatureReductionCluster does not support a normalizationType of ${c}`),!1}break;case "simple":case "pie-chart":break;default:return a(`FeatureReductionCluster does not support renderers of type ${b.type}`),!1}if(!x){if("valueExpression"in b&&b.valueExpression)return a("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"),!1;if(("visualVariables"in b&&b.visualVariables||[]).some(c=>!!("valueExpression"in
c&&c.valueExpression)))return a("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"),!1}return!0};h.createInferredClusterRenderer=function(b,a){a=a.clone();if(!r(a))return a;a.authoringInfo||(a.authoringInfo=new v);a.authoringInfo.isAutoGenerated=!0;if("visualVariables"in a){const c=(a.visualVariables||[]).filter(d=>"$view.scale"!==d.valueExpression);c.forEach(d=>{"rotation"===d.type?d.field?d.field=f(b,d.field,"avg_angle",
"number"):d.valueExpression&&(d.field=k(b,d.valueExpression,"avg_angle","number"),d.valueExpression=null):d.normalizationField?(d.field=f(b,d.field,"avg_norm","number",d.normalizationField),d.normalizationField=null):d.field?d.field=f(b,d.field,"avg","number"):d.valueExpression&&(d.field=k(b,d.valueExpression,"avg","number"),d.valueExpression=null)});a.visualVariables=c}switch(a.type){case "pie-chart":for(const c of a.attributes)c.field?c.field=f(b,c.field,"sum","number"):c.valueExpression&&(c.field=
k(b,c.valueExpression,"sum","number"),c.valueExpression=null);break;case "unique-value":a.field?a.field=f(b,a.field,"mode","string"):a.valueExpression&&(a.field=k(b,a.valueExpression,"mode","string"),a.valueExpression=null);break;case "class-breaks":a.normalizationField?(a.field=f(b,a.field,"avg_norm","number",a.normalizationField),a.normalizationField=null):a.field?a.field=f(b,a.field,"avg","number"):a.valueExpression&&(a.field=k(b,a.valueExpression,"avg","number"),a.valueExpression=null)}return a};
h.findSizeVV=b=>{for(const a of b)if("size"===a.type)return a;return null};h.hasClusterCountVV=b=>{for(const a of b)if("cluster_count"===a.field)return!0;return!1};h.isClusterCompatibleRenderer=r;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});