// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/devEnvironmentUtils ../../../../core/Error ../../../../core/promiseUtils ../../../../core/urlUtils ../../../../portal/Portal ../../../../chunks/persistableUrlUtils ../../../../symbols/support/styleUtils ../../../../symbols/support/webStyleSymbolUtils".split(" "),function(h,k,l,f,m,n,p,d,q){async function r(a,b){a=d.Style2DUrlTemplate.replaceAll(/\{SymbolName\}/gi,a.name);try{const c=await d.requestJSON(a,b);return d.makeCIMSymbolRef(c.data)}catch(c){return f.throwIfAbortError(c),
null}}async function t(a,b,c,e){c={portal:null!=c?.portal?c.portal:n.getDefault(),url:m.urlToObject(a.baseUrl),origin:"portal-item"};a=q.getStyleItemFromStyle(b,a.data);if(!a)throw new l("symbolstyleutils:symbol-name-not-found",`The symbol name '${b}' could not be found`,{symbolName:b});b=p.fromJSON(d.symbolUrlFromStyleItem(a,"cimRef"),c);k.isDevEnvironment()&&(b=k.adjustStaticAGOUrl(b));try{const g=await d.requestJSON(b,e);return d.makeCIMSymbolRef(g.data)}catch(g){return f.throwIfAbortError(g),
null}}h.fetchCIMSymbolReference=async function(a,b,c){if(!a.name)throw new l("style-symbol-reference-name-missing","Missing name in style symbol reference");if(a.styleName&&"Esri2DPointSymbolsStyle"===a.styleName)return r(a,c);try{const e=await d.fetchStyle(a,b,c);return t(e,a.name,b,c)}catch(e){return f.throwIfAbortError(e),null}};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});