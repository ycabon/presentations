// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/tslib.es6 ../../../../../intl ../../../../../core/Accessor ../../../../../core/colorUtils ../../../../../core/has ../../../../../core/mathUtils ../../../../../core/maybe ../../../../../core/quantityFormatUtils ../../../../../core/quantityUtils ../../../../../core/reactiveUtils ../../../../../core/unitUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/Logger ../../../../../core/RandomLCG ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/libs/gl-matrix-2/math/mat4 ../../../../../core/libs/gl-matrix-2/factories/mat4f64 ../../../../../chunks/vec32 ../../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../interactive/visualElements/LabelVisualElement ../../../interactive/visualElements/LineVisualElement ../../../interactive/visualElements/MeasurementAreaVisualElement ../../../interactive/visualElements/support/Segment ../../../support/mathUtils ../../../webgl-engine/lib/Material ../../../webgl-engine/materials/lineStippleUtils ../../../../../intl/locale ../../../../../intl/messages".split(" "),
function(g,l,W,J,n,X,K,p,E,L,u,v,m,Y,Z,M,N,O,F,A,G,w,P,H,Q,x,R,S,T){g.AreaMeasurementVisualization=class extends J{get _parameters(){const {accentColor:a,textColor:b}=this.view.effectiveTheme,d=n.unitRGBAFromColor(a),h=n.multiplyOpacityToUnitRGBA(a,.5),c=n.multiplyOpacityToUnitRGBA(n.getContrast(a),.5);var e=n.getContrast(b,n.BrightnessThreshold.Low);const f=n.multiplyOpacity(e,.6);e=n.multiplyOpacity(e,.5);return{accentColor:d,transparentAccentColor:h,transparentContrastColor:c,intersectingLineColor:[1,
.2,0,1],textColor:b,textBackgroundColor:f,textCalloutColor:e,pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(a){super(a);this._perimeterLengthLabel=this._areaLabel=this._measurementArea=this._projectionLines=this._intersectedPerimeter=this._perimeter=this._intersectedPath=this._path=null;
this._pathSegments=[];this._perimeterSegments=[];this._origin=A.create();this._originTransform=O.create();this.messages=null;this.viewData=U;this.perimeterLengthLabel=this.areaLabel=null;this.loadingMessages=!0}initialize(){const {analysisViewData:a,_parameters:b,view:d}=this;this._path=new w.LineVisualElement({view:d,attached:!0,width:b.pathLineWidth,polygonOffset:!0,renderOccluded:x.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0});this._intersectedPath=new w.LineVisualElement({view:d,
attached:!0,width:b.pathLineWidth,polygonOffset:!0,renderOccluded:x.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0});this._perimeter=new w.LineVisualElement({view:d,attached:!0,width:b.perimeterLineWidth,polygonOffset:!0,renderOccluded:x.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0});this._intersectedPerimeter=new w.LineVisualElement({view:d,attached:!0,width:b.perimeterLineWidth,color:b.intersectingLineColor,polygonOffset:!0,renderOccluded:x.RenderOccludedFlag.OccludeAndTransparent,
isDecoration:!0});this._projectionLines=new w.LineVisualElement({view:d,attached:!0,width:b.projectionLineWidth,stipplePattern:R.createStipplePatternSimple(b.projectionLineStippleSize),polygonOffset:!0,renderOccluded:x.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0});this._measurementArea=new P.MeasurementAreaVisualElement({view:d,attached:!0,isDecoration:!0});const h={attached:!0,view:d,isDecoration:!0};this._areaLabel=new G.LabelVisualElement({...h,fontSize:B.Large});this._perimeterLengthLabel=
new G.LabelVisualElement({...h,fontSize:B.Small});this.addHandles([u.watch(()=>[a.mode,this.visible,a.unit,a.measurementData,a.stagedPoint],()=>this._update(),u.syncAndInitial),u.watch(()=>d.state?.camera,()=>this._updateLabels(),u.syncAndInitial),S.onLocaleChange(()=>this._updateMessageBundle()),u.watch(()=>this._parameters,({accentColor:c,transparentAccentColor:e,transparentContrastColor:f,textColor:k,textBackgroundColor:q,textCalloutColor:r})=>{const {_path:y,_intersectedPath:z,_perimeter:t,_projectionLines:V,
_measurementArea:I,_areaLabel:C,_perimeterLengthLabel:D}=this;y.color=c;z.color=c;t.color=c;V.color=c;I.color1=e;I.color2=f;C.textColor=k;C.backgroundColor=q;C.calloutColor=r;D.textColor=k;D.backgroundColor=q;D.calloutColor=r},u.initial)]);this._updateMessageBundle()}destroy(){this._measurementArea=p.destroyMaybe(this._measurementArea);this._path=p.destroyMaybe(this._path);this._intersectedPath=p.destroyMaybe(this._intersectedPath);this._perimeter=p.destroyMaybe(this._perimeter);this._intersectedPerimeter=
p.destroyMaybe(this._intersectedPerimeter);this._areaLabel=p.destroyMaybe(this._areaLabel);this._perimeterLengthLabel=p.destroyMaybe(this._perimeterLengthLabel);this._projectionLines=p.destroyMaybe(this._projectionLines);this.set("view",null)}_update(){if(!this.destroyed&&this.view.ready&&this.view.renderCoordsHelper){var {analysisViewData:{measurementData:a},analysisViewData:b}=this;null!=a&&(this._updateViewData(a,b.path,b.stagedPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),
this._updateArea(),this._updateProjectionLines(),this._updateLabels())}}_updateViewData(a,b,d){const h=a.validMeasurement,c="geodesic"===a.actualMeasurementMode;var e=c?a.geodesicArea:a.area;let f=1;e&&(e=this._toPreferredAreaUnit(e,this.analysisViewData.unit),f=K.nextHighestPowerOfTen(Math.sqrt(e.value)/Math.sqrt(300)),f*=Math.sqrt(v.convertUnit(1,e.unit,"square-meters")),f/=a.unitNormalizer.normalizeDistance(1));this._set("viewData",{validMeasurement:h,numVertices:a.numVertices,hasStagedVertex:a.hasStagedVertex,
path:b,pathVersion:b.version,stagedPoint:d,measurementData:a,mode:a.actualMeasurementMode,positionsGeographic:a.positionsGeographic,positionsRenderCoords:a.positionsRenderCoords,positionsProjected:a.positionsProjectedWorldCoords,positionsFittedRenderCoords:a.positionsFittedRenderCoords,intersectingSegments:c?a.geodesicIntersectingSegments:a.intersectingSegments,triangleIndices:c?a.geodesicTriangleIndices:a.triangleIndices,fittingMode:a.fittingMode,areaCentroid:c?a.geodesicAreaCentroidRenderCoords:
a.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:h?0:b.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:f})}_updateOrigin(){Q.midpoint3d(this.viewData.positionsRenderCoords,this._origin);N.fromTranslation(this._originTransform,this._origin);this._measurementArea.transform=this._originTransform;this._projectionLines.transform=this._originTransform}_createSegments(a){const b=this.viewData,d=this.view.renderCoordsHelper.spatialReference,h=b.mode,c=[],e=[],f=[],k=b.numVertices,q=b.validMeasurement?
k:k-1;for(let r=0;r<q;++r){const y=b[a][r],z=b[a][(r+1)%k];let t=null;switch(h){case "euclidean":t=new H.EuclideanSegment(y,z);break;case "geodesic":t=new H.GeodesicSegment(y,z,d)}b.intersectingSegments.has(r)?f.push(t):e.push(t);c.push(t)}a=null;b.validMeasurement&&b.hasStagedVertex&&2<=q?a=c[c.length-2]:b.hasStagedVertex&&1<=q&&(a=c[c.length-1]);return{all:c,nonIntersecting:e,intersecting:f,stagedSegment:a}}_updatePathSegments(){const {visible:a}=this,b=this._createSegments("positionsRenderCoords");
this._path.setGeometryFromSegments(b.nonIntersecting,this._origin);this._path.visible=a;this._intersectedPath.setGeometryFromSegments(b.intersecting,this._origin);this._intersectedPath.visible=a;this._pathSegments=b.all}_updatePerimeterSegments(){const a=this.visible&&"euclidean"===this.viewData.mode,b=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(b.nonIntersecting,this._origin);this._perimeter.visible=a;this._intersectedPerimeter.setGeometryFromSegments(b.intersecting,
this._origin);this._intersectedPerimeter.visible=a;this._perimeterSegments=b.all}_updateArea(){const a=this.viewData;switch(a.mode){case "euclidean":this._updateAreaEuclidean(a);break;case "geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(a){const b=this.visible;a.validMeasurement&&0===a.intersectingSegments.size&&a.triangleIndices?(this._measurementArea.geometry={uv:a.positionsProjected,position:a.positionsFittedRenderCoords,triangleIndices:a.triangleIndices},this._measurementArea.size=
[a.checkerSize,a.checkerSize],this._measurementArea.visible=b):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const a=this.viewData,b=this.visible;var d=a.mode;const h=a.numVertices;if(0<h&&a.validMeasurement&&"euclidean"===d){d=[];for(let c=0;c<h;++c){const e=A.create();F.subtract(e,a.positionsRenderCoords[c],this._origin);const f=A.create();F.subtract(f,a.positionsFittedRenderCoords[c],this._origin);d.push([e,f])}this._projectionLines.geometry=
d;this._projectionLines.visible=b}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(!this.destroyed){var {viewData:a}=this,{measurementData:b,mode:d,path:h}=a;if(h){var c=this.visible,e=this._formatAreaLabel(this.messages,"geodesic"===d?b.geodesicArea:b.area,this.analysisViewData.unit);null!=e?(this._areaLabel.geometry={type:"point",point:a.areaCentroid},this._areaLabel.text=e,this._areaLabel.visible=a.validMeasurement&&0===a.intersectingSegments.size&&c):
this._areaLabel.visible=!1;this._set("areaLabel",e);if(a.validMeasurement&&0===a.intersectingSegments.size){e="geodesic"===a.mode;var f=this._formatLengthLabel(this.messages,e?b.geodesicPathLength:b.validMeasurement?b.perimeterLength:b.pathLength,this.analysisViewData.unit);this._set("perimeterLengthLabel",f);this._perimeterLengthLabel.distance=this._parameters.labelDistance;this._perimeterLengthLabel.anchor="top";this._perimeterLengthLabel.text=f;var k=this._perimeterLengthLabel.visible=!0;for(f=
0;f<a.numVertices;++f){k=(a.perimeterLengthLabelSegmentIndex+f)%a.numVertices;const q=e||!b.validMeasurement?this._pathSegments[k]:this._perimeterSegments[k];k=!0;this._perimeterLengthLabel.geometry={type:"segment",segment:q,sampleLocation:"center"};if(this._perimeterLengthLabel.overlaps(this._areaLabel))k=!1;else break}this._perimeterLengthLabel.visible=k&&c}else this._perimeterLengthLabel.visible=!1}}}_toPreferredAreaUnit(a,b){return L.toUnit(a,this._preferredAreaUnit(a,b))}_preferredAreaUnit(a,
b){switch(b){case "metric":return v.adaptiveMetricAreaUnit(a.value,a.unit);case "imperial":return v.adaptiveImperialAreaUnit(a.value,a.unit);default:return b}}_preferredLengthUnit(a,b){b=this._deriveLengthUnitFromAreaUnit(b);switch(b){case "metric":return v.adaptiveMetricLengthUnit(a.value,a.unit);case "imperial":return v.adaptiveImperialLengthUnit(a.value,a.unit);default:return b}}_deriveLengthUnitFromAreaUnit(a){switch(a){case "metric":return"metric";case "imperial":return"imperial";case "square-inches":return"inches";
case "square-feet":return"feet";case "square-yards":return"yards";case "square-miles":return"miles";case "square-us-feet":return"us-feet";case "square-millimeters":return"millimeters";case "square-centimeters":return"centimeters";case "square-decimeters":return"decimeters";case "square-meters":return"meters";case "square-kilometers":return"kilometers";case "acres":return"imperial";case "ares":case "hectares":return"metric"}throw Error("unhandled area unit");}_formatAreaLabel(a,b,d){return a&&b&&E.formatDecimal(a,
b,this._preferredAreaUnit(b,d))}_formatLengthLabel(a,b,d){return a&&b&&E.formatDecimal(a,b,this._preferredLengthUnit(b,d))}_updateMessageBundle(){this.loadingMessages=!0;T.fetchMessageBundle("esri/core/t9n/Units").then(a=>{this.messages=a;this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};l.__decorate([m.property()],g.AreaMeasurementVisualization.prototype,"_parameters",null);l.__decorate([m.property()],g.AreaMeasurementVisualization.prototype,"view",void 0);l.__decorate([m.property()],
g.AreaMeasurementVisualization.prototype,"messages",void 0);l.__decorate([m.property()],g.AreaMeasurementVisualization.prototype,"analysis",void 0);l.__decorate([m.property()],g.AreaMeasurementVisualization.prototype,"viewData",void 0);l.__decorate([m.property()],g.AreaMeasurementVisualization.prototype,"analysisViewData",void 0);l.__decorate([m.property({readOnly:!0})],g.AreaMeasurementVisualization.prototype,"areaLabel",void 0);l.__decorate([m.property({readOnly:!0})],g.AreaMeasurementVisualization.prototype,
"perimeterLengthLabel",void 0);l.__decorate([m.property()],g.AreaMeasurementVisualization.prototype,"loadingMessages",void 0);l.__decorate([m.property()],g.AreaMeasurementVisualization.prototype,"visible",null);g.AreaMeasurementVisualization=l.__decorate([M.subclass("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],g.AreaMeasurementVisualization);var B;(function(a){a[a.Small=12]="Small";a[a.Large=16]="Large"})(B||={});const U={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,
path:null,pathVersion:-1,stagedPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null};Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});