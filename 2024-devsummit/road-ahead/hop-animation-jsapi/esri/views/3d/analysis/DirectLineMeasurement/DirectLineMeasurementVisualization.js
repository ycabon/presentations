// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../intl ../../../../core/Accessor ../../../../core/colorUtils ../../../../core/mathUtils ../../../../core/maybe ../../../../core/quantityFormatUtils ../../../../core/quantityUtils ../../../../core/reactiveUtils ../../../../core/screenUtils ../../../../core/unitUtils ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../core/libs/gl-matrix-2/math/vec2 ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../interfaces ./interfaces ../../interactive/visualElements/LabelVisualElement ../../interactive/visualElements/LineVisualElement ../../interactive/visualElements/MeasurementArrowVisualElement ../../interactive/visualElements/RightAngleQuadVisualElement ../../interactive/visualElements/support/Segment ../../webgl-engine/lib/Material ../../webgl-engine/materials/lineStippleUtils ../../../interactive/support/viewUtils ../../../../intl/locale ../../../../intl/messages".split(" "),
function(l,n,la,R,y,L,w,u,F,v,A,M,p,ma,na,oa,S,N,O,B,T,k,C,D,U,V,z,E,G,H,W,X){l.DirectLineMeasurementVisualization=class extends R{get _parameters(){const {accentColor:a,textColor:c}=this.view.effectiveTheme,b=y.unitRGBAFromColor(a),g=y.multiplyOpacityToUnitRGBA(a,.75),d=y.unitRGBAFromColor(y.getContrast(a));var e=y.getContrast(c,y.BrightnessThreshold.Low);const q=y.multiplyOpacity(e,.6);e=y.multiplyOpacity(e,.5);return{accentColor:b,contrastColor:d,translucentAccentColor:g,triangleLineWidth:3,geodesicProjectionLineWidth:2,
guideLineWidth:2,guideStippleLengthPixels:3,directLabelFontSize:16,horizontalLabelFontSize:12,verticalLabelFontSize:12,textColor:c,textBackgroundColor:q,textCalloutColor:e}}get visible(){return this.analysisView.visible}get viewMode(){const {elevationAlignedStartPoint:a,elevationAlignedEndPoint:c}=this.analysisView;if(null==a||null==c||a.equals(c))return k.ViewMode.None;var b=this.analysisView.result;if(null==b)return k.ViewMode.Direct;if("geodesic"===b.mode)return this._requiresGeodesicGuideAt(this._startPosition)||
this._requiresGeodesicGuideAt(this._endPosition)?k.ViewMode.ProjectedGeodesic:k.ViewMode.Direct;const {verticalDistance:g,horizontalDistance:d}=b;b=g.value;const e=d.value;return Math.min(b/e,e/b)<this.triangleCollapseRatioThreshold?k.ViewMode.Direct:k.ViewMode.Triangle}get actualVisualizedMeasurement(){if(null==this.analysisView.result)switch(this.analysisView.measurementMode){default:return"euclidean";case T.MeasurementMode.Geodesic:return"geodesic"}return this.analysisView.result.mode}get allowVisualElementsOrientationChange(){return null==
this._triangleOrientationOverride}set allowVisualElementsOrientationChange(a){null==this._triangleOrientationOverride!==a&&(this._triangleOrientationOverride=null==this._triangleOrientationOverride?this._actualVisualElementsOrientation:null)}get labels(){return{direct:this._segmentLabel,horizontal:"geodesic"===this.actualVisualizedMeasurement?this._segmentLabel:this._horizontalLabel,vertical:this._verticalLabel}}constructor(a){super(a);this._horizontalLabel=this._verticalLabel=this._segmentLabel=
this._geodesicEndHint=this._geodesicStartHint=this._projectedGeodesicLine=this._rightAngleQuad=this._triangleVisualElement=this._segmentVisualElement=null;this._startPosition=B.create();this._endPosition=B.create();this._cornerPosition=B.create();this._startPositionAtSeaLevel=B.create();this._endPositionAtSeaLevel=B.create();this.messages=this._triangleOrientationOverride=null;this.loadingMessages=!0;this.visualElementOrientation=k.VisualElementOrientation.Auto;this.triangleCollapseRatioThreshold=
.03}initialize(){const a={attached:!0,view:this.view,isDecoration:!0},{guideLineWidth:c,guideStippleLengthPixels:b,triangleLineWidth:g,geodesicProjectionLineWidth:d,directLabelFontSize:e,verticalLabelFontSize:q,horizontalLabelFontSize:t}=this._parameters;this._segmentVisualElement=new U.MeasurementArrowVisualElement({...a,geometry:null,renderOccluded:E.RenderOccludedFlag.OccludeAndTransparent});this._triangleVisualElement=new D.LineVisualElement({...a,width:g,renderOccluded:E.RenderOccludedFlag.OccludeAndTransparent});
this._rightAngleQuad=new V.RightAngleQuadVisualElement({...a,renderOccluded:E.RenderOccludedFlag.OccludeAndTransparent});const h={...a,polygonOffset:!0,renderOccluded:E.RenderOccludedFlag.OccludeAndTransparent};this._projectedGeodesicLine=new D.LineVisualElement({...h,width:d,stipplePattern:G.createStipplePatternSimple(b)});this._geodesicStartHint=new D.LineVisualElement({...h,width:c,stipplePattern:G.createStipplePatternSimple(b)});this._geodesicEndHint=new D.LineVisualElement({...h,width:c,stipplePattern:G.createStipplePatternSimple(b)});
this._segmentLabel=new C.LabelVisualElement({...a,fontSize:e});this._verticalLabel=new C.LabelVisualElement({...a,fontSize:q});this._horizontalLabel=new C.LabelVisualElement({...a,fontSize:t});this.addHandles([v.watch(()=>{const {elevationAlignedStartPoint:f,elevationAlignedEndPoint:m}=this.analysisView,r=this.view;return{view:r,camera:r.state.camera,viewMode:this.viewMode,elevationAlignedStartPoint:f,elevationAlignedEndPoint:m,orientation:this._actualVisualElementsOrientation,visualizedMeasurement:this.actualVisualizedMeasurement,
stripeLength:this._measurementArrowStripeLength}},f=>this._updateGeometryAndViewMode(f),v.syncAndInitial),v.watch(()=>({visible:this.visible,viewMode:this.viewMode}),f=>this._updateVisualElementVisibility(f),v.syncAndInitial),v.watch(()=>({text:this._labelsText,visualizedMeasurement:this.actualVisualizedMeasurement}),f=>this._updateLabelText(f),v.syncAndInitial),v.watch(()=>({visible:this.visible,viewMode:this.viewMode}),f=>this._updateLabelVisibility(f),v.syncAndInitial),v.watch(()=>this._measurementArrowStripeLength,
f=>this._updateSegmentStripeLength(f),v.syncAndInitial),W.onLocaleChange(async()=>this._updateMessageBundle()),v.watch(()=>this._parameters,({textBackgroundColor:f,textCalloutColor:m,textColor:r,translucentAccentColor:x,accentColor:Y,contrastColor:Z})=>{const {_segmentLabel:I,_verticalLabel:J,_horizontalLabel:K,_triangleVisualElement:aa,_rightAngleQuad:ba,_projectedGeodesicLine:ca,_geodesicStartHint:da,_geodesicEndHint:ea,_segmentVisualElement:P}=this;I.backgroundColor=f;I.calloutColor=m;I.textColor=
r;J.backgroundColor=f;J.calloutColor=m;J.textColor=r;K.backgroundColor=f;K.calloutColor=m;K.textColor=r;aa.color=x;ba.color=x;ca.color=x;da.color=x;ea.color=x;P.color=Y;P.contrastColor=Z},v.initial)]);this._updateMessageBundle()}destroy(){this._segmentVisualElement=w.destroyMaybe(this._segmentVisualElement);this._triangleVisualElement=w.destroyMaybe(this._triangleVisualElement);this._rightAngleQuad=w.destroyMaybe(this._rightAngleQuad);this._projectedGeodesicLine=w.destroyMaybe(this._projectedGeodesicLine);
this._geodesicStartHint=w.destroyMaybe(this._geodesicStartHint);this._geodesicEndHint=w.destroyMaybe(this._geodesicEndHint);this._segmentLabel=w.destroyMaybe(this._segmentLabel);this._verticalLabel=w.destroyMaybe(this._verticalLabel);this._horizontalLabel=w.destroyMaybe(this._horizontalLabel);this.set("view",null)}_updateVisualElementVisibility({visible:a,viewMode:c}){this._segmentVisualElement.visible=!1;this._triangleVisualElement.visible=!1;this._rightAngleQuad.visible=!1;this._projectedGeodesicLine.visible=
!1;this._geodesicStartHint.visible=!1;this._geodesicEndHint.visible=!1;if(a)switch(c){case k.ViewMode.Direct:this._segmentVisualElement.visible=!0;break;case k.ViewMode.Triangle:this._segmentVisualElement.visible=!0;this._triangleVisualElement.visible=!0;this._rightAngleQuad.visible=!0;break;case k.ViewMode.ProjectedGeodesic:this._segmentVisualElement.visible=!0,this._projectedGeodesicLine.visible=!0,this._geodesicStartHint.visible=!0,this._geodesicEndHint.visible=!0}}_updateGeometryAndViewMode({view:a,
camera:c,viewMode:b,elevationAlignedStartPoint:g,elevationAlignedEndPoint:d,orientation:e,visualizedMeasurement:q,stripeLength:t}){const h=a.renderCoordsHelper;if(null!=h&&null!=g&&null!=d&&!g.equals(d)){var f=this._startPosition,m=this._endPosition;h.toRenderCoords(g,f);h.toRenderCoords(d,m);g=e===k.VisualElementOrientation.AboveSegment?1:-1;d=h.getAltitude(m);var r=h.getAltitude(f);d=g*(d-r);0>d&&(f=this._endPosition,m=this._startPosition);q="geodesic"===q?new z.GeodesicSegment(this._startPosition,
this._endPosition,h.spatialReference):new z.EuclideanSegment(this._startPosition,this._endPosition);this._segmentVisualElement.geometry=q;this._updateSegmentStripeLength(t);switch(b){case k.ViewMode.Direct:this._updateSegment(q,e);break;case k.ViewMode.Triangle:this._updateSegmentAndTriangle({view:a,camera:c,segment:q,orientation:e,startPosition:f,endPosition:m,deltaSign:g,altitudeDelta:d});break;case k.ViewMode.ProjectedGeodesic:this._updateSegmentAndProjection({view:a,orientation:e,startPosition:f,
endPosition:m})}}}_updateSegment(a,c){this._segmentLabel.anchor=c===k.VisualElementOrientation.AboveSegment?"top":"bottom";this._segmentLabel.geometry={type:"segment",segment:a,sampleLocation:"center"}}_updateSegmentAndTriangle({view:{renderCoordsHelper:a},camera:c,segment:b,orientation:g,startPosition:d,endPosition:e,deltaSign:q,altitudeDelta:t}){const h=this._cornerPosition;a.worldUpAtPosition(d,h);O.scale(h,h,q*Math.abs(t));O.add(h,h,d);this._triangleVisualElement.geometry=[[[d[0],d[1],d[2]],[h[0],
h[1],h[2]],[e[0],e[1],e[2]]]];this._rightAngleQuad.geometry={previous:d,center:h,next:e};a=new z.EuclideanSegment(d,h);q=new z.EuclideanSegment(h,e);var f=fa,m=ha;c.projectToRenderScreen(h,f);c.projectToRenderScreen(e,m);t="bottom";var r="top";f=f[0]<m[0]?"left":"right";const x=ia;m=ja;H.renderScreenSpaceTangent(d,h,c,x);H.renderScreenSpaceTangent(d,e,c,m);N.dot(x,m)>=Q?t=Math.sign(x[1])===Math.sign(m[1])?C.mirrorPosition(f):f:(d=ka,H.renderScreenSpaceTangent(h,e,c,d),N.dot(d,m)>=Q&&(t=Math.sign(d[0])===
Math.sign(m[0])?C.mirrorPosition(r):r));g===k.VisualElementOrientation.BelowSegment&&(t="top"===t?"bottom":"top",r="top"===r?"bottom":"top",f="top"===f?"bottom":"top");this._segmentLabel.anchor=t;this._segmentLabel.geometry={type:"segment",segment:b,sampleLocation:"center"};this._verticalLabel.geometry={type:"segment",segment:a,sampleLocation:"center"};this._verticalLabel.anchor=f;this._horizontalLabel.geometry={type:"segment",segment:q,sampleLocation:"center"};this._horizontalLabel.anchor=r}_updateSegmentAndProjection({view:{renderCoordsHelper:a},
orientation:c,startPosition:b,endPosition:g}){a.setAltitude(this._startPositionAtSeaLevel,0,b);a.setAltitude(this._endPositionAtSeaLevel,0,g);a=new z.GeodesicSegment(this._startPositionAtSeaLevel,this._endPositionAtSeaLevel,a.spatialReference);this._projectedGeodesicLine.setGeometryFromSegment(a);this._geodesicStartHint.setGeometryFromSegment(new z.EuclideanSegment(this._startPositionAtSeaLevel,b));this._geodesicEndHint.setGeometryFromSegment(new z.EuclideanSegment(this._endPositionAtSeaLevel,g));
this._segmentLabel.geometry={type:"segment",segment:a,sampleLocation:"center"};this._segmentLabel.anchor=c===k.VisualElementOrientation.AboveSegment?"top":"bottom"}_updateLabelText({text:a,visualizedMeasurement:c}){null!=a?(this._segmentLabel.text="euclidean"===c?a.euclideanDistance:a.geodesicDistance,this._horizontalLabel.text=a.horizontalDistance,this._verticalLabel.text=a.verticalDistance):(this._segmentLabel.text=null,this._horizontalLabel.text=null,this._verticalLabel.text=null);this.notifyChange("labels")}_updateLabelVisibility({visible:a,
viewMode:c}){const b=this._segmentLabel,g=this._horizontalLabel,d=this._verticalLabel;b.visible=!1;g.visible=!1;d.visible=!1;if(a)switch(c){case k.ViewMode.Direct:b.visible=!0;break;case k.ViewMode.Triangle:b.visible=!0;g.visible=!0;d.visible=!0;break;case k.ViewMode.ProjectedGeodesic:b.visible=!0}}get _labelsText(){if(this.destroyed)return null;const a=this.messages;var c=this.analysisView.result;if(null==c||null==a)return null;const {directDistance:b,horizontalDistance:g,verticalDistance:d,geodesicDistance:e}=
c;c=this.analysisView.unit;const q=t=>({euclideanDistance:"",geodesicDistance:"",horizontalDistance:"",verticalDistance:"",...t});switch(c){case "metric":return q({euclideanDistance:b&&u.formatMetricLength(a,b),geodesicDistance:e&&u.formatMetricLength(a,e),horizontalDistance:g&&u.formatMetricLength(a,g),verticalDistance:d&&u.formatMetricVerticalLength(a,d)});case "imperial":return q({euclideanDistance:b&&u.formatImperialLength(a,b),geodesicDistance:e&&u.formatImperialLength(a,e),horizontalDistance:g&&
u.formatImperialLength(a,g),verticalDistance:d&&u.formatImperialVerticalLength(a,d)});default:return q({euclideanDistance:b&&u.formatDecimal(a,b,c),geodesicDistance:e&&u.formatDecimal(a,e,c),horizontalDistance:g&&u.formatDecimal(a,g,c),verticalDistance:d&&u.formatDecimal(a,d,c)})}}_updateSegmentStripeLength(a){const c=this._segmentVisualElement;null!=a?(c.stripeLength=a,c.stripesEnabled=!0):c.stripesEnabled=!1}get _actualVisualElementsOrientation(){if(null!=this._triangleOrientationOverride)return this._triangleOrientationOverride;
const a=this.visualElementOrientation;return a===k.VisualElementOrientation.Auto?this.view.state.camera.aboveGround?k.VisualElementOrientation.AboveSegment:k.VisualElementOrientation.BelowSegment:a}_requiresGeodesicGuideAt(a){var c=this.view;if(!c?.state)return!1;const b=c.renderCoordsHelper;if(!b)return!1;c=c.state.camera.computeScreenPixelSizeAt(a);return 10<=b.getAltitude(a)/c}get _measurementArrowStripeLength(){const {result:a,unit:c}=this.analysisView;if(null==a)return null;var b=null;b=a.directDistance;
switch(c){case "metric":b=b&&F.toUnit(b,"meters");break;case "imperial":b=b&&F.toUnit(b,M.adaptiveImperialLengthUnit(b.value,b.unit));break;default:b=b&&F.toUnit(b,c)}return null==b?null:L.nextHighestPowerOfTen(b.value/30)*M.convertUnit(1,b.unit,"meters")}_updateMessageBundle(){this.loadingMessages=!0;X.fetchMessageBundle("esri/core/t9n/Units").then(a=>{this.messages=a}).finally(()=>{this.loadingMessages=!1})}get testData(){return{labels:this.labels,stripeLength:this._segmentVisualElement?.stripeLength}}};
n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"_parameters",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"_triangleOrientationOverride",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"messages",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"view",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"analysis",void 0);n.__decorate([p.property()],
l.DirectLineMeasurementVisualization.prototype,"analysisView",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"loadingMessages",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"visible",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"viewMode",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"actualVisualizedMeasurement",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,
"visualElementOrientation",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"triangleCollapseRatioThreshold",void 0);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"allowVisualElementsOrientationChange",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"labels",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"_labelsText",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,
"_actualVisualElementsOrientation",null);n.__decorate([p.property()],l.DirectLineMeasurementVisualization.prototype,"_measurementArrowStripeLength",null);l.DirectLineMeasurementVisualization=n.__decorate([S.subclass("esri.views.3d.analysis.DirectLineMeasurement.DirectLineMeasurementVisualization")],l.DirectLineMeasurementVisualization);const Q=Math.cos(L.deg2rad(12)),fa=A.createRenderScreenPointArray3(),ha=A.createRenderScreenPointArray3(),ia=A.createRenderScreenPointArray(),ja=A.createRenderScreenPointArray(),
ka=A.createRenderScreenPointArray();Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});