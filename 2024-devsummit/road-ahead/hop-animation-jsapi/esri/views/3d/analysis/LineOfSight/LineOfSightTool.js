// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../Color ../../../../analysis/LineOfSightAnalysisObserver ../../../../analysis/LineOfSightAnalysisTarget ../../../../core/Handles ../../../../core/Logger ../../../../core/maybe ../../../../core/reactiveUtils ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../core/support/UpdatingHandles ../../../../geometry/support/lineSegment ../../../../support/elevationInfoUtils ../../../../symbols/support/ElevationInfo ./LineOfSightConfiguration ./LineOfSightManipulators ./LineOfSightRayIntersector ../../interactive/visualElements/LaserlineVisualElement ../../webgl-engine/lib/IntersectorInterfaces ../../../input/ViewEvents ../../../interactive/AnalysisToolBase ../../../interactive/dragEventPipeline ../../../interactive/interfaces ../../../support/screenUtils ../../../input/IViewEvents".split(" "),
function(e,f,q,r,t,u,v,l,h,g,L,M,D,E,w,x,y,z,A,F,G,m,N,H,B,n,C,p){var k;(function(a){a.Ready="ready";a.Creating="creating";a.Created="created"})(k||={});e.LineOfSightTool=class extends H.AnalysisToolBase{constructor(a){super(a);this.removeIncompleteOnCancel=!1;this._grabbedManipulator=this._laserlineVisualElement=this._latestPointerMovePointerType=this.analysisViewData=null;this._analysisHandles=new u;this._updatingHandles=new E.UpdatingHandles;this._manipulatorHandles=new u;this._targetTrackerManipulator=
null}initialize(){this._intersector=new F.LineOfSightRayIntersector({view:this.view});this.addHandles(h.watch(()=>this.state,a=>{a===k.Created&&this.finishToolCreation()},h.syncAndInitial));this._observerManipulator=this._createObserverManipulator();this._createLaserLine();this.addHandles([this._updatingHandles.add(()=>this.analysisViewData?.elevationAlignedObserver,a=>this._onObserverLocationChange(a),h.initial),this._updatingHandles.add(()=>z.getLaserLineColors(this.view.effectiveTheme),({glowColor:a,
innerColor:b,globalAlpha:c})=>this._updateLaserLineStyle(a,b,c),h.initial),this._updatingHandles.add(()=>this._laserLineRendererDependencies(),a=>this._updateLaserLineRenderer(a)),this._connectComputations(),this._updatingHandles.addWhen(()=>!this._shouldRenderTracker,()=>this._clearCursorTracker(),h.initial)])}destroy(){this._updatingHandles=l.destroyMaybe(this._updatingHandles);this._manipulatorHandles=l.destroyMaybe(this._manipulatorHandles);this._analysisHandles=l.destroyMaybe(this._analysisHandles);
this._observerManipulator=null;this._clearCursorTracker();this._removeLaserLine();this._intersector=null;this._set("analysis",null)}get state(){return this.active?this.hasGrabbedManipulators?k.Created:k.Creating:null!=this.analysis.observer?.position?k.Created:k.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return null!=this.analysisViewData&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&"mouse"===this._latestPointerMovePointerType}get _shouldRenderTracker(){return this._showTracker&&
null!=this.analysis.observer?.position&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(a){switch(a.type){case "immediate-double-click":this._doubleClickHandler(a);break;case "key-down":this._keyDownHandler(a);break;case "pointer-move":this._pointerMoveHandler(a)}}onInputEventAfter(a){switch(a.type){case "immediate-click":this._clickHandler(a)}}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>
this.analysisViewData.computations,a=>this._onComputationsCollectionChange(a),{initial:!0,final:!0})}_onComputationsCollectionChange({added:a,removed:b}){for(const c of b)this._disconnectComputation(c);for(const c of a)this._connectComputation(c)}_connectComputation(a){if(this.destroyed)v.getLogger(this).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");else{var b=this._analysisHandles;if(!b.has(a)){var c=this._createTargetManipulator(a.target);null==this._targetTrackerManipulator&&
c.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=c,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer());b.add([this._updatingHandles.add(()=>this._getLineOfSightManipulatorStateDependencies(a),()=>this._updateManipulatorState(c,a),h.initial),this._updatingHandles.add(()=>a.elevationAlignedTargetLocation,d=>this._onTargetLocationChange(d,c),h.initial)],a)}}}_disconnectComputation(a){this.destroyed?
v.getLogger(this).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring."):(this._analysisHandles.remove(a),a=this._getTargetManipulator(a.target),null!=a&&(this.manipulators.remove(a),this._manipulatorHandles.remove(a),null!=this._targetTrackerManipulator&&this._targetTrackerManipulator===a&&(this._targetTrackerManipulator=null)))}_clearCursorTracker(){this.analysisViewData.cursorTarget=l.destroyMaybe(this.analysisViewData.cursorTarget)}_createTargetManipulator(a){const b=
new A.LineOfSightTargetManipulator(this.view,{target:a,type:"target"});this._manipulatorHandles.add([this._createTargetManipulatorDragPipeline(b),b.events.on("grab-changed",c=>this._manipulatorGrabChanged(b,c)),b.events.on("immediate-click",c=>this._manipulatorClick(b,c))],b);this.manipulators.add(b);null!=a.position?b.elevationAlignedLocation=a.position:b.available=!1;return b}_getTargetManipulator(a){let b=null;this.manipulators.forEach(c=>{c=c.manipulator;null==b&&"target"===c.metadata.type&&c.metadata.target===
a&&(b=c)});return b}_createObserverManipulator(){const a=new A.LineOfSightObserverManipulator(this.view,{type:"observer",intersection:null});this._manipulatorHandles.add([this._createObserverManipulatorDragPipeline(a),a.events.on("grab-changed",b=>this._manipulatorGrabChanged(a,b)),a.events.on("immediate-click",b=>this._manipulatorClick(a,b))],a);this.manipulators.add(a);return a}_screenToIntersection(){return a=>{const b=this._intersector.getScreenPointIntersection(a.screenEnd);return null==b?null:
{...a,intersection:b}}}_createTargetManipulatorDragPipeline(a){return B.createManipulatorDragEventPipeline(a,(b,c,d)=>{c.next(this._screenToIntersection()).next(this._updateTargetDragStep(a)).next(()=>this._updateLaserLineRenderer());d.next(this._cancelTargetDragStep(a.metadata.target)).next(()=>this._updateLaserLineRenderer())})}_createObserverManipulatorDragPipeline(a){return B.createManipulatorDragEventPipeline(a,(b,c,d)=>{c.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next(()=>
this._updateLaserLineRenderer());d.next(this._cancelObserverDragStep()).next(()=>this._updateLaserLineRenderer())})}_updateObserverDragStep(){return a=>{null!=a.intersection.mapPoint?(null==this.analysis.observer&&(this.analysis.observer=new r),this._updateFromIntersection(this.analysis.observer,a.intersection)):this.analysis.observer=null;return a}}_cancelObserverDragStep(){const a=null!=this.analysis.observer?.position?this.analysis.observer.clone():null;return b=>{this.analysis.observer=a;return b}}_updateTargetDragStep(a){return b=>
{this._updateFromIntersection(a.metadata.target,b.intersection);const c=b.intersection.mapPoint;null!=c&&(a.elevationAlignedLocation=c);return b}}_cancelTargetDragStep(a){const b=a.position?.clone();return c=>{a.position=b;return c}}_manipulatorGrabChanged(a,b){switch(b.action){case "start":this._grabbedManipulator=a;break;case "end":this._grabbedManipulator===a&&(this._grabbedManipulator=null)}}_updateManipulatorState(a,b){const {isValid:c,isTargetVisible:d}=b.computationResult;a.state=c?d?n.ManipulatorStateCustomFlags.Custom1:
n.ManipulatorStateCustomFlags.Custom2:n.ManipulatorStateCustomFlags.Custom3}_getLineOfSightManipulatorStateDependencies(a){const {isValid:b,isTargetVisible:c}=a.computationResult;return{isValid:b,isTargetVisible:c}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:null!=this.analysis.observer?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(a=
this._laserLineRendererDependencies()){const {laserlineVisualElement:b,grabbedManipulator:c,shouldRenderTracker:d,observerPosition:I,visible:J}=a;null!=b&&(a=null!=c?c:d&&null!=I?this._targetTrackerManipulator:null,null!=a&&J?(b.visible=!0,b.heightManifoldTarget=a.renderLocation,b.lineVerticalPlaneSegment=a!==this._observerManipulator?w.fromPoints(this._observerManipulator.renderLocation,a.renderLocation,K):null):(b.visible=!1,b.heightManifoldTarget=null,b.lineVerticalPlaneSegment=null))}_createLaserLine(){this._removeLaserLine();
const {glowWidth:a,innerWidth:b}=z.laserLineConfiguration;this._laserlineVisualElement=new G.LaserlineVisualElement({view:this.view,attached:!0,visible:this.visible,style:{glowWidth:a,innerWidth:b},isDecoration:!0})}_removeLaserLine(){null!=this._laserlineVisualElement&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_updateLaserLineStyle(a,b,c){const d=this._laserlineVisualElement;null!=d&&(d.style={...d.style,glowColor:q.toUnitRGB(a),innerColor:q.toUnitRGB(b),globalAlpha:c})}_onObserverLocationChange(a){null==
a?this._observerManipulator.available=!1:(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=a)}_onTargetLocationChange(a,b){null!=a?(b.elevationAlignedLocation=a,b!==this._targetTrackerManipulator&&(b.available=!0)):b.available=!1}_addPointFromClickEvent(a){a=this._intersector.getScreenPointIntersection(a);if(null!=a?.mapPoint)if(null!=this.analysis.observer?.position){this._clearCursorTracker();var b=new t;
this._updateFromIntersection(b,a);this.analysis.targets.add(b)}else b=new r,this._updateFromIntersection(b,a),this.analysis.observer=b}_clickHandler(a){this.active&&a.button!==p.MouseButton.Right&&(this._addPointFromClickEvent(C.createScreenPointFromEvent(a)),a.stopPropagation())}_doubleClickHandler(a){this.active&&a.button!==p.MouseButton.Right&&(this.stop(),a.stopPropagation())}_keyDownHandler(a){this.active&&"Escape"===a.key&&(this.stop(),a.stopPropagation())}_pointerMoveHandler(a){this.hasGrabbedManipulators||
(this._latestPointerMovePointerType=a.pointerType,this._updateLaserLineRenderer(),this._showTracker&&null!=this.analysis.observer?.position&&(a=C.createScreenPointFromEvent(a),a=this._intersector.getScreenPointIntersection(a),null!=a?.mapPoint&&(null==this.analysisViewData.cursorTarget&&(this.analysisViewData.cursorTarget=new t),this._updateFromIntersection(this.analysisViewData.cursorTarget,a),this._updateLaserLineRenderer())))}_updateFromIntersection(a,b){if(null==b.mapPoint)a.position=null,a.elevationInfo=
null,a.feature=null;else{switch(b.type){case m.IntersectorType.OBJECT:if(null!=b.graphic){const c=b.graphic,d=x.getGraphicEffectiveElevationInfo(c);"on-the-ground"===d.mode&&(d.mode="relative-to-ground",d.offset=0);a.elevationInfo=new y(d);a.feature=c}else a.elevationInfo=null,a.feature=null;break;case m.IntersectorType.TERRAIN:case m.IntersectorType.I3S:a.elevationInfo=new y({mode:"on-the-ground"});a.feature=null;break;default:a.elevationInfo=null,a.feature=null}b=b.mapPoint.clone();b.z=x.getConvertedElevation(this.view,
b,{mode:"absolute-height",offset:0},a.elevationInfo);a.position=b}}_manipulatorClick(a,b){"observer"===a.metadata.type||a.grabbing||a.dragging||b.button!==p.MouseButton.Right||1>=this.analysis.targets.length||({target:a}=a.metadata,this.analysis.targets.remove(a),b.stopPropagation())}get testInfo(){return{laserLineVisualElement:this._laserlineVisualElement,getTargetManipulator:a=>this._getTargetManipulator(a)}}};f.__decorate([g.property({constructOnly:!0})],e.LineOfSightTool.prototype,"view",void 0);
f.__decorate([g.property({constructOnly:!0})],e.LineOfSightTool.prototype,"analysis",void 0);f.__decorate([g.property({readOnly:!0})],e.LineOfSightTool.prototype,"state",null);f.__decorate([g.property({readOnly:!0})],e.LineOfSightTool.prototype,"cursor",null);f.__decorate([g.property()],e.LineOfSightTool.prototype,"removeIncompleteOnCancel",void 0);f.__decorate([g.property({readOnly:!0})],e.LineOfSightTool.prototype,"updating",null);f.__decorate([g.property({constructOnly:!0})],e.LineOfSightTool.prototype,
"analysisViewData",void 0);f.__decorate([g.property({readOnly:!0})],e.LineOfSightTool.prototype,"_showTracker",null);f.__decorate([g.property()],e.LineOfSightTool.prototype,"_latestPointerMovePointerType",void 0);f.__decorate([g.property()],e.LineOfSightTool.prototype,"_shouldRenderTracker",null);f.__decorate([g.property()],e.LineOfSightTool.prototype,"_laserlineVisualElement",void 0);f.__decorate([g.property()],e.LineOfSightTool.prototype,"_grabbedManipulator",void 0);e.LineOfSightTool=f.__decorate([D.subclass("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool")],
e.LineOfSightTool);const K=w.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});