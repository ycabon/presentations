// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../Color ../../../../core/colorUtils ../../../../core/reactiveUtils ../../../../core/libs/gl-matrix-2/math/mat4 ../../../../core/libs/gl-matrix-2/factories/mat4f64 ../../../../core/libs/gl-matrix-2/math/quat ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../geometry/support/vectorStacks ./sliceToolConfig ./sliceToolUtils ../../interactive/Manipulator3D ../../interactive/RenderObject ../../webgl-engine/lib/basicInterfaces ../../webgl-engine/lib/GeometryUtil ../../webgl-engine/lib/Material ../../webgl-engine/materials/ColorMaterial ../../webgl-engine/materials/RibbonLineMaterial ../../../interactive/interfaces".split(" "),
function(v,w,M,H,p,F,I,h,r,t,m,q,N,x,C,A,B,D,O,y){function P({offsetMode:c,tubeMaterial:e,tipMaterial:k,capMaterial:u,outlineMaterial:d,calloutMaterial:a}){const g=c===v.OffsetMode.CENTER_ON_CALLOUT?m.shiftRestartOffsetDistance:0,f=[r.fromValues(g,0,-m.shiftRestartArrowLength/2),r.fromValues(g,0,m.shiftRestartArrowLength/2)];c=Q(f,!0);e=J({vertices:f,padding:0,materials:{tube:e,tip:k,cap:u}});d=J({vertices:f,padding:m.shiftRestartArrowOutlineWidth,materials:{tube:d,tip:d,cap:d}});k=A.createPolylineGeometry(a,
[[g,0,0],[g-m.shiftRestartOffsetDistance,0,0]]);a=A.createPolylineGeometry(a,[[g,0,0],[g-m.shiftRestartOffsetDistance,0,0]]);return{renderObjects:[...e.normal.map(b=>new x.RenderObject(b,y.ManipulatorStateFlags.Unfocused|q.DidPointerMoveRecentlyFlag)),...d.normal.map(b=>new x.RenderObject(b,y.ManipulatorStateFlags.Unfocused|q.DidPointerMoveRecentlyFlag)),new x.RenderObject(k,y.ManipulatorStateFlags.Unfocused|q.DidPointerMoveRecentlyFlag|q.IsShiftEdgeOnScreenFlag),...e.focused.map(b=>new x.RenderObject(b,
y.ManipulatorStateFlags.Focused|q.DidPointerMoveRecentlyFlag)),...d.focused.map(b=>new x.RenderObject(b,y.ManipulatorStateFlags.Focused|q.DidPointerMoveRecentlyFlag)),new x.RenderObject(a,y.ManipulatorStateFlags.Focused|q.DidPointerMoveRecentlyFlag|q.IsShiftEdgeOnScreenFlag)],autoScaleRenderObjects:!1,collisionType:{type:"line",paths:[c]},collisionPriority:1,radius:m.shiftRestartTipRadius,state:q.DidPointerMoveRecentlyFlag}}function J({vertices:c,padding:e,materials:k}){const u=d=>{const a=c.slice(0);
var g=h.subtract(t.sv3d.get(),a[0],a[1]);h.normalize(g,g);var f=h.subtract(t.sv3d.get(),a[a.length-1],a[a.length-2]);h.normalize(f,f);if(0<e){var b=h.scale(r.create(),f,-e);a[a.length-1]=h.add(b,b,a[a.length-1]);b=h.scale(r.create(),g,-e);a[0]=h.add(b,b,a[0])}b=d?m.shiftRestartTipFocusMultiplier:1;var n=m.shiftRestartTipLength*b;const E=m.shiftRestartTipRadius*b;b=p.identity(t.sm4d.get());if(0<e){var l=n/4,z=h.set(t.sv3d.get(),0,l,0);l=1+e/l;p.translate(b,b,z);p.scale(b,b,h.set(t.sv3d.get(),l,l,l));
p.translate(b,b,h.scale(z,z,-1/l))}l=p.identity(F.create());z=r.fromValues(0,1,0);f=p.fromQuat(F.create(),I.rotationTo(t.sq4d.get(),z,f));f[12]=a[a.length-1][0];f[13]=a[a.length-1][1];f[14]=a[a.length-1][2];p.multiply(f,f,b);d=m.shiftRestartTubeRadius*(d?m.shiftRestartTubeFocusMultiplier:1)+e;var R=k.tube;const K=[];for(let G=0;12>G;G++){const L=G/12*2*Math.PI;K.push([Math.cos(L)*d,Math.sin(L)*d])}d=A.createPathExtrusionGeometry(R,K,a,[],[],!1);d.transformation=l;d=[d];l=A.createConeGeometry(k.tip,
n,E,24,!1,!1,!0);l.transformation=f;d.push(l);n=A.createConeGeometry(k.cap,n,E,24,!1,!0,!1);n.transformation=f;d.push(n);g=p.fromQuat(F.create(),I.rotationTo(t.sq4d.get(),z,g));g[12]=a[0][0];g[13]=a[0][1];g[14]=a[0][2];p.multiply(g,g,b);d.push(l.instantiate({transformation:g}));d.push(n.instantiate({transformation:g}));return d};return{normal:u(!1),focused:u(!0)}}function Q(c,e){const k=h.subtract(r.create(),c[c.length-1],c[c.length-2]);h.normalize(k,k);h.scale(k,k,m.shiftRestartTipLength);h.add(k,
k,c[c.length-1]);return e?(e=h.subtract(r.create(),c[0],c[1]),h.normalize(e,e),h.scale(e,e,m.shiftRestartTipLength),h.add(e,e,c[0]),[e,...c,k]):[...c,k]}v.OffsetMode=void 0;(function(c){c[c.CENTER_ON_CALLOUT=0]="CENTER_ON_CALLOUT";c[c.CENTER_ON_ARROW=1]="CENTER_ON_ARROW"})(v.OffsetMode||(v.OffsetMode={}));class S extends N.Manipulator3D{constructor(c,e){const k=new O.RibbonLineMaterial({width:1,renderOccluded:B.RenderOccludedFlag.OccludeAndTransparent,isDecoration:!0}),u=new D.ColorMaterial({cullFace:C.CullFaceOptions.Back,
renderOccluded:B.RenderOccludedFlag.Opaque,isDecoration:!0}),d=new D.ColorMaterial({cullFace:C.CullFaceOptions.Back,renderOccluded:B.RenderOccludedFlag.Opaque,isDecoration:!0}),a=new D.ColorMaterial({cullFace:C.CullFaceOptions.Back,renderOccluded:B.RenderOccludedFlag.Opaque,isDecoration:!0}),g=new D.ColorMaterial({writeDepth:!1,cullFace:C.CullFaceOptions.Front,renderOccluded:B.RenderOccludedFlag.Transparent,isDecoration:!0});super({view:c,...P({offsetMode:e,tubeMaterial:u,tipMaterial:d,capMaterial:a,
outlineMaterial:g,calloutMaterial:k})});this._themeHandle=H.watch(()=>c.effectiveTheme.accentColor,f=>{const b=M.getContrast(f),n=w.toUnitRGBA(f),E=w.toUnitRGBA(b),l=w.toUnitRGBA(w.blendColors(b,f,.4));f=w.toUnitRGBA(w.blendColors(b,f,.14));k.setParameters({color:n});u.setParameters({color:f});d.setParameters({color:E});a.setParameters({color:l});g.setParameters({color:n})},H.initial)}destroy(){this._themeHandle.remove();super.destroy()}}v.ShiftManipulator=S;Object.defineProperty(v,Symbol.toStringTag,
{value:"Module"})});