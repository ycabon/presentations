// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../../chunks/tslib.es6 ../../../../analysis/SlicePlane ../../../../core/clock ../../../../core/maybe ../../../../core/reactiveUtils ../../../../core/scheduling ../../../../core/screenUtils ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../core/libs/gl-matrix-2/math/mat4 ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../core/libs/gl-matrix-2/factories/vec4f64 ../../../../chunks/boundedPlane ../../../../geometry/support/plane ../../../../geometry/support/ray ../../../../geometry/support/vectorStacks ../images/Factory ./ResizeManipulator ./RotateManipulator ./settings ./ShiftManipulator ./sliceToolConfig ./sliceToolUtils ../../interactive/manipulatorUtils ../../interactive/editingTools/dragEventPipeline3D ../../support/geometryUtils/ray ../../../interactive/AnalysisToolBase ../../../interactive/dragEventPipeline ../../../interactive/ToolIntersector ../../../support/screenUtils".split(" "),
function(n,O,P,z,t,Q,H,p,l,Z,aa,R,E,k,A,I,f,q,S,m,J,T,K,L,M,r,g,U,B,u,V,C,W,v){function N(a,b,c,d){c=g.createShiftPlane(c,f.normal(d),a.direction,q.create());d=A.create();return q.intersectRay(c,a,d)?{type:"shift",creatingPointerId:b,hasBeenDragged:!1,shiftPlane:c,depth:0,startPoint:d}:null}function F(a){return"mouse"!==a.pointerType||0===a.button}var G;l=G=class extends V.AnalysisToolBase{constructor(a){super(a);this._clock=P.clock;this._previewPlaneOpacity=1;this.removeIncompleteOnCancel=!1;this._layersMode=
"none";this._frameTask=this.resizeManipulators=this.rotateTiltManipulator=this.rotateHeadingManipulator=this.shiftManipulator=null;this._pointerMoveTimerMs=r.pointerMoveTimerMs;this._previewPlaneOutlineVisualElement=this._previewPlaneGridVisualElement=this._prevPointerMoveTimeout=null;this._startPlane=f.create();this._previewPlane=null;this._activeKeyModifiers={};this._lastCursorPosition=H.createScreenPoint();this._resizeHandles=[{direction:[1,0]},{direction:[1,1]},{direction:[0,1]},{direction:[-1,
1]},{direction:[-1,0]},{direction:[-1,-1]},{direction:[0,-1]},{direction:[1,-1]}];this._intersector=W.newToolIntersector(a.view.state.viewingMode)}initialize(){if(null==this.analysis)throw Error("SliceTool requires valid analysis, but null was provided.");const a=h=>{this._updateManipulatorsInteractive(h);h.grabbing||(null!=this.analysisViewData.plane&&f.copy(this.analysisViewData.plane,this._startPlane),this.inputState=null)},b=new M.ShiftManipulator(this.view,M.OffsetMode.CENTER_ON_ARROW);this.shiftManipulator=
b;this.manipulators.add(b);this.addHandles([this._createShiftDragPipeline(b),b.events.on("grab-changed",h=>{this._onShiftGrab(h);a(b)})]);const c=!this.view._stage?.renderView.renderingContext.driverTest.svgPremultipliesAlpha.result,d=new K.RotateManipulator(this.view,(h,w)=>J.getRotateHeadingTexture(this.view.textures,{accentColor:h,contrastColor:w,preMultiplyAlpha:c}));this.rotateHeadingManipulator=d;this.manipulators.add(d);this.addHandles([this._createRotateHeadingDragPipeline(d),d.events.on("grab-changed",
h=>{this._onRotateHeadingGrab(h);a(d)})]);const e=new K.RotateManipulator(this.view,(h,w)=>J.getTiltRotateTexture(this.view.textures,{accentColor:h,contrastColor:w,preMultiplyAlpha:c}));this.rotateTiltManipulator=e;this.manipulators.add(e);this.addHandles([this._createRotateTiltDragPipeline(e),e.events.on("grab-changed",h=>{this._onRotateTiltGrab(h);a(e)})]);this.resizeManipulators=this._resizeHandles.map((h,w)=>{const D=new T.ResizeManipulator(this.view,h);this.addHandles([this._createResizeDragPipeline(D),
D.events.on("grab-changed",X=>{this._onResizeGrab(X,w);a(D)})]);return D});this.manipulators.addMany(this.resizeManipulators);this._previewPlaneGridVisualElement=g.createGridVisualElement(this.view);this._previewPlaneOutlineVisualElement=g.createOutlineVisualElement(this.view);this._previewPlaneOutlineVisualElement.width=r.planePreviewOutlineWidth;this.addHandles(t.watch(()=>[this.analysisViewData.plane,this.analysis.tiltEnabled],()=>this._updateManipulators(),t.sync));const x=t.watch(()=>this.state,
h=>{"sliced"===h&&this.finishToolCreation()},t.syncAndInitial);this.addHandles([x,t.watch(()=>this.view.state.camera,()=>this._onCameraChange())])}destroy(){this._removeFrameTask();this._clearPointerMoveTimeout();this._previewPlaneOutlineVisualElement=z.destroyMaybe(this._previewPlaneOutlineVisualElement);this._previewPlaneGridVisualElement=z.destroyMaybe(this._previewPlaneGridVisualElement)}get state(){const a=!!this.analysisViewData.plane,b=!!this.inputState;return a?a&&b?"slicing":a&&!b?"sliced":
"ready":"ready"}get cursor(){return this._isPlacingSlicePlane||"exclude"===this.layersMode?"crosshair":null!=this._creatingPointerId?"grabbing":null}set analysis(a){if(null==a)throw Error("SliceTool requires valid analysis, but null was provided.");this.removeHandles("analysis");this._set("analysis",a)}get layersMode(){return this._layersMode}get inputState(){return this._get("inputState")}set inputState(a){this._set("inputState",a);this.analysisViewData.showGrid=null!=a&&"resize"===a.type;this._updateMaterials()}get _isPlacingSlicePlane(){return!this.inputState&&
!this.analysisViewData.plane&&this.active}get _creatingPointerId(){return null!=this.inputState&&"shift"===this.inputState.type?this.inputState.creatingPointerId:null}enterExcludeLayerMode(){null!=this.analysisViewData.plane&&(this._layersMode="exclude",this.active||(this.view.activeTool=this))}exitExcludeLayerMode(){null!=this.analysisViewData.plane&&(this._layersMode="none",this.active&&(this.view.activeTool=null))}onDeactivate(){this._updatePreviewPlane(null)}onShow(){this._updateVisibility(!0)}onHide(){this._updateVisibility(!1)}_updateVisibility(a){this._updateManipulators();
a||this._clearPointerMoveTimeout()}onInputEvent(a){switch(a.type){case "pointer-drag":if(!F(a))break;this._isPlacingSlicePlane?this._onClickPlacePlane(a)&&a.stopPropagation():this._onPointerDrag(a)&&a.stopPropagation();break;case "pointer-move":this._onPointerMove(a);break;case "pointer-up":this._onPointerUp(a)&&a.stopPropagation();break;case "immediate-click":if(!F(a))break;this._onClickPlacePlane(a)&&a.stopPropagation();break;case "click":if(!F(a))break;this._onClickExcludeLayer(a)&&a.stopPropagation();
break;case "drag":this.inputState&&a.stopPropagation();break;case "key-down":this._onKeyDown(a)&&a.stopPropagation();break;case "key-up":this._onKeyUp(a)&&a.stopPropagation()}}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}_onPointerDrag(a){const b=this.inputState;if(a.pointerId===this._creatingPointerId&&null!=b&&"shift"===b.type){const c=v.createScreenPointFromEvent(a);this.shiftManipulator.events.emit("drag",{action:b.hasBeenDragged?"update":"start",pointerType:a.pointerType,
start:c,screenPoint:c});return b.hasBeenDragged=!0}return!1}_onPointerMove(a){this._lastCursorPosition.x=a.x;this._lastCursorPosition.y=a.y;this._resetPointerMoveTimeout();"touch"!==a.pointerType&&this._updatePreviewPlane(v.createScreenPointFromEvent(a),this._activeKeyModifiers)}_onCameraChange(){this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers);this._updateManipulators()}_onPointerUp(a){return a.pointerId===this._creatingPointerId&&null!=this.analysisViewData.plane?(a=v.createScreenPointFromEvent(a),
this.shiftManipulator.events.emit("drag",{action:"end",start:a,screenPoint:a}),f.copy(this.analysisViewData.plane,this._startPlane),this.inputState=null,!0):!1}_onClickPlacePlane(a){if("exclude"===this.layersMode)return!1;if(this._isPlacingSlicePlane){var b=v.createScreenPointFromEvent(a);const c=f.create();if(this._pickPlane(b,!1,this._activeKeyModifiers,c))return"pointer-drag"===a.type&&(b=u.fromScreenNormalized(this.view.state.camera,b,y),this.inputState=N(b,a.pointerId,c.origin,c)),f.copy(c,this._startPlane),
this.analysis.shape=g.planeToShape(c,this.view,this.view.spatialReference,new O),!0}return!1}_onClickExcludeLayer(a){if("exclude"!==this.layersMode||!this.created)return!1;this.view.hitTest(v.createScreenPointFromEvent(a)).then(b=>{b.results.length?(b=b.results[0],(b="graphic"===b?.type&&b.graphic)&&(b=b.sourceLayer||b.layer)&&this.analysis.excludedLayers.push(b)):b.ground.layer?this.analysis.excludedLayers.push(b.ground.layer):this.analysis.excludeGroundSurface=!0});this.exitExcludeLayerMode();return!0}_onKeyDown(a){return a.key===
r.forceVerticalModifier||a.key===r.forceHorizontalModifier?(this._activeKeyModifiers[a.key]=!0,null!=this._previewPlane&&this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers),!0):!1}_onKeyUp(a){return a.key!==r.forceVerticalModifier&&a.key!==r.forceHorizontalModifier||!this._activeKeyModifiers[a.key]?!1:(delete this._activeKeyModifiers[a.key],null!=this._previewPlane&&this._updatePreviewPlane(this._lastCursorPosition,this._activeKeyModifiers),!0)}_onShiftGrab(a){"start"===a.action&&
null!=this.analysisViewData.plane&&a.screenPoint&&(a=u.fromScreenNormalized(this.view.state.camera,a.screenPoint,y),f.copy(this.analysisViewData.plane,this._startPlane),this.inputState=N(a,null,this.shiftManipulator.renderLocation,this.analysisViewData.plane))}_createShiftDragPipeline(a){return C.createManipulatorDragEventPipeline(a,(b,c,d)=>{b=this.inputState;if(null!=b&&"shift"===b.type){var e=null!=this.analysisViewData.plane?f.copy(this.analysisViewData.plane,f.create()):null;c.next(B.screenToRenderPlane(this.view,
b.shiftPlane)).next(this._shiftDragAdjustSensitivity(b)).next(this._shiftDragUpdatePlane(b));d.next(()=>{null!=e&&this._updateBoundedPlane(e)})}})}_shiftDragAdjustSensitivity(a){return b=>{if(null==this.analysisViewData.plane)return null;const c=Math.min((1-Math.abs(k.dot(f.normal(this.analysisViewData.plane),b.ray.direction)/k.length(b.ray.direction)))/.001,1),d=-q.signedDistance(this._startPlane.plane,b.renderEnd),e=-q.signedDistance(this._startPlane.plane,a.startPoint);a.depth=a.depth*(1-c)+d*
c-e;return b}}_shiftDragUpdatePlane(a){return()=>{if(null!=this.analysisViewData.plane){var b=k.copy(m.sv3d.get(),this._startPlane.origin),c=k.copy(m.sv3d.get(),f.normal(this._startPlane));k.scale(c,c,-a.depth);k.add(c,c,b);b=f.fromValues(c,this.analysisViewData.plane.basis1,this.analysisViewData.plane.basis2,f.create());this._updateBoundedPlane(b)}}}_onRotateHeadingGrab(a){if("start"===a.action&&null!=this.analysisViewData.plane&&a.screenPoint){var b=g.createRotatePlane(this.analysisViewData.plane,
this.view.renderCoordsHelper,g.RotationAxis.HEADING,q.create());a=u.fromScreenNormalized(this.view.state.camera,a.screenPoint,y);var c=A.create();q.intersectRay(b,a,c)&&(f.copy(this.analysisViewData.plane,this._startPlane),this.inputState={type:"rotate",rotatePlane:b,startPoint:c})}}_createRotateHeadingDragPipeline(a){return C.createManipulatorDragEventPipeline(a,(b,c,d)=>{b=this.inputState;if(null!=b&&"rotate"===b.type){var e=null!=this.analysisViewData.plane?f.copy(this.analysisViewData.plane,f.create()):
null;c.next(B.screenToRenderPlane(this.view,b.rotatePlane)).next(this._rotateDragRenderPlaneToRotate(b)).next(this._rotateDragUpdatePlaneFromRotate());d.next(()=>{null!=e&&this._updateBoundedPlane(e)})}})}_onRotateTiltGrab(a){if("start"===a.action&&null!=this.analysisViewData.plane&&a.screenPoint){var b=g.createRotatePlane(this.analysisViewData.plane,this.view.renderCoordsHelper,g.RotationAxis.TILT,q.create());a=u.fromScreenNormalized(this.view.state.camera,a.screenPoint,y);var c=A.create();q.intersectRay(b,
a,c)&&(f.copy(this.analysisViewData.plane,this._startPlane),this.inputState={type:"rotate",rotatePlane:b,startPoint:c})}}_createRotateTiltDragPipeline(a){return C.createManipulatorDragEventPipeline(a,(b,c,d)=>{b=this.inputState;if(null!=b&&"rotate"===b.type){var e=null!=this.analysisViewData.plane?f.copy(this.analysisViewData.plane,f.create()):null;c.next(B.screenToRenderPlane(this.view,b.rotatePlane)).next(this._rotateDragRenderPlaneToRotate(b)).next(this._rotateDragUpdatePlaneFromRotate());d.next(()=>
{null!=e&&this._updateBoundedPlane(e)})}})}_rotateDragRenderPlaneToRotate(a){return b=>{if(null==this.analysisViewData.plane)return null;const c=q.getNormal(a.rotatePlane),d=U.calculateInputRotationTransform(a.startPoint,b.renderEnd,this.analysisViewData.plane.origin,c);return{...b,rotateAxis:c,rotateAngle:d}}}_rotateDragUpdatePlaneFromRotate(){return a=>{if(null!=this.analysisViewData.plane){var b=E.fromRotation(m.sm4d.get(),a.rotateAngle,a.rotateAxis);null!=b&&(a=k.transformMat4(m.sv3d.get(),this._startPlane.basis1,
b),b=k.transformMat4(m.sv3d.get(),this._startPlane.basis2,b),a=f.fromValues(this.analysisViewData.plane.origin,a,b,f.create()),this._updateBoundedPlane(a))}}}_onResizeGrab(a,b){if("start"===a.action&&null!=this.analysisViewData.plane&&a.screenPoint){a=u.fromScreenNormalized(this.view.state.camera,a.screenPoint,y);var c=m.sv3d.get();q.intersectRay(this.analysisViewData.plane.plane,a,c)&&(f.copy(this.analysisViewData.plane,this._startPlane),this.inputState={type:"resize",activeHandleIdx:b,startPoint:A.clone(c)})}}_createResizeDragPipeline(a){return C.createManipulatorDragEventPipeline(a,
(b,c,d)=>{b=this.inputState;if(null!=b&&"resize"===b.type&&null!=this.analysisViewData.plane){var e=f.copy(this.analysisViewData.plane,f.create());c.next(B.screenToRenderPlane(this.view,this.analysisViewData.plane.plane)).next(this._resizeDragUpdatePlane(b));d.next(()=>{this._updateBoundedPlane(e)})}})}_resizeDragUpdatePlane(a){return b=>{null!=this.analysisViewData.plane&&(b=g.resizePlane(this._resizeHandles[a.activeHandleIdx],a.startPoint,b.renderEnd,this.view.state.camera,this._startPlane,f.copy(this.analysisViewData.plane)),
this._updateBoundedPlane(b))}}_updateBoundedPlane(a){const b=this.analysisViewData;if(null!=b)b.plane=a;else throw Error("valid internal object expected");}_updatePreviewPlane(a,b={}){let c=this._previewPlane;this._previewPlane=null;if(null==a)this._removeFrameTask(),this._updateManipulators();else{if(!this.analysisViewData.plane&&this.active){const d=null!=c?c:f.create();c=null!=c?f.copy(c,Y):null;this._pickPlane(a,!0,b,d)&&(a=r.previewFadeDotThreshold,b=!1,null!=c&&(b=k.dot(q.getNormal(c.plane),
q.getNormal(d.plane))<a||k.dot(k.normalize(m.sv3d.get(),c.basis1),k.normalize(m.sv3d.get(),d.basis1))<a),b&&(this._previewPlaneOpacity=0),this._previewPlane=d)}null!=this._previewPlane&&null==this._frameTask&&0===this._previewPlaneOpacity?this._frameTask=Q.addFrameTask({update:({deltaTime:d})=>{this._previewPlaneOpacity=Math.min(this._previewPlaneOpacity+d/(1E3*r.previewFadeDurationSeconds),1);this._updateManipulators();1===this._previewPlaneOpacity&&this._removeFrameTask()}}):null==this._previewPlane&&
null!=this._frameTask?this._removeFrameTask():null!=this._previewPlane&&this._updateManipulators()}}_removeFrameTask(){this._frameTask=z.removeMaybe(this._frameTask)}_pickMinResult(a){a=H.screenPointObjectToArray(a,m.sv2d.get());this.view.sceneIntersectionHelper.intersectToolIntersectorScreen(a,this._intersector);return this._intersector.results.min}_pickPlane(a,b,c,d){var e=this._pickMinResult(a);a=m.sv3d.get();if(!e.getIntersectionPoint(a))return!1;e=e.getTransformedNormal(m.sv3d.get());const x=
this.view.state.camera;0<k.dot(e,x.viewForward)&&k.scale(e,e,-1);const h=g.calculatePlaneHalfSize(a,x);b=(b?1:-1)*h*r.initialDepthOffsetFrac;b=k.scale(m.sv3d.get(),e,b);k.add(b,b,a);a=this.analysis.tiltEnabled?g.SliceOrientation.TILTED:g.SliceOrientation.HORIZONTAL_OR_VERTICAL;g.createPlane(b,e,h,h,x,c[r.forceVerticalModifier]?g.SliceOrientation.VERTICAL:c[r.forceHorizontalModifier]?g.SliceOrientation.HORIZONTAL:a,this.view.renderCoordsHelper,d);return!0}_clearPointerMoveTimeout(){this._prevPointerMoveTimeout=
z.removeMaybe(this._prevPointerMoveTimeout)}_resetPointerMoveTimeout(){this._clearPointerMoveTimeout();this.shiftManipulator.state|=g.DidPointerMoveRecentlyFlag;this.rotateHeadingManipulator.state|=g.DidPointerMoveRecentlyFlag;this.rotateTiltManipulator.state|=g.DidPointerMoveRecentlyFlag;this._prevPointerMoveTimeout=this._clock.setTimeout(()=>{this.shiftManipulator.state&=~g.DidPointerMoveRecentlyFlag;this.rotateHeadingManipulator.state&=~g.DidPointerMoveRecentlyFlag;this.rotateTiltManipulator.state&=
~g.DidPointerMoveRecentlyFlag},this._pointerMoveTimerMs)}_updateManipulators(){if(!G.disableEngineLayers){var a=!1;if(null!=this.analysisViewData.plane){var b=this.analysisViewData.plane;a=!1}else if(null!=this._previewPlane)b=this._previewPlane,a=!0;else{this.shiftManipulator.available=!1;this.rotateHeadingManipulator.available=!1;this.rotateTiltManipulator.available=!1;this.resizeManipulators.forEach(d=>d.available=!1);this._previewPlaneOutlineVisualElement.visible=!1;this._previewPlaneGridVisualElement.visible=
!1;return}var c=g.calculateBoundedPlaneTranslateRotate(b,m.sm4d.get());a?(this.shiftManipulator.available=!1,this.rotateHeadingManipulator.available=!1,this.rotateTiltManipulator.available=!1,this.resizeManipulators.forEach(d=>d.available=!1),this._previewPlaneOutlineVisualElement.attached=!0,this._previewPlaneGridVisualElement.attached=!0,this._previewPlaneOutlineVisualElement.visible=!0,this._previewPlaneGridVisualElement.visible=!0):(this.shiftManipulator.available=!0,this.rotateHeadingManipulator.available=
!0,this.rotateTiltManipulator.available=this.analysis.tiltEnabled,this.resizeManipulators.forEach(d=>d.available=!0),g.updateShiftRestartHandle(this.shiftManipulator,c,b,this.view.state.camera),g.updateRotateHeadingHandle(this.rotateHeadingManipulator,c,b,this.view.renderCoordsHelper),g.updateRotateTiltHandle(this.rotateTiltManipulator,c,b),this.resizeManipulators.forEach((d,e)=>g.updateResizeHandle(d,this._resizeHandles[e],c,b)),this._previewPlaneOutlineVisualElement.visible=!1,this._previewPlaneGridVisualElement.visible=
!1);a=k.set(m.sv3d.get(),k.length(b.basis1),k.length(b.basis2),1);a=E.fromScaling(m.sm4d.get(),a);a=E.multiply(a,c,a);this._previewPlaneOutlineVisualElement.transform=a;this._previewPlaneGridVisualElement.transform=a;this._updateMaterials()}}_updateMaterials(){const a=L.getOutlineColor(this.view.effectiveTheme);a[3]*=this._previewPlaneOpacity;const b=I.clone(L.planeColor);b[3]*=this._previewPlaneOpacity;this._previewPlaneOutlineVisualElement.color=a;this._previewPlaneGridVisualElement.backgroundColor=
b;this._previewPlaneGridVisualElement.gridColor=I.ZEROS}_updateManipulatorsInteractive(a){a.grabbing?(this.shiftManipulator.interactive=this.shiftManipulator===a,this.rotateHeadingManipulator.interactive=this.rotateHeadingManipulator===a,this.rotateTiltManipulator.interactive=this.rotateTiltManipulator===a,this.resizeManipulators.forEach(b=>{b.interactive=b===a})):(this.shiftManipulator.interactive=!0,this.rotateHeadingManipulator.interactive=!0,this.rotateTiltManipulator.interactive=!0,this.resizeManipulators.forEach(b=>
{b.interactive=!0}))}testData(){return{plane:this.analysisViewData.plane,setPointerMoveTimerMs:a=>{this._pointerMoveTimerMs=a}}}};l.disableEngineLayers=!1;n.__decorate([p.property()],l.prototype,"_clock",void 0);n.__decorate([p.property({constructOnly:!0})],l.prototype,"view",void 0);n.__decorate([p.property()],l.prototype,"analysisViewData",void 0);n.__decorate([p.property({readOnly:!0})],l.prototype,"state",null);n.__decorate([p.property({readOnly:!0})],l.prototype,"cursor",null);n.__decorate([p.property()],
l.prototype,"analysis",null);n.__decorate([p.property()],l.prototype,"removeIncompleteOnCancel",void 0);n.__decorate([p.property()],l.prototype,"_layersMode",void 0);n.__decorate([p.property()],l.prototype,"layersMode",null);n.__decorate([p.property({value:null})],l.prototype,"inputState",null);n.__decorate([p.property()],l.prototype,"_isPlacingSlicePlane",null);n.__decorate([p.property()],l.prototype,"_creatingPointerId",null);l=G=n.__decorate([R.subclass("esri.views.3d.analysis.Slice.SliceTool")],
l);const Y=f.create(),y=S.create();return l});