// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/mathUtils ../../../core/maybe ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ../../../core/libs/gl-matrix-2/math/mat3 ../../../core/libs/gl-matrix-2/math/mat4 ../../../core/libs/gl-matrix-2/factories/mat4f64 ../../../core/libs/gl-matrix-2/math/vec2 ../../../core/libs/gl-matrix-2/factories/vec2f64 ../../../core/libs/gl-matrix-2/factories/vec3f32 ../../../geometry/ellipsoidUtils ../../../chunks/Clouds.glsl ./CloudsData ./CloudsParameters ./CloudsPresets ./CloudsTechnique ./CloudsTechniqueConfiguration ./NoiseTextureAtlas ../webgl-engine/lib/BindParameters ../webgl-engine/lib/glUtil3D ../../support/Scheduler ../../support/Yield ../../webgl/enums ../../webgl/FramebufferObject ../../webgl/TextureDescriptor".split(" "),
function(d,g,x,l,p,u,h,Q,R,S,y,z,A,B,q,C,k,D,E,r,F,e,G,n,H,I,J,K,v,t,L,M){d.CloudsGenerator=class extends x{constructor(a){super(a);this._techniques=[];this._techniqueConfiguration=new n.CloudsTechniqueConfiguration;this._bindParameters=new I.BindParameters(null,null);this._passParameters=new E.CloudsPassParameters;this._weatherTile=C.create();this._weatherTileCount=128;this._tileIndex=this._faceIndex=0;this.coverage=l.lerp(e.cloudPresets.default.coverage[0],e.cloudPresets.default.coverage[1],.5);
this.density=l.lerp(e.cloudPresets.default.density[0],e.cloudPresets.default.density[1],.5);this.absorption=l.lerp(e.cloudPresets.default.absorption[0],e.cloudPresets.default.absorption[1],.5);this.cloudSize=l.lerp(e.cloudPresets.default.cloudSize[0],e.cloudPresets.default.cloudSize[1],.5);this.detailSize=l.lerp(e.cloudPresets.default.detailSize[0],e.cloudPresets.default.detailSize[1],.5);this.smoothness=l.lerp(e.cloudPresets.default.smoothness[0],e.cloudPresets.default.smoothness[1],.5);this.cloudHeight=
l.lerp(e.cloudPresets.default.cloudHeight[0],e.cloudPresets.default.cloudHeight[1],.5);this.raymarchingSteps=e.cloudPresets.default.raymarchingSteps;this._viewMatrix=B.create();this.running=this._dirty=!1;this._vao=J.createQuadVAO(a.context.renderContext.rctx)}_getTechnique(a){const b=1-this.context.renderContext.bindParameters.cloudsFade.readChannels,f=b===r.CloudsTextureChannels.RG?2*a:2*a+1,c=this._techniques[f];if(c)return c;this._techniqueConfiguration.writeTextureChannels=b;this._techniqueConfiguration.steps=
a;this._techniques[f]=new G.CloudsTechnique({rctx:this.context.renderContext.rctx,viewingMode:this.view.state.viewingMode},this._techniqueConfiguration);return this._techniques[f]}updateWeatherTile(){var a=this.view.camera.position.latitude,b=this.view.camera.position.longitude;null!=a&&null!=b&&(q.set(this._weatherTile,(a+90)/180,(b+180)/360),a=Math.floor(this._weatherTileCount*Math.abs(2*this._weatherTile[0]-1)),this._weatherTile[0]=Math.floor(2*this._weatherTileCount*this._weatherTile[0]),this._weatherTile[1]=
Math.floor(4*(this._weatherTileCount-a)*this._weatherTile[1]),b=a=0,null!=this.view.environment&&"virtual"!==this.view.environment.lighting.type&&null!=this.view.environment.lighting.date&&(b=new Date(this.view.environment.lighting.date),b.setUTCHours(this.view.environment.lighting.date.getUTCHours()+(this.view.environment.lighting.displayUTCOffset??0)),a=31*b.getUTCMonth()+b.getUTCDate(),b=b.getUTCFullYear()),this._weatherTile[0]=(this._weatherTile[0]+a)%(2*this._weatherTileCount),this._weatherTile[1]=
(this._weatherTile[1]+b%100)%(4*this._weatherTileCount),q.equals(this._passParameters.weatherTile,this._weatherTile)||this.setDirty())}initialize(){const a=D.getReferenceEllipsoid(this.view.spatialReference);this._passParameters.cloudRadius=.5*a.radius;this.setDirty();this.updateWeatherTile();this.addHandles([this.view.resourceController.scheduler.registerTask(K.TaskPriority.CLOUDS_GENERATOR,this),u.watch(()=>[this.coverage,this.density,this.absorption,this.cloudSize,this.detailSize,this.smoothness,
this.cloudHeight,this.raymarchingSteps],()=>this.setDirty(),u.initial)])}destroy(){this._techniques.forEach(a=>p.releaseMaybe(a));this._frameBufferCube=p.disposeMaybe(this._frameBufferCube);this._techniques.length=0;this._vao.dispose();this._passParameters.noiseTexture=p.destroyMaybe(this._passParameters.noiseTexture)}get _tilesPerFace(){switch(this._techniqueConfiguration.steps){case n.RayMarchingSteps.SIXTEEN:return 1;case n.RayMarchingSteps.HUNDRED:return 4;case n.RayMarchingSteps.COUNT:case n.RayMarchingSteps.TWOHUNDRED:return 8}}get usedMemory(){return(this._frameBufferCube?.usedMemory??
0)+(this._passParameters.noiseTexture?.textureAtlas?.usedMemory??0)}_ensureNoiseTexture(){null==this._passParameters.noiseTexture&&(this._passParameters.noiseTexture=new H.NoiseTextureAtlas({context:this.context}));this._passParameters.noiseTexture.updateWeatherMap(this._passParameters.weatherTile);return null!=this._passParameters.noiseTexture.textureAtlas}_ensureFrameBufferCube(a){null==this._frameBufferCube&&(a=new M.TextureDescriptor(a),a.target=t.TextureType.TEXTURE_CUBE_MAP,a.wrapMode=t.TextureWrapMode.CLAMP_TO_EDGE,
this._frameBufferCube=new L.FramebufferObject(this.context.renderContext.rctx,a));return this._frameBufferCube}get cubeMap(){return this._frameBufferCube}destroyFrameBufferCube(){this._frameBufferCube=p.disposeMaybe(this._frameBufferCube)}applyPreset(a,b){const f=a.median,c=m=>{const w=l.lerp(m[0],m[1],f);return.5>b?l.lerp(m[0],w,2*b):l.lerp(w,m[1],2*(b-.5))};this.coverage=c(a.coverage);this.density=c(a.density);this.absorption=c(a.absorption);this.cloudSize=c(a.cloudSize);this.detailSize=c(a.detailSize);
this.smoothness=c(a.smoothness);this.cloudHeight=c(a.cloudHeight);this.raymarchingSteps=a.raymarchingSteps}setDirty(){this._dirty=this.running=!0}runTask(a){0===this._faceIndex&&0===this._tileIndex&&(this._passParameters.raymarchingSteps=this.raymarchingSteps,this.updateWeatherTile(),q.copy(this._passParameters.weatherTile,this._weatherTile));var b=this._getTechnique(this._passParameters.raymarchingSteps);if(!b.compiled||this.context.renderContext.bindParameters.cloudsFade.fadeMode===F.FadeMode.CROSS_FADE||
!this._ensureNoiseTexture())return v.Yield;0===this._faceIndex&&0===this._tileIndex&&(this.context.renderContext.bindParameters.cloudsFade.renderingStage=r.CloudsRenderingStages.RENDERING,this._passParameters.absorption=this.absorption,this._passParameters.density=this.density,this._passParameters.cloudSize=this.cloudSize,this._passParameters.detailSize=this.detailSize,this._passParameters.smoothness=this.smoothness,this._passParameters.cloudHeight=this.cloudHeight,this._passParameters.coverage=this.coverage,
this._dirty=!1);A.targetTo(this._viewMatrix,N,O[this._faceIndex],P[this._faceIndex]);z.fromMat4(this._passParameters.viewMatrix,this._viewMatrix);const f=this.context.renderContext.rctx;var c=f.bindTechnique(b,this._bindParameters,this._passParameters);f.bindVAO(this._vao);c.assertCompatibleVertexAttributeLocations(this._vao);c=f.getViewport();b=b.configuration.cubeMapSize;const m=b/this._tilesPerFace;f.setViewport(0,this._tileIndex*m,b,m);b=this._ensureFrameBufferCube(b);f.bindFramebuffer(b);b.setColorTextureTarget(t.TextureType.TEXTURE_CUBE_MAP_POSITIVE_X+
this._faceIndex);f.gl.drawArrays(f.gl.TRIANGLE_STRIP,0,4);f.gl.flush();f.setViewport(c.x,c.y,c.width,c.height);this.requestRender();++this._tileIndex;4===this._faceIndex&&this._tileIndex===this._tilesPerFace?(this.running=this._dirty,this._tileIndex=this._faceIndex=0,this.running||(this.context.renderContext.bindParameters.cloudsFade.renderingStage=r.CloudsRenderingStages.FADING)):this._tileIndex===this._tilesPerFace&&(++this._faceIndex,this._tileIndex=0);a.madeProgress();return v.Yield}};g.__decorate([h.property({constructOnly:!0})],
d.CloudsGenerator.prototype,"context",void 0);g.__decorate([h.property({constructOnly:!0})],d.CloudsGenerator.prototype,"view",void 0);g.__decorate([h.property({constructOnly:!0})],d.CloudsGenerator.prototype,"requestRender",void 0);g.__decorate([h.property()],d.CloudsGenerator.prototype,"coverage",void 0);g.__decorate([h.property()],d.CloudsGenerator.prototype,"density",void 0);g.__decorate([h.property()],d.CloudsGenerator.prototype,"absorption",void 0);g.__decorate([h.property()],d.CloudsGenerator.prototype,
"cloudSize",void 0);g.__decorate([h.property()],d.CloudsGenerator.prototype,"detailSize",void 0);g.__decorate([h.property()],d.CloudsGenerator.prototype,"smoothness",void 0);g.__decorate([h.property()],d.CloudsGenerator.prototype,"cloudHeight",void 0);g.__decorate([h.property()],d.CloudsGenerator.prototype,"raymarchingSteps",void 0);g.__decorate([h.property()],d.CloudsGenerator.prototype,"running",void 0);d.CloudsGenerator=g.__decorate([y.subclass("esri.views.3d.environment.CloudsGenerator")],d.CloudsGenerator);
const O=[k.fromValues(1,0,0),k.fromValues(-1,0,0),k.fromValues(0,1,0),k.fromValues(0,-1,0),k.fromValues(0,0,1)],P=[k.fromValues(0,1,0),k.fromValues(0,1,0),k.fromValues(0,0,-1),k.fromValues(0,0,1),k.fromValues(0,1,0)],N=k.zeros();Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});