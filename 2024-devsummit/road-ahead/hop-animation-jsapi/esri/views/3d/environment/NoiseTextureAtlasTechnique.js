// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("require exports ../../../chunks/NoiseTextureAtlas.glsl ./NoiseTextureAtlasConfiguration ../webgl-engine/core/shaderTechnique/ReloadableShaderModule ../webgl-engine/core/shaderTechnique/ShaderTechnique ../webgl-engine/lib/DefaultVertexAttributeLocations ../webgl-engine/lib/Program ../../webgl/enums ../../webgl/renderState".split(" "),function(f,e,g,h,k,l,m,n,a,b){class c extends l.ShaderTechnique{initializeProgram(d){return new n.Program(d.rctx,c.shader.get().build(this.configuration),m.Default3D)}initializePipeline(){return b.makePipelineState({blending:this.configuration.mode===
h.NoiseTextureRenderMode.Full?b.simpleBlendingParams(a.BlendFactor.ONE,a.BlendFactor.ZERO):b.separateBlendingParams(a.BlendFactor.ZERO,a.BlendFactor.ONE,a.BlendFactor.ONE,a.BlendFactor.ZERO),depthTest:{func:a.CompareFunction.ALWAYS},colorWrite:b.defaultColorWriteParams})}}c.shader=new k.ReloadableShaderModule(g.NoiseTextureAtlas,()=>new Promise((d,p)=>f(["./NoiseTextureAtlas.glsl"],d,p)));e.NoiseTextureAtlasTechnique=c;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});