// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/tslib.es6 ../../../core/Accessor ../../../core/mathUtils ../../../core/maybe ../../../core/time ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ../../../core/support/UpdatingHandles ../../../geometry/ellipsoidUtils ./PrecipitationTechnique ./PrecipitationTechniqueConfiguration ../support/buffer/glUtil ../support/buffer/InterleavedLayout ../webgl-engine/lib/AnimationTimer ../webgl-engine/lib/VertexArrayObject ../webgl-engine/lib/VertexAttribute ../../webgl/BufferObject ../../webgl/enums ../../webgl/Util".split(" "),
function(c,g,x,p,h,y,k,F,G,H,z,A,B,d,l,q,r,C,D,t,u,m,v){c.Precipitation=class extends x{constructor(a){super(a);this._numParticles=25E4;this._rainSpeed=.1;this._snowSpeed=.01;this._passParameters=new d.PrecipitationPassParameters;this._animation=new C.AnimationTimer;this._updatingTracking=new A.UpdatingHandles;this._passParameters.time=0;this._passParameters.radius=B.getReferenceEllipsoid(a.view.spatialReference).radius;this._techniqueRepository=a.context.techniqueRepository}destroy(){this._updatingTracking.destroy();
this._numParticles=0;this._snowTechniqueCached=h.releaseMaybe(this._snowTechniqueCached);this._rainTechniqueCached=h.releaseMaybe(this._rainTechniqueCached);this._vao=h.disposeMaybe(this._vao);this._instanceIdBuffer=h.disposeMaybe(this._instanceIdBuffer)}get updating(){return this._updatingTracking.updating}get _rainTechnique(){if(null==this._rainTechniqueCached){const a=new l.PrecipitationTechniqueConfiguration;a.type=l.PrecipitationType.Rain;this._rainTechniqueCached=this._techniqueRepository.acquire(d.PrecipitationTechnique,
a)}return this._rainTechniqueCached}get _snowTechnique(){if(null==this._snowTechniqueCached){const a=new l.PrecipitationTechniqueConfiguration;a.type=l.PrecipitationType.Snow;this._snowTechniqueCached=this._techniqueRepository.acquire(d.PrecipitationTechnique,a)}return this._snowTechniqueCached}update(a){return this._animation.advance(a)}render(a,b,e){const n="rainy"===e?this._rainTechnique:this._snowTechnique;if(n.compiled){var f=a.rctx;this._ensureResources(f);null!=n&&null!=this._vao&&null!=this._instanceIdBuffer&&
(null!=a.bindParameters.cloudsFade.data&&(this._passParameters.opacity=a.bindParameters.cloudsFade.opacity),0>=this._passParameters.opacity||(b=.5>b?p.lerp(0,.35,2*b):p.lerp(.35,1,2*(b-.5)),this._passParameters.time=("rainy"===e?this._rainSpeed:this._snowSpeed)*y.secondsFromMilliseconds(this._animation.time)%1E5,a=f.bindTechnique(n,a.bindParameters,this._passParameters),f.bindVAO(this._vao),a.assertCompatibleVertexAttributeLocations(this._vao),v.bindVertexBufferLayout(f,d.attributeLocations,this._instanceIdBuffer,
w,0),f.drawArraysInstanced(m.PrimitiveType.TRIANGLES,0,3,this._numParticles*b),v.unbindVertexBufferLayout(f,d.attributeLocations,this._instanceIdBuffer,w)))}else this.context.requestRender()}_ensureResources(a){null==this._vao&&(this._vao=this._createVertexArrayObject(a));null==this._instanceIdBuffer&&(this._instanceIdBuffer=this._createInstanceIndices(a))}_createInstanceIndices(a){const b=[];for(let e=0;e<this._numParticles;e++)b.push(e);return u.BufferObject.createVertex(a,m.Usage.STATIC_DRAW,new Float32Array(b))}_createVertexArrayObject(a){const b=
new Float32Array([-1,0,1,1,0,-1,1,0,1]);return new D.VertexArrayObject(a,d.attributeLocations,{geometry:q.glLayout(E)},{geometry:u.BufferObject.createVertex(a,m.Usage.STATIC_DRAW,b)})}};g.__decorate([k.property({constructOnly:!0})],c.Precipitation.prototype,"context",void 0);g.__decorate([k.property({constructOnly:!0})],c.Precipitation.prototype,"view",void 0);g.__decorate([k.property({readOnly:!0})],c.Precipitation.prototype,"updating",null);g.__decorate([k.property()],c.Precipitation.prototype,
"_updatingTracking",void 0);c.Precipitation=g.__decorate([z.subclass("esri.views.3d.environment.Precipitation")],c.Precipitation);const E=r.newLayout().vec3f(t.VertexAttribute.POSITION),w=q.glLayout(r.newLayout().f32(t.VertexAttribute.INSTANCEFEATUREATTRIBUTE),1);Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});