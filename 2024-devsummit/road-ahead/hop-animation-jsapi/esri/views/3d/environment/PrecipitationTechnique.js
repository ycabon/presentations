// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("require exports ../../../chunks/Precipitation.glsl ../webgl-engine/core/shaderModules/interfaces ../webgl-engine/core/shaderTechnique/ReloadableShaderModule ../webgl-engine/core/shaderTechnique/ShaderTechnique ../webgl-engine/lib/Program ../webgl-engine/lib/VertexAttribute ../../webgl/enums ../../webgl/renderState".split(" "),function(h,b,k,l,m,n,p,f,a,c){class q extends l.NoParameters{constructor(){super(...arguments);this.time=0;this.radius=1;this.width=500;this.opacity=1}}class d extends n.ShaderTechnique{initializeProgram(e){return new p.Program(e.rctx,
d.shader.get().build(this.configuration),g)}initializePipeline(){return c.makePipelineState({blending:c.separateBlendingParams(a.BlendFactor.ONE,a.BlendFactor.ONE,a.BlendFactor.ONE_MINUS_SRC_ALPHA,a.BlendFactor.ONE_MINUS_SRC_ALPHA),depthTest:{func:a.CompareFunction.LEQUAL},colorWrite:c.defaultColorWriteParams})}}d.shader=new m.ReloadableShaderModule(k.Precipitation,()=>new Promise((e,r)=>h(["./Precipitation.glsl"],e,r)));const g=new Map([[f.VertexAttribute.POSITION,0],[f.VertexAttribute.INSTANCEFEATUREATTRIBUTE,
1]]);b.PrecipitationPassParameters=q;b.PrecipitationTechnique=d;b.attributeLocations=g;Object.defineProperty(b,Symbol.toStringTag,{value:"Module"})});