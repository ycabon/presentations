// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/tslib.es6 ../../../core/Evented ../../../core/maybe ../../../core/promiseUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ../../../chunks/vec32 ../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../geometry/projection ../../../geometry/projection/projectPointToWGS84ComparableLonLat ../../../geometry/support/spatialReferenceUtils ../../ViewingMode ./EnvironmentRenderer ../support/earthUtils ../support/sunUtils ../webgl-engine/lib/Update ../webgl-engine/lighting/Lightsources".split(" "),
function(g,h,y,z,t,e,l,J,K,L,A,m,p,u,B,v,C,D,w,n,q,r){g.SceneViewEnvironmentManager=class extends y.EventedAccessor{constructor(){super();this._referencePointUpdateDelay=200;this._referencePointUpdateInterval=3E3;this._referencePointUpdateDistThreshold=1E6;this._referencePosMapCoordsRequested=this._referencePosUpdateQuery=null;this._viewHandlesKey="viewHandles";this._referencePosResetPreserveAbsoluteTime=this._trackingEnabled=this._preserveAbsoluteDateTime=!1;this._referencePosMapCoords=this._referencePosUpdateTimer=
null;this._mainLight=new r.MainLight;this._ambientLight=new r.AmbientLight;this._moonLight=new r.FillLight;this._disableWeather=this.disableQueries=!1;this._referencePosWGS84Comparable=this._renderer=null;this._resetReferencePosition()}destroy(){this.disconnectView()}get _view(){return this._renderer?.view}get updating(){return!((this.disableQueries||!this._referencePosUpdateQuery&&!this._referencePosMapCoordsRequested)&&!this._renderer?.updating)}get weatherEnabled(){return this._view?.environment.atmosphereEnabled&&
!this._disableWeather&&this._view?.state?.viewingMode===C.ViewingMode.Global&&v.isEarth(this._view.spatialReference)}get weatherVisible(){return this.weatherEnabled&&this._renderer?.weatherVisible}get referencePositionWGS84Comparable(){return this._referencePosWGS84Comparable}connectView(a){if(!this._renderer){this._renderer=new D.EnvironmentRenderer({view:a});var b=()=>this._updateRenderParameters(),c=()=>this._cameraHandler();this.addHandles([e.watch(()=>a.environment.lighting,d=>this._updateLightingHandler(d),
e.sync),e.watch(()=>"virtual"!==a.environment.lighting.type?a.environment.lighting.date:null,d=>this._lightingDateHandler(d),e.sync),e.watch(()=>a.stationary,()=>this._interactingStationaryHandler()),e.watch(()=>a.environment.lighting.directShadowsEnabled,b,e.sync),e.watch(()=>a.qualitySettings.ambientOcclusion,b,e.sync),e.watch(()=>a.qualitySettings.reflections,b,e.sync),e.watch(()=>a.spatialReference,()=>this._resetReferencePosition(!0),e.sync),e.watch(()=>a.environment.weather.type,()=>this._updateLighting(null,
q.Update.Faded),e.sync),e.watch(()=>this.weatherEnabled,()=>this._updateLighting(null,q.Update.Faded),e.sync),e.watch(()=>a.viewingMode,()=>this._resetReferencePosition(!0),e.syncAndInitial),e.watch(()=>"virtual"!==a.environment.lighting.type?a.environment.lighting.cameraTrackingEnabled:!1,d=>this._updateCameraTracking(d),e.syncAndInitial),e.watch(()=>a.state.camera,c,e.syncAndInitial),e.watch(()=>this.disableQueries,c)],this._viewHandlesKey);this._updateRenderParameters();this._updateLighting();
this._cameraHandler();this.notifyChange("updating")}}disconnectView(){this.removeHandles(this._viewHandlesKey);this._resetReferencePosition();this._renderer=z.destroyMaybe(this._renderer)}_updateLightingHandler(a){this._updateCameraTracking("virtual"!==a.type?a.cameraTrackingEnabled:!1);this._lightingDateHandler("virtual"!==a.type?a.date:null);this._updateRenderParameters()}_updateCameraTracking(a){(this._trackingEnabled=a)?this._cameraHandler():(a=this._view.environment.lighting,"virtual"!==a?.type&&
(a.positionTimezoneInfo.autoUpdated=!1))}_lightingDateHandler(a){const b=this._view.environment.lighting;if("virtual"===b?.type)this._updateLighting();else if(a){if(!b.positionTimezoneInfo.autoUpdated){this._preserveAbsoluteDateTime=!0;if(!u.canProjectToWGS84ComparableLonLat(this._view.spatialReference)){var c=this._view.camera.position;if(!this._referencePosMapCoords||!this._referencePosMapCoords.equals(c)){this._requestReferencePositionUpdate(c);return}}this._preupdateTracking(a);null!=this._referencePosWGS84Comparable&&
(c=w.positionToTimezoneInfo(this._referencePosWGS84Comparable,x),null!=c&&(b.autoUpdate(null,c),this._trackingEnabled&&(b.positionTimezoneInfo.autoUpdated=!0)))}this._updateLighting(a)}}_preupdateTracking(a){!this._trackingEnabled&&"virtual"!==this._view.environment.lighting.type&&this._view.environment.lighting.cameraTrackingEnabled&&this._cameraHandler(a)}_cameraHandler(a=null){var b=this._view;b.ready&&(b=b.stateManager.camera)&&(this._cameraHandlerClientSide(b,a)||this._cameraHandlerServerSide(b))}_cameraHandlerClientSide(a,
b){const c=v.isEarth(this._view.spatialReference);if(c&&!u.canProjectToWGS84ComparableLonLat(this._view.spatialReference))return"virtual"===this._view.environment.lighting.type&&this._updateLighting(),!1;a=a.position;null==this._referencePosWGS84Comparable&&(this._referencePosWGS84Comparable=p.create());c?B.projectPointToWGS84ComparableLonLat(a,this._referencePosWGS84Comparable):m.set(this._referencePosWGS84Comparable,a.longitude??0,a.latitude??0,a.z??0);this.notifyChange("referencePositionWGS84Comparable");
this._autoUpdateTimezone(this._referencePosWGS84Comparable,b)||this._updateLighting(b);return!0}_cameraHandlerServerSide(a){a=a.position;(!this._referencePosMapCoords||this._referencePosMapCoordsRequested||this._exceedsReferencePosDistThreshold(a))&&this._requestReferencePositionUpdate(a,!0);this._view.mapCoordsHelper&&this._referencePosWGS84Comparable&&(this._referencePosWGS84Comparable[2]=(a.z??0)*this._view.mapCoordsHelper.unitInMeters,this._referencePosChanged())}_interactingStationaryHandler(){this._view.stationary&&
this._executePendingReferencePositionUpdate()}_updateLighting(a,b=q.Update.Immediate){var c=this._view;a=a||("virtual"===c.environment.lighting.type?null:c.environment.lighting.date);var d=this._referencePosWGS84Comparable;const f=d?E:F;var k=this.weatherVisible?c.environment.weather.type:"disabled";null!=d?n.computeColorAndIntensity(a,d,c.state.viewingMode,k,c.state.camera,f):"virtual"===c.environment.lighting.type&&n.computeVirtualLightDirection(c.state.camera,c.state.viewingMode,f.direct.directionToLightSource);
a=this._mainLight;c=f.direct;m.scale(a.intensity,c.color,c.intensity*Math.PI);m.copy(a.direction,c.directionToLightSource);a.specularStrength=f.specularStrength;a.environmentStrength=f.environmentStrength;d=this._ambientLight;m.scale(d.intensity,f.ambient.color,f.ambient.intensity);k=this._moonLight;m.lerp(k.intensity,G,H,f.globalFactor);m.scale(k.intensity,k.intensity,(1-.5*f.globalFactor)*(1-.4*f.noonFactor*(1-f.globalFactor)));m.copy(k.direction,c.directionToLightSource);this._renderer.updateLightSources([a,
d,k],f.noonFactor,f.globalFactor,b);this._updateRenderParameters()}_autoUpdateTimezone(a,b=null){if("virtual"===this._view.environment.lighting.type||!this._view.environment.lighting.cameraTrackingEnabled||null==a)return!1;const c=I;c.setTime((b||this._view.environment.lighting.date).getTime());a=w.positionToTimezoneInfo(a,x);if(null==a)return!1;var d=this._view.environment.lighting.positionTimezoneInfo;if(!d.autoUpdated)d=a;else if(d.hours===a.hours&&d.minutes===a.minutes&&d.seconds===a.seconds)return!1;
const f=c.getUTCHours()-(a.hours-d.hours),k=c.getUTCMinutes()-(a.minutes-d.minutes);d=c.getUTCSeconds()-(a.seconds-d.seconds);c.setUTCHours(f);c.setUTCMinutes(k);c.setUTCSeconds(d);return b?!1:this._view.environment.lighting.autoUpdate(c,a)}_updateRenderParameters(){const a=this._view._stage;if(a){var b=null!=this._referencePosWGS84Comparable?n.computeShadowsEnabled(this._referencePosWGS84Comparable[2],this._view.state.viewingMode):!0;a.renderer.setParameters({shadowMap:this._view.environment.lighting.directShadowsEnabled&&
b,environment:this._view.environment,weatherVisible:this._view.environmentManager.weatherVisible,qualitySettings:this._view.qualitySettings})}}_resetReferencePosition(a=!1){this._cancelReferencePosUpdates();this._referencePosWGS84Comparable=this._referencePosResetPreserveAbsoluteTime=this._referencePosMapCoordsRequested=this._referencePosMapCoords=null;this.notifyChange("updating");a&&this._cameraHandler()}_requestReferencePositionUpdate(a,b=!1){if(!this.disableQueries&&(this._referencePosMapCoordsRequested?
this._referencePosMapCoordsRequested.copy(a):this._referencePosMapCoordsRequested=a.clone(),this._referencePosResetPreserveAbsoluteTime=!!b,!this._referencePosUpdateQuery&&!this._referencePosUpdateTimer&&this._view.stationary)){const c=this._referencePosUpdateQuery=t.after(this._referencePointUpdateDelay).then(()=>{if(this._referencePosUpdateQuery===c)return this._doReferencePositionUpdateQuery(()=>this._referencePosUpdateQuery!==c)}).catch(f=>{"mapcoordshelper:missing-geometry-service"===f.name&&
(this.disableQueries=!0)}).then(()=>{this._referencePosUpdateQuery===c&&(this._referencePosUpdateQuery=null,this._referencePosUpdateTimer||this._executePendingReferencePositionUpdate(),this.notifyChange("updating"))}),d=this._referencePosUpdateTimer=t.after(this._referencePointUpdateInterval).then(()=>{this._referencePosUpdateTimer===d&&(this._referencePosUpdateTimer=null,this._referencePosUpdateQuery||this._executePendingReferencePositionUpdate())});this.notifyChange("updating")}}async _doReferencePositionUpdateQuery(a){this._referencePosResetPreserveAbsoluteTime&&
(this._preserveAbsoluteDateTime=!1);this._referencePosMapCoords?this._referencePosMapCoords.copy(this._referencePosMapCoordsRequested):this._referencePosMapCoords=this._referencePosMapCoordsRequested.clone();this._referencePosMapCoordsRequested=this._referencePosResetPreserveAbsoluteTime=null;const b=await this._view.mapCoordsHelper.toGeographic(this._referencePosMapCoords);a()||isNaN(b[0])||isNaN(b[1])||(a=(this._referencePosMapCoords.z??0)*this._view.mapCoordsHelper.unitInMeters,this._referencePosWGS84Comparable?
(this._referencePosWGS84Comparable[0]=b[0],this._referencePosWGS84Comparable[1]=b[1],this._referencePosWGS84Comparable[2]=a):this._referencePosWGS84Comparable=[b[0],b[1],a],this._referencePosChanged())}_executePendingReferencePositionUpdate(){const a=this._referencePosMapCoordsRequested;a&&this._requestReferencePositionUpdate(a,this._referencePosResetPreserveAbsoluteTime)}_referencePosChanged(){this._preserveAbsoluteDateTime?this._updateLighting():this._autoUpdateTimezone(this._referencePosWGS84Comparable)||
this._updateLighting();this.notifyChange("referencePositionWGS84Comparable")}_exceedsReferencePosDistThreshold(a){return this._referencePosMapCoords?(a=this._referencePosMapCoords.distance(a),this._view.mapCoordsHelper&&(a*=this._view.mapCoordsHelper.unitInMeters),a>this._referencePointUpdateDistThreshold):!0}_cancelReferencePosUpdates(){const a=!!this._referencePosUpdateQuery;this._referencePosUpdateTimer=this._referencePosUpdateQuery=null;return a}get test(){const a=this;return{get renderer(){return a._renderer},
set referencePointUpdateInterval(b){a._referencePointUpdateInterval=b},set referencePointUpdateDistThreshold(b){a._referencePointUpdateDistThreshold=b},set referencePosUpdateTimer(b){a._referencePosUpdateTimer=b},set referencePointUpdateDelay(b){a._referencePointUpdateDelay=b},set disableWeather(b){a._disableWeather=b}}}};h.__decorate([l.property({type:Boolean,readOnly:!0})],g.SceneViewEnvironmentManager.prototype,"updating",null);h.__decorate([l.property()],g.SceneViewEnvironmentManager.prototype,
"disableQueries",void 0);h.__decorate([l.property()],g.SceneViewEnvironmentManager.prototype,"_disableWeather",void 0);h.__decorate([l.property()],g.SceneViewEnvironmentManager.prototype,"weatherEnabled",null);h.__decorate([l.property()],g.SceneViewEnvironmentManager.prototype,"weatherVisible",null);h.__decorate([l.property()],g.SceneViewEnvironmentManager.prototype,"referencePositionWGS84Comparable",null);h.__decorate([l.property()],g.SceneViewEnvironmentManager.prototype,"_renderer",void 0);h.__decorate([l.property()],
g.SceneViewEnvironmentManager.prototype,"_referencePosWGS84Comparable",void 0);g.SceneViewEnvironmentManager=h.__decorate([A.subclass("esri.views.3d.environment.SceneViewEnvironmentManager")],g.SceneViewEnvironmentManager);const E=new n.ColorAndIntensity,F=new n.ColorAndIntensity,I=new Date,x={hours:0,minutes:0,seconds:0},G=p.fromValues(.22,.22,.33),H=p.fromValues(.22,.22,.22);Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});