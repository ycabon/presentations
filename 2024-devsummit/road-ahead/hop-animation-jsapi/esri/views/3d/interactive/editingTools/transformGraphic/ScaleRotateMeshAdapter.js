// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/tslib.es6 ../../../../../core/Accessor ../../../../../core/mathUtils ../../../../../core/reactiveUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/has ../../../../../core/Logger ../../../../../core/RandomLCG ../../../../../core/accessorSupport/decorators/subclass ../../../../../chunks/vec32 ../../../../../geometry/support/axisAngleDegrees ../../../../../geometry/support/MeshTransform ../../../../../geometry/support/meshVertexSpaceUtils ../../../../ViewingMode ./undoRecords".split(" "),
function(e,c,n,p,l,d,y,z,A,q,v,h,r,t,u,w){e.ScaleRotateMeshAdapter=class extends n{constructor(a){super(a);this._interactionState=null}initialize(){this.addHandles([l.when(()=>{const a=this._interactionState;return a&&a.angle!==a.previousAngle?{interactionState:a,angle:a.state.angle}:null},({interactionState:a})=>{this._updateMeshRotation(a)},l.sync),l.when(()=>{const a=this._interactionState;return a&&a.scale!==a.previousScale?{interactionState:a,scale:a.state.scale}:null},({interactionState:a})=>
{this._updateMeshSize(a)},l.sync)])}get initialAngle(){return this._interactionState?.initialAngle??0}get angle(){const a=this.geometry.transform;if(null==a)return this._interactionState?.angle??0;const f=h.axis(a.rotation)[2];return.999999<Math.abs(f)?p.deg2rad(h.angle(a.rotation))*Math.sign(f):0}get angleClockwise(){return-this.angle}get relativeAngle(){return this.angle-this.initialAngle}get relativeAngleClockwise(){return-this.relativeAngle}get scale(){return this._interactionState?.scale??1}startInteraction(){const a=
new g({angle:this.angle});this._interactionState=a;const f=()=>{this._interactionState=null};return{state:a,done:f,cancel:()=>{a.cancel();f()}}}createUndoRecord(){return w.createGraphicGeometryUndoRecord(this.graphic)}_updateMeshRotation(a){const {angle:f,previousAngle:m}=a;a.previousAngle=f;var {geometry:b}=this;const {vertexSpace:k}=b;a=p.rad2deg(f-m);"georeferenced"===k.type?(b=!t.isRelativeVertexSpace(k)&&this.viewingMode===u.ViewingMode.Global,this.geometry.rotate(0,0,a,{origin:this.geometry.anchor,
geographic:b}),this.graphic.notifyGeometryChanged()):(b.transform??(b.transform=new r),{transform:b}=b,a=h.composeAxes(0,0,a,x),b.rotation=h.compose(b.rotation,a,b.rotation),this.graphic.notifyMeshTransformChanged())}_updateMeshSize(a){const {scale:f,previousScale:m}=a;a.previousScale=f;var {geometry:b}=this;const {vertexSpace:k}=b;a=f/m;"georeferenced"===k.type?(b=!t.isRelativeVertexSpace(k)&&this.viewingMode===u.ViewingMode.Global,this.geometry.scale(a,{origin:this.geometry.anchor,geographic:b}),
this.graphic.notifyGeometryChanged()):(b.transform??(b.transform=new r),{transform:b}=b,b.scale=v.scale(b.scale,b.scale,a),this.graphic.notifyMeshTransformChanged())}};c.__decorate([d.property({constructOnly:!0})],e.ScaleRotateMeshAdapter.prototype,"graphic",void 0);c.__decorate([d.property({constructOnly:!0})],e.ScaleRotateMeshAdapter.prototype,"geometry",void 0);c.__decorate([d.property({constructOnly:!0})],e.ScaleRotateMeshAdapter.prototype,"viewingMode",void 0);c.__decorate([d.property()],e.ScaleRotateMeshAdapter.prototype,
"initialAngle",null);c.__decorate([d.property()],e.ScaleRotateMeshAdapter.prototype,"angle",null);c.__decorate([d.property()],e.ScaleRotateMeshAdapter.prototype,"angleClockwise",null);c.__decorate([d.property()],e.ScaleRotateMeshAdapter.prototype,"relativeAngle",null);c.__decorate([d.property()],e.ScaleRotateMeshAdapter.prototype,"relativeAngleClockwise",null);c.__decorate([d.property()],e.ScaleRotateMeshAdapter.prototype,"scale",null);c.__decorate([d.property()],e.ScaleRotateMeshAdapter.prototype,
"_interactionState",void 0);e.ScaleRotateMeshAdapter=c.__decorate([q.subclass("esri.views.3d.interactive.editingTools.transformGraphic.ScaleRotateMeshAdapter")],e.ScaleRotateMeshAdapter);let g=class extends n{get state(){const {angle:a,scale:f}=this;return{angle:a,scale:f}}constructor(a){super(a);this.previousAngle=this.initialAngle=this.angle=0;this.scale=this.previousScale=1;this.previousAngle=this.initialAngle=a.angle}cancel(){this.angle=this.initialAngle;this.scale=1}};c.__decorate([d.property()],
g.prototype,"angle",void 0);c.__decorate([d.property()],g.prototype,"initialAngle",void 0);c.__decorate([d.property()],g.prototype,"previousAngle",void 0);c.__decorate([d.property()],g.prototype,"previousScale",void 0);c.__decorate([d.property()],g.prototype,"scale",void 0);c.__decorate([d.property()],g.prototype,"state",null);g=c.__decorate([q.subclass("InteractionState")],g);const x=h.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});