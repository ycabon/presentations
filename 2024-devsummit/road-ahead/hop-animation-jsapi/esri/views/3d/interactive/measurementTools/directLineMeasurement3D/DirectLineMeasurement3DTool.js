// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../../../chunks/tslib.es6 ../../../../../geometry ../../../../../core/maybe ../../../../../core/memoize ../../../../../core/reactiveUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/has ../../../../../core/Logger ../../../../../core/RandomLCG ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/support/UpdatingHandles ../../../../../layers/graphics/hydratedFeatures ../../../analysis/support/measurementUtils ../../SnappingVisualizer3D ../../editingTools/dragEventPipeline3D ./DirectLineMeasurement3DView ../../../support/ElevationProvider ../../../../interactive/AnalysisToolBase ../../../../interactive/coordinateHelper ../../../../interactive/dragEventPipeline ../../../../interactive/editGeometry/EditGeometry ../../../../interactive/editGeometry/EditGeometryOperations ../../../../interactive/snapping/SceneSnappingManagerPool ../../../../interactive/snapping/SnappingContext ../../../../interactive/snapping/SnappingDragPipelineStep ../../../../interactive/snapping/snappingUtils ../../../../support/screenUtils ../../../../../geometry/Point".split(" "),
function(d,b,z,G,A,e,ca,da,ea,H,I,J,K,L,v,M,N,O,P,B,Q,R,S,T,U,V,C,W){function w(a,c,g){a.events.emit("drag",{action:"start",pointerType:c,start:g,screenPoint:g});return{update:h=>a.events.emit("drag",{action:"update",start:h,screenPoint:h}),end:h=>a.events.emit("drag",{action:"end",start:h,screenPoint:h}),cancel:()=>a.events.emit("drag",{action:"cancel"})}}b=class extends O.AnalysisToolBase{constructor(a){super(a);this._updatingHandles=new I.UpdatingHandles;this._emulatedDrag=null;this.lineState=
"initial";this.cursorManipulator=this.endManipulator=this.startManipulator=this.cursorPointSurfaceLocation=this.endPointSurfaceLocation=this.startPointSurfaceLocation=null;this._getSnappingContext=G.memoize(c=>new T.SnappingContext({elevationInfo:{mode:"absolute-height",offset:0},pointer:c,editGeometryOperations:new R.EditGeometryOperations(new Q.EditGeometry("point",P.createCoordinateHelper(!0,!1,this.view.spatialReference))),visualizer:new L.SnappingVisualizer3D}))}initialize(){const {view:a,analysis:c,
analysisViewData:g,visible:h}=this;this.measurementView=new M.DirectLineMeasurement3DView({toolState:this,view:a,analysis:c,analysisViewData:g,visible:h});var k=S.acquire(a);this._snappingManagerResult=k;this.addHandles(k);const {start:m,end:l,cursor:n}=this.measurementView.createManipulators();k=(q,r,x)=>B.createManipulatorDragEventPipeline(q,(y,t,u,D)=>{const E=v.hideManipulatorWhileDragging(y),X=this._snappingManager,Y=this._getSnappingContext(D),Z=this._updatingHandles,{lineState:aa}=this;u=u.next(E).next(B.resetProperties(this,
[x,r])).next(f=>{if("cursorPoint"!==r){const p=this.analysis[r];null!=p&&(y.location=p)}return f});const ba=v.screenToMap3D(this.view);t=t.next(E).next(f=>{f=ba(f);f||"drawing"!==this.lineState&&"initial"!==this.lineState||(this[r]=null,this[x]=null);return f});if("touch"!==D||"editing"===aa){const {snappingStep:f,cancelSnapping:p}=U.createSnapDragEventPipelineStep({snappingManager:X,snappingContext:Y,updatingHandles:Z});u=u.next(p);t=t.next(...f)}t.next(f=>"start"!==f.action?f:null).next(f=>{const p=
J.clonePoint(f.mapEnd,new W);this[r]=p;y.location=p;this[x]=this._surfaceLocation(p,f.surfaceType)})});const F=q=>q.events.on("grab-changed",()=>{this.lineState=m.grabbing||l.grabbing?"editing":"measured"});this.addHandles([k(m,"startPoint","startPointSurfaceLocation"),k(l,"endPoint","endPointSurfaceLocation"),k(n,"cursorPoint","cursorPointSurfaceLocation"),F(m),F(l)]);this.manipulators.add(m);this.manipulators.add(l);this.manipulators.add(n);this.startManipulator=m;this.endManipulator=l;this.cursorManipulator=
n;this.addHandles(A.watch(()=>this.state,q=>{"measured"===q&&this.finishToolCreation()},A.syncAndInitial));V.setupSnappingToggleHandles(this)}destroy(){this._updatingHandles=z.destroyMaybe(this._updatingHandles);this.measurementView=z.destroyMaybe(this.measurementView)}get _snappingManager(){return this._snappingManagerResult.snappingManager}get state(){var {analysis:a}=this;if(null==a.startPoint&&null==a.endPoint)return"ready";({lineState:a}=this);return this.validMeasurement&&"editing"!==a&&"drawing"!==
a?"measured":"measuring"}get cursor(){return"ready"===this.state||"drawing"===this.lineState?"crosshair":null}get startPoint(){return this.analysis.startPoint}set startPoint(a){this.analysis.startPoint=a}get endPoint(){return this.analysis.endPoint}set endPoint(a){this.analysis.endPoint=a}get cursorPoint(){return this.measurementView.cursorPoint}set cursorPoint(a){this.measurementView.cursorPoint=a}get snappingOptions(){return this._snappingManager.options}get validMeasurement(){return null!=this.analysis.startPoint&&
null!=this.analysis.endPoint}get updating(){return this._updatingHandles.updating||this._snappingManager.updating}onShow(){this.measurementView.show();this._updateManipulatorAvailability()}onHide(){this.measurementView.hide()}onDeactivate(){this._emulatedDrag?.cancel();this._emulatedDrag=null}onInputEvent(a){switch(a.type){case "immediate-click":this._handleImmediateClick(a);break;case "pointer-move":this._handlePointerMove(a)}this._updateManipulatorAvailability()}_handlePointerMove(a){if(this.active&&
!this.view.navigating){var {pointerType:c}=a;if("mouse"===c){var g=C.createScreenPointFromEvent(a),{lineState:h,cursorManipulator:k,endManipulator:m}=this,l=!1;null==this.cursorPoint&&(this._emulatedDrag?.cancel(),this._emulatedDrag=w(k,c,g),l=!0);"initial"===h&&(this._emulatedDrag?.update(g),l=!0);"drawing"===h&&(m.events.emit("drag",{action:"update",start:g,screenPoint:g}),l=!0);l&&a.stopPropagation()}}}_handleImmediateClick(a){if(this.active&&K.isPrimaryPointerAction(a)){var c=C.createScreenPointFromEvent(a),
{pointerType:g}=a,{cursorManipulator:h,startManipulator:k,endManipulator:m,lineState:l}=this,n=!1;null==this.cursorPoint&&(this._emulatedDrag?.cancel(),this._emulatedDrag=w(h,g,c));switch(l){case "initial":this._emulatedDrag?.update(c);null!=this.cursorPoint&&(this._emulatedDrag?.end(c),this._emulatedDrag=null,{cursorPoint:n}=this,this.startPoint=n,this.startPointSurfaceLocation=this.cursorPointSurfaceLocation,k.location=n,k.interactive=!1,m.interactive=!1,this.lineState="drawing",this._emulatedDrag=
w(m,g,c),n=!0);break;case "drawing":this._emulatedDrag?.update(c),null!=this.endPoint&&(this._emulatedDrag?.end(c),this._emulatedDrag=null,k.interactive=!0,m.interactive=!0,this.lineState="measured",n=!0)}n&&a.stopPropagation()}}_surfaceLocation(a,c){return c===v.SurfaceType.GROUND?"on-the-surface":(a.z??0)>=this._getElevation(a)?"above-the-surface":"below-the-surface"}_updateManipulatorAvailability(){this.startManipulator.available=null!=this.analysis.startPoint;this.endManipulator.available=null!=
this.analysis.endPoint}_getElevation(a){return this.view.basemapTerrain.ready?N.getElevationAtPoint(this.view.elevationProvider,a)??0:0}get test(){return{snappingManager:this._snappingManager}}};d.__decorate([e.property({readOnly:!0})],b.prototype,"state",null);d.__decorate([e.property()],b.prototype,"lineState",void 0);d.__decorate([e.property({readOnly:!0})],b.prototype,"cursor",null);d.__decorate([e.property()],b.prototype,"startPoint",null);d.__decorate([e.property()],b.prototype,"endPoint",null);
d.__decorate([e.property()],b.prototype,"cursorPoint",null);d.__decorate([e.property({constructOnly:!0})],b.prototype,"analysis",void 0);d.__decorate([e.property({constructOnly:!0})],b.prototype,"analysisViewData",void 0);d.__decorate([e.property()],b.prototype,"measurementView",void 0);d.__decorate([e.property({constructOnly:!0})],b.prototype,"view",void 0);d.__decorate([e.property({readOnly:!0})],b.prototype,"validMeasurement",null);d.__decorate([e.property({value:null})],b.prototype,"startPointSurfaceLocation",
void 0);d.__decorate([e.property({value:null})],b.prototype,"endPointSurfaceLocation",void 0);d.__decorate([e.property({value:null})],b.prototype,"cursorPointSurfaceLocation",void 0);d.__decorate([e.property()],b.prototype,"updating",null);return b=d.__decorate([H.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DTool")],b)});