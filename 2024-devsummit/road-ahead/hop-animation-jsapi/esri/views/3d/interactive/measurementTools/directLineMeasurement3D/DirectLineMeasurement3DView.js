// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/tslib.es6 ../../../../../Color ../../../../../core/Accessor ../../../../../core/colorUtils ../../../../../core/maybe ../../../../../core/reactiveUtils ../../../../../core/accessorSupport/decorators/property ../../../../../core/has ../../../../../core/Logger ../../../../../core/RandomLCG ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../../geometry/support/lineSegment ../../../analysis/interfaces ../../../analysis/DirectLineMeasurement/interfaces ../../Manipulator3D ../../manipulatorUtils ../../RenderObject ../../visualElements/LaserlineVisualElement ../../../webgl-engine/lib/GeometryUtil".split(" "),
function(c,d,u,x,q,y,l,e,I,J,K,z,t,A,B,v,w,C,D,E,F){var m;(function(a){a.Manipulators="manipulators";a.AnalysisViewDestroyed="analysis-view-destroyed";a.AnalysisView="analysis-view"})(m||={});c.DirectLineMeasurement3DView=class extends x{constructor(a){super(a);this.cursorPoint=null;this._visible=!1;this._laserLine=null;this.laserLineEnabled=!0;this._lastDraggedHandle=null}initialize(){this._laserLine=new E.LaserlineVisualElement({view:this.view,attached:!0,isDecoration:!0});this._updateVisibility(this._visible);
this._connectToAnalysisView();this.addHandles(l.watch(()=>this._params,({laserLineGlowColor:a,laserLineInnerColor:b,laserLineGlobalAlpha:g})=>{const f=this._laserLine;f.style={...f.style,innerColor:b,glowColor:a,globalAlpha:g}}))}destroy(){this._laserLine=y.destroyMaybe(this._laserLine)}get _params(){const {accentColor:a}=this.view.effectiveTheme;return{laserLineGlowColor:u.toUnitRGB(a),laserLineGlowWidth:8,laserLineGlowFalloff:8,laserLineInnerColor:u.toUnitRGB(q.getContrast(a)),laserLineInnerWidth:.75,
laserLineGlobalAlpha:.75*a.a,handleColor:q.multiplyOpacityToUnitRGBA(a,.5),handleRadius:5}}get visible(){return this._visible}set visible(a){a?this.show():this.hide()}get testData(){const a=this._laserLine.testData,b=this.analysisViewData.testData;return{labels:b?.labels,stripeLength:b?.stripeLength,laserLineRenderer:{heightManifoldEnabled:null!=a?a.heightManifoldEnabled:!1,heightManifoldTarget:null!=a?a.heightManifoldTarget:null,pointDistanceEnabled:null!=a?a.pointDistanceEnabled:!1,pointDistanceOrigin:null!=
a?a.pointDistanceOrigin:null,pointDistanceTarget:null!=a?a.pointDistanceTarget:null,lineVerticalPlaneEnabled:null!=a?a.lineVerticalPlaneEnabled:!1}}}get _cursorPosition(){const a=t.create(),b=this.cursorPoint;b&&this.view.renderCoordsHelper.toRenderCoords(b,a);return a}get _startPosition(){const a=t.create(),b=this.analysis.startPoint;b&&this.view.renderCoordsHelper.toRenderCoords(b,a);return a}get _endPosition(){const a=t.create(),b=this.analysis.endPoint;b&&this.view.renderCoordsHelper.toRenderCoords(b,
a);return a}get _laserLineParams(){const a=this._focusPosition,{active:b,lineState:g}=this.toolState,f=this.analysisViewData,n=this.laserLineEnabled&&!!a&&"measured"!==g&&b;if(!n||!this.visible||null==f||f.destroyed)return{heightManifoldTarget:null,pointDistanceLine:null,lineVerticalPlaneSegment:null};const h=f.actualVisualizedMeasurement;return{heightManifoldTarget:"euclidean"===h?a:null,pointDistanceLine:"local"!==this.view.viewingMode&&n&&this.analysis.startPoint&&"geodesic"===h?this._pointDistanceLine:
null,lineVerticalPlaneSegment:n&&f.viewMode===v.ViewMode.Triangle?A.fromPoints(this._startPosition,this._endPosition):null}}get _focusPosition(){const {lineState:a}=this.toolState;var b=this.analysisViewData;b=null!=b&&!b.destroyed&&b.measurementMode===B.MeasurementMode.Euclidean&&b.viewMode===v.ViewMode.Direct;switch(a){case "drawing":return b?this._startPosition:this.analysis.endPoint?this._endPosition:this._startPosition;case "editing":return b?"start"===this._lastDraggedHandle?this._endPosition:
this._startPosition:"start"===this._lastDraggedHandle?this._startPosition:this._endPosition;default:return null!=this.cursorPoint?this._cursorPosition:null}}get _pointDistanceLine(){return{origin:"drawing"===this.toolState.lineState||"end"===this._lastDraggedHandle?this._startPosition:this._endPosition,target:this._focusPosition}}createManipulators(){const a=this._params,{view:b}=this;var g=()=>{const k=C.createManipulatorMaterial(a.handleColor);var p=[new D.RenderObject(F.createSphereGeometry(k,
1,32,32))];p=new w.Manipulator3D({view:b,renderObjects:p});p.available=!1;p.radius=a.handleRadius;return[p,k]};const [f,n]=g(),[h,G]=g();g=new w.Manipulator3D({view:this.view});g.available=!1;g.interactive=!1;null!=this.analysis.startPoint&&(f.location=this.analysis.startPoint,f.available=!0);null!=this.analysis.endPoint&&(h.location=this.analysis.endPoint,h.available=!0);var r=()=>{let k=this._lastDraggedHandle;f.grabbing&&!h.grabbing&&(k="start");h.grabbing&&!f.grabbing&&(k="end");f.grabbing||h.grabbing||
(k=null);this._lastDraggedHandle=k};const H=f.events.on("grab-changed",r);r=h.events.on("grab-changed",r);this.addHandles([H,r,l.watch(()=>q.colorVectorToColorAndOpacity(this._params.handleColor),k=>{n.setParameters({color:k});G.setParameters({color:k})},{equals:q.colorVectorEquals})],m.Manipulators);return{start:f,end:h,cursor:g}}show(){this.destroyed||this._visible||this._updateVisibility(!0)}hide(){!this.destroyed&&this._visible&&this._updateVisibility(!1)}_connectToAnalysisView(){this.removeHandles(m.AnalysisView);
this.addHandles([l.watch(()=>this.analysisViewData?.destroyed,a=>{a&&this.removeHandles(m.AnalysisView)},l.initial),l.watch(()=>["measured"===this.toolState.lineState,this.analysisViewData],([a,b])=>{null==b||b.destroyed||(b.allowVisualElementsOrientationChange=!a)},l.initial),l.watch(()=>this._laserLineParams,a=>{const b=this._laserLine;b.heightManifoldTarget=a.heightManifoldTarget;b.pointDistanceLine=a.pointDistanceLine;b.lineVerticalPlaneSegment=a.lineVerticalPlaneSegment},l.initial)],m.AnalysisView)}_updateVisibility(a){this.initialized&&
((this._visible=a)?this._laserLine.style={innerColor:this._params.laserLineInnerColor,innerWidth:this._params.laserLineInnerWidth,glowColor:this._params.laserLineGlowColor,glowWidth:this._params.laserLineGlowWidth,glowFalloff:this._params.laserLineGlowFalloff,globalAlpha:this._params.laserLineGlobalAlpha}:this.view.cursor=null,this._laserLine.visible=a)}};d.__decorate([e.property({constructOnly:!0})],c.DirectLineMeasurement3DView.prototype,"view",void 0);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,
"_params",null);d.__decorate([e.property({constructOnly:!0})],c.DirectLineMeasurement3DView.prototype,"analysis",void 0);d.__decorate([e.property({constructOnly:!0})],c.DirectLineMeasurement3DView.prototype,"analysisViewData",void 0);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,"cursorPoint",void 0);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,"toolState",void 0);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,"visible",null);d.__decorate([e.property()],
c.DirectLineMeasurement3DView.prototype,"testData",null);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,"_visible",void 0);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,"_laserLine",void 0);d.__decorate([e.property({constructOnly:!0})],c.DirectLineMeasurement3DView.prototype,"laserLineEnabled",void 0);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,"_cursorPosition",null);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,
"_startPosition",null);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,"_endPosition",null);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,"_lastDraggedHandle",void 0);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,"_laserLineParams",null);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,"_focusPosition",null);d.__decorate([e.property()],c.DirectLineMeasurement3DView.prototype,"_pointDistanceLine",null);c.DirectLineMeasurement3DView=
d.__decorate([z.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DView")],c.DirectLineMeasurement3DView);Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});