// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/has ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../chunks/vec42 ../../../../core/libs/gl-matrix-2/factories/vec4f32 ../../../../geometry/support/clipRay ../../../../geometry/support/frustum ../../../../geometry/support/lineSegment ../../../../geometry/support/ray ./EngineVisualElement ./LaserlineVisualElement ../../terrain/OverlayRenderer ../../webgl-engine/lib/GeometryUtil ../../webgl-engine/lib/Material ../../webgl-engine/lib/RenderGeometry ../../webgl-engine/lib/VertexAttribute ../../webgl-engine/materials/RibbonLineMaterial".split(" "),
function(e,r,k,f,n,t,p,z,g,q,A,B,C,D,u,E,v,w){class F extends A.EngineVisualElement{constructor(a){super(a);this._ray=q.create();this._isWorldDown=!1;this._start=f.create();this._end=f.fromValues(1,0,0);this._width=1;this._color=t.fromValues(1,0,1,1);this._polygonOffset=!1;this._writeDepthEnabled=!0;this._innerWidth=0;this._innerColor=t.fromValues(1,1,1,1);this._stippleOffColor=this._stipplePattern=null;this._stipplePreferContinuous=!0;this._falloff=0;this._extensionType=e.ExtensionType.LINE;this._laserlineStyle=
null;this._laserlineEnabled=!1;this._renderOccluded=u.RenderOccludedFlag.OccludeAndTransparent;this._fadedExtensions=x;this._laserline=new B.LaserlineVisualElement({view:this.view,isDecoration:a.isDecoration});this.applyProperties(a)}destroy(){this._laserline.destroy();super.destroy()}createObject3DResourceFactory(a){return{view:a,createResources:b=>this._createObject3DResources(b),destroyResources:b=>this._destroyExternalResources(b),recreateGeometry:(b,c)=>this._recreateObject3DGeometry(b,c),cameraChanged:()=>
this._updateGeometry()}}createDrapedResourceFactory(a){return{view:a,createResources:()=>this._createDrapedResources(),destroyResources:b=>this._destroyExternalResources(b),recreateGeometry:b=>this._recreateDrapedGeometry(b)}}updateVisibility(a){super.updateVisibility(a);this._laserline.visible=a}onAttachedChange(){this._laserline.attached=this._laserlineAttached}setStartEndFromWorldDownAtLocation(a){this._isWorldDown=!0;k.copy(this._start,a);this.view.renderCoordsHelper.worldUpAtPosition(a,this._end);
k.subtract(this._end,a,this._end);q.fromPoints(this._start,this._end,this._ray);this._updateGeometry()}get start(){return this._start}set start(a){this._isWorldDown=!1;k.exactEquals(this._start,a)||(k.copy(this._start,a),q.fromPoints(this._start,this._end,this._ray),this._updateGeometry())}get end(){return this._end}set end(a){this._isWorldDown=!1;k.exactEquals(this._end,a)||(k.copy(this._end,a),q.fromPoints(this._start,this._end,this._ray),this._updateGeometry())}get width(){return this._width}set width(a){a!==
this._width&&(this._width=a,this._updateMaterial())}get color(){return this._color}set color(a){n.exactEquals(a,this._color)||(n.copy(this._color,a),this._updateMaterial())}get polygonOffset(){return this._polygonOffset}set polygonOffset(a){a!==this._polygonOffset&&(this._polygonOffset=a,this._updateMaterial())}get writeDepthEnabled(){return this._writeDepthEnabled}set writeDepthEnabled(a){this._writeDepthEnabled!==a&&(this._writeDepthEnabled=a,this._updateMaterial())}get innerWidth(){return this._innerWidth}set innerWidth(a){a!==
this._innerWidth&&(this._innerWidth=a,this._updateMaterial())}get innerColor(){return this._innerColor}set innerColor(a){n.exactEquals(a,this._innerColor)||(n.copy(this._innerColor,a),this._updateMaterial())}get stipplePattern(){return this._stipplePattern}set stipplePattern(a){const b=null!=a!==(null!=this._stipplePattern);this._stipplePattern=a;b?this.recreate():this._updateMaterial()}get stippleOffColor(){return this._stippleOffColor}set stippleOffColor(a){null!=a&&null!=this._stippleOffColor&&
n.exactEquals(a,this._stippleOffColor)||(this._stippleOffColor=null!=a?t.clone(a):null,this._updateMaterial())}get stipplePreferContinuous(){return this._stipplePreferContinuous}set stipplePreferContinuous(a){a!==this._stipplePreferContinuous&&(this._stipplePreferContinuous=a,this._updateMaterial())}get falloff(){return this._falloff}set falloff(a){a!==this._falloff&&(this._falloff=a,this._updateMaterial())}get extensionType(){return this._extensionType}set extensionType(a){a!==this._extensionType&&
(this._extensionType=a,this.recreateGeometry())}get _laserlineAttached(){return this._laserlineEnabled&&null!=this._laserlineStyle&&this.attached&&!this.isDraped}get laserlineStyle(){return this._laserlineStyle}set laserlineStyle(a){this._laserlineStyle=a;this._laserline.attached=this._laserlineAttached;null!=a&&(this._laserline.style=a)}get laserlineEnabled(){return this._laserlineEnabled}set laserlineEnabled(a){this._laserlineEnabled!==a&&(this._laserlineEnabled=a,this._laserline.attached=this._laserlineAttached)}get renderOccluded(){return this._renderOccluded}set renderOccluded(a){a!==
this._renderOccluded&&(this._renderOccluded=a,this._updateMaterial())}get _normalizedRenderOccluded(){return this.isDraped&&this._renderOccluded===u.RenderOccludedFlag.OccludeAndTransparentStencil?u.RenderOccludedFlag.OccludeAndTransparent:this._renderOccluded}get fadedExtensions(){return this._fadedExtensions}set fadedExtensions(a){this._fadedExtensions=a??x;this.recreateGeometry()}_updateMaterial(){const {materialParameters:a}=this;this.object3dResources.resources?.material.setParameters(a);this.drapedResources.resources?.material.setParameters(a)}get materialParameters(){return{width:this._width,
color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:this._stipplePreferContinuous,innerWidth:this._innerWidth,innerColor:this._innerColor,falloff:this._falloff,hasPolygonOffset:this._polygonOffset,renderOccluded:this._normalizedRenderOccluded,isDecoration:this.isDecoration,writeDepth:this._writeDepthEnabled}}_createObject3DResources(a){const b=new w.RibbonLineMaterial(this.materialParameters),c=[];this._createObject3DGeometry(b,a,c);
return{material:b,geometries:c,forEach:d=>{d(b);c.forEach(d)}}}_destroyExternalResources(a){a.geometries=[]}_recreateObject3DGeometry(a,b){a.geometries.length=0;this._createObject3DGeometry(a.material,b,a.geometries)}_createObject3DGeometry(a,b,c){a=this._createGeometry(a);c.push(a);b.addGeometry(a);this._updateVerticesObject3D(b)}_createDrapedResources(){const a=new w.RibbonLineMaterial(this.materialParameters),b=this._createDrapedGeometry(a);return{material:a,geometries:[b]}}_recreateDrapedGeometry(a){a.geometries=
[this._createDrapedGeometry(a.material)]}_createDrapedGeometry(a){a=this._createGeometry(a);this._updateVerticesDraped(a);return new E.RenderGeometry(a)}_createGeometry(a){const b=this.extensionType===e.ExtensionType.FADED,c=b?[f.create(),f.create(),f.create(),f.create()]:[f.create(),f.create()];return D.createPolylineGeometry(a,c,null,b?[1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0]:null)}_updateGeometry(){if(this.isDraped)this.drapedResources.recreateGeometry();else{const a=this.object3dResources.object;a&&
this._updateVerticesObject3D(a)}}_updateVerticesObject3D(a){const b=this._lineSegment;this._updateVertexAttributesObject3D(a,b);this._laserline.intersectsLine=b}_updateVerticesDraped(a){this._updateVertexAttributesDraped(a,this._lineSegment)}get _lineSegment(){return this._extensionType===e.ExtensionType.FADED?this._updateLineSegmentFinite(y):this._updateLineSegmentInfinite(this._extensionType,y)}_updateLineSegmentFinite(a){return g.fromPoints(this._start,this._end,a)}_updateLineSegmentInfinite(a,
b){var c=this.view.state.camera;p.fromRay(this._ray,h);switch(a){case e.ExtensionType.LINE:h.c0=-Number.MAX_VALUE;break;case e.ExtensionType.RAY:case e.ExtensionType.GROUND_RAY:var d=this._ray.origin;a=this.view.elevationProvider.getElevation(d[0],d[1],d[2],this.view.renderCoordsHelper.spatialReference,"ground")??0;d=this.view.renderCoordsHelper.getAltitude(d);this._isWorldDown&&d<a&&k.negate(h.ray.direction,h.ray.direction);this._extensionType===e.ExtensionType.GROUND_RAY&&null!=a&&(h.c1=Math.abs(d-
a))}if(!z.intersectClipRay(c.frustum,h))return this._updateLineSegmentFinite(b);c=p.getStart(h,l);a=p.getEnd(h,G);return g.fromPoints(c,a,b)}_updateVertexAttributesObject3D(a,b){const c=a.geometries[0].getMutableAttribute(v.VertexAttribute.POSITION)?.data;if(c){var d=0;for(const m of this._lineVertices(b))c[d++]=m[0],c[d++]=m[1],c[d++]=m[2];a.geometryVertexAttributeUpdated(a.geometries[0],v.VertexAttribute.POSITION)}}_updateVertexAttributesDraped(a,b){const c=a.getMutableAttribute(v.VertexAttribute.POSITION)?.data;
if(c){var d=0;for(const m of this._lineVertices(b))c[d++]=m[0],c[d++]=m[1],c[d++]=C.drapedZ;a.invalidateBoundingInfo()}}*_lineVertices(a){this.extensionType===e.ExtensionType.FADED?(yield g.pointAt(a,-this.fadedExtensions.start,l),yield g.pointAt(a,0,l),yield g.pointAt(a,1,l),yield g.pointAt(a,1+this.fadedExtensions.end,l)):(yield g.pointAt(a,0,l),yield g.pointAt(a,1,l))}}const h=p.create(),l=f.create(),G=f.create(),y=g.create();e.ExtensionType=void 0;(function(a){a[a.LINE=0]="LINE";a[a.RAY=1]="RAY";
a[a.GROUND_RAY=2]="GROUND_RAY";a[a.FADED=3]="FADED"})(e.ExtensionType||(e.ExtensionType={}));r=1/3;const x={start:r,end:r};e.ExtendedLineVisualElement=F;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});