// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports","../../../../symbols/support/unitConversionUtils","./featureExpressionInfoUtils"],function(e,f,d){class g{constructor(){this._renderUnitOffset=this._meterUnitOffset=0;this._unit="meters";this._metersPerElevationInfoUnit=1;this.mode=this.centerPointInElevationSR=this._featureExpressionInfoContext=null}get featureExpressionInfoContext(){return this._featureExpressionInfoContext}get meterUnitOffset(){return this._meterUnitOffset}get unit(){return this._unit}set unit(a){this._unit=a;
this._metersPerElevationInfoUnit=f.getMetersPerUnit(a)}get requiresSampledElevationInfo(){return"absolute-height"!==this.mode}reset(){this.mode=null;this._renderUnitOffset=this._meterUnitOffset=0;this._featureExpressionInfoContext=null;this.unit="meters"}set offsetMeters(a){this._meterUnitOffset=a;this._renderUnitOffset=0}set offsetElevationInfoUnits(a){this._meterUnitOffset=a*this._metersPerElevationInfoUnit;this._renderUnitOffset=0}addOffsetRenderUnits(a){this._renderUnitOffset+=a}geometryZWithOffset(a,
b){b=this.calculateOffsetRenderUnits(b);return null!=this.featureExpressionInfoContext?b:a+b}calculateOffsetRenderUnits(a){let b=this._meterUnitOffset;const c=this.featureExpressionInfoContext;null!=c&&(b+=d.execute(c)*this._metersPerElevationInfoUnit);return b/a.unitInMeters+this._renderUnitOffset}setFromElevationInfo(a){this.mode=a.mode;this.unit=f.supportsUnit(a.unit)?a.unit:"meters";this.offsetElevationInfoUnits=a.offset??0}updateFeatureExpressionInfoContext(a,b,c){if(null==a)this._featureExpressionInfoContext=
null;else{var h=a?.arcade;h&&null!=b&&null!=c?(this._featureExpressionInfoContext=d.clone(a),d.setContextFeature(this._featureExpressionInfoContext,d.createFeature(h.modules,b,c))):this._featureExpressionInfoContext=a}}static fromElevationInfo(a){const b=new g;null!=a&&b.setFromElevationInfo(a);return b}}e.ElevationContext=g;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});