// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../geometry ../../../../core/arrayUtils ../../../../core/promiseUtils ../../../support/Scheduler ../../../../geometry/Multipoint".split(" "),function(l,v,n,g,m,p){class q{constructor(b,a){this.spatialReference=b;this._view=a}getElevation(b,a,d){return this._view.elevationProvider.getElevation(b,a,0,this.spatialReference,d)}async queryElevation(b,a,d,f,h){return this._view.elevationProvider.queryElevation(b,a,0,this.spatialReference,h,d,f)}}class r{constructor(b,a,d,f){this.spatialReference=
a;this._getElevationQueryProvider=d;this._queries=[];this._queryOptions={...f,ignoreInvisibleLayers:!0};this._frameTask=b.registerTask(m.TaskPriority.ELEVATION_QUERY,this)}destroy({completeTasks:b}={completeTasks:!1}){this._frameTask.remove();if(this.running)if(b)this.runTask(m.noBudget);else for(const a of this._queries)a.result.reject(g.createAbortError())}queryElevation(b,a,d,f=0){const h=g.createResolver(),k={x:b,y:a,minDemResolution:f,result:h,signal:d};this._queries.push(k);g.onAbort(d,()=>
{n.remove(this._queries,k);h.reject(g.createAbortError())});return h.promise}get running(){return 0<this._queries.length}runTask(b){const a=this._queries;this._queries=[];const d=this._getElevationQueryProvider();if(d){var f=a.map(c=>[c.x,c.y]),h=a.reduce((c,e)=>Math.min(c,e.minDemResolution),Infinity);f=new p({points:f,spatialReference:this.spatialReference});var k=1<a.length&&a.some(c=>!!c.signal)?new AbortController:null,t=null!=k?k.signal:a[0].signal;if(null!=k){let c=0;a.forEach(e=>g.onAbort(e.signal,
()=>{c++;e.result.reject(g.createAbortError());c===a.length&&k.abort()}))}d.queryElevation(f,{...this._queryOptions,minDemResolution:h,signal:t}).then(c=>{a.forEach((e,u)=>{null!=e.signal&&e.signal.aborted?e.result.reject(g.createAbortError()):e.result.resolve(c.geometry.points[u][2])})}).catch(c=>{a.forEach(e=>e.result.reject(c))})}else a.forEach(c=>c.result.reject());b.madeProgress()}get test(){const b=this;return{update:()=>0<b._queries.length&&b.runTask(m.noBudget)}}}l.ElevationQuery=r;l.ViewElevationProvider=
q;Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});