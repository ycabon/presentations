// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/reactiveUtils ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../geometry/ellipsoidUtils ../../support/FrustumExtentIntersection ../../../support/Scheduler ../../../support/Yield".split(" "),function(d,f,k,e,g,r,t,u,l,h,m,n,p){d.Graphics3DFrustumVisibility=class extends k{constructor(a){super(a);
this.suspended=!1;this._extent=null;this._extentIntersectionDirty=!0;this._isVisibleBelowSurfaceInternal=!1;this.graphicsCoreOwner=null;this.updating=!0}initialize(){var {graphicsCoreOwner:a}=this;this._extentIntersection=new m.FrustumExtentIntersection({renderCoordsHelper:a.view.renderCoordsHelper});const b=a.view,c=b.basemapTerrain;a=b.resourceController.scheduler;this.addHandles([b.on("resize",()=>this._viewChange()),e.watch(()=>b.state.camera,()=>this._viewChange(),e.sync),a.registerTask(n.TaskPriority.FRUSTUM_VISIBILITY,
this),e.watch(()=>c.visibleElevationBounds,()=>this._elevationBoundsChange())]);"local"===b.viewingMode?this._isVisibleBelowSurface=!0:this.addHandles([e.watch(()=>[c.baseOpacity,c.wireframe,b.map?.ground?.navigationConstraint?.type],()=>this._updateIsVisibleBelowSurface(),e.initial)])}destroy(){this._set("graphicsCoreOwner",null);this._extentIntersection=this._extent=null}_setDirty(){this.updating||this._set("updating",!0)}setExtent(a){this._extent=a;this._extentIntersectionDirty=!0;this._setDirty()}_viewChange(){this._setDirty()}_elevationBoundsChange(){this._setDirty();
this._extentIntersectionDirty=!0}set _isVisibleBelowSurface(a){this._isVisibleBelowSurfaceInternal=a;this._setDirty();this._extentIntersectionDirty=!0}_updateIsVisibleBelowSurface(){const a=this.graphicsCoreOwner.view,b=a.basemapTerrain,c="none"===a.map.ground?.navigationConstraint?.type;this._isVisibleBelowSurface="local"===a.viewingMode||!b.opaque||c}_updateExtentIntersection(){if(this._extentIntersectionDirty){this._extentIntersectionDirty=!1;var a=this.graphicsCoreOwner.view;if(this._isVisibleBelowSurfaceInternal)var b=
-.3*h.getReferenceEllipsoid(a.spatialReference).radius;else{const {min:c,max:q}=a.basemapTerrain.visibleElevationBounds;b=c-Math.max(1,(q-c)*(1.2-1))}this._extentIntersection.update(this._extent,a.spatialReference,b)}}get running(){return this.updating}runTask(a){this._set("updating",!1);if(!this._extent)return this._set("suspended",!1),p.Yield;this._updateExtentIntersection();const b=this.graphicsCoreOwner.view.frustum,c=h.getReferenceEllipsoid(this.graphicsCoreOwner.view.spatialReference).radius;
this._set("suspended",!this._extentIntersection.isVisibleInFrustum(b,c));a.madeProgress()}};f.__decorate([g.property({readOnly:!0})],d.Graphics3DFrustumVisibility.prototype,"suspended",void 0);f.__decorate([g.property({constructOnly:!0})],d.Graphics3DFrustumVisibility.prototype,"graphicsCoreOwner",void 0);f.__decorate([g.property({readOnly:!0})],d.Graphics3DFrustumVisibility.prototype,"updating",void 0);d.Graphics3DFrustumVisibility=f.__decorate([l.subclass("esri.views.3d.layers.graphics.Graphics3DFrustumVisibility")],
d.Graphics3DFrustumVisibility);Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});