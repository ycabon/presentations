// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../Color ../../../../core/screenUtils ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../core/libs/gl-matrix-2/factories/vec4f64 ../../../../symbols/callouts/calloutUtils ./ElevationAligners ./elevationAlignmentUtils ./ElevationContext ./Graphics3DGraphicCreationContext ./Graphics3DObject3DGraphicLayer ./Graphics3DObjectMetadata ./Graphics3DSymbolLayer ./graphicUtils ./pointUtils ./SymbolComplexity ../../webgl-engine/lib/Attribute ../../webgl-engine/lib/ContentObjectType ../../webgl-engine/lib/Geometry ../../webgl-engine/lib/VertexAttribute ../../webgl-engine/materials/LineCalloutMaterial".split(" "),
function(m,q,r,u,v,w,x,g,y,z,A,B,C,D,t,E,h,F,G,n,k){class p extends C.Graphics3DSymbolLayer{constructor(a,b){super(a,null,b,H);this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1};this.ensureDrapedStatus(!1)}async doLoad(){this._materials[0]=new k.LineCalloutMaterial(this._materialParameters);this._context.stage.add(this._materials[0])}destroy(){super.destroy();this._context.stage.remove(this._materials[0]);this._materials.length=0}_perInstanceMaterialParameters(a){const b=
this._materialParameters;b.horizontalScreenOffset=a.horizontalScreenOffset??0;b.centerOffsetUnits=a.centerOffsetUnits||"world";return b}get _materialParameters(){const a=new k.Parameters;var b=this.symbol,c=b.callout;a.color=null!=c.color?q.toUnitRGBA(c.color):[0,0,0,0];a.color[3]*=this._getLayerOpacity();a.size=r.pt2px(c.size||0);if(b.verticalOffset){const {screenLength:d,minWorldLength:f,maxWorldLength:e}=b.verticalOffset;a.verticalOffset={screenLength:r.pt2px(d),minWorldLength:f||0,maxWorldLength:null!=
e?e:Infinity}}a.borderColor=null!=c.border?.color?q.toUnitRGBA(c.border.color):null;c="object"===b.symbolLayers.at(0).type;b="label-3d"===b.type;a.occlusionTest=!c;a.shaderPolygonOffset=c?0:void 0;a.depthHUDAlignStart=b;a.hasSlicePlane=this._context.slicePlaneEnabled;a.screenSizePerspective=this._context.screenSizePerspectiveEnabled?this._context.sharedResources.screenSizePerspectiveSettings:null;return a}_defaultElevationInfoNoZ(){return I}createGraphics3DGraphic(a){const b=a.renderingInfo;a=a.graphic;
const c=this.setGraphicElevationContext(a,new y.ElevationContext,b.elevationOffset||0);var d=b.symbol;const f="on-the-ground"===this._elevationContext.mode&&("cim"===d.type||!d.symbolLayers.some(e=>"object"===e.type||"text"===e.type));if("label-3d"!==d.type&&f||"point-3d"===d.type&&d.symbolLayers.every(e=>"text"===e.type&&!w.textSymbolLayerSupportsVerticalOffset(e)))return null;d=D.computeCentroid(a.geometry);return null==d?null:this._createAs3DShape(d,c,b,a.uid)}layerOpacityChanged(){this._materials[0]?.setParameters(this._materialParameters)}layerElevationInfoChanged(a,
b,c){c=g.elevationModeChangeUpdateType(p.elevationModeChangeTypes,c,this._elevationContext.mode);if(c!==g.SymbolUpdateType.UPDATE)return c;a.forEach(d=>{const f=b(d);null!=f&&this.updateGraphicElevationContext(d.graphic,f)});return c}slicePlaneEnabledChanged(){this._materials[0]?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled});return!0}physicalBasedRenderingChanged(){return!0}setGraphicElevationContext(a,b,c=0){super.setGraphicElevationContext(a,b);b.addOffsetRenderUnits(c);return b}updateGraphicElevationContext(a,
b){this.setGraphicElevationContext(a,b.elevationContext,null!=b.metadata?b.metadata.elevationOffset:0);b.needsElevationUpdates=g.needsElevationUpdates2D(b.elevationContext.mode)}computeComplexity(){return new E.SymbolComplexity({verticesPerFeature:6})}_createVertexData(a){const {translation:b,centerOffset:c}=a;a=b?new h.Attribute([b[0],b[1],b[2]],l,3,!0):new h.Attribute([0,0,0],l,3,!0);const d=c?new h.Attribute([c[0],c[1],c[2],c[3]],l,4,!0):new h.Attribute([0,0,0,1],l,4,!0);return[[n.VertexAttribute.POSITION,
a],[n.VertexAttribute.NORMAL,new h.Attribute([0,0,1],l,3,!0)],[n.VertexAttribute.CENTEROFFSETANDDISTANCE,d]]}_getOrCreateMaterial(a){const b=this._perInstanceMaterialParameters(a),c=k.LineCalloutMaterial.uniqueMaterialIdentifier(b);if(c===this._materials[0]?.uniqueMaterialIdentifier)return{material:this._materials[0],isUnique:!1};if(null!=a.materialCollection){let d=a.materialCollection.get(c);null==d&&(d=new k.LineCalloutMaterial(b),a.materialCollection.add(c,d));return{material:d,isUnique:!1}}return{material:new k.LineCalloutMaterial(b),
isUnique:!0}}_createAs3DShape(a,b,c,d){var f=this._context.stage.renderView.getObjectAndLayerIdColor({graphicUid:d,layerUid:this._context.layer.uid}),e=this._getOrCreateMaterial(c);f=new G.Geometry(e.material,this._createVertexData(c),null,F.ContentObjectType.Point,f);d=t.createStageObject(this._context,a,f,b,d);if(null==d)return null;e=new A.Graphics3DObject3DGraphicLayer(this,d.object,[f],e.isUnique?[e.material]:null,null,x.perObjectElevationAligner,b);e.metadata=new B.Graphics3DObjectMetadata(c.elevationOffset);
e.alignedSampledElevation=d.sampledElevation;e.needsElevationUpdates=g.needsElevationUpdates2D(b.mode);t.extendPointGraphicElevationContext(e,a,this._context.elevationProvider);return e}}p.elevationModeChangeTypes={definedChanged:g.SymbolUpdateType.UPDATE,staysOnTheGround:g.SymbolUpdateType.UPDATE,onTheGroundChanged:g.SymbolUpdateType.RECREATE};const l=[0],I={mode:"relative-to-ground",offset:0},H={ignoreDrivers:!0,renderPriority:0,renderPriorityStep:1};class J{constructor(a,b,c=u.create(),d=v.create(),
f=0,e="world",K=0,L=null){this.renderer=a;this.symbol=b;this.translation=c;this.centerOffset=d;this.horizontalScreenOffset=f;this.centerOffsetUnits=e;this.elevationOffset=K;this.materialCollection=L}}class M extends z.Graphics3DGraphicCreationContext{}m.Graphics3DLineCalloutSymbolLayer=p;m.LineCalloutCreationContext=M;m.LineCalloutSymbolLayerRenderingInfo=J;Object.defineProperty(m,Symbol.toStringTag,{value:"Module"})});