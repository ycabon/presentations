// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../Color ../../../../core/unitUtils ../../../../chunks/earcut ../../../../core/libs/gl-matrix-2/math/vec2 ../../../../core/libs/gl-matrix-2/factories/vec2f64 ../../../../chunks/vec42 ../../../../core/libs/gl-matrix-2/math/common ../../../../geometry/support/aaBoundingBox ../../../../geometry/support/aaBoundingRect ../../../../geometry/support/DoubleArray ./ElevationAligners ./elevationAlignmentUtils ./Graphics3DDrapedGraphicLayer ./Graphics3DObject3DGraphicLayer ./Graphics3DSymbolLayer ./polygonUtils ../../support/renderInfoUtils/polygon ../../webgl-engine/lib/Object3D ../../webgl-engine/lib/RenderGeometry ../../webgl-engine/materials/WaterMaterial ../../webgl-engine/materials/internal/waterMaterialUtils".split(" "),
function(w,B,C,x,D,q,E,F,f,u,r,G,l,H,I,J,n,y,K,L,z,M){const N=["polyline","polygon","extent"];class g extends J.Graphics3DSymbolLayer{constructor(a,b,c,d){super(a,b,c,d)}async doLoad(){}destroy(){super.destroy();this._context.stage.remove(this._materials[0]);this._materials.length=0}createGraphics3DGraphic(a){a=a.graphic;if(!this._validateGeometry(a.geometry,N,this.symbolLayer.type))return null;const b=this.setGraphicElevationContext(a);this.ensureDrapedStatus("on-the-ground"===b.mode);this.ensureMaterial();
return this.draped?this._createAsOverlay(a):this._createAs3DShape(a,b,a.uid)}ensureMaterial(){if(!this._materials[0]){var a=new z.WaterMaterialParameters,b=this.symbolLayer.color;null!=b&&(a.color=B.toUnitRGBA(b));b=this._getCombinedOpacity(b,{hasIntrinsicColor:!0});a.color=[a.color[0],a.color[1],a.color[2],b];a.transparent=1>b||this.needsDrivenTransparentPass;a.waveDirection=null!=this.symbolLayer.waveDirection?g.headingVectorFromAngle(this.symbolLayer.waveDirection):q.fromValues(0,0);b=M.wavePresets[this.symbolLayer.waveStrength+
"-"+this.symbolLayer.waterbodySize];a.waveStrength=b.waveStrength;a.waveTextureRepeat=b.textureRepeat;a.waveVelocity=b.waveVelocity;a.flowStrength=b.perturbationStrength;a.hasSlicePlane=this._context.slicePlaneEnabled;a.draped=this.draped;this._materials[0]=new z.WaterMaterial(a);this._context.stage.add(this._materials[0])}}layerOpacityChanged(){if(null!=this._materials[0]){var a=this._materials[0].parameters.color,b=this._getCombinedOpacity(this.symbolLayer.color,{hasIntrinsicColor:!0});this._materials[0].setParameters({color:[a[0],
a[1],a[2],b],transparent:1>b||this.needsDrivenTransparentPass})}}layerElevationInfoChanged(a,b,c){const d=this._elevationContext.mode;c=l.elevationModeChangeUpdateType(g.elevationModeChangeTypes,c,d);if(c!==l.SymbolUpdateType.UPDATE)return c;const e=l.needsElevationUpdates2D(d);return this.updateGraphics3DGraphicElevationInfo(a,b,()=>e)}slicePlaneEnabledChanged(){this._materials[0]?.setParameters({hasSlicePlane:this._context.slicePlaneEnabled});return!0}physicalBasedRenderingChanged(){return!0}_createAs3DShape(a,
b,c){const d=n.geometryAsPolygon(a.geometry);if(null==d)return null;const e=y.geometryToRenderInfo(d,this._context.elevationProvider,this._context.renderCoordsHelper,b),p=e.position.length/3,h=r.newDoubleArray(2*p);this._createUVCoordsFromVertices(h,e.mapPositions,p,this._context.elevationProvider.spatialReference);a=new O(e,h,this._context.layer.uid,a.uid);a.objectAndLayerIdColor=this._context.stage.renderView?.getObjectAndLayerIdColor(a);this._create3DShapeGeometries(a);this._logGeometryCreationWarnings(a.renderData,
d.rings,"rings","WaterSymbol3DLayer");if(0===a.outGeometries.length)return null;c=new K.Object3D({geometries:a.outGeometries,castShadow:!1,layerUid:this._context.layer.uid,graphicUid:c});c=new I.Graphics3DObject3DGraphicLayer(this,c,a.outGeometries,null,null,G.perVertexElevationAligner,b);c.alignedSampledElevation=a.renderData.sampledElevation;c.needsElevationUpdates=l.needsElevationUpdates2D(b.mode);return c}_createUVCoordsFromVertices(a,b,c,d){d=C.getMetersPerUnitForSR(d);u.empty(k);for(var e=0;e<
c;e++)D.set(A,b[3*e],b[3*e+1]),u.expandPointInPlace(k,A);E.scale(k,k,d);e=k[1]%g.unitSizeOfTexture;t[0]=k[0]-k[0]%g.unitSizeOfTexture;t[1]=k[1]-e;for(e=0;e<c;e++)a[2*e]=(b[3*e]*d-t[0])/g.unitSizeOfTexture,a[2*e+1]=(b[3*e+1]*d-t[1])/g.unitSizeOfTexture}_create3DShapeGeometries(a){var b=a.renderData.polygons;const c=a.uvCoords;for(const {count:d,index:e,position:p,mapPositions:h,holeIndices:v}of b){if(null!=this._context.clippingExtent&&(f.empty(m),f.expandWithBuffer(m,h),!f.intersectsClippingArea(m,
this._context.clippingExtent)))continue;b=x.earcut(h,v,3);if(0===b.length)continue;const P=r.doubleSubArray(c,2*e,2*d);b=n.createWaterGeometry({material:this._materials[0],indices:b,mapPositions:h,attributeData:{position:p,uv0:P}},a.objectAndLayerIdColor);a.outGeometries.push(b)}}_createAsOverlay(a){const b=n.geometryAsPolygon(a.geometry);if(null==b)return null;this._materials[0].renderPriority=this._renderPriority;const c=y.geometryToRenderInfoDraped(b,this._context.overlaySR),d=c.position.length/
3,e=r.newDoubleArray(2*d);this._createUVCoordsFromVertices(e,c.position,d,this._context.overlaySR);a=new Q(c,e,this._context.layer.uid,a.uid);a.objectAndLayerIdColor=this._context.stage.renderView?.getObjectAndLayerIdColor(a);a.outBoundingBox=f.empty();this._createAsOverlayWater(a);this._logGeometryCreationWarnings(a.renderData,b.rings,"rings","WaterSymbol3DLayer");return 0===a.outGeometries.length?null:new H.Graphics3DDrapedGraphicLayer(this,a.outGeometries,a.outBoundingBox,this._context.drapeSourceRenderer)}_createAsOverlayWater(a){const b=
a.uvCoords;var c=a.renderData.polygons;for(const {position:d,holeIndices:e,index:p,count:h}of c){f.empty(m);f.expandWithBuffer(m,d);if(!f.intersectsClippingArea(m,this._context.clippingExtent))continue;f.expandWithAABB(a.outBoundingBox,m);c=x.earcut(d,e,3);if(0===c.length)continue;const v=r.doubleSubArray(b,2*p,2*h);c=n.createWaterGeometry({material:this._materials[0],indices:c,attributeData:{position:d,uv0:v}},a.objectAndLayerIdColor);a.outGeometries.push(new L.RenderGeometry(c,a))}}static headingVectorFromAngle(a){const b=
q.create();a=F.toRadian(a);b[0]=Math.sin(a);b[1]=Math.cos(a);return b}test(){return{...super.test(),create3DShape:a=>this._createAs3DShape(a.graphic,a.elevationContext,a.graphicUid),ensureMaterial:()=>this.ensureMaterial()}}}g.unitSizeOfTexture=100;g.elevationModeChangeTypes={definedChanged:l.SymbolUpdateType.RECREATE,staysOnTheGround:l.SymbolUpdateType.NONE,onTheGroundChanged:l.SymbolUpdateType.RECREATE};const t=q.create(),k=u.create(),A=q.create(),m=f.create();class O extends n.PolygonCreationDataBase{constructor(a,
b,c,d){super(a,c,d);this.uvCoords=b}}class Q extends n.PolygonCreationDataBase{constructor(a,b,c,d){super(a,c,d);this.uvCoords=b}}w.Graphics3DWaterSymbolLayer=g;Object.defineProperty(w,Symbol.toStringTag,{value:"Module"})});