// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../II3SMeshView3D ../graphics/ExtentSet ../../../support/Scheduler".split(" "),function(e,g,h,k,p,q,r,l,m,n,f){e.I3SAsyncElevationUpdater=class extends h{constructor(a,b,c,d){super({});this._updateExtent=b;this._updateNode=c;this._getElevationMode=d;this.running=
!1;this._extentSet=new n.ExtentSet;this._nodeSet=new Set;b=this._taskPriority;a=a.registerTask(this._taskPriority,this);this.addHandles(a);this._task=a;this._lastTaskPriority=b}get _taskPriority(){const a=this._getElevationMode();return a?a===m.ElevationMode.RelativeToGround?f.TaskPriority.ELEVATION_ALIGNMENT_SCENE:f.TaskPriority.ELEVATION_ALIGNMENT:f.TaskPriority.ELEVATION_ALIGNMENT}_updateTaskPriority(){const a=this._taskPriority;a!==this._lastTaskPriority&&(this._lastTaskPriority=this._task.priority=
a)}normalizeCtorArgs(){return{}}addExtent(a){this._extentSet.add(a);this._updateTaskPriority();this.running=!0}schedule(a){this._nodeSet.add(a);this._updateTaskPriority();this.running=!0}remove(a){this._nodeSet.delete(a);this._updateRunning()}runTask(a){const b=this._extentSet;for(a.run(()=>b.merge(a));!b.empty&&!a.done;){var c=this._updateExtent(b.pop());null!=c&&c.forAll(d=>this.schedule(d));a.madeProgress()}if(!a.done){c=this._nodeSet;for(const d of c)if(c.delete(d),this._updateNode(d),a.madeProgress(),
a.done)break;this._updateRunning()}}_updateRunning(){this.running=0<this._nodeSet.size||0<this._extentSet.size}};g.__decorate([k.property()],e.I3SAsyncElevationUpdater.prototype,"running",void 0);e.I3SAsyncElevationUpdater=g.__decorate([l.subclass("esri.views.3d.layers.i3s.I3SAsyncElevationUpdater.ts")],e.I3SAsyncElevationUpdater);Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});