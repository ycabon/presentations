// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../Graphic ../../../../symbols ../../../../core/Collection ../../../../geometry/Polygon ../../../../symbols/FillSymbol3DLayer ../../../../symbols/PointSymbol3D ../../../../symbols/PolygonSymbol3D ../../../../symbols/TextSymbol3DLayer ../../../../symbols/support/Symbol3DVerticalOffset ../../terrain/TilingScheme ../../../../symbols/callouts/LineCallout3D".split(" "),function(n,m,A,f,r,g,t,h,u,v,w,x){const y=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,
162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];class z{constructor(a,e,k){this._loadingGraphics=new Map;this._loadedGraphics=new Map;this._pendingGraphics=new Map;this._dataExtentGraphic=null;this._enabled=!0;this._tileFetcher=a;this._view=k;this._tilingScheme=new w.TilingScheme(e);this._loadedSymbols=y.map(b=>new h({symbolLayers:new f([new g({material:{color:[b[0],b[1],b[2],.6]},
outline:{color:"black",size:1}})])}));this._loadingSymbols=[new h({symbolLayers:new f([new g({material:{color:[200,200,200,.4]},outline:{color:[30,30,30],size:1}})])})];this._pendingSymbols=[new h({symbolLayers:new f([new g({material:{color:[100,100,100,.4]},outline:{color:[30,30,30],size:1}})])})];this._dataExtentSymbol=new h({symbolLayers:new f([new g({material:{color:[0,0,0,0]},outline:{color:"green",size:4}})])})}destroy(){this.enabled=!1}get enabled(){return this._enabled}set enabled(a){this._enabled=
a;this.update()}update(){this._enabled?(this._synchronizeMaps(this._loadingGraphics,{filter:a=>a.isFetching,symbols:this._loadingSymbols}),this._synchronizeMaps(this._loadedGraphics,{filter:a=>!a.isFetching,symbols:this._loadedSymbols}),this._synchronizeMaps(this._pendingGraphics,{filter:a=>!a.isFetching,symbols:this._pendingSymbols}),this.showDataExtent(this._tileFetcher.filterExtent)):(this._loadingGraphics.forEach(a=>{this._view.graphics.removeMany(a)}),this._loadingGraphics.clear(),this._loadedGraphics.forEach(a=>
{this._view.graphics.removeMany(a)}),this._loadedGraphics.clear(),this._pendingGraphics.forEach(a=>{this._view.graphics.removeMany(a)}),this._pendingGraphics.clear(),this._dataExtentGraphic&&(this._view.graphics.remove(this._dataExtentGraphic),this._dataExtentGraphic=null))}showDataExtent(a){this._dataExtentGraphic&&(this._view.graphics.remove(this._dataExtentGraphic),this._dataExtentGraphic=null);null!=a&&(a=r.fromExtent(a),this._dataExtentGraphic=new m({geometry:a,symbol:this._dataExtentSymbol}),
this._view.graphics.add(this._dataExtentGraphic))}_synchronizeMaps(a,e){const k=[];a.forEach((b,c)=>{const d=this._tileFetcher.test.getFeatureTileById(c);d&&e.filter(d)||(this._view.graphics.removeMany(b),k.push(c))});k.forEach(b=>a.delete(b));this._tileFetcher.test.forEachFeatureTile(b=>{if(e.filter(b)&&!a.has(b.id)){const [l,p,q]=b.descriptor.lij;this._tilingScheme.ensureMaxLod(l);var c=this._tilingScheme.getExtentGeometry(l,p,q),d=new m({geometry:c,symbol:e.symbols[l%e.symbols.length]});c=new m({geometry:c.center,
symbol:new t({verticalOffset:new v({screenLength:40/.75}),callout:new x({color:"white",border:{color:"black"}}),symbolLayers:new f([new u({text:`${l}/${p}/${q}`,halo:{color:"white",size:1/.75},material:{color:"black"},size:16})])})});d=[d,c];a.set(b.id,d);this._view.graphics.addMany(d)}})}}n.FeatureTileFetcher3DDebugger=z;Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})});