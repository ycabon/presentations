// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/tslib.es6 ../../../../../core/mathUtils ../../../../../core/screenUtils ../../../../../core/Logger ../../../../../core/has ../../../../../core/RandomLCG ../../../../../core/Error ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/libs/gl-matrix-2/math/vec2 ../../../../../core/libs/gl-matrix-2/factories/vec2f64 ../../../../../chunks/vec32 ../../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../../geometry/support/plane ../../../camera/constraintUtils ../../../camera/constraintUtils/ConstraintOptions ../../../camera/constraintUtils/ConstraintTypes ../../../camera/constraintUtils/InteractionType ../../../layers/VoxelWasm ../InteractiveController ../../utils/navigationUtils".split(" "),
function(k,r,t,u,C,D,E,F,v,l,m,a,d,n,p,w,x,y,z,A,e){k.ZoomController=class extends A.InteractiveController{constructor(){super(...arguments);this._tmpP=d.create();this._tmpDir=d.create();this._tmpN=d.create();this._tmpP0=m.create();this._tmpPoi=d.create();this._tmpRayDir=d.create();this.dragBeginPoint=u.createScreenPointArray();this._normalizedAnchorPoint=m.create();this._constraintOptions=new w.ConstraintOptions(x.ConstraintTypes.ALL,y.InteractionType.ZOOM,0,this.startCamera,d.create());this._plane=
n.create()}get _intersectionHelper(){return this.view.sceneIntersectionHelper}begin(c){if(this.active){l.copy(this.dragBeginPoint,c);e.normalizeCoordinate(this.startCamera,c,this._normalizedAnchorPoint);var f=this._intersectionHelper.intersectScreenFreePointFallback(c,this._tmpP,0===this.view.map.ground.opacity?e.contentIntersectorOptions:{});a.subtract(this._tmpDir,this._tmpP,this.startCamera.eye);var g=a.length(this._tmpDir);a.normalize(this._tmpDir,this._tmpDir);var b=Math.abs(this.view.camera.position.z);
b=t.clamp(Math.min(e.pivotDistanceModifier,1/Math.abs(a.dot(B,this._tmpDir)))*b,e.distanceClampValues[0],e.distanceClampValues[1]);c=this.view._stage.renderView.getMinimalDepthForArea(z.getVoxelWasm(this.view),c[0],c[1],this.view.state.camera,e.screenPixelArea);b=null!=c?c:b;b=f?Math.min(b,g):b;a.scale(this._tmpDir,this._tmpDir,b);a.add(this._tmpP,this.startCamera.eye,this._tmpDir);a.subtract(this._tmpN,this.startCamera.eye,this.startCamera.center);a.normalize(this._tmpN,this._tmpN);0>this._tmpN[1]&&
a.negate(this._tmpN,this._tmpN);n.fromPositionAndNormal(this._tmpP,this._tmpN,this._plane)}}update(c){if(this.active){e.intersectPlaneFromScreenPoint(this._plane,this.currentCamera,this.dragBeginPoint,this._tmpPoi)||a.copy(this._tmpPoi,this.currentCamera.center);e.normalizeCoordinate(this.currentCamera,c,this._tmpP0);var f=4*(this._tmpP0[1]-this._normalizedAnchorPoint[1]);l.copy(this._normalizedAnchorPoint,this._tmpP0);a.subtract(this._tmpRayDir,this._tmpPoi,this.currentCamera.eye);var g=a.length(this._tmpRayDir),
b=g*(1-f);this._constraintOptions.interactionDirection&&(a.copy(this._constraintOptions.interactionDirection,this._tmpRayDir),a.scale(this._constraintOptions.interactionDirection,this._constraintOptions.interactionDirection,Math.sign(f)/g));var q=this.view.state.constraints.minimumPoiDistance;0<=f&&b<q&&(b=q,f=-(b-g)/g);1E-6>Math.abs(g-b)||(a.scale(this._tmpRayDir,this._tmpRayDir,f),this.currentCamera.eye=a.add(h,this.currentCamera.eye,this._tmpRayDir),a.lerp(h,this.currentCamera.center,this._tmpPoi,
f),h[2]=this._tmpPoi[2]>this.startCamera.center[2]?Math.max(this.startCamera.center[2],h[2]):Math.min(this.startCamera.center[2],h[2]),this.currentCamera.center=h,this._constraintOptions.interactionFactor=p.pixelDistanceToInteractionFactor(l.distance(this.dragBeginPoint,c)),p.applyAll(this.view,this.currentCamera,this._constraintOptions),this.commitCamera())}}end(){this.active&&this.finishController()}};k.ZoomController=r.__decorate([v.subclass("esri.views.3d.state.controllers.local.ZoomController")],
k.ZoomController);const h=d.create(),B=d.fromValues(0,0,1);Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});