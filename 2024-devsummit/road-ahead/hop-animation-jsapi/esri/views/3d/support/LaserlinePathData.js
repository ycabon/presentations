// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../chunks/vec32 ../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../geometry/support/DoubleArray ./buffer/glUtil ./buffer/InterleavedLayout ../webgl-engine/lib/VertexArrayObject ../webgl-engine/lib/VertexAttribute ../webgl-engine/shaders/LaserlinePathTechnique ../../webgl/BufferObject ../../webgl/enums".split(" "),function(p,k,m,v,w,x,y,l,z,A,q){class B{constructor(b){this._renderCoordsHelper=b;this._buffers=null;this._origin=m.create();this._dirty=!1;this._count=0;this._vao=
null}set vertices(b){const a=v.newDoubleArray(3*b.length);let h=0;for(const g of b)a[h++]=g[0],a[h++]=g[1],a[h++]=g[2];this.buffers=[a]}set buffers(b){this._buffers=b;if(0<this._buffers.length){b=this._buffers[0];const a=3*Math.floor(b.length/3/2);k.set(this._origin,b[a],b[a+1],b[a+2])}else k.set(this._origin,0,0,0);this._dirty=!0}get origin(){return this._origin}draw(b){const a=this._ensureVAO(b);null!=a&&(b.bindVAO(a),b.drawArrays(q.PrimitiveType.TRIANGLES,0,this._count))}dispose(){null!=this._vao&&
this._vao.dispose()}_ensureVAO(b){if(null==this._buffers)return null;null==this._vao&&(this._vao=this._createVAO(b,this._buffers));this._ensureVertexData(this._vao,this._buffers);return this._vao}_createVAO(b,a){a=this._createDataBuffer(a);this._dirty=!1;return new y.VertexArrayObject(b,z.attributeLocations,{data:w.glLayout(r)},{data:A.BufferObject.createVertex(b,q.Usage.STATIC_DRAW,a)})}_ensureVertexData(b,a){this._dirty&&(a=this._createDataBuffer(a),b.vertexBuffers.data?.setData(a),this._dirty=
!1)}_numberOfRenderVertices(b){return 6*(b.length/3-1)}_createDataBuffer(b){var a=b.reduce((e,c)=>e+this._numberOfRenderVertices(c),0);this._count=a;a=r.createBuffer(a);const h=this._origin;let g=0,t=0;for(const e of b){for(b=0;b<e.length;b+=3){var f=k.set(u,e[b],e[b+1],e[b+2]);0===b?t=this._renderCoordsHelper.getAltitude(f):this._renderCoordsHelper.setAltitude(f,t);var d=this._renderCoordsHelper.worldUpAtPosition(f,C);const c=g+2*b;f=k.subtract(u,f,h);if(b<e.length-3){a.up.setVec(c,d);a.up.setVec(c+
3,d);a.up.setVec(c+5,d);for(let n=0;6>n;n++)a.start.setVec(c+n,f);a.extrude.setValues(c,0,-1);a.extrude.setValues(c+1,1,-1);a.extrude.setValues(c+2,1,1);a.extrude.setValues(c+3,0,-1);a.extrude.setValues(c+4,1,1);a.extrude.setValues(c+5,0,1)}if(0<b)for(a.up.setVec(c-2,d),a.up.setVec(c-4,d),a.up.setVec(c-5,d),d=-6;0>d;d++)a.end.setVec(c+d,f)}g+=this._numberOfRenderVertices(e)}return a.buffer}}const C=m.create(),u=m.create(),r=x.newLayout().vec3f(l.VertexAttribute.START).vec3f(l.VertexAttribute.END).vec3f(l.VertexAttribute.UP).vec2f(l.VertexAttribute.EXTRUDE);
p.LaserlinePathData=B;Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});