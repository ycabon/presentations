// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports","../../../core/Evented","../../../core/MapUtils","./GraphicsMap"],function(g,h,k,l){class m extends h{constructor(a){super();this._limit=a;this._all=new l.GraphicsMap;this._active=new n(this);this._pending=new Map;this._handle=this._all.on("change",b=>this._handleChanges(b))}destroy(){this._handle.remove()}get length(){return this._active.length}toArray(){return this._active.toArray()}find(a){return this._active.find(a)}forEach(a){this._active.forEach(a)}addMany(a){this._all.addMany(a)}removeManyByObjectId(a){this._all.removeManyByObjectId(a)}_handleChanges(a){let b=
a.removed;if(0<this._pending.size){b=[];for(var c of a.removed)this._pending.delete(c.objectId)||b.push(c)}c=this._limit-this._active.length+b.length;c<a.added.length&&(this._active.removeMany(b),b=[],e.reset(1-this._limit/(this._active.length+a.added.length)),this._active.forEach(d=>{e.sample()&&(b.push(d),this._pending.set(d.objectId,d))}),c=this._limit-this._active.length+b.length);let f=a.added;if(c<a.added.length){f=[];e.reset(c/a.added.length);for(const d of a.added)e.sample()?f.push(d):this._pending.set(d.objectId,
d)}a=c-f.length;0<a&&0<this._pending.size&&(e.reset(a/this._pending.size),this._pending.forEach(d=>{e.sample()&&(f.push(d),this._pending.delete(d.objectId))}));this._active.addAndRemove(f,b)}}class p{constructor(){this._percentage=1;this._last=-1;this._index=0}reset(a){this._percentage=a;this._last=-1}sample(){const a=Math.floor(this._index*this._percentage);++this._index;if(a===this._last)return!1;this._last=a;return!0}}const e=new p;class n{constructor(a){this._parent=a;this._map=new Map}get length(){return this._map.size}forEach(a){this._map.forEach(b=>
a(b))}find(a){let b=void 0;k.someMap(this._map,c=>a(c)?(b=c,!0):!1);return b}toArray(){return[...this._map.values()]}addAndRemove(a,b){for(const c of a)this._map.set(c.objectId,c);for(const c of b)this._map.delete(c.objectId);(0<a.length||0<b.length)&&this._parent.emit("change",{added:a,removed:b})}removeMany(a){for(const b of a)this._map.delete(b.objectId);0<a.length&&this._parent.emit("change",{added:[],removed:a})}}g.LimitGraphicsMap=m;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});