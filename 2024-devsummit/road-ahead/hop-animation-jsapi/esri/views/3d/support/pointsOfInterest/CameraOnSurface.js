// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../core/maybe ../../../../core/promiseUtils ../../../../core/reactiveUtils ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../geometry/Point ../../../ViewingMode ../cameraUtils ../PropertiesPool ./PointOfInterest ../../../support/Yield".split(" "),
function(b,c,n,p,q,d,y,z,A,r,f,k,l,t,u,v,w,m){const x=Array;b.CameraOnSurface=class extends w.PointOfInterest{constructor(a){super(a);this._dirty=!1;this._propertiesPool=new v.PropertiesPool({location:l,renderLocation:x},this);this._estimatedSurfaceAltitude=0;this._pendingElevationQueryController=null;this.renderLocation=k.create();this._tmpPoint=new l}initialize(){this.scheduler&&this.addHandles(this.scheduler.registerTask(this.task,this));this.runTask();if(this.map){const a=()=>this._setDirty();
this.addHandles(q.on(()=>this.map?.ground?.layers,"change",a,{onListenerAdd:a,onListenerRemove:a}))}this._updateRenderLocation()}destroy(){this._cancelPendingRequest();this._propertiesPool=n.destroyMaybe(this._propertiesPool)}get _camera(){return this.state.contentCamera}get location(){const a=this._propertiesPool.get("location");a.spatialReference=this.state.spatialReference;this.renderCoordsHelper.fromRenderCoords(this.renderLocation,a);return a}get scale(){const a=this._camera,e=f.distance(a.eye,
this.renderLocation);return u.distanceToScale({renderCoordsHelper:this.renderCoordsHelper,state:{camera:a}},e,0)}get updating(){return this._dirty||null!=this._pendingElevationQueryController}updateRenderLocation(){this._setDirty();this._updateRenderLocation()}_setDirty(){this._dirty||(this._dirty=!0,this.notifyChange("updating"))}_cancelPendingRequest(){const a=this._pendingElevationQueryController;a&&(this._pendingElevationQueryController=null,a.abort(),this.notifyChange("updating"))}get running(){return!this._pendingElevationQueryController&&
this._dirty}runTask(){this._cancelPendingRequest();this._dirty=!1;this.notifyChange("updating");if(!this.map?.ground)return this._updateSurfaceAltitude(0),m.Yield;var a=this.state.spatialReference;this._tmpPoint.spatialReference=a;this.renderCoordsHelper.fromRenderCoords(this._camera.eye,this._tmpPoint);a=1E5<(this._tmpPoint.z??0)&&this.renderCoordsHelper.viewingMode===t.ViewingMode.Global&&(a.isWGS84||a.isWebMercator);let e=new AbortController;this.map.ground.queryElevation(this._tmpPoint,{signal:e.signal,
cache:this.cache,minDemResolution:a?1E6:0}).then(g=>this._updateSurfaceAltitude(g.geometry.z??0)).catch(g=>{p.isAbortError(g)||this._updateSurfaceAltitude(0)}).catch(()=>{}).then(()=>{this._pendingElevationQueryController===e&&(this._pendingElevationQueryController=null,this.notifyChange("updating"));e=null});this._pendingElevationQueryController=e;return m.Yield}_updateSurfaceAltitude(a){this._estimatedSurfaceAltitude!==a&&(this._estimatedSurfaceAltitude=a,this._updateRenderLocation())}_updateRenderLocation(){this.renderCoordsHelper.setAltitude(h,
this._estimatedSurfaceAltitude,this._camera.eye);f.exactEquals(this._get("renderLocation"),h)||(this._set("renderLocation",f.copy(this._propertiesPool.get("renderLocation"),h)),this.notifyChange("renderLocation"))}};c.__decorate([d.property({constructOnly:!0})],b.CameraOnSurface.prototype,"scheduler",void 0);c.__decorate([d.property({constructOnly:!0})],b.CameraOnSurface.prototype,"cache",void 0);c.__decorate([d.property({constructOnly:!0})],b.CameraOnSurface.prototype,"task",void 0);c.__decorate([d.property()],
b.CameraOnSurface.prototype,"location",null);c.__decorate([d.property({constructOnly:!0})],b.CameraOnSurface.prototype,"map",void 0);c.__decorate([d.property()],b.CameraOnSurface.prototype,"renderLocation",void 0);c.__decorate([d.property()],b.CameraOnSurface.prototype,"scale",null);c.__decorate([d.property()],b.CameraOnSurface.prototype,"updating",null);b.CameraOnSurface=c.__decorate([r.subclass("esri.views.3d.support.CameraOnSurface")],b.CameraOnSurface);const h=k.create();Object.defineProperty(b,
Symbol.toStringTag,{value:"Module"})});