// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../../chunks/tslib.es6 ./shader/ComponentData.glsl ./shader/VertexDiscardByOpacity.glsl ../../../core/shaderLibrary/ShaderOutput ../../../core/shaderLibrary/attributes/NormalAttribute.glsl ../../../core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl ../../../core/shaderLibrary/shading/Normals.glsl ../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl ../../../core/shaderLibrary/util/EllipsoidMode ../../../core/shaderTechnique/BindType ../../../core/shaderTechnique/ShaderTechniqueConfiguration ../../../lib/basicInterfaces ../../../lib/TransparencyPassType".split(" "),
function(e,c,g,h,k,l,m,n,p,q,t,a,f,r){e.IntegratedMeshMode=void 0;(function(d){d[d.None=0]="None";d[d.NoOverlay=1]="NoOverlay";d[d.ColorOverlay=2]="ColorOverlay";d[d.ColorOverlayWithWater=3]="ColorOverlayWithWater";d[d.COUNT=4]="COUNT"})(e.IntegratedMeshMode||(e.IntegratedMeshMode={}));class b extends a.ShaderTechniqueConfiguration{constructor(){super(...arguments);this.output=k.ShaderOutput.Color;this.textureCoordinateType=m.TextureCoordinateAttributeType.None;this.componentData=g.ComponentDataType.Uniform;
this.cullFace=f.CullFaceOptions.Back;this.vertexDiscardMode=h.VertexDiscardMode.None;this.doubleSidedMode=n.NormalsDoubleSidedMode.WindingOrder;this.alphaDiscardMode=f.AlphaDiscardMode.Opaque;this.integratedMeshMode=e.IntegratedMeshMode.None;this.transparencyPassType=r.TransparencyPassType.NONE;this.ellipsoidMode=q.EllipsoidMode.Earth;this.pbrMode=p.PBRMode.Disabled;this.normalType=l.NormalType.Attribute;this.hasColorTexture=this.hasSlicePlane=this.hasNormals=this.hasVertexColors=this.doublePrecisionRequiresObfuscation=
this.spherical=!1;this.blendingEnabled=this.receiveShadows=this.receiveAmbientOcclusion=!0;this.cullAboveGround=this.multipassEnabled=this.hasOccludees=this.hasNormalTexture=this.hasOcclusionTexture=this.hasEmissionTexture=this.hasMetallicRoughnessTexture=this.hasPolygonOffset=this.hasScreenSpaceReflections=!1;this.hasCloudsReflections=!0;this.objectAndLayerIdColor=this.snowCover=!1}}c.__decorate([a.parameter({count:k.ShaderOutput.COUNT})],b.prototype,"output",void 0);c.__decorate([a.parameter({count:m.TextureCoordinateAttributeType.COUNT})],
b.prototype,"textureCoordinateType",void 0);c.__decorate([a.parameter({count:g.ComponentDataType.COUNT})],b.prototype,"componentData",void 0);c.__decorate([a.parameter({count:f.CullFaceOptions.COUNT})],b.prototype,"cullFace",void 0);c.__decorate([a.parameter({count:h.VertexDiscardMode.COUNT})],b.prototype,"vertexDiscardMode",void 0);c.__decorate([a.parameter({count:n.NormalsDoubleSidedMode.COUNT})],b.prototype,"doubleSidedMode",void 0);c.__decorate([a.parameter({count:f.AlphaDiscardMode.COUNT})],
b.prototype,"alphaDiscardMode",void 0);c.__decorate([a.parameter({count:e.IntegratedMeshMode.COUNT})],b.prototype,"integratedMeshMode",void 0);c.__decorate([a.parameter({count:r.TransparencyPassType.COUNT})],b.prototype,"transparencyPassType",void 0);c.__decorate([a.parameter({count:q.EllipsoidMode.COUNT})],b.prototype,"ellipsoidMode",void 0);c.__decorate([a.parameter({count:p.PBRMode.COUNT})],b.prototype,"pbrMode",void 0);c.__decorate([a.parameter({count:l.NormalType.COUNT})],b.prototype,"normalType",
void 0);c.__decorate([a.parameter()],b.prototype,"spherical",void 0);c.__decorate([a.parameter()],b.prototype,"doublePrecisionRequiresObfuscation",void 0);c.__decorate([a.parameter()],b.prototype,"hasVertexColors",void 0);c.__decorate([a.parameter()],b.prototype,"hasNormals",void 0);c.__decorate([a.parameter()],b.prototype,"hasSlicePlane",void 0);c.__decorate([a.parameter()],b.prototype,"hasColorTexture",void 0);c.__decorate([a.parameter()],b.prototype,"receiveAmbientOcclusion",void 0);c.__decorate([a.parameter()],
b.prototype,"receiveShadows",void 0);c.__decorate([a.parameter()],b.prototype,"blendingEnabled",void 0);c.__decorate([a.parameter()],b.prototype,"hasScreenSpaceReflections",void 0);c.__decorate([a.parameter()],b.prototype,"hasPolygonOffset",void 0);c.__decorate([a.parameter()],b.prototype,"hasMetallicRoughnessTexture",void 0);c.__decorate([a.parameter()],b.prototype,"hasEmissionTexture",void 0);c.__decorate([a.parameter()],b.prototype,"hasOcclusionTexture",void 0);c.__decorate([a.parameter()],b.prototype,
"hasNormalTexture",void 0);c.__decorate([a.parameter()],b.prototype,"hasOccludees",void 0);c.__decorate([a.parameter()],b.prototype,"multipassEnabled",void 0);c.__decorate([a.parameter()],b.prototype,"cullAboveGround",void 0);c.__decorate([a.parameter()],b.prototype,"hasCloudsReflections",void 0);c.__decorate([a.parameter()],b.prototype,"snowCover",void 0);c.__decorate([a.parameter()],b.prototype,"objectAndLayerIdColor",void 0);c.__decorate([a.parameter({constValue:!1})],b.prototype,"occlusionPass",
void 0);c.__decorate([a.parameter({constValue:t.BindType.Draw})],b.prototype,"pbrTextureBindType",void 0);c.__decorate([a.parameter({constValue:!0})],b.prototype,"hasSliceHighlight",void 0);c.__decorate([a.parameter({constValue:!1})],b.prototype,"hasSliceInVertexProgram",void 0);c.__decorate([a.parameter({constValue:!1})],b.prototype,"useCustomDTRExponentForWater",void 0);c.__decorate([a.parameter({constValue:!1})],b.prototype,"hasVertexTangents",void 0);c.__decorate([a.parameter({constValue:!0})],
b.prototype,"supportsTextureAtlas",void 0);c.__decorate([a.parameter({constValue:!1})],b.prototype,"highStepCount",void 0);c.__decorate([a.parameter({constValue:!1})],b.prototype,"instancedDoublePrecision",void 0);c.__decorate([a.parameter({constValue:!1})],b.prototype,"hasModelTransformation",void 0);c.__decorate([a.parameter({constValue:!0})],b.prototype,"useFillLights",void 0);c.__decorate([a.parameter({constValue:!1})],b.prototype,"objectAndLayerIdColorInstanced",void 0);e.ComponentTechniqueConfiguration=
b;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});