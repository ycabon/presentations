// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../core/Accessor ../../../../core/asyncUtils ../../../../core/Evented ../../../../core/mathUtils ../../../../core/reactiveUtils ../../../../core/screenUtils ../../../../core/urlUtils ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../support/requestImageUtils ./DefaultVertexBufferLayouts ./glUtil3D ./Program ./VertexAttribute ../shaders/Magnifier.glsl ../../../magnifier/resources ../../../webgl/enums ../../../webgl/renderState ../../../webgl/Texture ../../../webgl/TextureDescriptor".split(" "),
function(g,m,x,y,z,u,A,n,B,p,J,K,L,C,v,D,E,F,G,w,H,h,q,r,I){g.MagnifierHelper=class extends x{constructor(){super(...arguments);this._resources=this._imageLoadTask=this._imageSources=this._magnifier=null;this._passParameters=new w.MagnifierPassParameters;this.events=new z;this.attributeLocations=new Map([[G.VertexAttribute.POSITION,0]]);this._tmpScreenPoint=n.createScreenPointArray();this._tmpRenderPoint=n.createRenderScreenPointArray()}get updating(){return null==this._imageSources&&null!=this._imageLoadTask&&
!this._imageLoadTask.task.finished}get magnifier(){return this._magnifier}set magnifier(a){a!==this._magnifier&&(this.removeAllHandles(),this._magnifier=a,a=()=>{this._updateResourceLoading();this.events.emit("request-render")},null!=this._magnifier&&this.addHandles(A.watch(()=>this._magnifier?.version,a)),a())}get enabled(){return null!=this._validMagnifier}get _validMagnifier(){return null!=this._magnifier&&this._magnifier.visible&&null!=this._magnifier.position&&0<this._magnifier.size?this._magnifier:
null}get _factor(){return null!=this._magnifier?this._magnifier.factor||1:1}destroy(){this._magnifier=null;null!=this._imageLoadTask&&(this._imageLoadTask.task.abort(),this._imageLoadTask=null);this._disposeResources()}render(a,b){const c=this._validMagnifier;if(null!=c){var d=Math.ceil(b.camera.pixelRatio*c.size);this._updateResources(a,d);if(null!=this._resources){var f=this._passParameters.textures;d=Math.ceil(1/this._factor*d);f.input.resize(d,d);n.screenPointObjectToArray(c.position,this._tmpScreenPoint);
var e=b.camera.screenToRender(this._tmpScreenPoint,this._tmpRenderPoint),k=b.camera.fullHeight,t=.5*d,l=.5*d;e[0]=u.clamp(e[0],t,b.camera.fullWidth-t-1);e[1]=u.clamp(e[1],l,k-l-1);k=Math.floor(e[0]-t);e=Math.floor(e[1]-l);l=this._resources.program;l.bindTexture("textureInput",f.input);a.gl.copyTexImage2D(f.input.descriptor.target,0,f.input.descriptor.pixelFormat,k,e,d,d,0);this._passParameters.magnifier=c;a.useProgram(l);l.bindPass(this._passParameters,b);a.bindVAO(this._resources.vao);a.setPipelineState(this._resources.pipelineState);
a.drawArrays(h.PrimitiveType.TRIANGLE_STRIP,0,4)}}}_updateResourceLoading(){const a=this._validMagnifier;if(null!=a){var b=a.maskUrl,c=a.overlayUrl;null==this._imageLoadTask||this._imageLoadTask.maskUrl===b&&this._imageLoadTask.overlayUrl===c||(this._imageLoadTask.task.abort(),this._imageSources=this._imageLoadTask=null);null==this._imageSources&&null==this._imageLoadTask&&(this._imageLoadTask={maskUrl:b,overlayUrl:c,task:y.createTask(async d=>{const f=null==b||null==c?H.loadMagnifierResources(d):
null,e=null!=b?v.requestImage(b,{signal:d}):f.then(k=>k.mask);d=null!=c?v.requestImage(c,{signal:d}):f.then(k=>k.overlay);this._imageSources={mask:await e,overlay:await d};this._disposeResources();this.events.emit("request-render")})},this._imageLoadTask.task.promise.then(()=>this.notifyChange("updating"),()=>this.notifyChange("updating")))}}_updateResources(a,b){this.enabled?null!=this._resources?this._passParameters.textures.size!==b&&(a=this._createTextureResources(a,b),null==a?this._disposeResources():
(this._disposeTextureResources(this._passParameters.textures),this._passParameters.textures=a)):(b=this._createTextureResources(a,b),null!=b&&(this._resources={program:this._createProgram(a),vao:E.createQuadVAO(a,D.Pos2,this.attributeLocations,0,1),pipelineState:q.makePipelineState({blending:q.simpleBlendingParams(h.BlendFactor.ONE,h.BlendFactor.ONE_MINUS_SRC_ALPHA),depthTest:null,depthWrite:null,colorWrite:q.defaultColorWriteParams})},this._passParameters.textures=b)):this._disposeResources()}_disposeResources(){null!=
this._resources&&(this._disposeTextureResources(this._passParameters.textures),this._resources.program.dispose(),this._resources.vao.dispose(),this._resources=null)}_disposeTextureResources(a){a.mask.dispose();a.overlay.dispose();a.input.dispose()}_createTextureResources(a,b){if(null==this._imageSources)return null;this._imageSources.overlay.width=b;this._imageSources.overlay.height=b;this._imageSources.mask.width=b;this._imageSources.mask.height=b;const c=new I.TextureDescriptor;c.internalFormat=
h.PixelFormat.RGBA;c.wrapMode=h.TextureWrapMode.CLAMP_TO_EDGE;c.flipped=!0;c.preMultiplyAlpha=!B.isSVG(this._imageSources.overlay.src)||!a.driverTest.svgPremultipliesAlpha.result;const d=new r.Texture(a,c,this._imageSources.overlay);c.pixelFormat=c.internalFormat=h.PixelFormat.ALPHA;c.preMultiplyAlpha=!1;const f=new r.Texture(a,c,this._imageSources.mask);c.pixelFormat=c.internalFormat=h.PixelFormat.RGBA;c.flipped=!1;return{input:new r.Texture(a,c),mask:f,overlay:d,size:b}}_createProgram(a){return new F.Program(a,
w.build(),this.attributeLocations)}};m.__decorate([p.property()],g.MagnifierHelper.prototype,"_imageSources",void 0);m.__decorate([p.property()],g.MagnifierHelper.prototype,"_imageLoadTask",void 0);m.__decorate([p.property({readOnly:!0})],g.MagnifierHelper.prototype,"updating",null);g.MagnifierHelper=m.__decorate([C.subclass("esri/views/3d/webgl-engine/lib/MagnifierHelper")],g.MagnifierHelper);Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});