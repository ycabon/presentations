// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../Color ../../../../core/fontUtils ../../../../core/Logger ../../../../core/screenUtils ../../../../core/libs/gl-matrix-2/factories/vec4f64".split(" "),function(k,f,l,p,m,g){class n{constructor(a){this.definition=a;this.key=JSON.stringify(a);this.haloSize=Math.round(a.halo.size);this.textStyle=this._colorToRGBA(a.color);this.haloStyle=this._colorToRGB(a.halo.color);this.backgroundStyle=0!==a.background.color[3]?this._colorToRGBA(a.background.color):null}fontString(a){const b=
this.definition.font;return`${b.style} ${b.weight} ${a}px ${b.family}, ${"sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji"}`}setFontProperties(a,b){a.font=this.fontString(b);a.textAlign="left";a.textBaseline="alphabetic"}_colorToRGB(a){return`rgb(${a.slice(0,3).map(b=>Math.floor(255*b)).toString()})`}_colorToRGBA(a){return`rgba(${a.slice(0,3).map(b=>Math.floor(255*b)).toString()},${a[3]})`}static async fromSymbol(a,b){var e=f.toUnitRGBA(a?.material?.color)??g.ZEROS,
c=null!=a.size?m.pt2px(a.size):12;const q=a.lineHeight,r=null!=a.background?f.toUnitRGBA(a.background.color):g.ZEROS,t={family:a.font?.family??"sans-serif",decoration:a.font?.decoration??"none",weight:a.font?.weight??"normal",style:a.font?.style??"normal"};var d=a.halo;d=null!=d?.color&&0<d.size?{size:m.pt2px(d.size),color:f.toUnitRGBA(d.color)}:{size:0,color:g.ZEROS};b=new n({color:e,size:c,background:{color:r,padding:null!=a.background?[.65*c,.5*c]:[0,0],borderRadius:null!=a.background?.375*c:0},
lineSpacingFactor:q,font:t,halo:d,pixelRatio:b});if(a.font){e=!1;c=b.fontString(c);try{e=(await document.fonts.load(c)).some(h=>!l.isCachedFontFace(h))}catch(h){p.getLogger("esri.views.3d.webgl-engine.lib.TextRenderParameters").warnOnce(`Failed to preload font '${c}'. Some text symbology may be rendered using the default browser font.`)}if(!e&&!u.has(a.font.family))try{await l.loadFont(a.font)}catch(h){}}return b}}const u=new Set("Arial;Times New Roman;Courier New;serif;sans-serif;monospace;cursive;fantasy;system-ui;ui-serif;ui-sans-serif;ui-monospace;ui-rounded;math;emoji;fangsong".split(";"));
k.TextRenderParameters=n;Object.defineProperty(k,Symbol.toStringTag,{value:"Module"})});