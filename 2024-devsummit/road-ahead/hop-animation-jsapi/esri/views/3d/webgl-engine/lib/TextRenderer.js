// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports","../../../../core/mathUtils","../../support/debugFlags","./FontMetrics","./TextHelperCanvas"],function(m,v,p,w,q){class x{constructor(a,b,c,d){this.text=a;this._alignment=b;this._parameters=c;this._maxSize=d;this._textWidths=[];this._lineWidths=[];this._metricsCached=this._renderPixelRatio=null;this.key=`TextRenderer-${this._parameters.key}-${this._alignment}--${a}`;this._lines=a.replaceAll(" ","\u00a0").split(/\r?\n/)}get displayWidth(){return Math.ceil(this._displayWidth+2*this._horizontalPadding)}get displayHeight(){let a=
this._metrics.firstLineAscent;for(let b=0;b<this._lines.length-1;b++)a+=this._lineSpacing;a+=this._metrics.lastLineDescent;return Math.ceil(a+2*this._haloSize+2*this._verticalPadding)}get renderedWidth(){return this._toRoundedRenderUnit(this.displayWidth)}get renderedHeight(){return this._toRoundedRenderUnit(this.displayHeight)}get firstRenderedBaselinePosition(){return this._toRenderUnit(this._firstLineYOffset+this._metrics.firstLineAscent)}get _firstLineYOffset(){return this._verticalPadding+this._haloSize}get _metrics(){if(null==
this._metricsCached){const b=q.getTextHelperCanvas(r,512,512).getContext("2d");this._parameters.setFontProperties(b,this._fontSize);let c=2*this._haloSize;var a=this._parameters.definition.font;if("italic"===a.style||"oblique"===a.style||"bold"===a.weight||"bolder"===a.weight)c+=.3*b.measureText("A").width;this._textWidths.length=0;let d=this._lineWidths.length=0,e,f,g=0,k=0;this._lines.forEach((h,l)=>{h=b.measureText(h);const n=h.width,t=n+c;this._textWidths.push(n);this._lineWidths.push(t);d=Math.max(d,
t);g=Math.max(g,h.actualBoundingBoxAscent);k=Math.max(k,h.actualBoundingBoxDescent);0===l&&(e=h);l===this._lines.length-1&&(f=h)});a=w.getFontMetrics(this._parameters);g=Math.max(g,a.maxAscent);k=Math.max(k,a.maxDescent);this._metricsCached=new y(e.actualBoundingBoxAscent,"underline"===this._parameters.definition.font.decoration?k:f.actualBoundingBoxDescent,g,k,d)}return this._metricsCached}get _lineSpacing(){return(this._midLineHeight+this._linePadding)*this._parameters.definition.lineSpacingFactor}get _midLineHeight(){return this._metrics.midLineHeight}get _linePadding(){return.2*
this._midLineHeight}get _midLineAscent(){return this._metrics.maxLineAscent}get _renderedFontSize(){return this._toRenderUnit(this._fontSize)}get _fontSize(){return this._parameters.definition.size}get _renderedHaloSize(){return this._toRenderUnit(this._haloSize)}get _haloSize(){return this._parameters.haloSize}get _horizontalPadding(){return this._hasBackground?this._parameters.definition.background.padding[0]:0}get _verticalPadding(){return Math.max(this._hasBackground?this._parameters.definition.background.padding[1]:
0,1)}get _hasBackground(){return!!this._parameters.backgroundStyle}get renderPixelRatio(){null==this._renderPixelRatio&&(this._renderPixelRatio=Math.min(this._parameters.definition.pixelRatio,Math.min(this._maxSize[0]/this.displayWidth,this._maxSize[1]/this.displayHeight)));return this._renderPixelRatio}_getLineXOffset(a){switch(this._alignment){case m.TextRenderAlignment.Left:return this._horizontalPadding;case m.TextRenderAlignment.Center:return(this.displayWidth-this._lineWidths[a])/2;case m.TextRenderAlignment.Right:return this.displayWidth-
this._horizontalPadding-this._lineWidths[a]}}render(a,b,c){a.save();b/=this.renderPixelRatio;c/=this.renderPixelRatio;const d=b,e=c;var f=this._haloSize;const g=this._firstLineYOffset+this._metrics.firstLineAscent;b+=f;c+=g;const k=0<this._haloSize;k&&this._renderHalo(a,d,e,f,g);this._parameters.setFontProperties(a,this._renderedFontSize);for(f=0;f<this._lines.length;++f){const h=this._lines[f],l=this._getLineXOffset(f);k&&(a.globalCompositeOperation="destination-out",a.fillStyle="rgb(0, 0, 0)",this._fillText(a,
h,b+l,c),this._renderLineDecoration(a,b+l,c,this._textWidths[f]));a.globalCompositeOperation="source-over";a.fillStyle=this._parameters.textStyle;this._fillText(a,h,b+this._getLineXOffset(f),c);this._renderLineDecoration(a,b+l,c,this._textWidths[f]);c+=this._lineSpacing}if(p.debugFlags.TEXT_SHOW_BASELINE)for(a.strokeStyle="rgb(255, 0, 255, 0.5)",a.setLineDash([2,2]),a.lineWidth=1,b=e+g,c=0;c<this._lines.length;++c)this._drawLine(a,[d,b],[d+this.displayWidth,b]),b+=this._lineSpacing;p.debugFlags.TEXT_SHOW_BORDER&&
(a.strokeStyle="rgb(255, 0, 255, 0.5)",a.setLineDash([]),a.lineWidth=1,this._drawBox(a,[d,e],[this.displayWidth,this.displayHeight]));this._hasBackground&&(this._roundedRect(a,d,e,this._parameters.definition.background.borderRadius*this.renderPixelRatio),a.globalCompositeOperation="destination-over",a.fillStyle=this._parameters.backgroundStyle,a.fill());a.restore()}_renderLineDecoration(a,b,c,d,e=!1){if("none"!==this._parameters.definition.font.decoration&&0!==d){var f=Math.max(this._parameters.definition.size/
16,1);switch(this._parameters.definition.font.decoration){case "underline":c+=2*f;break;case "line-through":c-=.33*this._midLineAscent}var g=e?this._haloSize:0;a.strokeStyle=e?this._parameters.haloStyle:this._parameters.textStyle;a.lineWidth=this._toRenderUnit(f+2*g);a.beginPath();a.moveTo(this._toRenderUnit(b-g),this._toRenderUnit(c));a.lineTo(this._toRenderUnit(b+d+g),this._toRenderUnit(c));a.stroke()}}_roundedRect(a,b,c,d){b=this._toRenderUnit(b);c=this._toRenderUnit(c);const e=this.renderedWidth,
f=this.renderedHeight;0===d?a.rect(b,c,e,f):(d=v.clamp(d,0,Math.floor(f/2)),a.beginPath(),a.moveTo(b,c+d),a.arcTo(b,c,b+d,c,d),a.lineTo(b+e-d,c),a.arcTo(b+e,c,b+e,c+d,d),a.lineTo(b+e,c+f-d),a.arcTo(b+e,c+f,b+e-d,c+f,d),a.lineTo(b+d,c+f),a.arcTo(b,c+f,b,c+f-d,d),a.closePath())}_renderHalo(a,b,c,d,e){const f=this.renderedWidth,g=this.renderedHeight,k=q.getTextHelperCanvas(r,Math.max(f,512),Math.max(g,512)),h=k.getContext("2d");h.clearRect(0,0,f,g);this._parameters.setFontProperties(h,this._renderedFontSize);
h.fillStyle=this._parameters.haloStyle;h.strokeStyle=this._parameters.haloStyle;var l=3>this._renderedHaloSize;h.lineJoin=l?"miter":"round";l?this._renderHaloEmulated(h,d,e):this._renderHaloNative(h,d,e);for(l=0;l<this._lines.length;++l){const n=this._getLineXOffset(l);this._renderLineDecoration(h,d+n,e,this._textWidths[l],!0);e+=this._lineSpacing}a.globalAlpha=this._parameters.definition.halo.color[3];a.drawImage(k,0,0,f,g,this._toRenderUnit(b),this._toRenderUnit(c),f,g);a.globalAlpha=1}_renderHaloEmulated(a,
b,c){for(let d=0;d<this._lines.length;++d){const e=this._lines[d],f=this._getLineXOffset(d);for(const [g,k]of u)this._fillText(a,e,b+f+this._haloSize*g,c+this._haloSize*k);c+=this._lineSpacing}}_renderHaloNative(a,b,c){const d=2*this._haloSize;for(let e=0;e<this._lines.length;++e){const f=this._lines[e],g=this._getLineXOffset(e);for(let k=0;5>k;k++)a.lineWidth=this._toRenderUnit((.6+.1*k)*d),this._strokeText(a,f,b+g,c);c+=this._lineSpacing}}get _displayWidth(){return this._metrics.displayWidth}_toRenderUnit(a){return a*
this.renderPixelRatio}_toRoundedRenderUnit(a){return Math.round(a*this.renderPixelRatio)}_fillText(a,b,c,d){a.fillText(b,this._toRenderUnit(c),this._toRenderUnit(d))}_strokeText(a,b,c,d){a.strokeText(b,this._toRenderUnit(c),this._toRenderUnit(d))}_drawLine(a,b,c){a.beginPath();a.moveTo(this._toRoundedRenderUnit(b[0])+.5,this._toRoundedRenderUnit(b[1])+.5);a.lineTo(this._toRoundedRenderUnit(c[0])+.5,this._toRoundedRenderUnit(c[1])+.5);a.stroke()}_drawBox(a,b,c){var d=this._toRenderUnit(b[0]);b=this._toRenderUnit(b[1]);
var e=this._toRenderUnit(c[0]);const f=this._toRenderUnit(c[1]);c=Math.floor(d)+.5;d=Math.ceil(d+e)-.5;e=Math.floor(b)+.5;b=Math.ceil(b+f)-.5;a.beginPath();a.moveTo(c,e);a.lineTo(d,e);a.lineTo(d,b);a.lineTo(c,b);a.lineTo(c,e);a.stroke()}}const u=[];for(let a=0;360>a;a+=22.5)u.push([Math.cos(Math.PI*a/180),Math.sin(Math.PI*a/180)]);m.TextRenderAlignment=void 0;(function(a){a[a.Left=0]="Left";a[a.Center=1]="Center";a[a.Right=2]="Right"})(m.TextRenderAlignment||(m.TextRenderAlignment={}));const r={canvas:null};
class y{get firstLineHeight(){return this.firstLineAscent+this.maxLineDescent}get midLineHeight(){return this.maxLineAscent+this.maxLineDescent}get lastLineHeight(){return this.maxLineAscent+this.lastLineDescent}constructor(a,b,c,d,e){this.firstLineAscent=a;this.lastLineDescent=b;this.maxLineAscent=c;this.maxLineDescent=d;this.displayWidth=e}}m.TextRenderer=x;m.textVerticalPaddingPx=1;Object.defineProperty(m,Symbol.toStringTag,{value:"Module"})});