// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define(["exports","../../../../../core/arrayUtils","../../../../../core/mathUtils","../../../../../chunks/vec32","../../../../../core/libs/gl-matrix-2/factories/vec3f64"],function(z,P,E,h,n){function Q(a,l){const f=E.acosClamped(a.cosAngle),b=F.fwd,c=F.ortho;h.direction(b,a.position1,a.position0);a=0<h.dot(h.cross(c,a.faceNormal0,a.faceNormal1),b)?-1:1;return f*a>l}function R(a){const l=a.faces.length/3,f=a.faces;a=a.neighbors;var b=0;for(var c=0;c<l;c++){var e=a[3*c+1],k=a[3*c+2],g=f[3*c],p=f[3*
c+1],d=f[3*c+2];b+=-1===a[3*c]||g<p?1:0;b+=-1===e||p<d?1:0;b+=-1===k||d<g?1:0}b=new Int32Array(4*b);c=0;for(e=0;e<l;e++){k=a[3*e];g=a[3*e+1];p=a[3*e+2];d=f[3*e];const t=f[3*e+1],u=f[3*e+2];if(-1===k||d<t)b[c++]=d,b[c++]=t,b[c++]=e,b[c++]=k;if(-1===g||t<u)b[c++]=t,b[c++]=u,b[c++]=e,b[c++]=g;if(-1===p||u<d)b[c++]=u,b[c++]=d,b[c++]=e,b[c++]=p}return b}function S(a){const l=a.faces.length/3,f=a.vertices.position;a=a.faces;const b=G.v0,c=G.v1,e=G.v2,k=new Float32Array(3*l);for(let g=0;g<l;g++){const p=
a[3*g+1],d=a[3*g+2];f.getVec(a[3*g],b);f.getVec(p,c);f.getVec(d,e);h.subtract(c,c,b);h.subtract(e,e,b);h.cross(b,c,e);h.normalize(b,b);k[3*g]=b[0];k[3*g+1]=b[1];k[3*g+2]=b[2]}return k}z.EdgeType=void 0;(function(a){a[a.SOLID=0]="SOLID";a[a.SKETCH=1]="SKETCH"})(z.EdgeType||(z.EdgeType={}));const F={edge:{position0:n.create(),position1:n.create(),faceNormal0:n.create(),faceNormal1:n.create(),componentIndex:0,cosAngle:0},ortho:n.create(),fwd:n.create()},G={v0:n.create(),v1:n.create(),v2:n.create()},
T={anglePlanar:4,angleSignificantEdge:35};z.extractEdges=function(a,l,f,b=T){const c=a.vertices.position;var e=a.vertices.componentIndex,k=E.deg2rad(b.anglePlanar);b=E.deg2rad(b.angleSignificantEdge);const g=Math.cos(b),p=Math.cos(k),d=F.edge,t=d.position0,u=d.position1,w=d.faceNormal0,A=d.faceNormal1,q=S(a),v=R(a),B=v.length/4;a=l.allocate(B);b=0;const H=f.allocate(B);let I=0,J=0,K=0;const L=P.range(0,B),D=new Float32Array(B);D.forEach((x,r,C)=>{c.getVec(v[4*r],t);c.getVec(v[4*r+1],u);C[r]=h.distance(t,
u)});L.sort((x,r)=>D[r]-D[x]);const M=[],N=[];for(let x=0;x<B;x++){var m=L[x];const r=D[m],C=v[4*m],U=v[4*m+1],y=v[4*m+2];m=v[4*m+3];const O=-1===m;c.getVec(C,t);c.getVec(U,u);if(O)h.set(w,q[3*y],q[3*y+1],q[3*y+2]),h.copy(A,w),d.componentIndex=e.get(C),d.cosAngle=h.dot(w,A);else{h.set(w,q[3*y],q[3*y+1],q[3*y+2]);h.set(A,q[3*m],q[3*m+1],q[3*m+2]);d.componentIndex=e.get(C);d.cosAngle=h.dot(w,A);if(d.cosAngle>p)continue;-.9999>d.cosAngle&&h.copy(A,w)}J+=r;K++;O||d.cosAngle<g?(l.write(a,b++,d),M.push(r)):
Q(d,k)&&(f.write(H,I++,d),N.push(r))}e=new Float32Array(M.reverse());k=new Float32Array(N.reverse());return{regular:{instancesData:l.trim(a,b),lodInfo:{lengths:e}},silhouette:{instancesData:f.trim(H,I),lodInfo:{lengths:k}},averageEdgeLength:J/K}};Object.defineProperty(z,Symbol.toStringTag,{value:"Module"})});