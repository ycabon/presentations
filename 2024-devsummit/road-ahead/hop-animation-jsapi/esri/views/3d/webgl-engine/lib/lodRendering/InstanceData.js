// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../chunks/tslib.es6 ../../../../../core/Accessor ../../../../../core/arrayUtils ../../../../../core/Evented ../../../../../core/accessorSupport/decorators/property ../../../../../core/has ../../../../../core/Logger ../../../../../core/accessorSupport/decorators/subclass ../../../../../core/libs/gl-matrix-2/math/mat3 ../../../../../core/libs/gl-matrix-2/factories/mat3f64 ../../../../../core/libs/gl-matrix-2/math/mat4 ../../../../../core/libs/gl-matrix-2/factories/mat4f64 ../../../../../chunks/vec32 ../../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../../geometry/support/buffer/BufferView ../../../support/mathUtils ../../../support/buffer/InterleavedLayout ../Util ../VertexAttribute ./RenderInstanceData".split(" "),
function(e,m,x,y,z,n,H,I,A,p,B,C,t,D,E,g,F,G,u,d,v){e.StateFlags=void 0;(function(a){a[a.ALLOCATED=1]="ALLOCATED";a[a.DEFAULT_ACTIVE=2]="DEFAULT_ACTIVE";a[a.VISIBLE=4]="VISIBLE";a[a.HIGHLIGHT=8]="HIGHLIGHT";a[a.HIGHLIGHT_ACTIVE=16]="HIGHLIGHT_ACTIVE";a[a.REMOVE=32]="REMOVE";a[a.TRANSFORM_CHANGED=64]="TRANSFORM_CHANGED";a[a.ACTIVE=18]="ACTIVE"})(e.StateFlags||(e.StateFlags={}));class q{constructor(a){this.localTransform=a.getField(d.VertexAttribute.LOCALTRANSFORM,g.BufferViewMat4f64);this.globalTransform=
a.getField(d.VertexAttribute.GLOBALTRANSFORM,g.BufferViewMat4f64);this.modelOrigin=a.getField(d.VertexAttribute.MODELORIGIN,g.BufferViewVec3f64);this.model=a.getField(d.VertexAttribute.INSTANCEMODEL,g.BufferViewMat3f);this.modelNormal=a.getField(d.VertexAttribute.INSTANCEMODELNORMAL,g.BufferViewMat3f);this.modelScaleFactors=a.getField(d.VertexAttribute.MODELSCALEFACTORS,g.BufferViewVec2f);this.boundingSphere=a.getField(d.VertexAttribute.BOUNDINGSPHERE,g.BufferViewVec4f64);this.featureAttribute=a.getField(d.VertexAttribute.FEATUREATTRIBUTE,
g.BufferViewVec4f);this.color=a.getField(d.VertexAttribute.COLOR,g.BufferViewVec4u8);this.objectAndLayerIdColor=a.getField(d.VertexAttribute.OBJECTANDLAYERIDCOLOR,g.BufferViewVec4u8);this.state=a.getField(d.VertexAttribute.STATE,g.BufferViewUint8);this.lodLevel=a.getField(d.VertexAttribute.LODLEVEL,g.BufferViewUint8)}}e.InstanceData=class extends x{constructor(a,b){super(a);this.events=new z;this._next=this._size=this._capacity=0;a=G.newLayout().mat4f64(d.VertexAttribute.LOCALTRANSFORM).mat4f64(d.VertexAttribute.GLOBALTRANSFORM).vec4f64(d.VertexAttribute.BOUNDINGSPHERE).vec3f64(d.VertexAttribute.MODELORIGIN).mat3f(d.VertexAttribute.INSTANCEMODEL).mat3f(d.VertexAttribute.INSTANCEMODELNORMAL).vec2f(d.VertexAttribute.MODELSCALEFACTORS);
b.includes(d.VertexAttribute.FEATUREATTRIBUTE)&&(a=a.vec4f(d.VertexAttribute.FEATUREATTRIBUTE));b.includes(d.VertexAttribute.COLOR)&&(a=a.vec4u8(d.VertexAttribute.COLOR));b.includes(d.VertexAttribute.OBJECTANDLAYERIDCOLOR)&&(a=a.vec4u8(d.VertexAttribute.OBJECTANDLAYERIDCOLOR));this._layout=a=a.u8(d.VertexAttribute.STATE).u8(d.VertexAttribute.LODLEVEL);this._capacity=v.initialCapacity;this._buffer=this._layout.createBuffer(this._capacity);this._view=new q(this._buffer)}get capacity(){return this._capacity}get size(){return this._size}get view(){return this._view}addInstance(){this._size+
1>this._capacity&&this._grow();const a=this._findSlot();this._view.state.set(a,e.StateFlags.ALLOCATED);this._size++;this.events.emit("instances-changed");return a}removeInstance(a){const b=this._view.state;u.assert(0<=a&&a<this._capacity&&0!==(b.get(a)&e.StateFlags.ALLOCATED),"invalid instance handle");this._getStateFlag(a,e.StateFlags.ACTIVE)?this._setStateFlags(a,e.StateFlags.REMOVE):this.freeInstance(a);this.events.emit("instances-changed")}freeInstance(a){const b=this._view.state;u.assert(0<=
a&&a<this._capacity&&0!==(b.get(a)&e.StateFlags.ALLOCATED),"invalid instance handle");b.set(a,0);this._size--}setLocalTransform(a,b,c=!0){this._view.localTransform.setMat(a,b);c&&this.updateModelTransform(a)}getLocalTransform(a,b){this._view.localTransform.getMat(a,b)}setGlobalTransform(a,b,c=!0){this._view.globalTransform.setMat(a,b);c&&this.updateModelTransform(a)}getGlobalTransform(a,b){this._view.globalTransform.getMat(a,b)}updateModelTransform(a){const b=this._view;var c=f;const k=h;b.localTransform.getMat(a,
w);b.globalTransform.getMat(a,r);const l=C.multiply(r,r,w);D.set(c,l[12],l[13],l[14]);b.modelOrigin.setVec(a,c);p.fromMat4(k,l);b.model.setMat(a,k);c=F.scaleFromMatrix(f,l);c.sort();b.modelScaleFactors.set(a,0,c[1]);b.modelScaleFactors.set(a,1,c[2]);p.invert(k,k);p.transpose(k,k);b.modelNormal.setMat(a,k);this._setStateFlags(a,e.StateFlags.TRANSFORM_CHANGED);this.events.emit("instance-transform-changed",{index:a})}getModelTransform(a,b){const c=this._view;c.model.getMat(a,h);c.modelOrigin.getVec(a,
f);b[0]=h[0];b[1]=h[1];b[2]=h[2];b[3]=0;b[4]=h[3];b[5]=h[4];b[6]=h[5];b[7]=0;b[8]=h[6];b[9]=h[7];b[10]=h[8];b[11]=0;b[12]=f[0];b[13]=f[1];b[14]=f[2];b[15]=1}applyShaderTransformation(a,b){null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,a,b)}getCombinedModelTransform(a,b){this.getModelTransform(a,b);null!=this.shaderTransformation&&this.shaderTransformation.applyTransform(this,a,b);return b}getCombinedLocalTransform(a,b){this._view.localTransform.getMat(a,b);null!=this.shaderTransformation&&
this.shaderTransformation.applyTransform(this,a,b)}getCombinedMaxScaleFactor(a){let b=this._view.modelScaleFactors.get(a,1);null!=this.shaderTransformation&&(this.shaderTransformation.scaleFactor(f,this,a),b*=Math.max(f[0],f[1],f[2]));return b}getCombinedMedianScaleFactor(a){let b=this._view.modelScaleFactors.get(a,0);if(null!=this.shaderTransformation){this.shaderTransformation.scaleFactor(f,this,a);a=f[0];var c=f[1];b*=Math.max(Math.min(a,c),Math.min(Math.max(a,c),f[2]))}return b}getModel(a,b){this._view.model.getMat(a,
b)}setFeatureAttribute(a,b){this._view.featureAttribute.setVec(a,b)}getFeatureAttribute(a,b){this._view.featureAttribute.getVec(a,b)}setColor(a,b){this._view.color.setVec(a,b)}setObjectAndLayerIdColor(a,b){this._view.objectAndLayerIdColor.setVec(a,b)}setVisible(a,b){b!==this.getVisible(a)&&(this._setStateFlag(a,e.StateFlags.VISIBLE,b),this.events.emit("instance-visibility-changed",{index:a}))}getVisible(a){return this._getStateFlag(a,e.StateFlags.VISIBLE)}setHighlight(a,b){b!==this.getHighlight(a)&&
(this._setStateFlag(a,e.StateFlags.HIGHLIGHT,b),this.events.emit("instance-highlight-changed"))}getHighlight(a){return this._getStateFlag(a,e.StateFlags.HIGHLIGHT)}getState(a){return this._view.state.get(a)}getLodLevel(a){return this._view.lodLevel.get(a)}countFlags(a){let b=0;for(let c=0;c<this._capacity;++c)this.getState(c)&a&&++b;return b}_setStateFlags(a,b){const c=this._view.state;b|=c.get(a);c.set(a,b)}_clearStateFlags(a,b){const c=this._view.state;b=c.get(a)&~b;c.set(a,b)}_setStateFlag(a,b,
c){c?this._setStateFlags(a,b):this._clearStateFlags(a,b)}_getStateFlag(a,b){return!!(this._view.state.get(a)&b)}_grow(){this._capacity=Math.max(v.initialCapacity,Math.floor(this._capacity*y.reallocGrowthFactor));this._buffer=this._layout.createBuffer(this._capacity).copyFrom(this._buffer);this._view=new q(this._buffer)}_findSlot(){const a=this._view.state;let b=this._next;for(;a.get(b)&e.StateFlags.ALLOCATED;)b=b+1===this._capacity?0:b+1;this._next=b+1===this._capacity?0:b+1;return b}};m.__decorate([n.property({constructOnly:!0})],
e.InstanceData.prototype,"shaderTransformation",void 0);m.__decorate([n.property()],e.InstanceData.prototype,"_size",void 0);m.__decorate([n.property({readOnly:!0})],e.InstanceData.prototype,"size",null);e.InstanceData=m.__decorate([A.subclass("esri.views.3d.webgl-engine.lib.lodRendering.InstanceData")],e.InstanceData);const f=E.create(),h=B.create(),w=t.create(),r=t.create();e.InstanceDataView=q;Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});