// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../../core/arrayUtils ../../../../../geometry/support/buffer/BufferView ../Util ../VertexAttribute ./BackedBufferObject".split(" "),function(g,h,e,d,f,m){class k{constructor(a){this.modelOriginHi=a.getField(f.VertexAttribute.INSTANCEMODELORIGINHI,e.BufferViewVec3f);this.modelOriginLo=a.getField(f.VertexAttribute.INSTANCEMODELORIGINLO,e.BufferViewVec3f);this.model=a.getField(f.VertexAttribute.INSTANCEMODEL,e.BufferViewMat3f);this.modelNormal=a.getField(f.VertexAttribute.INSTANCEMODELNORMAL,
e.BufferViewMat3f);this.featureAttribute=a.getField(f.VertexAttribute.INSTANCEFEATUREATTRIBUTE,e.BufferViewVec4f);this.color=a.getField(f.VertexAttribute.INSTANCECOLOR,e.BufferViewVec4u8);this.objectAndLayerIdColor=a.getField(f.VertexAttribute.INSTANCEOBJECTANDLAYERIDCOLOR,e.BufferViewVec4u8)}}class n{constructor(a,b){this._rctx=a;this._instanceBufferLayout=b;this._tailIndex=this._headIndex=0;this._firstIndex=null;this._captureFirstIndex=!0;this._updating=!1;this._prevHeadIndex=0;this._resized=!1;
this._capacity=1}destroy(){this._buffer&&this._buffer.destroy()}get buffer(){return this._buffer.buffer}get view(){return this._view}get capacity(){return this._capacity}get size(){const a=this._headIndex,b=this._tailIndex;return a>=b?a-b:a+this._capacity-b}get isEmpty(){return this._headIndex===this._tailIndex}get isFull(){return this._tailIndex===(this._headIndex+1)%this._capacity}get headIndex(){return this._headIndex}get tailIndex(){return this._tailIndex}get firstIndex(){return this._firstIndex}get usedMemory(){return this._buffer?.usedMemory??
0}reset(){this._tailIndex=this._headIndex=0;this._firstIndex=null}startUpdateCycle(){this._captureFirstIndex=!0}beginUpdate(){d.assert(!this._updating,"already updating");this._updating=!0;this._prevHeadIndex=this._headIndex}endUpdate(){d.assert(this._updating,"not updating");this.size<h.reallocShrinkThreshold*this.capacity&&this._shrink();this._resized?(this._buffer.transferAll(),this._resized=!1):this._transferRange(this._prevHeadIndex,this._headIndex);this._updating=!1}allocateHead(){d.assert(this._updating,
"not updating");this.isFull&&this._grow();const a=this.headIndex;this._captureFirstIndex&&(this._firstIndex=a,this._captureFirstIndex=!1);this._incrementHead();d.assert(this._headIndex!==this._tailIndex,"invalid pointers");return a}freeTail(){d.assert(this._updating,"not updating");d.assert(0<this.size,"invalid size");const a=this._tailIndex===this._firstIndex;this._incrementTail();a&&(this._firstIndex=this._tailIndex)}_grow(){this._resize(Math.max(64,Math.floor(this._capacity*h.reallocGrowthFactor)))}_shrink(){this._resize(Math.max(64,
Math.floor(this._capacity*h.reallocShrinkFactor)))}_resize(a){d.assert(this._updating,"not updating");if(a!==this._capacity){var b=new m(this._rctx,this._instanceBufferLayout.stride,a);if(this._buffer){this._firstIndex&&(this._firstIndex=(this._firstIndex+this._capacity-this._tailIndex)%this._capacity);const c=this.size,l=this._compactInstances(b);d.assert(l===c,"invalid compaction");this._buffer.destroy();this._tailIndex=0;this._headIndex=l;this._prevHeadIndex=0}this._resized=!0;this._capacity=a;
this._buffer=b;this._view=new k(this._instanceBufferLayout.createView(this._buffer.array))}}_compactInstances(a){const b=this._headIndex,c=this._tailIndex;return c<b?(this._buffer.copyRange(c,b,a),b-c):c>b?(this._buffer.copyRange(c,this._capacity,a),0<b&&this._buffer.copyRange(0,b,a,this._capacity-c),b+(this._capacity-c)):0}_incrementHead(a=1){this._headIndex=(this._headIndex+a)%this._capacity}_incrementTail(a=1){this._tailIndex=(this._tailIndex+a)%this._capacity}_transferRange(a,b){a<b?this._buffer.transferRange(a,
b):a>b&&(0<b&&this._buffer.transferRange(0,b),this._buffer.transferRange(a,this._capacity))}}g.RenderInstanceData=n;g.RenderInstanceDataView=k;g.initialCapacity=64;Object.defineProperty(g,Symbol.toStringTag,{value:"Module"})});