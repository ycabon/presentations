// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../core/has ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../ViewingMode ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutput ../core/shaderLibrary/attributes/NormalAttribute.glsl ../core/shaderLibrary/shading/Normals.glsl ../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl ../lib/basicInterfaces ../lib/GLTextureMaterial ../lib/Material ../lib/OrderIndependentTransparency ../lib/RenderSlot ../lib/VertexAttribute ../lib/verticalOffsetUtils ./DefaultBufferWriter ./internal/MaterialUtil ../shaders/DefaultMaterialTechnique ../shaders/DefaultMaterialTechniqueConfiguration ../shaders/RealisticTreeTechnique".split(" "),
function(p,F,d,h,w,G,c,H,q,r,I,J,K,L,t,g,M,N,x,y,O,P){function Q(a){const b=G.newLayout().vec3f(g.VertexAttribute.POSITION);a.normalType===H.NormalType.Compressed?b.vec2i16(g.VertexAttribute.NORMALCOMPRESSED,{glNormalized:!0}):b.vec3f(g.VertexAttribute.NORMAL);a.hasVertexTangents&&b.vec4f(g.VertexAttribute.TANGENT);(a.textureId||a.normalTextureId||a.metallicRoughnessTextureId||a.emissiveTextureId||a.occlusionTextureId)&&b.vec2f(g.VertexAttribute.UV0);a.hasVertexColors&&b.vec4u8(g.VertexAttribute.COLOR);
a.hasSymbolColors&&b.vec4u8(g.VertexAttribute.SYMBOLCOLOR);F("enable-feature:objectAndLayerId-rendering")&&b.vec4u8(g.VertexAttribute.OBJECTANDLAYERIDCOLOR);return b}class R extends K.Material{constructor(a){super(a,S);this.supportsEdges=!0;this.produces=new Map([[t.RenderSlot.OPAQUE_MATERIAL,b=>(c.is3DGeometryOutput(b)||c.isShadowRelatedOutput(b))&&!this.parameters.transparent],[t.RenderSlot.TRANSPARENT_MATERIAL,b=>(c.is3DGeometryOutput(b)||c.isShadowRelatedOutput(b))&&this.parameters.transparent&&
this.parameters.writeDepth],[t.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,b=>(c.is3DGeometryOutput(b)||c.isShadowRelatedOutput(b))&&this.parameters.transparent&&!this.parameters.writeDepth]]);this._configuration=new O.DefaultMaterialTechniqueConfiguration;this._vertexBufferLayout=Q(this.parameters)}isVisibleForOutput(a){return a===c.ShaderOutput.Shadow||a===c.ShaderOutput.ShadowExcludeHighlight||a===c.ShaderOutput.ShadowHighlight?this.parameters.castShadows:!0}isVisible(){var a=this.parameters;
if(!super.isVisible()||0===a.layerOpacity)return!1;const {hasInstancedColor:b,hasVertexColors:e,hasSymbolColors:l,vvColor:m}=a,k="replace"===a.colorMixMode,f=0<a.opacity;a=a.externalColor&&0<a.externalColor[3];const n=b||m||l;return e&&n?k||f:e?k?a:f:n?k||f:k?a:f}getConfiguration(a,b){this._configuration.output=a;this._configuration.hasNormalTexture=!!this.parameters.normalTextureId;this._configuration.hasColorTexture=!!this.parameters.textureId;this._configuration.hasVertexTangents=this.parameters.hasVertexTangents;
this._configuration.instanced=this.parameters.isInstanced;this._configuration.instancedDoublePrecision=this.parameters.instancedDoublePrecision;this._configuration.vvSize=!!this.parameters.vvSize;this._configuration.hasVerticalOffset=null!=this.parameters.verticalOffset;this._configuration.hasScreenSizePerspective=null!=this.parameters.screenSizePerspective;this._configuration.hasSlicePlane=this.parameters.hasSlicePlane;this._configuration.hasSliceHighlight=this.parameters.hasSliceHighlight;this._configuration.alphaDiscardMode=
this.parameters.textureAlphaMode;this._configuration.normalType=this.parameters.normalType;this._configuration.transparent=this.parameters.transparent;this._configuration.writeDepth=this.parameters.writeDepth;null!=this.parameters.customDepthTest&&(this._configuration.customDepthTest=this.parameters.customDepthTest);this._configuration.hasOccludees=this.parameters.hasOccludees;this._configuration.cullFace=this.parameters.hasSlicePlane?I.CullFaceOptions.None:this.parameters.cullFace;this._configuration.multipassEnabled=
b.multipassEnabled;this._configuration.cullAboveGround=b.multipassTerrain.cullAboveGround;this._configuration.hasModelTransformation=null!=this.parameters.modelTransformation;if(a===c.ShaderOutput.Color||a===c.ShaderOutput.Alpha)this._configuration.hasVertexColors=this.parameters.hasVertexColors,this._configuration.hasSymbolColors=this.parameters.hasSymbolColors,this._configuration.doubleSidedMode=this.parameters.treeRendering?q.NormalsDoubleSidedMode.WindingOrder:this.parameters.doubleSided&&"normal"===
this.parameters.doubleSidedType?q.NormalsDoubleSidedMode.View:this.parameters.doubleSided&&"winding-order"===this.parameters.doubleSidedType?q.NormalsDoubleSidedMode.WindingOrder:q.NormalsDoubleSidedMode.None,this._configuration.instancedColor=this.parameters.hasInstancedColor,this._configuration.receiveShadows=this.parameters.receiveShadows&&this.parameters.shadowMappingEnabled,this._configuration.receiveAmbientOcclusion=null!=b.ssao,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.textureAlphaPremultiplied=
!!this.parameters.textureAlphaPremultiplied,this._configuration.pbrMode=this.parameters.usePBR?this.parameters.isSchematic?r.PBRMode.Schematic:r.PBRMode.Normal:r.PBRMode.Disabled,this._configuration.hasMetallicRoughnessTexture=!!this.parameters.metallicRoughnessTextureId,this._configuration.hasEmissionTexture=!!this.parameters.emissiveTextureId,this._configuration.hasOcclusionTexture=!!this.parameters.occlusionTextureId,this._configuration.offsetBackfaces=!(!this.parameters.transparent||!this.parameters.offsetTransparentBackfaces),
this._configuration.transparencyPassType=b.transparencyPassType,this._configuration.enableOffset=b.camera.relativeElevation<L.OITPolygonOffsetLimit,this._configuration.snowCover=this.hasSnowCover(b),this._configuration.hasColorTextureTransform=!!this.parameters.colorTextureTransformMatrix,this._configuration.hasNormalTextureTransform=!!this.parameters.normalTextureTransformMatrix,this._configuration.hasEmissionTextureTransform=!!this.parameters.emissiveTextureTransformMatrix,this._configuration.hasOcclusionTextureTransform=
!!this.parameters.occlusionTextureTransformMatrix,this._configuration.hasMetallicRoughnessTextureTransform=!!this.parameters.metallicRoughnessTextureTransformMatrix;return this._configuration}hasSnowCover(a){return null!=a.weather&&a.weatherVisible&&"snowy"===a.weather.type&&"enabled"===a.weather.snowCover}intersect(a,b,e,l,m,k){if(null!=this.parameters.verticalOffset){const n=e.camera;d.set(u,b[12],b[13],b[14]);b=null;switch(e.viewingMode){case w.ViewingMode.Global:b=d.normalize(z,u);break;case w.ViewingMode.Local:b=
d.copy(z,T)}let A=0;var f=d.subtract(U,u,n.eye);const B=d.length(f);f=d.scale(f,f,1/B);let C=null;this.parameters.screenSizePerspective&&(C=d.dot(b,f));A+=x.verticalOffsetAtDistance(n,B,this.parameters.verticalOffset,C??0,this.parameters.screenSizePerspective);d.scale(b,b,A);d.transformMat3(v,b,e.transform.inverseRotation);l=d.subtract(V,l,v);m=d.subtract(W,m,v)}x.intersectTriangleGeometry(a,e,l,m,M.getVerticalOffsetObject3D(e.verticalOffset),k)}createGLMaterial(a){return new D(a)}createBufferWriter(){return new N.DefaultBufferWriter(this._vertexBufferLayout)}}
class D extends J.GLTextureMaterial{constructor(a){super({...a,...a.material.parameters})}_updateShadowState(a){a.shadowMap.enabled!==this._material.parameters.shadowMappingEnabled&&this._material.setParameters({shadowMappingEnabled:a.shadowMap.enabled})}_updateOccludeeState(a){a.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:a.hasOccludees})}beginSlot(a){if(this._output===c.ShaderOutput.Color||this._output===c.ShaderOutput.Alpha)this._updateShadowState(a),
this._updateOccludeeState(a);const b=this._material.parameters;this.updateTexture(b.textureId);const e=a.camera.viewInverseTransposeMatrix;d.set(b.origin,e[3],e[7],e[11]);this._material.setParameters(this.textureBindParameters);return this.ensureTechnique(b.treeRendering?P.RealisticTreeTechnique:y.DefaultMaterialTechnique,a)}}class E extends y.DefaultMaterialPassParameters{constructor(){super(...arguments);this.hasVertexTangents=this.treeRendering=this.initTextureTransparent=!1}}const S=new E,V=h.create(),
W=h.create(),T=h.fromValues(0,0,1),z=h.create(),v=h.create(),u=h.create(),U=h.create();p.DefaultGLMaterial=D;p.DefaultMaterial=R;p.DefaultMaterialParameters=E;Object.defineProperty(p,Symbol.toStringTag,{value:"Module"})});