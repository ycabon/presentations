// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/vec32 ../../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../../core/libs/gl-matrix-2/factories/vec4f64 ../../support/buffer/InterleavedLayout ../core/shaderLibrary/ShaderOutput ../lib/GLMaterial ../lib/Material ../lib/RenderSlot ../lib/VertexAttribute ../shaders/MeasurementArrowTechnique".split(" "),function(y,c,m,z,J,q,K,C,D,f,A){class L extends C.Material{constructor(a){super(a,new E);this._vertexAttributeLocations=A.MeasurementArrowAttributeLocations;this.produces=
new Map([[D.RenderSlot.OPAQUE_MATERIAL,b=>!this._transparent&&(b===q.ShaderOutput.Color||b===q.ShaderOutput.Alpha)],[D.RenderSlot.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,b=>this._transparent&&(b===q.ShaderOutput.Color||b===q.ShaderOutput.Alpha)]]);this._configuration=new A.MeasurementArrowTechniqueConfiguration}getConfiguration(a,b){this._configuration.polygonOffsetEnabled=this.parameters.polygonOffset;this._configuration.transparent=this._transparent;this._configuration.transparencyPassType=b.transparencyPassType;
return this._configuration}intersect(){}createGLMaterial(a){return new M(a)}createBufferWriter(){return new N}get _transparent(){const {parameters:a}=this;return 1>a.outlineColor[3]||1>a.stripeEvenColor[3]||1>a.stripeOddColor[3]}}class M extends K{beginSlot(a){return this.ensureTechnique(A.MeasurementArrowTechnique,a)}}class E extends C.MaterialParameters{constructor(){super(...arguments);this.width=32;this.outlineSize=.2;this.outlineColor=z.fromValues(1,.5,0,1);this.stripeEvenColor=z.fromValues(1,
1,1,1);this.stripeOddColor=z.fromValues(1,.5,0,1);this.stripeLength=1;this.polygonOffset=!1}}const O=J.newLayout().vec3f(f.VertexAttribute.POSITION).vec3f(f.VertexAttribute.NORMAL).vec2f(f.VertexAttribute.UV0).f32(f.VertexAttribute.LENGTH),g=m.create(),n=m.create(),r=m.create(),h=m.create(),t=m.create();class N{constructor(){this.vertexBufferLayout=O}elementCount(a){return 2*(a.attributes.get(f.VertexAttribute.POSITION).indices.length/2+1)}write(a,b,e,u,F){const {data:k,indices:G}=e.attributes.get(f.VertexAttribute.POSITION),
B=e.attributes.get(f.VertexAttribute.NORMAL).data;e=k.length/3;G&&G.length!==2*(e-1)&&console.warn("MeasurementArrowMaterial does not support indices");const H=u.position,I=u.normal,v=u.uv0;let w=0;for(let l=0;l<e;++l){var d=3*l;c.set(g,k[d],k[d+1],k[d+2]);l<e-1&&(d=3*(l+1),c.set(n,k[d],k[d+1],k[d+2]),c.set(t,B[d],B[d+1],B[d+2]),c.normalize(t,t),c.subtract(r,n,g),c.normalize(r,r),c.cross(h,t,r),c.normalize(h,h));d=c.distance(g,n);a&&b&&(c.transformMat4(g,g,a),c.transformMat4(n,n,a),c.transformMat4(h,
h,b));const p=F+2*l,x=p+1;H.setVec(p,g);H.setVec(x,g);I.setVec(p,h);I.setVec(x,h);v.set(p,0,w);v.set(p,1,-1);v.set(x,0,w);v.set(x,1,1);l<e-1&&(w+=d)}a=u.length;for(b=0;b<2*e;++b)a.set(F+b,w)}}y.MeasurementArrowMaterial=L;y.Parameters=E;Object.defineProperty(y,Symbol.toStringTag,{value:"Module"})});