// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/tslib.es6 ../core/shaderModules/interfaces ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/DefaultVertexAttributeLocations ../lib/OrderIndependentTransparency ../lib/Program ../materials/DefaultTechniqueConfiguration ../../../../chunks/Heatmap.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),function(g,b,h,k,l,m,n,p,q,r,t,u,v,e){class w extends k.NoParameters{constructor(){super(...arguments);
this.densityMap=this.colorRamp=null;this.searchRadius=1;this.minDensity=this.fieldTotal=0;this.maxDensity=100}}class c extends m.ShaderTechnique{constructor(a,d){super(a,d,()=>this.destroy())}initializeProgram(a){return new r.Program(a.rctx,c.shader.get().build(this.configuration),p.Default3D)}initializePipeline(){return e.makePipelineState({blending:q.blendingDefault,colorWrite:e.defaultColorWriteParams,depthTest:null,depthWrite:null})}get primitiveType(){return v.PrimitiveType.TRIANGLE_STRIP}}c.shader=
new l.ReloadableShaderModule(u.HeatmapShader,()=>new Promise((a,d)=>g(["./Heatmap.glsl"],a,d)));class f extends t.DefaultTechniqueConfiguration{constructor(){super(...arguments);this.usesHalfFloat=!1}}h.__decorate([n.parameter()],f.prototype,"usesHalfFloat",void 0);b.HeatmapPassParameters=w;b.HeatmapTechnique=c;b.HeatmapTechniqueConfiguration=f;Object.defineProperty(b,Symbol.toStringTag,{value:"Module"})});