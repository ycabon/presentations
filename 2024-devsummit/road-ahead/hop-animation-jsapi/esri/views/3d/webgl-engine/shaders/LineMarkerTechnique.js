// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("require exports ../core/shaderLibrary/ShaderOutput ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../lib/OrderIndependentTransparency ../lib/Program ../lib/StencilUtils ../lib/TransparencyPassType ../lib/VertexAttribute ../../../../chunks/LineMarker.glsl ./LineMarkerTechniqueConfiguration ../../../webgl/renderState".split(" "),function(q,h,l,r,t,f,u,a,v,c,w,m,e){const n=new Map([[c.VertexAttribute.POSITION,0],[c.VertexAttribute.PREVPOSITION,1],[c.VertexAttribute.UV0,
2],[c.VertexAttribute.NORMAL,3],[c.VertexAttribute.COLOR,4],[c.VertexAttribute.COLORFEATUREATTRIBUTE,4],[c.VertexAttribute.SIZE,5],[c.VertexAttribute.SIZEFEATUREATTRIBUTE,5],[c.VertexAttribute.OPACITYFEATUREATTRIBUTE,6]]);class k extends t.ShaderTechnique{initializeProgram(b){return new u.Program(b.rctx,k.shader.get().build(this.configuration),n)}_makePipelineState(b,g){const d=this.configuration,p=b===v.TransparencyPassType.NONE;return e.makePipelineState({blending:d.output===l.ShaderOutput.Color||
d.output===l.ShaderOutput.Alpha?p?f.blendingDefault:f.oitBlending(b):null,depthTest:d.space===m.LineMarkerSpace.Draped?null:{func:f.oitDepthTest(b)},depthWrite:d.space===m.LineMarkerSpace.Draped?null:p?d.writeDepth?e.defaultDepthWriteParams:null:f.oitDepthWrite(b),colorWrite:e.defaultColorWriteParams,stencilWrite:d.hasOccludees?a.stencilWriteMaskOn:null,stencilTest:d.hasOccludees?g?a.stencilToolMaskBaseParams:a.stencilBaseAllZerosParams:null,polygonOffset:{factor:0,units:-10}})}initializePipeline(){this.configuration.occluder&&
(this._occluderPipelineTransparent=e.makePipelineState({blending:f.blendingDefault,depthTest:a.depthCompareAlways,depthWrite:null,colorWrite:e.defaultColorWriteParams,stencilWrite:null,stencilTest:a.stencilToolTransparentOccluderParams}),this._occluderPipelineOpaque=e.makePipelineState({blending:f.blendingDefault,depthTest:a.depthCompareAlways,depthWrite:null,colorWrite:e.defaultColorWriteParams,stencilWrite:a.stencilWriteMaskOff,stencilTest:a.stencilToolMaskOccluderParams}),this._occluderPipelineMaskWrite=
e.makePipelineState({blending:null,depthTest:a.depthCompareLess,depthWrite:null,colorWrite:null,stencilWrite:a.stencilWriteMaskOn,stencilTest:a.stencilToolMaskBaseParams}));this._occludeePipelineState=this._makePipelineState(this.configuration.transparencyPassType,!0);return this._makePipelineState(this.configuration.transparencyPassType,!1)}getPipeline(b,g,d){return b?this._occludeePipelineState:this.configuration.occluder?d?this._occluderPipelineTransparent:g?this._occluderPipelineOpaque:this._occluderPipelineMaskWrite:
super.getPipeline()}}k.shader=new r.ReloadableShaderModule(w.LineMarker,()=>new Promise((b,g)=>q(["./LineMarker.glsl"],b,g)));h.LineMarkerTechnique=k;h.vertexAttributeLocations=n;Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});