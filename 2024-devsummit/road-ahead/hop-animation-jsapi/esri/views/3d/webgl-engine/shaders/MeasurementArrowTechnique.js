// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("require exports ../../../../chunks/tslib.es6 ../core/shaderTechnique/ReloadableShaderModule ../core/shaderTechnique/ShaderTechnique ../core/shaderTechnique/ShaderTechniqueConfiguration ../lib/OrderIndependentTransparency ../lib/Program ../lib/TransparencyPassType ../lib/VertexAttribute ../materials/DefaultTechniqueConfiguration ../../../../chunks/MeasurementArrow.glsl ../../../webgl/enums ../../../webgl/renderState".split(" "),function(q,c,f,r,t,g,m,u,h,d,v,w,n,k){class l extends t.ShaderTechnique{constructor(a,
b,x){super(a,b,x)}initializeProgram(a){return new u.Program(a.rctx,l.shader.get().build(this.configuration),p)}_setPipelineState(a){const b=a===h.TransparencyPassType.NONE;return k.makePipelineState({blending:this.configuration.transparent?b?m.blendingDefault:m.oitBlending(a):null,polygonOffset:this.configuration.polygonOffsetEnabled?{factor:0,units:-4}:null,depthTest:{func:n.CompareFunction.LESS},depthWrite:k.defaultDepthWriteParams,colorWrite:k.defaultColorWriteParams})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}get primitiveType(){return n.PrimitiveType.TRIANGLE_STRIP}}
l.shader=new r.ReloadableShaderModule(w.MeasurementArrow,()=>new Promise((a,b)=>q(["./MeasurementArrow.glsl"],a,b)));class e extends v.DefaultTechniqueConfiguration{constructor(){super(...arguments);this.transparent=this.polygonOffsetEnabled=!1;this.transparencyPassType=h.TransparencyPassType.NONE}}f.__decorate([g.parameter()],e.prototype,"polygonOffsetEnabled",void 0);f.__decorate([g.parameter()],e.prototype,"transparent",void 0);f.__decorate([g.parameter({count:h.TransparencyPassType.COUNT})],e.prototype,
"transparencyPassType",void 0);const p=new Map([[d.VertexAttribute.POSITION,0],[d.VertexAttribute.NORMAL,1],[d.VertexAttribute.UV0,2],[d.VertexAttribute.LENGTH,3]]);c.MeasurementArrowAttributeLocations=p;c.MeasurementArrowTechnique=l;c.MeasurementArrowTechniqueConfiguration=e;Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});