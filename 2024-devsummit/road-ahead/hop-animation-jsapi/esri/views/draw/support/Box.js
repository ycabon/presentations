// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../geometry ../../../Graphic ../../../core/Evented ../../../core/maybe ../../../core/quantityUtils ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/RandomLCG ../../../core/accessorSupport/decorators/subclass ../../../geometry/support/aaBoundingRect ../../../geometry/support/boundsUtils ../../../geometry/support/coordsUtils ../../../geometry/support/rotate ../../../symbols/SimpleFillSymbol ../../../symbols/SimpleLineSymbol ../../../symbols/SimpleMarkerSymbol ./drawUtils ./GraphicMover ./HighlightHelper ./layerUtils ./settings ../../interactive/sketch/SketchOptions ../../interactive/tooltip/ExtentTooltipInfos ../../interactive/tooltip/Tooltip ../../interactive/tooltip/TranslateTooltipInfos ../../support/automaticLengthMeasurementUtils ../../../geometry/Point ../../../geometry/Polygon ../../../geometry/Polyline".split(" "),
function(p,l,z,n,J,W,x,r,oa,pa,qa,X,A,K,L,C,M,Y,B,t,Z,aa,ba,ca,N,O,P,da,F,u,ea,fa){class ha{constructor(a,b,c,d){this.graphics=a;this.mover=b;this.dx=c;this.dy=d;this.type="move-start"}}class ia{constructor(a,b,c,d){this.graphics=a;this.mover=b;this.dx=c;this.dy=d;this.type="move"}}class Q{constructor(a,b,c,d){this.graphics=a;this.mover=b;this.dx=c;this.dy=d;this.type="move-stop"}}class ja{constructor(a,b,c){this.graphics=a;this.mover=b;this.angle=c;this.type="rotate-start"}}class ka{constructor(a,
b,c){this.graphics=a;this.mover=b;this.angle=c;this.type="rotate"}}class R{constructor(a,b,c){this.graphics=a;this.mover=b;this.angle=c;this.type="rotate-stop"}}class la{constructor(a,b,c,d){this.graphics=a;this.mover=b;this.xScale=c;this.yScale=d;this.type="scale-start"}}class ma{constructor(a,b,c,d){this.graphics=a;this.mover=b;this.xScale=c;this.yScale=d;this.type="scale"}}class S{constructor(a,b,c,d){this.graphics=a;this.mover=b;this.xScale=c;this.yScale=d;this.type="scale-stop"}}l=ca.settings.transformGraphics;
const na={centerIndicator:new B({style:"cross",size:l.center.size,color:l.center.color}),fill:{default:new M({color:l.fill.color,outline:{color:l.fill.outlineColor,join:"round",width:1}}),active:new M({color:l.fill.stagedColor,outline:{color:l.fill.outlineColor,join:"round",style:"dash",width:1}})},handles:{default:new B({style:"square",size:l.vertex.size,color:l.vertex.color,outline:{color:l.vertex.outlineColor,width:1}}),hover:new B({style:"square",size:l.vertex.hoverSize,color:l.vertex.hoverColor,
outline:{color:l.vertex.hoverOutlineColor,width:1}})},rotator:{default:new B({style:"circle",size:l.vertex.size,color:l.vertex.color,outline:{color:l.vertex.outlineColor,width:1}}),hover:new B({style:"circle",size:l.vertex.hoverSize,color:l.vertex.hoverColor,outline:{color:l.vertex.hoverOutlineColor,width:1}})},rotatorLine:new Y({color:l.line.color,width:1})};n=class extends n.EventedAccessor{constructor(a){super(a);this._activeHandleGraphic=null;this._graphicAttributes={esriSketchTool:"box"};this._backgroundGraphic=
this._centerGraphic=this._mover=null;this._vertexGraphics=[];this._rotateHandleGraphic=null;this._rotateGraphicOffset=20;this._angleOfRotation=0;this._startInfo=this._rotateLineGraphic=null;this._totalDy=this._totalDx=0;this._yScale=this._xScale=1;this.tooltip=null;this.type="box";this.callbacks={onMoveStart(){},onMove(){},onMoveStop(){},onScaleStart(){},onScale(){},onScaleStop(){},onRotateStart(){},onRotate(){},onRotateStop(){},onGraphicClick(){}};this.enableScaling=this.enableRotation=this.enableMovement=
!0;this.graphics=[];this.highlightsEnabled=!0;this.layer=null;this.preserveAspectRatio=!1;this.showCenterGraphic=!0;this.symbols=na;this.sketchOptions=new N;this.view=null;this._getBounds=(()=>{const b=A.create();return(c,d)=>{c[0]=Number.POSITIVE_INFINITY;c[1]=Number.POSITIVE_INFINITY;c[2]=Number.NEGATIVE_INFINITY;c[3]=Number.NEGATIVE_INFINITY;for(const f of d){if(!f)continue;let g,h,e;"point"===f.type?(d=h=f.x,g=e=f.y):"multipoint"===f.type?(d=L.geometryToCoordinates(f),[d,g,h,e]=K.getRingsOrPathsBounds(b,
[d])):"extent"===f.type?[d,g,h,e]=[f.xmin,f.ymin,f.xmax,f.ymax]:(d=L.geometryToCoordinates(f),[d,g,h,e]=K.getRingsOrPathsBounds(b,d));c[0]=Math.min(d,c[0]);c[1]=Math.min(g,c[1]);c[2]=Math.max(h,c[2]);c[3]=Math.max(e,c[3])}return c}})()}initialize(){const a=this.view;this._highlightHelper=new aa({view:a});this.tooltip=new P.Tooltip({view:a});this._setup();this.addHandles([x.when(()=>a?.ready,()=>{const {layer:b,view:c}=this;ba.addUniqueLayer(c,b)},{once:!0,initial:!0}),x.watch(()=>this.preserveAspectRatio,
()=>{this._activeHandleGraphic&&(this._scaleGraphic(this._activeHandleGraphic),this._updateGraphics(),this._updateTooltip(this._activeHandleGraphic))}),x.watch(()=>a?.scale,()=>{this._updateRotateGraphic();this._updateRotateLineGraphic()}),x.watch(()=>this.graphics,()=>this.refresh()),x.watch(()=>this.layer,(b,c)=>{c&&this._resetGraphics(c);this.refresh()}),x.watch(()=>this.highlightsEnabled,()=>{this._highlightHelper?.removeAll();this._setUpHighlights()}),x.watch(()=>this.sketchOptions.tooltips.effectiveEnabled,
b=>{this.tooltip=b?new P.Tooltip({view:this.view}):J.destroyMaybe(this.tooltip)},x.syncAndInitial),x.watch(()=>this.view.effectiveTheme.accentColor,()=>this._updateSymbolsForTheme(),x.initial),this.on("move-start",b=>this.callbacks?.onMoveStart?.(b)),this.on("move",b=>this.callbacks?.onMove?.(b)),this.on("move-stop",b=>this.callbacks?.onMoveStop?.(b)),this.on("rotate-start",b=>this.callbacks?.onRotateStart?.(b)),this.on("rotate",b=>this.callbacks?.onRotate?.(b)),this.on("rotate-stop",b=>this.callbacks?.onRotateStop?.(b)),
this.on("scale-start",b=>this.callbacks?.onScaleStart?.(b)),this.on("scale",b=>this.callbacks?.onScale?.(b)),this.on("scale-stop",b=>this.callbacks?.onScaleStop?.(b))])}destroy(){this._reset();this.tooltip=J.destroyMaybe(this.tooltip)}get state(){const a=this.view?.ready??!1,b=this.graphics.length&&this.layer;return a&&b?"active":a?"ready":"disabled"}isUIGraphic(a){return this._vertexGraphics.includes(a)||a===this._backgroundGraphic||a===this._centerGraphic||a===this._rotateHandleGraphic||a===this._rotateLineGraphic}move(a,
b){if(this._mover&&this.graphics.length){for(const c of this.graphics){const d=t.cloneMove(c.geometry,a,b,this.view);c.geometry=d}this.refresh();this.emit("move-stop",new Q(this.graphics,null,a,b))}}scale(a,b){if(this._mover&&this.graphics.length){for(const c of this.graphics){const d=t.scale(c.geometry,a,b);c.geometry=d}this.refresh();this.emit("scale-stop",new S(this.graphics,null,a,b))}}rotate(a,b){if(this._mover&&this.graphics.length){b||=new u(this._vertexGraphics[1].geometry.x,this._vertexGraphics[3].geometry.y,
this.view.spatialReference);for(const c of this.graphics){const d=C(c.geometry,a,b);c.geometry=d}this.refresh();this.emit("rotate-stop",new R(this.graphics,null,a))}}refresh(){this._reset();this._setup()}reset(){this.graphics=[]}_setup(){"active"===this.state&&(this._setUpHighlights(),this._setupGraphics(),this._setupMover(),this._updateGraphics())}_reset(){this._highlightHelper?.removeAll();this._resetGraphicStateVars();this._resetGraphics();this._updateTooltip();this._mover&&this._mover.destroy();
this._mover=null;this.view.cursor="default"}_resetGraphicStateVars(){this._activeHandleGraphic=this._startInfo=null;this._totalDy=this._totalDx=0;this._yScale=this._xScale=1;this._angleOfRotation=0}_resetGraphics(a){if(a=a||this.layer)a.removeMany(this._vertexGraphics),a.remove(this._backgroundGraphic),a.remove(this._centerGraphic),a.remove(this._rotateHandleGraphic),a.remove(this._rotateLineGraphic);this._vertexGraphics=[];this._rotateLineGraphic=this._rotateHandleGraphic=this._centerGraphic=this._backgroundGraphic=
null}_setupMover(){let a=[];this.enableScaling&&(a=a.concat(this._vertexGraphics));this.enableMovement&&(a=a.concat(this.graphics,this._backgroundGraphic));this.enableRotation&&a.push(this._rotateHandleGraphic);this.showCenterGraphic&&a.push(this._centerGraphic);this._mover=new Z({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,view:this.view,graphics:a,callbacks:{onGraphicClick:b=>this._onGraphicClickCallback(b),onGraphicMoveStart:b=>this._onGraphicMoveStartCallback(b),onGraphicMove:b=>
this._onGraphicMoveCallback(b),onGraphicMoveStop:b=>this._onGraphicMoveStopCallback(b),onGraphicPointerOver:b=>this._onGraphicPointerOverCallback(b),onGraphicPointerOut:b=>this._onGraphicPointerOutCallback(b)}})}_getStartInfo(a){const [b,c,d,f]=this._getBoxBounds(A.create()),g=Math.abs(d-b),h=Math.abs(f-c),{x:e,y:k}=a.geometry;return{width:g,height:h,centerX:(d+b)/2,centerY:(f+c)/2,startX:e,startY:k,graphicInfos:this._getGraphicInfos(),box:this._backgroundGraphic.geometry,rotate:this._rotateHandleGraphic.geometry}}_getGraphicInfos(){return this.graphics.map(a=>
this._getGraphicInfo(a))}_getGraphicInfo(a){a=a.geometry;const [b,c,d,f]=this._getBounds(A.create(),[a]);return{width:Math.abs(d-b),height:Math.abs(f-c),centerX:(d+b)/2,centerY:(f+c)/2,geometry:a}}_onGraphicClickCallback(a){a.viewEvent.stopPropagation();this.emit("graphic-click",a);if(this.callbacks.onGraphicClick)this.callbacks.onGraphicClick(a)}_onGraphicMoveStartCallback(a){const {_angleOfRotation:b,_xScale:c,_yScale:d,_backgroundGraphic:f,_vertexGraphics:g,_rotateHandleGraphic:h,symbols:e}=this,
k=a.graphic;this._resetGraphicStateVars();this._hideGraphicsBeforeUpdate();f.symbol=e.fill.active;this._startInfo=this._getStartInfo(k);this._updateTooltip(k,a.viewEvent);k===h?(this.view.cursor="grabbing",this.emit("rotate-start",new ja(this.graphics,k,b))):g.includes(k)?(this._activeHandleGraphic=k,this.emit("scale-start",new la(this.graphics,k,c,d))):this.emit("move-start",new ha(this.graphics,k,a.dx,a.dy))}_onGraphicMoveCallback(a){const b=a.graphic;if(this._startInfo)if(this._vertexGraphics.includes(b))this._scaleGraphic(b),
this._updateTooltip(b,a.viewEvent),this.emit("scale",new ma(this.graphics,b,this._xScale,this._yScale));else if(b===this._rotateHandleGraphic)this._rotateGraphic(b),this._updateTooltip(b,a.viewEvent),this.emit("rotate",new ka(this.graphics,b,this._angleOfRotation));else{const {dx:c,dy:d}=a;this._totalDx+=c;this._totalDy+=d;this._moveGraphic(b,c,d);this._updateTooltip(b,a.viewEvent);this.emit("move",new ia(this.graphics,b,c,d))}}_onGraphicMoveStopCallback(a){a=a.graphic;if(this._startInfo){var {_angleOfRotation:b,
_totalDx:c,_totalDy:d,_xScale:f,_yScale:g,_vertexGraphics:h,_rotateHandleGraphic:e}=this;this.refresh();a===e?(this.view.cursor="pointer",this.emit("rotate-stop",new R(this.graphics,a,b))):h.includes(a)?this.emit("scale-stop",new S(this.graphics,a,f,g)):this.emit("move-stop",new Q(this.graphics,a,c,d))}else this.refresh()}_onGraphicPointerOverCallback(a){const {_backgroundGraphic:b,_vertexGraphics:c,graphics:d,_rotateHandleGraphic:f,symbols:g,view:h}=this;var e=a.graphic;this._hoveredGraphic=e;if(e===
f)f.symbol=g.rotator.hover,h.cursor="pointer",this._updateTooltip(e);else if(d.includes(e)||e===b)h.cursor="move";else if(c.includes(e)){this._updateTooltip(e);a.graphic.symbol=g.handles.hover;e=h.rotation;a=a.index;8>a&&(a=0<=e&&45>e?a%8:45<=e&&90>e?(a+1)%8:90<=e&&135>e?(a+2)%8:135<=e&&180>e?(a+3)%8:180<=e&&225>e?(a+4)%8:225<=e&&270>e?(a+5)%8:270<=e&&315>e?(a+6)%8:(a+7)%8);switch(a){case 0:a="nwse-resize";break;case 1:a="ns-resize";break;case 2:a="nesw-resize";break;case 3:a="ew-resize";break;case 4:a=
"nwse-resize";break;case 5:a="ns-resize";break;case 6:a="nesw-resize";break;case 7:a="ew-resize";break;default:a="pointer"}h.cursor=a}else h.cursor="pointer"}_onGraphicPointerOutCallback(a){const {_vertexGraphics:b,_rotateHandleGraphic:c,symbols:d,view:f}=this;this._hoveredGraphic=null;a.graphic===c?c.symbol=d.rotator.default:b.includes(a.graphic)&&(a.graphic.symbol=d.handles.default);f.cursor="default";this._updateTooltip()}_scaleGraphic(a){const {_startInfo:b,_vertexGraphics:c,preserveAspectRatio:d,
view:f}=this,{centerX:g,centerY:h,startX:e,startY:k}=b,{resolution:y,transform:m}=f.state;var q=c.indexOf(a);1!==q&&5!==q||this._updateX(a,g);3!==q&&7!==q||this._updateY(a,h);const {x:G,y:H}=a.geometry;var w=m[0]*G+m[2]*H+m[4],I=m[1]*G+m[3]*H+m[5];a=b.graphicInfos?.map(D=>D.geometry)??[];if(d){this._xScale=this._yScale=t.getScaleRatio(m[0]*g+m[2]*h+m[4],m[1]*g+m[3]*h+m[5],m[0]*e+m[2]*k+m[4],m[1]*e+m[3]*k+m[5],w,I);for(var v of a){var E=a.indexOf(v);this.graphics[E].geometry=t.scale(v,this._xScale,
this._yScale,[g,h])}this._updateBackgroundGraphic()}else{const {width:D,height:T}=b;w=G-e;v=k-H;if(1===q||5===q)w=0;else if(3===q||7===q)v=0;if(0!==w||0!==v){this._xScale=(D+(e>g?w:-1*w))/D||1;this._yScale=(T+(k<h?v:-1*v))/T||1;if(1===q||5===q)this._xScale=1;else if(3===q||7===q)this._yScale=1;q=(g+w/2-g)/y;v=(h+v/2-h)/y;w=t.scale(b.box,this._xScale,this._yScale);this._backgroundGraphic.geometry=t.cloneMove(w,q,v,f,!0);var {centerX:U,centerY:V}=this._getGraphicInfo(this._backgroundGraphic);q=(U-g)/
y;v=-1*(V-h)/y;for(E of a)w=a.indexOf(E),I=t.scale(E,this._xScale,this._yScale,[g,h]),this.graphics[w].geometry=t.cloneMove(I,q,v,f,!0);this._centerGraphic.geometry=new u(U,V,f.spatialReference)}}}_rotateGraphic(a){const {centerX:b,centerY:c,startX:d,startY:f,box:g,rotate:h}=this._startInfo;var e=this.view.spatialReference,k=new u(d,f,e);e=new u(b,c,e);this._angleOfRotation=t.getRotationAngle(k,a.geometry,e);a=this._startInfo.graphicInfos?.map(y=>y.geometry)??[];for(const y of a){k=a.indexOf(y);const m=
C(y,this._angleOfRotation,e);this.graphics[k].geometry=m}this._backgroundGraphic.geometry=C(g,this._angleOfRotation,e);this._rotateHandleGraphic.geometry=C(h,this._angleOfRotation,e)}_moveGraphic(a,b,c){if(this.graphics.includes(a)){this._backgroundGraphic.geometry=t.cloneMove(this._backgroundGraphic.geometry,b,c,this.view);for(const d of this.graphics)d!==a&&(d.geometry=t.cloneMove(d.geometry,b,c,this.view))}else a===this._centerGraphic&&(this._backgroundGraphic.geometry=t.cloneMove(this._backgroundGraphic.geometry,
b,c,this.view));if(a===this._backgroundGraphic||a===this._centerGraphic)for(const d of this.graphics)d.geometry=t.cloneMove(d.geometry,b,c,this.view)}_setUpHighlights(){this.highlightsEnabled&&this.graphics.length&&this._highlightHelper?.add(this.graphics)}_setupGraphics(){const {_graphicAttributes:a,symbols:b}=this;this._centerGraphic=new z(null,b.centerIndicator,a);this.showCenterGraphic&&this.layer.add(this._centerGraphic);this._backgroundGraphic=new z(null,b.fill.default,a);this.layer.add(this._backgroundGraphic);
this._rotateLineGraphic=new z(null,b.rotatorLine,a);this._rotateHandleGraphic=new z(null,b.rotator.default,a);this.enableRotation&&!this._hasExtentGraphic()&&this.layer.addMany([this._rotateLineGraphic,this._rotateHandleGraphic]);for(let c=0;8>c;c++)this._vertexGraphics.push(new z(null,b.handles.default,a));this.enableScaling&&this.layer.addMany(this._vertexGraphics)}_updateSymbolsForTheme(){const a=this.view.effectiveTheme.accentColor;this.symbols={...this.symbols,fill:{active:this.symbols.fill.active?.clone().set("outline.color",
a),default:this.symbols.fill.default?.clone().set("outline.color",a)},handles:{...this.symbols.handles,default:this.symbols.handles.default.clone().set("outline.color",a)},rotator:{...this.symbols.rotator,default:this.symbols.rotator.default.clone().set("outline.color",a)},rotatorLine:this.symbols.rotatorLine.clone().set("color",a)};for(const b of this._vertexGraphics)b.symbol=b===this._hoveredGraphic?this.symbols.handles.hover:this.symbols.handles.default;this._backgroundGraphic.symbol=this.symbols.fill.default;
this._rotateHandleGraphic.symbol=this._rotateHandleGraphic===this._hoveredGraphic?this.symbols.rotator.hover:this.symbols.rotator.default;this._rotateLineGraphic.symbol=this.symbols.rotatorLine}_updateGraphics(){this._updateBackgroundGraphic();this._updateHandleGraphics();this._updateCenterGraphic();this._updateRotateGraphic();this._updateRotateLineGraphic()}_hideGraphicsBeforeUpdate(){this._centerGraphic.visible=!1;this._rotateHandleGraphic.visible=!1;this._rotateLineGraphic.visible=!1;this._vertexGraphics.forEach(a=>
a.visible=!1)}_updateHandleGraphics(){const a=this._getCoordinates(!0);this._vertexGraphics.forEach((b,c)=>{const [d,f]=a[c];this._updateXY(b,d,f)})}_updateBackgroundGraphic(){const a=this._getCoordinates();this._backgroundGraphic.geometry=new ea({rings:a,spatialReference:this.view.spatialReference})}_updateCenterGraphic(){const [a,b,c,d]=this._getBoxBounds(A.create());this._centerGraphic.geometry=new u((c+a)/2,(d+b)/2,this.view.spatialReference)}_updateRotateGraphic(){if(this._vertexGraphics.length){var {x:a,
y:b}=this._vertexGraphics[1].geometry;this._rotateHandleGraphic.geometry=new u(a,b+this.view.state.resolution*this._rotateGraphicOffset,this.view.spatialReference)}}_updateRotateLineGraphic(){if(this._vertexGraphics.length&&this._rotateHandleGraphic?.geometry){var a=this._vertexGraphics[1].geometry,b=this._rotateHandleGraphic.geometry;this._rotateLineGraphic.geometry=new fa({paths:[[a.x,a.y],[b.x,b.y]],spatialReference:this.view.spatialReference})}}_updateXY(a,b,c){a.geometry=new u(b,c,this.view.spatialReference)}_updateX(a,
b){a.geometry=new u(b,a.geometry.y,this.view.spatialReference)}_updateY(a,b){a.geometry=new u(a.geometry.x,b,this.view.spatialReference)}_hasExtentGraphic(){return this.graphics.some(a=>null!=a?.geometry&&"extent"===a.geometry.type)}_getBoxBounds(a){const b=this.graphics.map(c=>c.geometry);return this._getBounds(a,b)}_getCoordinates(a){const [b,c,d,f]=this._getBoxBounds(A.create());if(a){a=(b+d)/2;const g=(f+c)/2;return[[b,f],[a,f],[d,f],[d,g],[d,c],[a,c],[b,c],[b,g]]}return[[b,f],[d,f],[d,c],[b,
c]]}_updateTooltip(a,b){if(null!=this.tooltip)if(a){var {_backgroundGraphic:c,graphics:d,_vertexGraphics:f,_rotateHandleGraphic:g}=this;a===g?this._updateRotateTooltip():f.includes(a)?this._updateScaleTooltip():(d.includes(a)||a===c)&&this._updateMoveTooltip(b)}else this.tooltip.clear()}_updateRotateTooltip(){null!=this.tooltip&&(this.tooltip.info=new O.ExtentRotateTooltipInfo({sketchOptions:this.sketchOptions,angle:-this._angleOfRotation}))}_updateScaleTooltip(){const {tooltip:a,_xScale:b,_yScale:c,
sketchOptions:d,view:f}=this;if(null!=a){var g=f.spatialReference,h=this._getCoordinates(),e=new u(h[0][0],h[0][1],g),k=new u(h[1][0],h[1][1],g);g=new u(h[2][0],h[2][1],g);e=F.autoDistanceBetweenPoints2D(e,k);k=F.autoDistanceBetweenPoints2D(k,g);null!=e&&null!=k&&(a.info=new O.ExtentScaleTooltipInfo({sketchOptions:d,xScale:Math.abs(b),yScale:Math.abs(c),xSize:e,ySize:k}))}}_updateMoveTooltip(a){const {tooltip:b,sketchOptions:c,view:d}=this;if(null!=b){var f=new da.TranslateGraphicTooltipInfo({sketchOptions:c});
if(a){const {x:g,y:h}=a.origin;a=d.toMap(a);const e=d.toMap({x:g,y:h});a=F.autoDistanceBetweenPoints2D(e,a);f.distance=null!=a?a:W.zeroMeters}b.info=f}}};p.__decorate([r.property()],n.prototype,"tooltip",void 0);p.__decorate([r.property({readOnly:!0})],n.prototype,"type",void 0);p.__decorate([r.property()],n.prototype,"callbacks",void 0);p.__decorate([r.property()],n.prototype,"enableMovement",void 0);p.__decorate([r.property()],n.prototype,"enableRotation",void 0);p.__decorate([r.property()],n.prototype,
"enableScaling",void 0);p.__decorate([r.property()],n.prototype,"graphics",void 0);p.__decorate([r.property()],n.prototype,"highlightsEnabled",void 0);p.__decorate([r.property()],n.prototype,"layer",void 0);p.__decorate([r.property()],n.prototype,"preserveAspectRatio",void 0);p.__decorate([r.property()],n.prototype,"showCenterGraphic",void 0);p.__decorate([r.property({readOnly:!0})],n.prototype,"state",null);p.__decorate([r.property()],n.prototype,"symbols",void 0);p.__decorate([r.property({type:N})],
n.prototype,"sketchOptions",void 0);p.__decorate([r.property({constructOnly:!0})],n.prototype,"view",void 0);return n=p.__decorate([X.subclass("esri.views.draw.support.Box")],n)});