// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../../chunks/tslib.es6 ../../../symbols ../../../core/Evented ../../../core/lang ../../../core/reactiveUtils ../../../core/accessorSupport/decorators/property ../../../core/has ../../../core/Logger ../../../core/accessorSupport/decorators/subclass ../../../layers/GraphicsLayer ./drawUtils ./HighlightHelper ./layerUtils ./input/GraphicMoverEvents ../../input/InputManager ../../interactive/GraphicManipulator ../../support/screenUtils ../../../symbols/SimpleMarkerSymbol ../../../symbols/SimpleLineSymbol ../../../symbols/SimpleFillSymbol".split(" "),
function(k,h,A,B,t,l,I,J,C,D,y,E,z,m,q,F,u,v,G,H){h=class extends A.EventedAccessor{constructor(a){super(a);this._hoverGraphic=this._dragEvent=this._activeGraphic=null;this._indicators=[];this._initialDragGeometry=null;this._manipulators=[];this._layerViews=null;this.type="graphic-mover";this.callbacks={onGraphicClick(){},onGraphicDoubleClick(){},onGraphicMoveStart(){},onGraphicMove(){},onGraphicMoveStop(){},onGraphicPointerOver(){},onGraphicPointerOut(){},onGraphicPointerDown(){},onGraphicPointerUp(){}};
this.enableMoveAllGraphics=!1;this.graphics=[];this.indicatorsEnabled=!1;this.layer=new D({listMode:"hide",internal:!0,title:"GraphicMover highlight layer"});this.view=null}initialize(){z.addUniqueLayer(this.view,this.layer);this._highlightHelper=new E({view:this.view});this.refresh();this.addHandles([t.watch(()=>this.graphics.length,()=>this.refresh()),t.when(()=>this.view?.ready,()=>{this.addHandles([this.view.on("immediate-click",a=>this._clickHandler(a),q.ViewEventPriorities.TOOL),this.view.on("double-click",
a=>this._doubleClickHandler(a),q.ViewEventPriorities.TOOL),this.view.on("pointer-down",a=>this._pointerDownHandler(a),q.ViewEventPriorities.TOOL),this.view.on("pointer-move",a=>this._pointerMoveHandler(a),q.ViewEventPriorities.TOOL),this.view.on("pointer-up",a=>this._pointerUpHandler(a),q.ViewEventPriorities.TOOL),this.view.on("drag",a=>this._dragHandler(a),q.ViewEventPriorities.TOOL),this.view.on("key-down",a=>this._keyDownHandler(a),q.ViewEventPriorities.TOOL)])},{once:!0,initial:!0}),t.watch(()=>
this.view,a=>{this._highlightHelper.removeAll();this._highlightHelper.view=a})])}destroy(){this._removeIndicators();this.view.map?.remove(this.layer);this.layer.destroy();this.reset();this._manipulators.forEach(a=>a.destroy());this._manipulators=null}set highlightsEnabled(a){this._highlightHelper?.removeAll();this._set("highlightsEnabled",a);a&&this._highlightHelper?.add(this.graphics)}get state(){const a=this.view.ready,b=0<this.graphics.length,c=this._activeGraphic;return a&&b?c?"moving":"active":
a?"ready":"disabled"}refresh(){this.reset();this._setup()}reset(){this._dragEvent=this._hoverGraphic=this._activeGraphic=null;this._highlightHelper.removeAll()}updateGeometry(a,b){if(a=this.graphics[a])a.set("geometry",b),this._setUpIndicators()}_setup(){this._setUpHighlights();this._setUpIndicators();this._setUpManipulators();this._syncLayerViews()}_clickHandler(a){const b=this._findTargetGraphic(u.createScreenPointFromEvent(a));b&&(a=new m.GraphicClickEvent(b,this.graphics.indexOf(b),a.x,a.y,a),
this.emit("graphic-click",a),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(a))}_doubleClickHandler(a){const b=this._findTargetGraphic(u.createScreenPointFromEvent(a));b&&(a=new m.GraphicDoubleClickEvent(b,this.graphics.indexOf(b),a.x,a.y,a),this.emit("graphic-double-click",a),this.callbacks.onGraphicDoubleClick&&this.callbacks.onGraphicDoubleClick(a))}_pointerDownHandler(a){const b=this._findTargetGraphic(u.createScreenPointFromEvent(a));if(b){this._activeGraphic=b;const {x:c,y:e}=
a;a=new m.GraphicPointerDownEvent(b,this.graphics.indexOf(b),c,e,a);this.emit("graphic-pointer-down",a);this.callbacks.onGraphicPointerDown&&this.callbacks.onGraphicPointerDown(a)}else this._activeGraphic=null}_pointerUpHandler(a){if(this._activeGraphic){const {x:b,y:c}=a,e=this.graphics.indexOf(this._activeGraphic);a=new m.GraphicPointerUpEvent(this._activeGraphic,e,b,c,a);this.emit("graphic-pointer-up",a);this.callbacks.onGraphicPointerUp&&this.callbacks.onGraphicPointerUp(a)}}_pointerMoveHandler(a){if(!this._dragEvent){var b=
this._findTargetGraphic(u.createScreenPointFromEvent(a));if(b){const {x:e,y:d}=a;if(this._hoverGraphic){if(this._hoverGraphic===b)return;var c=this.graphics.indexOf(this._hoverGraphic);c=new m.GraphicPointerOutEvent(this.graphics[c],c,e,d,a);this._hoverGraphic=null;this.emit("graphic-pointer-out",c);this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(c)}c=this.graphics.indexOf(b);a=new m.GraphicPointerOverEvent(b,c,e,d,a);this._hoverGraphic=b;this.emit("graphic-pointer-over",a);
this.callbacks.onGraphicPointerOver&&this.callbacks.onGraphicPointerOver(a)}else if(this._hoverGraphic){const {x:e,y:d}=a;b=this.graphics.indexOf(this._hoverGraphic);a=new m.GraphicPointerOutEvent(this.graphics[b],b,e,d,a);this._hoverGraphic=null;this.emit("graphic-pointer-out",a);this.callbacks.onGraphicPointerOut&&this.callbacks.onGraphicPointerOut(a)}}}_dragHandler(a){if(("start"===a.action||this._dragEvent)&&this._activeGraphic?.geometry){"start"===a.action&&this._removeIndicators();a.stopPropagation();
var {action:b,x:c,y:e}=a,d=this.graphics.indexOf(this._activeGraphic),p=this._dragEvent?c-this._dragEvent.x:0,f=this._dragEvent?e-this._dragEvent.y:0,g=c-a.origin.x,r=e-a.origin.y,n="start"===b?this._activeGraphic.geometry:this._initialDragGeometry,w=y.cloneMove(n,g,r,this.view);this._activeGraphic.geometry=w;this.enableMoveAllGraphics&&this.graphics.forEach(x=>{x!==this._activeGraphic&&(x.geometry=y.cloneMove(x.geometry,p,f,this.view))});this._dragEvent=a;"start"===b?(this._initialDragGeometry=B.clone(n),
d=new m.GraphicMoveStartEvent(this._activeGraphic,this.graphics,d,c,e,p,f,g,r,a),this.emit("graphic-move-start",d),this.callbacks.onGraphicMoveStart&&this.callbacks.onGraphicMoveStart(d),d.defaultPrevented&&this._activeGraphic.set("geometry",n)):"update"===b?(d=new m.GraphicMoveEvent(this._activeGraphic,this.graphics,d,c,e,p,f,g,r,a),this.emit("graphic-move",d),this.callbacks.onGraphicMove&&this.callbacks.onGraphicMove(d),d.defaultPrevented&&(this._activeGraphic.geometry=n)):(n=new m.GraphicMoveStopEvent(this._activeGraphic,
this.graphics,d,c,e,p,f,g,r,a),this._activeGraphic=this._dragEvent=null,this._setUpIndicators(),this.emit("graphic-move-stop",n),this.callbacks.onGraphicMoveStop&&this.callbacks.onGraphicMoveStop(n),n.defaultPrevented&&(this.graphics[d].set("geometry",this._initialDragGeometry),this._setUpIndicators()),this._initialDragGeometry=null)}}_keyDownHandler(a){"a"!==a.key&&"d"!==a.key&&"n"!==a.key||"moving"!==this.state||a.stopPropagation()}_findTargetGraphic(a){const b=this.view.toMap(a),c=this.graphics;
let e=null,d=Number.MAX_VALUE;this._syncLayerViews();const p=this._layerViews.flatMap(f=>"graphicsViews"in f?Array.from(f.graphicsViews(),g=>g.hitTest(b)).flat():f.graphicsView.hitTest(b)).filter(f=>c.includes(f)).sort((f,g)=>c.indexOf(f)-c.indexOf(g));if(p.length)return p[0];this._manipulators.forEach(f=>{const g=f.intersectionDistance(a);null!=g&&g<d&&(d=g,e=f.graphic)});return e}_syncLayerViews(){this._layerViews=[];const a=new Set;for(const b of this.graphics){const c=z.findLayerView(this.view,
b.layer);c&&a.add(c)}this._layerViews=[...a]}_setUpManipulators(){const {graphics:a,view:b}=this;this._manipulators.forEach(c=>c.destroy());this._manipulators=a.length?a.map(c=>new F.GraphicManipulator({graphic:c,view:b})):[]}_setUpHighlights(){this.highlightsEnabled&&this._highlightHelper.add(this.graphics)}_setUpIndicators(){this._removeIndicators();if(this.indicatorsEnabled){for(const a of this.graphics){const b=a.clone();b.symbol=this._getSymbolForIndicator(a);this._indicators.push(b);this.addHandles(t.watch(()=>
a.symbol,()=>this._setUpIndicators()),"indicator-symbols")}this.layer.addMany(this._indicators)}}_removeIndicators(){this.removeHandles("indicator-symbols");this._indicators.length&&(this.layer.removeMany(this._indicators),this._indicators.forEach(a=>a.destroy()),this._indicators=[])}_getSymbolForIndicator(a){if(null==a.symbol)return null;switch(a.symbol.type){case "cim":return new v({style:"circle",size:12,color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}});case "picture-marker":const {xoffset:b,
yoffset:c,height:e,width:d}=a.symbol;return new v({xoffset:b,yoffset:c,size:e===d?d:Math.max(e,d),style:"square",color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}});case "simple-marker":const {xoffset:p,yoffset:f,size:g,style:r}=a.symbol;return new v({xoffset:p,yoffset:f,style:"circle"===r?"circle":"square",size:g+2,color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}});case "simple-fill":return new H({color:[0,0,0,0],outline:{style:"dash",color:[255,127,0,1],width:1}});case "simple-line":return new G({color:[255,
127,0,1],style:"dash",width:1});case "text":const {xoffset:n,yoffset:w}=a.symbol;return new v({xoffset:n,yoffset:w,size:12,color:[0,0,0,0],outline:{color:[255,127,0,1],width:1}});default:return null}}};k.__decorate([l.property()],h.prototype,"_activeGraphic",void 0);k.__decorate([l.property({readOnly:!0})],h.prototype,"type",void 0);k.__decorate([l.property()],h.prototype,"callbacks",void 0);k.__decorate([l.property()],h.prototype,"enableMoveAllGraphics",void 0);k.__decorate([l.property()],h.prototype,
"graphics",void 0);k.__decorate([l.property({value:!1})],h.prototype,"highlightsEnabled",null);k.__decorate([l.property()],h.prototype,"indicatorsEnabled",void 0);k.__decorate([l.property()],h.prototype,"layer",void 0);k.__decorate([l.property({readOnly:!0})],h.prototype,"state",null);k.__decorate([l.property()],h.prototype,"view",void 0);return h=k.__decorate([C.subclass("esri.views.draw.support.GraphicMover")],h)});