// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../core/has ../../core/handleUtils ../../core/mathUtils ../../core/screenUtils ./InputHandler ./InputManager ./IViewEvents".split(" "),function(q,r,w,x,t,y,z,A){function u(a){return!!v[a]}function B(a){for(const d of a)if(!u(d))return!1;return!0}r="click double-click immediate-click immediate-double-click hold drag key-down key-up pointer-down pointer-move pointer-up pointer-drag mouse-wheel pointer-enter pointer-leave gamepad focus blur".split(" ");const v={};r.forEach(a=>{v[a]=
!0});class C{constructor(a){this._handlers=new Map;this._counter=0;this._handlerCounts=new Map;this.view=a;this.inputManager=null}connect(a){a&&this.disconnect();this.inputManager=a;this._handlers.forEach(({handler:d,priority:c},e)=>this.inputManager?.installHandlers(e,[d],c))}disconnect(){this.inputManager&&this._handlers.forEach((a,d)=>this.inputManager?.uninstallHandlers(d));this.inputManager=null}destroy(){this.disconnect();this._handlers.clear();this.view=null}on(a,d,c,e){const f=Array.isArray(a)?
a:a.split(",");if(!B(f))return f.some(u)&&console.error("Error: registering input events and other events on the view at the same time is not supported."),null;if(Array.isArray(d))a=d;else{var b=d;a=[]}"function"===typeof c?b=c:e=c;e=null!=e?e:z.ViewEventPriorities.DEFAULT;const g=this._createUniqueGroupName();c=new D(this.view,f,a,b);this._handlers.set(g,{handler:c,priority:e});for(const h of f)b=this._handlerCounts.get(h)||0,this._handlerCounts.set(h,b+1);this.inputManager&&this.inputManager.installHandlers(g,
[c],e);return w.makeHandle(()=>this._removeHandler(g,f))}hasHandler(a){return!!this._handlerCounts.get(a)}_removeHandler(a,d){if(this._handlers.has(a)){this._handlers.delete(a);for(const c of d)d=this._handlerCounts.get(c),void 0===d?console.error("Trying to remove handler for event that has no handlers registered: ",c):1===d?this._handlerCounts.delete(c):this._handlerCounts.set(c,d-1)}this.inputManager&&this.inputManager.uninstallHandlers(a)}_createUniqueGroupName(){this._counter+=1;return`viewEvents_${this._counter}`}}
class D extends y.InputHandler{constructor(a,d,c,e){super(!0);this._latestDragStart=void 0;this.view=a;for(const f of d)switch(f){case "click":this.registerIncoming("click",c,b=>e(this._wrapClick(b)));break;case "double-click":this.registerIncoming("double-click",c,b=>e(this._wrapDoubleClick(b)));break;case "immediate-click":this.registerIncoming("immediate-click",c,b=>e(this._wrapImmediateClick(b)));break;case "immediate-double-click":this.registerIncoming("immediate-double-click",c,b=>e(this._wrapImmediateDoubleClick(b)));
break;case "hold":this.registerIncoming("hold",c,b=>e(this._wrapHold(b)));break;case "drag":this.registerIncoming("drag",c,b=>{(b=this._wrapDrag(b))&&e(b)});break;case "key-down":this.registerIncoming("key-down",c,b=>e(this._wrapKeyDown(b)));break;case "key-up":this.registerIncoming("key-up",c,b=>e(this._wrapKeyUp(b)));break;case "pointer-down":this.registerIncoming("pointer-down",c,b=>e(this._wrapPointer(b,"pointer-down")));break;case "pointer-move":this.registerIncoming("pointer-move",c,b=>e(this._wrapPointer(b,
"pointer-move")));break;case "pointer-up":this.registerIncoming("pointer-up",c,b=>e(this._wrapPointer(b,"pointer-up")));break;case "pointer-drag":this.registerIncoming("pointer-drag",c,b=>e(this._wrapPointerDrag(b)));break;case "mouse-wheel":this.registerIncoming("mouse-wheel",c,b=>e(this._wrapMouseWheel(b)));break;case "pointer-enter":this.registerIncoming("pointer-enter",c,b=>e(this._wrapPointer(b,"pointer-enter")));break;case "pointer-leave":this.registerIncoming("pointer-leave",c,b=>e(this._wrapPointer(b,
"pointer-leave")));break;case "gamepad":this.registerIncoming("gamepad",c,b=>{e(this._wrapGamepad(b))});break;case "focus":this.registerIncoming("focus",c,b=>{e(this._wrapFocus(b))});break;case "blur":this.registerIncoming("blur",c,b=>{e(this._wrapBlur(b))})}}_wrapFocus(a){return{type:"focus",timestamp:a.timestamp,native:a.data.native,cancelable:a.cancelable,stopPropagation:()=>a.stopPropagation(),async:d=>a.async(d),preventDefault:()=>a.preventDefault()}}_wrapBlur(a){return{type:"blur",timestamp:a.timestamp,
native:a.data.native,cancelable:a.cancelable,stopPropagation:()=>a.stopPropagation(),async:d=>a.async(d),preventDefault:()=>a.preventDefault()}}_wrapClick(a){const {pointerType:d,button:c,buttons:e,x:f,y:b,native:g,eventId:h}=a.data,{cancelable:k,timestamp:l}=a,m=t.createScreenPoint(f,b),n=this._getMapPoint(f,b);return{type:"click",pointerType:d,button:c,buttons:e,x:f,y:b,native:g,timestamp:l,screenPoint:m,mapPoint:n,eventId:h,cancelable:k,stopPropagation:()=>a.stopPropagation(),async:p=>a.async(p),
preventDefault:()=>a.preventDefault()}}_wrapDoubleClick(a){const {pointerType:d,button:c,buttons:e,x:f,y:b,native:g,eventId:h}=a.data,{cancelable:k,timestamp:l}=a;return{type:"double-click",pointerType:d,button:c,buttons:e,x:f,y:b,native:g,timestamp:l,mapPoint:this._getMapPoint(f,b),eventId:h,cancelable:k,stopPropagation:()=>a.stopPropagation(),async:m=>a.async(m),preventDefault:()=>a.preventDefault()}}_wrapImmediateClick(a){const {pointerType:d,button:c,buttons:e,x:f,y:b,native:g,eventId:h}=a.data,
k=g.pointerId,{cancelable:l,timestamp:m}=a;return{type:"immediate-click",pointerId:k,pointerType:d,button:c,buttons:e,x:f,y:b,native:g,timestamp:m,mapPoint:this._getMapPoint(f,b),eventId:h,cancelable:l,stopPropagation:()=>a.stopPropagation(),async:n=>a.async(n),preventDefault:()=>a.preventDefault()}}_wrapImmediateDoubleClick(a){const {pointerType:d,button:c,buttons:e,x:f,y:b,native:g,eventId:h}=a.data,k=g.pointerId,{cancelable:l,timestamp:m}=a;return{type:"immediate-double-click",pointerId:k,pointerType:d,
button:c,buttons:e,x:f,y:b,native:g,timestamp:m,mapPoint:this._getMapPoint(f,b),eventId:h,cancelable:l,stopPropagation:()=>a.stopPropagation(),async:n=>a.async(n),preventDefault:()=>a.preventDefault()}}_wrapHold(a){const {pointerType:d,button:c,buttons:e,x:f,y:b,native:g}=a.data,{cancelable:h,timestamp:k}=a;return{type:"hold",pointerType:d,button:c,buttons:e,x:f,y:b,native:g,timestamp:k,mapPoint:this._getMapPoint(f,b),cancelable:h,stopPropagation:()=>a.stopPropagation(),async:l=>a.async(l),preventDefault:()=>
a.preventDefault()}}_getMapPoint(a,d){return this.view.toMap(t.createScreenPoint(a,d),{exclude:[]})}_wrapDrag(a){const d=a.data,{x:c,y:e}=d.center,{action:f,pointerType:b,button:g}=d;"start"===f&&(this._latestDragStart=d);if(this._latestDragStart){var h=d.pointer.native,k=d.buttons,{cancelable:l,timestamp:m}=a,n={x:this._latestDragStart.center.x,y:this._latestDragStart.center.y};"end"===f&&(this._latestDragStart=void 0);return{type:"drag",action:f,x:c,y:e,origin:n,pointerType:b,button:g,buttons:k,
radius:d.radius,angle:x.rad2deg(d.angle),native:h,timestamp:m,cancelable:l,stopPropagation:()=>a.stopPropagation(),async:p=>a.async(p),preventDefault:()=>a.preventDefault()}}}_wrapKeyDown(a){const {key:d,repeat:c,native:e}=a.data,{cancelable:f,timestamp:b}=a;return{type:"key-down",key:d,repeat:c,native:e,timestamp:b,cancelable:f,stopPropagation:()=>a.stopPropagation(),async:g=>a.async(g),preventDefault:()=>a.preventDefault()}}_wrapKeyUp(a){const {key:d,native:c}=a.data,{cancelable:e,timestamp:f}=
a;return{type:"key-up",key:d,native:c,timestamp:f,cancelable:e,stopPropagation:()=>a.stopPropagation(),async:b=>a.async(b),preventDefault:()=>a.preventDefault()}}_wrapPointer(a,d){const {x:c,y:e,button:f,buttons:b,native:g,eventId:h}=a.data,k=g.pointerId,l=g.pointerType,{cancelable:m,timestamp:n}=a;return{type:d,x:c,y:e,pointerId:k,pointerType:l,button:f,buttons:b,native:g,timestamp:n,eventId:h,cancelable:m,stopPropagation:()=>a.stopPropagation(),async:p=>a.async(p),preventDefault:()=>a.preventDefault()}}_wrapPointerDrag(a){const {x:d,
y:c,buttons:e,native:f,eventId:b}=a.data.currentEvent,{button:g}=a.data.startEvent,h=a.data.startEvent.native.pointerId,k=a.data.startEvent.native.pointerType,l=a.data.action,m={x:a.data.startEvent.x,y:a.data.startEvent.y},{cancelable:n,timestamp:p}=a;return{type:"pointer-drag",x:d,y:c,pointerId:h,pointerType:k,button:g,buttons:e,action:l,origin:m,native:f,timestamp:p,eventId:b,cancelable:n,stopPropagation:()=>a.stopPropagation(),async:E=>a.async(E),preventDefault:()=>a.preventDefault()}}_wrapMouseWheel(a){const {cancelable:d,
data:c,timestamp:e}=a,{x:f,y:b,deltaY:g,native:h}=c;return{type:"mouse-wheel",x:f,y:b,deltaY:g,native:h,timestamp:e,cancelable:d,stopPropagation:()=>a.stopPropagation(),async:k=>a.async(k),preventDefault:()=>a.preventDefault()}}_wrapGamepad(a){const {action:d,state:c,device:e}=a.data,{cancelable:f,timestamp:b}=a,{buttons:g,axes:h}=c;return{type:"gamepad",device:e,timestamp:b,action:d,buttons:g,axes:h,cancelable:f,stopPropagation:()=>a.stopPropagation(),async:k=>a.async(k),preventDefault:()=>a.preventDefault()}}}
Object.defineProperty(q,"MouseButton",{enumerable:!0,get:()=>A.MouseButton});q.ViewEvents=C;q.eventTypes=r;Object.defineProperty(q,Symbol.toStringTag,{value:"Module"})});