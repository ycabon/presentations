// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../../chunks/tslib.es6 ../../../../core/handleUtils ../../../../core/accessorSupport/decorators/property ../../../../core/has ../../../../core/Logger ../../../../core/RandomLCG ../../../../core/accessorSupport/decorators/subclass ../../../../geometry/Polygon ../../../../geometry/support/aaBoundingRect ../../../support/TileTreeDebugger".split(" "),function(c,e,k,l,u,v,w,m,n,p,q){c.WorkerTileTreeDebugger=class extends q.TileTreeDebugger{constructor(b){super(b)}initialize(){const b=
setInterval(()=>this._fetchDebugInfo(),2E3);this.addHandles(k.makeHandle(()=>clearInterval(b)))}getTiles(){if(!this._debugInfo)return[];const b=new Map,f=new Map;this._debugInfo.storedTiles.forEach(a=>{b.set(a.data.id,a.featureCount)});this._debugInfo.pendingTiles.forEach(a=>{b.set(a.data.id,a.featureCount);f.set(a.data.id,a.state)});const d=new Map;this._debugInfo.storedTiles.forEach(a=>{d.set(a.data.id,a.data)});this._debugInfo.pendingTiles.forEach(a=>{d.set(a.data.id,a.data)});return Array.from(d.values()).map(a=>
{var r=[a.level,a.row,a.col],t=n.fromExtent(p.toExtent(a.extent,this.view.spatialReference));{a=a.id;const g=f.get(a),h=b.get(a)??"?";a=g?`${g}:${h}\n${a}`:`store:${h}\n${a}`}return{lij:r,geometry:t,label:a}})}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(b=>{this._debugInfo=b;this.update()})}};e.__decorate([l.property({constructOnly:!0})],c.WorkerTileTreeDebugger.prototype,"handle",void 0);c.WorkerTileTreeDebugger=e.__decorate([m.subclass("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],
c.WorkerTileTreeDebugger);Object.defineProperty(c,Symbol.toStringTag,{value:"Module"})});