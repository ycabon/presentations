// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../../core/quantityUtils ../../../core/unitUtils ../../../chunks/vec32 ../../../core/libs/gl-matrix-2/factories/vec3f64 ../../../geometry/projection/projectVectorToVector ../../../geometry/support/geodesicUtils ../../../support/elevationInfoUtils ../sketch/constraints ../sketch/normalizedPoint ../../support/angularMeasurementUtils".split(" "),function(m,p,y,u,z,r,H,I,n,q,l){function J(a,b,c,f){if(null!=c&&null!=a){var d=v(a,f);if(null!=d){c=l.getDegreesGeographic(c);var g=h=>{if(null!=
h){var k=z.create();h=p.createAngle(h,"degrees","geographic");if(l.pointFromDistanceAlongAzimuth(k,d,f.measurementSR,10,h,f.mode))return new n.VerticalHalfPlaneConstraint(d,k)}},e=()=>{if(null!=b&&null!=a)return l.getDegreesGeographic(l.directionBetweenPoints(b,a))};switch(f.directionMode){case l.DirectionMode.Absolute:return g(c);case l.DirectionMode.Relative:return e=e(),null==e?void 0:g(e+c);case l.DirectionMode.RelativeBilateral:return e=e(),null==e?void 0:n.constraintOrSet([g(e+c),g(e-c)])}}}}
function w(a,b){a=A(a,b)?.value??void 0;return null!=a?new n.HorizontalPlaneConstraint(a):void 0}function x(a,b,c,f,d,g){if(null!=c||null!=f||null!=d){if(null==b)return w(f,g);var {view:e,elevationInfo:h,measurementSR:k}=g,B=q.fromPoint(b,e,h);if(k&&r.projectVectorToVector(B,b.spatialReference,t,k)){var K=[t[0],t[1]],C=null!=c?p.valueInUnit(c,"meters"):void 0,D=L(f,g);c=l.getDegreesGeographic(d);f=E=>{const F=new n.GeodesicConstraint(K,k,C,D,E);return null==C||null==E||null==D&&g.hasZ?F:new n.PointConstraint(F.closestTo(B))};
if(null==c)return f(void 0);d=()=>{if(null!=a&&null!=b)return l.getDegreesGeographic(l.directionBetweenPoints(a,b))};switch(g.directionMode){case l.DirectionMode.Absolute:return f(c);case l.DirectionMode.Relative:return d=d(),null==d?void 0:f(d+c);case l.DirectionMode.RelativeBilateral:return d=d(),null==d?void 0:n.constraintOrSet([f(d+c),f(d-c)])}}}}function G(a){let b;for(const c of a)c&&(b=b?.intersect(c)??c);return b}function v(a,b){const {view:c,elevationInfo:f,measurementSR:d,origin:g,mode:e}=
b;b=q.fromPoint(a,c,f);if(r.projectVectorToVector(b,a.spatialReference,b,d))return"geodesic"!==e&&u.subtract(b,b,g),b}function L(a,b){a=A(a,b);return null!=a?p.valueInUnit(a,"meters"):void 0}function A(a,{view:b,origin:c,elevationInfo:f,hasZ:d,measurementSR:g}){if(null!=a&&d&&(d=y.verticalLengthUnitFromSpatialReference(g),null!=d)){var [e,h]=c;a=p.valueInUnit(a,d);b="3d"===b?.type?I.getConvertedElevationFromXYZ(b,e,h,a,g,f):a;if(null!=b)return p.createLength(b,d)}}const t=z.create();m.constraintSpaceToPoint=
function(a,b,c){const {view:f,measurementSR:d,spatialReference:g,origin:e,mode:h}=c,k=t;"geodesic"===h?u.copy(k,a):u.add(k,a,e);if(r.projectVectorToVector(k,d,k,g))return q.toElevationAlignedDehydratedPoint(k,f,b,c)};m.getConstraintContext=function(a,b,c,f,d,g){let e="geodesic",h=H.geodesicCompatibleSpatialReference(c);const k=q.fromPoint(a,b,f);k[2]=0;h&&r.projectVectorToVector(k,c,k,h)||(e="euclidean",h=c);return{mode:e,view:b,elevationInfo:f,hasZ:d,directionMode:g,spatialReference:a.spatialReference,
measurementSR:h,origin:k}};m.getGeodesicConstraint=x;m.getPointConstraint=function(a,b){return"geodesic"===b.mode?x(null,null,null,a,null,b):w(a,b)};m.getPolylineOrPolygonConstraint=function(a,b,c,f,d,g){if("geodesic"===g.mode)return x(b,a,c,d,f,g);if(null==c||null==a)var e=void 0;else{var h=y.lengthUnitFromSpatialReference(g.measurementSR);null==h?e=void 0:(e=v(a,g),null==e?e=void 0:(c=p.valueInUnit(c,h),e=new n.VerticalCylinderConstraint(q.fromVec3(e),c)))}return G([e,J(a,b,f,g),w(d,g)])};m.intersectAll=
G;m.pointToConstraintSpace=v;Object.defineProperty(m,Symbol.toStringTag,{value:"Module"})});