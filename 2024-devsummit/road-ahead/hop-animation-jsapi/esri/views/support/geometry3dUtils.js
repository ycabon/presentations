// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../core/mathUtils ../../core/libs/gl-matrix-2/math/vec2 ../../core/libs/gl-matrix-2/factories/vec2f64 ../../chunks/vec32 ../../core/libs/gl-matrix-2/factories/vec3f64 ../../geometry/support/plane ../3d/support/mathUtils ./geometry2dUtils".split(" "),function(h,Q,n,v,e,k,x,R,q){function J(a,{start:b,end:f,type:c},d=k.create()){a=e.sub(y,a,b);f=e.sub(z,f,b);a=e.dot(a,f)/e.dot(f,f);return e.scaleAndAdd(d,b,f,c===q.LineType.RAY?Math.max(a,0):a)}function K({start:a,end:b,type:f},c){const d=
e.sub(y,c,a);b=e.sub(z,b,a);if(f===q.LineType.RAY&&-1E-6>e.dot(b,d))return e.distance(a,c);a=e.cross(C,b,d);return e.len(a)/e.len(b)}function L(a,b){const f=a.start,c=b.start;var d=b.end;const l=e.sub(y,a.end,f);d=e.sub(z,d,c);var m=e.sub(C,c,f),g=e.cross(M,l,d),p=e.dot(m,g);if(!t(p,0))return[];p=e.sqrLen(g);if(t(p,0))return[];m=e.cross(N,m,d);g=e.dot(m,g)/p;g=e.scaleAndAdd(O,f,l,g);return a.type===q.LineType.RAY&&(a=e.sub(G,g,f),-1E-6>e.dot(l,a))||b.type===q.LineType.RAY&&(b=e.sub(G,g,c),-1E-6>e.dot(d,
b))?[]:[k.clone(g)]}function P({start:a,end:b,type:f},c){const d=e.sub(y,c,a);a=e.sub(z,b,a);b=e.cross(C,a,d);if(1E-6>e.sqrLen(b)/e.sqrLen(a))switch(f){case q.LineType.LINE:return[k.clone(c)];case q.LineType.RAY:return-1E-6>e.dot(a,d)?[]:[k.clone(c)]}return[]}function A(a,b,{start:f,end:c,type:d}){e.set(a.start,f[0],f[1],b);e.set(a.end,c[0],c[1],b);a.type=S[d];return a}function t(a,b){return Q.floatEqualAbsolute(Math.abs(a-b),0,1E-6)}function D(a,b){return x.isPointInside(a,b)}const U=(()=>{const a=
k.create(),b=k.create(),f=k.create();return({start:c,end:d},{center:l,radius:m,normal:g,slicePlane:p})=>{var r=x.fromPositionAndNormal(l,g,T);if(t(x.distance(r,c),0)&&t(x.distance(r,d),0)){R.tangentFrame(g,a,b);r=(w,u)=>{e.subtract(f,u,l);n.set(w,e.dot(f,a),e.dot(f,b));return w};d=q.intersectLineLikeAndCircle({start:r(B,c),end:r(E,d),type:q.LineType.LINE},v.ZEROS,m);c=[];for(const [w,u]of d)d=e.copy(k.create(),l),e.scaleAndAdd(d,d,a,w),e.scaleAndAdd(d,d,b,u),p&&!D(p,d)||c.push(d);return c}g=k.create();
return x.intersectLine(r,c,d,g)?!t(e.distance(g,l),m)||p&&!D(p,g)?[]:[g]:[]}})();h.VerticalPlaneType=void 0;(function(a){a[a.PLANE=0]="PLANE";a[a.HALF_PLANE=1]="HALF_PLANE"})(h.VerticalPlaneType||(h.VerticalPlaneType={}));const S={[h.VerticalPlaneType.PLANE]:q.LineType.LINE,[h.VerticalPlaneType.HALF_PLANE]:q.LineType.RAY},B=v.create(),E=v.create(),y=k.create(),z=k.create(),C=k.create(),M=k.create(),N=k.create(),O=k.create(),G=k.create(),T=x.create(),F={start:k.create(),end:k.create(),type:q.LineType.LINE},
V={start:k.create(),end:k.create(),type:q.LineType.LINE};Object.defineProperty(h,"LineType",{enumerable:!0,get:()=>q.LineType});h.epsilon=1E-6;h.intersectLineAndPoint=P;h.intersectLineLikeAndCircle=U;h.intersectLineLikeAndVerticalCylinder=function({start:a,end:b,type:f},c,d){const l=[];b=e.subtract(y,b,a);var m=n.subtract(E,a,c);c=n.squaredLength(b);const g=2*n.dot(b,m);d=n.squaredLength(m)-d*d;d=g*g-4*c*d;0===d?(c=-g/(2*c),(f===q.LineType.LINE||0<=c)&&l.push(e.scaleAndAdd(k.create(),a,b,c))):0<d&&
(d=Math.sqrt(d),m=(-g+d)/(2*c),(f===q.LineType.LINE||0<=m)&&l.push(e.scaleAndAdd(k.create(),a,b,m)),c=(-g-d)/(2*c),(f===q.LineType.LINE||0<=c)&&l.push(e.scaleAndAdd(k.create(),a,b,c)));return l};h.intersectLineLikes=L;h.intersectVerticalCylinderAndPoint=function(a,b,f){return t(n.squaredDistance(f,a),b*b)?[k.clone(f)]:[]};h.intersectVerticalCylinders=function(a,b,f,c){const [d,l]=a,[m,g]=f;var p=m-d,r=g-l;const w=p*p+r*r,u=Math.sqrt(w);if(u>b+c||u<Math.abs(b-c)||t(u,0)&&t(b,c))return[];c=(b*b-c*c+
w)/(2*u);b=Math.sqrt(b*b-c*c);r=b*r/u;p=b*p/u;const [H,I]=n.lerp(B,a,f,c/u);return t(r,p)?[v.fromValues(H,I)]:[v.fromValues(H+r,I-p),v.fromValues(H-r,I+p)]};h.intersectVerticalPlaneAndLineLike=function(a,b){const f=a.start,c=n.subtract(B,a.end,f);var d=e.set(z,-c[1],c[0],0);const l=b.start,m=e.sub(C,b.end,l);var g=e.dot(m,d),p=e.set(M,f[0],f[1],0);p=e.sub(N,p,l);d=e.dot(p,d);if(1E-6>Math.abs(g))return[];g=e.scaleAndAdd(O,l,m,d/g);return b.type===q.LineType.RAY&&(b=e.sub(G,g,l),-1E-6>e.dot(b,m))||
a.type===h.VerticalPlaneType.HALF_PLANE&&(a=n.sub(E,g,f),-1E-6>n.dot(a,c))?[]:[k.clone(g)]};h.intersectVerticalPlaneAndPoint=function(a,b){return P(A(F,b[2],a),b)};h.intersectVerticalPlaneAndVerticalCylinder=function({start:a,end:b,type:f},c,d){const l=[];b=n.subtract(B,b,a);var m=n.subtract(E,a,c);c=n.squaredLength(b);const g=2*n.dot(b,m);d=n.squaredLength(m)-d*d;d=g*g-4*c*d;0===d?(c=-g/(2*c),(f===h.VerticalPlaneType.PLANE||0<=c)&&l.push(n.scaleAndAdd(v.create(),a,b,c))):0<d&&(d=Math.sqrt(d),m=(-g+
d)/(2*c),(f===h.VerticalPlaneType.PLANE||0<=m)&&l.push(n.scaleAndAdd(v.create(),a,b,m)),c=(-g-d)/(2*c),(f===h.VerticalPlaneType.PLANE||0<=c)&&l.push(n.scaleAndAdd(v.create(),a,b,c)));return l};h.intersectVerticalPlanes=function(a,b){a=A(F,0,a);b=A(V,0,b);return L(a,b).map(([f,c])=>v.fromValues(f,c))};h.isClose=t;h.isPointInsidePlane=D;h.pointToLineLikeDistance=K;h.pointToVerticalCylinderDistance=function(a,b,f){return n.distance(a,b)-f};h.pointToVerticalPlaneDistance=function(a,b){return K(A(F,a[2],
b),a)};h.pointsInsidePlane=function(a,b){return b.filter(f=>D(a,f))};h.projectPointToLineLike=J;h.projectPointToVerticalCylinder=function(a,b,f){const c=n.subtract(B,a,b);var d=n.length(c);f=0===d?1:f/d;d=k.create();n.scaleAndAdd(d,b,c,f);d[2]=a[2];return d};h.projectPointToVerticalPlane=function(a,b){return J(a,A(F,a[2],b))};h.vectorsHaveCloseZ=function(a,b){return t(a[2],b[2])};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});