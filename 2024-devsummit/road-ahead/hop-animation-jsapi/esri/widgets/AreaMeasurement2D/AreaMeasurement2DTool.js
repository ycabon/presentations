// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("exports ../../chunks/tslib.es6 ../../geometry ../../Graphic ../../intl ../../symbols ../../core/colorUtils ../../core/maybe ../../core/reactiveUtils ../../core/unitFormatUtils ../../core/unitUtils ../../core/accessorSupport/decorators/property ../../core/has ../../core/Logger ../../core/RandomLCG ../../core/accessorSupport/decorators/subclass ../../geometry/geometryEngine ../../geometry/projection ../../geometry/support/geodesicUtils ../../layers/GraphicsLayer ../../views/ViewingMode ../../views/draw/Draw ../../views/interactive/dragEventPipeline ../../views/interactive/GraphicManipulator ../../views/interactive/InteractiveToolBase ../../intl/messages ../../intl/locale ../../geometry/Point ../../symbols/SimpleFillSymbol ../../symbols/SimpleLineSymbol ../../symbols/TextSymbol ../../symbols/Font ../../symbols/SimpleMarkerSymbol ../../geometry/Polyline ../../geometry/SpatialReference ../../geometry/Polygon".split(" "),
function(h,p,X,u,Y,Z,t,w,x,r,A,q,aa,ba,ca,K,l,m,g,B,L,M,y,N,O,C,P,D,Q,R,S,T,E,F,v,U){function V(a,b,f){var d={style:"circle",color:t.multiplyOpacity(b.effectiveTheme.accentColor,.5),outline:{type:"simple-line",width:0}};const e=new E({...d,size:8});d=new E({...d,size:12});a=new u({geometry:a,symbol:e});return new N.GraphicManipulator({view:b,layer:f,graphic:a,focusedSymbol:d})}function G(a,b,f){if(2===a.length)return a=new F({paths:a,spatialReference:b}),b?.isGeographic?g.isSupported(b)?b=g.geodesicDensify(a,
1E5):(a=m.project(a,v.WGS84),a=g.geodesicDensify(a,1E5),b=m.project(a,b)):b?.isWebMercator?b=l.geodesicDensify(a,1E5,"meters"):l.planarLength(a,"meters")>=(f??Infinity)?(a=m.project(a,v.WGS84),a=g.geodesicDensify(a,1E5),b=m.project(a,b)):b=a,{measurement:null,fillGeometry:null,outlineGeometry:b};a.push(a[0]);var d=new F({paths:[a],spatialReference:b}),e=new U({rings:[a],spatialReference:b});let c=a=null;if(b?.isGeographic)if(g.isSupported(b)){a=g.geodesicDensify(d,1E5);c=g.geodesicDensify(e,1E5);
c=l.simplify(c);if(!c)return null;e=g.geodesicLengths([d],"meters")[0];d=g.geodesicAreas([c],"square-meters")[0]}else{a=v.WGS84;d=m.project(d,a);e=m.project(e,a);a=g.geodesicDensify(d,1E5);c=g.geodesicDensify(e,1E5);c=l.simplify(c);if(!c)return null;e=g.geodesicLengths([d],"meters")[0];d=g.geodesicAreas([c],"square-meters")[0];a=m.project(a,b);c=m.project(c,b)}else if(b?.isWebMercator){a=l.geodesicDensify(d,1E5,"meters");c=l.geodesicDensify(e,1E5,"meters");c=l.simplify(c);if(!c)return null;e=l.geodesicLength(d,
"meters");d=l.geodesicArea(c,"square-meters")}else{const n=l.planarLength(d,"meters");if(n>=(f??Infinity)){a=v.WGS84;d=m.project(d,a);e=m.project(e,a);a=g.geodesicDensify(d,1E5);c=g.geodesicDensify(e,1E5);c=l.simplify(c);if(!c)return null;e=g.geodesicLengths([d],"meters")[0];d=g.geodesicAreas([c],"square-meters")[0];a=m.project(a,b);c=m.project(c,b)}else{a=d;c=l.simplify(e);if(!c)return null;e=n;d=l.planarArea(c,"square-meters")}}return{measurement:{geometry:c,area:d,perimeter:e},fillGeometry:c,outlineGeometry:a}}
function H(a){if(!a)return!1;const {isGeographic:b,isWebMercator:f,isWGS84:d}=a;return b&&!d&&!g.isSupported(a)||!b&&!f}function I(a,b,f){if(!b||!a)return null;const d={area:null,perimeter:null},{area:e,perimeter:c}=b;switch(f){case "metric":d.area=r.formatMetricArea(a,e,"square-meters");break;case "imperial":d.area=r.formatImperialArea(a,e,"square-meters");break;default:b=A.convertUnit(e,"square-meters",f),d.area=r.formatDecimal(a,b,f)}if(f=W(f))switch(f){case "metric":d.perimeter=r.formatMetricLength(a,
c,"meters");break;case "imperial":d.perimeter=r.formatImperialLength(a,c,"meters");break;default:b=A.convertUnit(c,"meters",f),d.perimeter=r.formatDecimal(a,b,f)}else d.perimeter="";return d}function W(a){switch(a){case "metric":return"metric";case "imperial":return"imperial";case "square-inches":return"inches";case "square-feet":return"feet";case "square-yards":return"yards";case "square-miles":return"miles";case "square-us-feet":return"us-feet";case "square-meters":return"meters";case "square-kilometers":return"kilometers";
case "acres":return"imperial";case "ares":case "hectares":return"metric";case "square-millimeters":return"millimeters";case "square-centimeters":return"centimeters";case "square-decimeters":return"decimeters";default:return null}}h.AreaMeasurement2DTool=class extends O.InteractiveToolBase{constructor(a){super(a);this._drawActive=!1;this._measurementLayer=new B({internal:!0,listMode:"hide",visible:!1});this._manipulatorLayer=new B({internal:!0,listMode:"hide",visible:!1});this._vertices=[];this.measurementLabel=
this.measurement=this.geodesicDistanceThreshold=null}initialize(){C.fetchMessageBundle("esri/core/t9n/Units").then(b=>{this.messages=b});this.addHandles(P.onLocaleChange(async()=>{this.messages=await C.fetchMessageBundle("esri/core/t9n/Units")}));const a=this.view;this._draw=new M({view:a});a.map.addMany([this._measurementLayer,this._manipulatorLayer]);a.focus();this.addHandles([x.watch(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updateGraphics()},x.initial),x.watch(()=>
[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(this._vertices.length){var b=this._vertices.map(({coord:f})=>f);for(const {handle:f}of this._vertices)f.remove();this._vertices=[];this._measurementLayer.removeAll();this._manipulatorLayer.removeAll();this.manipulators.removeAll();this._updateSketch(b)}})])}destroy(){const {map:a}=this.view;this._draw.view=null;this._draw=w.destroyMaybe(this._draw);a.removeMany([this._measurementLayer,this._manipulatorLayer]);this._measurementLayer.removeAll();
this._manipulatorLayer.removeAll();this._set("measurement",null);this._set("measurementLabel",null);this._measurementLayer=w.destroyMaybe(this._measurementLayer);this._manipulatorLayer=w.destroyMaybe(this._manipulatorLayer);this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(a){this._set("editable",a);a||this._draw.reset()}onActivate(){this._drawActive||0!==this._vertices.length||this._startSketch()}onShow(){this._measurementLayer.visible=!0;this._manipulatorLayer.visible=
!0}onHide(){this._measurementLayer.visible=!1;this._manipulatorLayer.visible=!1}reset(){this.manipulators.removeAll();this._resetVertices();this._measurementLayer.removeAll();this._manipulatorLayer.removeAll();this._set("measurement",null);this._set("measurementLabel",null);this._draw.reset();this._drawActive=!1}_resetVertices(){for(const {handle:a}of this._vertices)a.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const a=this._draw.create("polyline",{mode:"click"});a.on("vertex-add vertex-update vertex-remove cursor-update undo redo".split(" "),
b=>this._updateSketch(b.vertices));a.on("draw-complete",()=>this._stopSketch())}_stopSketch(){3>this._vertices.length?(this.reset(),this._startSketch()):(this.manipulators.forEach(({manipulator:a})=>{a.interactive=!0}),this._drawActive=!1,this.finishToolCreation())}_updateSketch(a){const b=this.view.spatialReference;if(b&&(!H(b)||m.isLoaded())){for(;this._vertices.length>a.length;){const {handle:e,manipulator:c}=this._vertices.pop();e.remove();this.manipulators.remove(c)}for(let e=this._vertices.length;e<
a.length;e++){const [c,n]=a[e];var f=new D({x:c,y:n,spatialReference:b});f=V(f,this.view,this._manipulatorLayer);this.manipulators.add(f);var d=y.createManipulatorDragEventPipeline(f,(k,z)=>{z.next(y.screenToMap(this.view)).next(y.dragGraphic(k.graphic,L.ViewingMode.Local)).next(()=>{const J=k.graphic.geometry;this._vertices[e].coord=[J.x,J.y];this._updateGraphics()})});this._vertices.push({manipulator:f,coord:[c,n],handle:d})}if(this._vertices.length){f=this._vertices.length-1;d=this._vertices[f];
const [e,c]=a[f];if(d.coord[0]!==e||d.coord[1]!==c)d.coord=[e,c],d.manipulator.graphic.geometry=new D({x:e,y:c,spatialReference:b});const n=this._drawActive?this._vertices[f].manipulator:null;this.manipulators.forEach(({manipulator:k})=>{k.interactive=null==n||k!==n})}this._updateGraphics()}}_updateGraphics(){if(2>this._vertices.length)this._measurementLayer.removeAll();else{var a=this._vertices.map(({coord:z})=>z);if(a=G(a,this.view.spatialReference,this.geodesicDistanceThreshold)){var {measurement:b,
fillGeometry:f,outlineGeometry:d}=a;this._set("measurement",b);a=b?I(this.messages,b,this.unit):null;this._set("measurementLabel",a);if(f||d){var {graphics:e}=this._measurementLayer;var c=3===e.length;({effectiveTheme:k}=this.view);if(c){c=e.at(0);var n=e.at(1);var k=e.at(2)}else c=new u({symbol:new Q({color:t.multiplyOpacity(k.accentColor,.3),outline:null})}),n=new u({symbol:new R({color:k.accentColor,width:2})}),k=new u({symbol:new S({color:k.textColor,font:new T({size:14,family:"sans-serif"}),
haloColor:t.multiplyOpacity(t.getContrast(k.textColor,t.BrightnessThreshold.Low),.5),haloSize:2})}),e.removeAll(),e.addMany([c,n,k]);c.geometry=f;n.geometry=d;k.geometry=f?.centroid;k.symbol.text=a?.area??""}}}}};p.__decorate([q.property()],h.AreaMeasurement2DTool.prototype,"_drawActive",void 0);p.__decorate([q.property({readOnly:!0})],h.AreaMeasurement2DTool.prototype,"cursor",null);p.__decorate([q.property({value:!0})],h.AreaMeasurement2DTool.prototype,"editable",null);p.__decorate([q.property({type:Number})],
h.AreaMeasurement2DTool.prototype,"geodesicDistanceThreshold",void 0);p.__decorate([q.property({readOnly:!0})],h.AreaMeasurement2DTool.prototype,"measurement",void 0);p.__decorate([q.property({readOnly:!0})],h.AreaMeasurement2DTool.prototype,"measurementLabel",void 0);p.__decorate([q.property()],h.AreaMeasurement2DTool.prototype,"messages",void 0);p.__decorate([q.property()],h.AreaMeasurement2DTool.prototype,"unit",void 0);p.__decorate([q.property({constructOnly:!0})],h.AreaMeasurement2DTool.prototype,
"view",void 0);h.AreaMeasurement2DTool=p.__decorate([K.subclass("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],h.AreaMeasurement2DTool);h.createAreaMeasurementInfo2D=G;h.createAreaMeasurementLabel=I;h.isProjectionEngineRequired=H;h.isSupported=function(a){return null!=a};Object.defineProperty(h,Symbol.toStringTag,{value:"Module"})});