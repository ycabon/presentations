// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../chunks/tslib.es6 ../../assets ../../Graphic ../../intl ../../core/Collection ../../core/Error ../../core/Evented ../../core/Logger ../../core/reactiveUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/decorators/cast ../../core/RandomLCG ../../core/has ../../core/accessorSupport/decorators/subclass ../../geometry/Point ../../geometry/projection ../../symbols/PictureMarkerSymbol ./support/Conversion ./support/coordinateConversionUtils ./support/formatUtils ../support/GoTo ../../intl/locale ../../intl/messages".split(" "),
function(e,y,z,d,p,k,A,q,l,f,B,K,L,C,v,D,E,r,w,t,F,u,G){async function x(a,b){try{a.position=await a.format?.convert(b)}catch(c){a.position=null}return a}const H=new v([0,0,500]),I="mgrs utm usng dd dms ddm".split(" ");d=class extends F.GoToMixin(A.EventedAccessor){constructor(a){super(a);this._locationGraphic=this._conversionPromise=null;this._pointerCount=0;this.conversions=new p;this.formats=new p;this.formatterAvailable=!1;this.messages=null;this.filteredFormats=new p;this.locationSymbol=new E({url:y.getAssetUrl("esri/images/search/search-symbol-32.png"),
width:24,height:24});this.storageEnabled=!0;this.storageType="session";this.view=null;this._saveWidgetState=this._saveWidgetState.bind(this);this._handleFormatChange=this._handleFormatChange.bind(this);this._handleConversionChange=this._handleConversionChange.bind(this);this._handleViewChange=this._handleViewChange.bind(this);this._onClick=this._onClick.bind(this);this._onPointerMove=this._onPointerMove.bind(this);this._onPointerDown=this._onPointerDown.bind(this);this._onPointerUp=this._onPointerUp.bind(this)}initialize(){const a=
async()=>this.messages=await G.fetchMessageBundle("esri/widgets/CoordinateConversion/t9n/CoordinateConversion");this.formats.addMany(t.generateDefaultFormats());a().then(()=>{if(!this.destroyed&&(t.setDefaultPatterns(this.messages,this.formats),this.storageEnabled&&this._loadWidgetState(),this.formats.forEach(b=>{b.viewModel=this;this.addHandles(l.watch(()=>b.currentPattern,this._saveWidgetState),b.name??"unnamed-format")}),this.addHandles(this.conversions.on("change",this._handleConversionChange),
"conversions"),this.addHandles(this.formats.on("change",this._handleFormatChange),"formats"),this.addHandles(u.onLocaleChange(()=>{a().then(()=>{t.setDefaultPatterns(this.messages,this.formats)})})),D.load().then(()=>{this.formatterAvailable=!0}).catch(b=>{q.getLogger(this).error(new k("coordinate-conversion:projection-load-failed","Failed to load the projection module.",{error:b}));this.formatterAvailable=!1;this._filterFormatsAndConversions()}).then(()=>this.addHandles(l.watch(()=>this.view,this._handleViewChange,
l.initial),"view-change")),0===this.conversions.length)){const b=this.formats.find(c=>"xy"===c.name)||this.formats.at(0);this.conversions.add(new r({format:b}))}})}destroy(){this.removeHandles();this._cleanUpView(this.view);this.view=null}castConversions(a){return this._castToConversions(a)}set currentLocation(a){this._set("currentLocation",a);this._updateConversions()}get currentLocation(){return this._get("currentLocation")||null}set mode(a){switch(a){case "capture":this.currentLocation=null;this._startCaptureMode();
this._set("mode",a);break;case "live":this._startLiveMode(),this._set("mode",a)}}get mode(){return this._get("mode")||"live"}get state(){const {messages:a,view:b}=this;return a?b?.ready?"ready":b?"loading":"disabled":"disabled"}get storage(){const {storageType:a}=this;return"session"===a?sessionStorage:localStorage}get waitingForConversions(){return null!=this._conversionPromise}setLocation(a){this._locationGraphic&&this.view?.graphics.remove(this._locationGraphic);a&&(a=a.clone(),a.hasZ&&(a.z=void 0),
this._locationGraphic=new z({geometry:a,symbol:this.locationSymbol}),this.view?.graphics.add(this._locationGraphic))}async convert(a,b){if(!w.isValidPoint(b))throw new k("coordinate-conversion:invalid-point","Invalid point cannot be converted.",{point:b});return Promise.resolve().then(()=>a.convert(b))}async goToLocation(a){var {view:b}=this;if(!b)throw new k("coordinate-conversion:go-to-failed","no view");var c="3d"===b.type?b.clippingArea:null;b=b.map?.basemap?.baseLayers;if(c||0<b?.length)if(c=
c??b.at(0)?.fullExtent,null!=c&&!c.contains(a))throw new k("coordinate-conversion:go-to-failed","Point outside basemap extent.",{point:a});return this.callGoTo({target:a})}pause(){this.currentLocation=null;this.removeHandles("view");this.view&&(this.view.cursor="default",this._locationGraphic&&this.view.graphics.remove(this._locationGraphic))}async previewConversion(a,b=this.currentLocation||H){return(await x(a,b)).displayCoordinate}resume(){"capture"===this.mode?this._startCaptureMode():this._startLiveMode()}reverseConvert(a,
b){return b.reverseConvert(a)}async updateConversions(a,b){if("point"!==b?.type)throw this._clearConversions(this.conversions),new k("coordinate-conversion:invalid-input-point","Point is invalid, conversions cannot be updated.",{point:b});return this._convertMany(a,b)}_castToConversions(a){const b=new p;a.forEach(c=>{let g=null;if(c instanceof r)g=c;else if("string"===typeof c){const n=this.formats.find(m=>m.name===c);n&&(g=new r({format:n}))}g&&b.add(g)});return b}_cleanUpView(a){a&&(this._locationGraphic&&
a.graphics.remove(this._locationGraphic),this.removeHandles("view"),a.cursor="default")}_clearConversions(a){a.forEach(b=>{b.position={location:null,coordinate:null}})}async _convertMany(a,b){return Promise.all(a.map(c=>x(c,b)))}_handleConversionChange(a){for(const b of a.added)({format:a}=b),a&&(a.viewModel=this,this.currentLocation&&(this._set("waitingForConversions",!0),this.convert(a,this.currentLocation).then(c=>{b.position=c;this._set("waitingForConversions",!1)})));this._saveWidgetState()}_handleFormatChange(a){a.added.forEach(b=>
{this.addHandles(l.watch(()=>b.currentPattern,this._saveWidgetState),b.name??"unnamed-format");b.viewModel=this});a.removed.forEach(b=>{b.viewModel=null;const c=this.conversions.filter(g=>g.format===b);this.conversions.removeMany(c);b.name&&this.removeHandles(b.name)})}_loadWidgetState(){try{const a=JSON.parse(this.storage.getItem("esri__coordinateConversionWidgetState"));a&&this._setWidgetState(a)}catch(a){q.getLogger(this).error(new k("coordinate-conversion:invalid-session-storage-json","Could not read from storage.",
{error:a}))}}_startCaptureMode(){this.removeHandles("view");this.view&&(this.view.cursor="crosshair",this.currentLocation&&this.setLocation(this.currentLocation),this.addHandles(this.view.on("click",this._onClick),"view"))}_startLiveMode(){this._pointerCount=0;this.removeHandles("view");this.view&&(this.view.cursor="default",this._locationGraphic&&this.view.graphics.remove(this._locationGraphic),this.addHandles([this.view.on("pointer-down",this._onPointerDown),this.view.on("pointer-up",this._onPointerUp),
this.view.on("pointer-move",this._onPointerMove)],"view"))}_handleViewChange(a,b){b&&b!==a&&this._cleanUpView(b);a&&("capture"===this.mode?this._startCaptureMode():this._startLiveMode(),b&&this._filterFormatsAndConversions())}_onClick(a){0===a.button&&(a=this.view?.toMap(a)?.normalize(),this.setLocation(a),this.currentLocation=a)}_onPointerDown(a){const {pointerType:b}=a;this._pointerCount++;"touch"!==b&&"pen"!==b||1!==this._pointerCount||(this.currentLocation=this.view?.toMap(a)?.normalize())}_onPointerMove(a){const {pointerType:b}=
a;if("mouse"===b||1===this._pointerCount)this.currentLocation=this.view?.toMap(a)?.normalize()}_onPointerUp(){this._pointerCount--}_setWidgetState(a){try{a.formats.forEach(b=>{const c=this.formats.find(g=>g.name===b.name);c&&a.locale===u.getLocale()&&b.currentPattern&&(c.currentPattern=b.currentPattern);c&&0<=b.index&&this.conversions.add(new r({format:c}))})}catch(b){q.getLogger(this).warn(new k("coordinate-conversion:session-storage-read-error","Could not get widget state from stored JSON.",{error:b}))}}_saveWidgetState(){if(this.storageEnabled){var a=
this._toJSON();try{this.storage.setItem("esri__coordinateConversionWidgetState",JSON.stringify({formats:a,locale:u.getLocale()}))}catch(b){q.getLogger(this).error(new k("coordinate-conversion:local-storage-write-error","Could not write to localStorage.",{error:b}))}}}async _updateConversions(){try{await this.updateConversions(this.conversions.toArray(),this.currentLocation)}catch{}}_toJSON(){return this.formats.filter(a=>{a=a.name;return"xy"===a||"basemap"===a||w.isSupportedNotation(a)}).map(a=>({name:a.name,
currentPattern:a.currentPattern,defaultPattern:a.defaultPattern,index:this.conversions.findIndex(b=>b.format===a)})).sort((a,b)=>a.index-b.index).toArray()}_filterFormatsAndConversions(){const {formatterAvailable:a,conversions:b,formats:c}=this;a||this.addHandles(l.when(()=>this.view?.spatialReference,g=>{const n=g.isWebMercator||g.isWGS84,m=c.filter(h=>{({name:h}=h);return I.includes(h)?!0:"xy"===h?!n:!1});g=this.filteredFormats.filter(h=>"xy"===h.name&&n&&!this.formats.includes(h));const J=b.filter(h=>
m.includes(h.format));c.removeMany(m);b.removeMany(J);this.filteredFormats.addMany(m.filter(h=>!this.filteredFormats.includes(h)));c.addMany(g)},{once:!0,initial:!0}),"view")}};e.__decorate([f.property()],d.prototype,"conversions",void 0);e.__decorate([B.cast("conversions")],d.prototype,"castConversions",null);e.__decorate([f.property({type:v})],d.prototype,"currentLocation",null);e.__decorate([f.property()],d.prototype,"formats",void 0);e.__decorate([f.property()],d.prototype,"messages",void 0);
e.__decorate([f.property()],d.prototype,"mode",null);e.__decorate([f.property()],d.prototype,"filteredFormats",void 0);e.__decorate([f.property({readOnly:!0})],d.prototype,"state",null);e.__decorate([f.property()],d.prototype,"locationSymbol",void 0);e.__decorate([f.property({readOnly:!0,dependsOn:["storageType"]})],d.prototype,"storage",null);e.__decorate([f.property()],d.prototype,"storageEnabled",void 0);e.__decorate([f.property()],d.prototype,"storageType",void 0);e.__decorate([f.property({readOnly:!0})],
d.prototype,"waitingForConversions",null);e.__decorate([f.property()],d.prototype,"view",void 0);return d=e.__decorate([C.subclass("esri.widgets.CoordinateConversion.CoordinateConversionViewModel")],d)});