// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.29/esri/copyright.txt for details.
//>>built
define("../../chunks/tslib.es6 ../../geometry ../../Graphic ../../core/arrayUtils ../../core/Collection ../../core/deprecate ../../core/Evented ../../core/JSONSupport ../../core/Logger ../../core/mathUtils ../../core/maybe ../../core/reactiveUtils ../../core/accessorSupport/decorators/property ../../core/accessorSupport/ensureType ../../core/has ../../core/accessorSupport/decorators/subclass ../../geometry/Extent ../../geometry/geometryEngine ../../geometry/support/webMercatorUtils ../../layers/GraphicsLayer ../../layers/ImageryTileLayer ../../layers/orientedImagery/queries ../../layers/orientedImagery/core/bestImageUtils ../../layers/orientedImagery/core/coverageUtils ../../layers/orientedImagery/transformations/groundToImageUtils ../../layers/orientedImagery/transformations/imageToGroundUtils ../../layers/support/RasterFunction ../../layers/support/rasterFunctionConstants ../../layers/support/TileInfo ../../layers/support/rasterDatasets/RasterFactory ../../rest/support/AttachmentQuery ../../views/MapView ../../views/2d/viewpointUtils ../../views/input/InputManager ../../views/support/projectionUtils ./constants ./symbols ./utils ../../geometry/Polygon ../../geometry/Point ../../geometry/SpatialReference".split(" "),
function(g,e,z,M,A,N,W,O,H,K,u,n,h,P,na,X,Y,E,Z,aa,ba,ca,da,I,Q,R,ea,S,fa,ha,ia,ja,ka,la,ma,y,B,F,G,L,T){e=class extends W.EventedAccessor{constructor(a){super(a);this.additionalFeatures=new A;this.determineWorkflowForFeature=async()=>{const {currentBestFeature:b,selectedPoint:c}=this;!b&&this._currentImage&&(this._imageViewer?.map.layers.remove(this._currentImage),this._currentImage=u.destroyMaybe(this._currentImage));if(b&&c){this._initialCurrentCoverageUpdate=!0;this._updatePointsAndPolygons();
this._fetchFeaturesController??(this._fetchFeaturesController=new AbortController);const {signal:d}=this._fetchFeaturesController;await this.loadImage(b,{signal:d}).finally(async()=>{this._fetchFeaturesController=null})}};this.drawFootprint=()=>{this._initialCurrentCoveragePolygon&&this.updateCurrentCoveragePolygon(this._initialCurrentCoveragePolygon)};this.layer=null;this.shouldShowSelectedImage=!1;this.coverageFrustums=new A;this.coveragePolygons=new A;this.currentCoverageVisible=!0;this.disabled=
!1;this.displayMessage=null;this.pointSources=new A;this.previousFeatureAngle=0;this.currentBestFeature=null;this.bestFeatureAngle=0;this.selectedPoint=null;this.features=new A;this.isAdditionalPointSourcesVisible=this.isAdditionalCoverageVisible=!1;this.localPort=null;this.mapImageConversionToolState=!1;this.navigatorCurrentBestFeature=null;this.updateFootprint=async b=>{if(this._currentImage){var c=new AbortController,{signal:d}=c;this._updateCoverageController=c;c=this.currentBestFeature?.attributes.objectId;
var k=this._currentImage.serviceRasterInfo;b.forEach(l=>{l.x=(l.x-k.extent.xmin)/k.pixelSize.x;l.y=(k.extent.ymax-l.y)/k.pixelSize.y});b=(await R.transformPoints(b,{feature:this.currentBestFeature,currentCoveragePolygon:this.getCurrentBestFeaturePolygon(),imageProperties:this._currentImage.serviceRasterInfo,options:{signal:d}})).filter(M.isSome);b.length&&!d.aborted&&(d=[b.map(({x:l,y:f})=>[l,f,1])],d[0].push(d[0][0]),d=new G({hasZ:!0,rings:d,spatialReference:b[0].spatialReference}),this.updateCurrentCoveragePolygon(new z({attributes:{imageID:c},
geometry:d,symbol:B.activePolygonSymbol,visible:this.currentCoverageVisible})))}};this._additionalCoveragePolygons=new A;this._additionalFeatureGraphics=new A;this._initialCurrentCoveragePolygon=this._imageViewer=this._fetchFeaturesController=this._currentImage=this._currentCoveragePolygon=null;this._initialCurrentCoverageUpdate=!0;this._overlays=new aa({listMode:"hide",internal:!0});this._sectorData=this._referencePointOnImage=this._referencePointOnGround=null;this._zoomedOut=!1;this._suitabilities=
this._panConstraint=this._crossSymbol=null;this._transformController=new AbortController;this._loadOptions=this._updateCoverageController=null;this._imageClickHandler=async b=>{if(0===b.button&&this._currentImage&&b.mapPoint&&this._currentImage?.fullExtent){const {xmin:d,xmax:k,ymin:l,ymax:f}=this._currentImage.fullExtent,{x:m,y:p}=b.mapPoint;if(!(d>m||k<m||f<p||l>p)){this.plotReferencePointOnImage(b.mapPoint);var c=this.currentBestFeature;c&&(b=(await R.transformPoints([b.mapPoint.toJSON()],{feature:c,
currentCoveragePolygon:this.getCurrentBestFeaturePolygon(),imageProperties:this._currentImage.serviceRasterInfo,options:{signal:this._transformController?.signal}}))[0])&&this.plotReferencePointOnGround(b)}}};this._mapImageConversionToolViewClickHandler=b=>{b.stopPropagation();b.preventDefault();b.mapPoint&&this.plotMapPoint(b.mapPoint)};this._viewClickHandler=b=>{if("mouse"!==b.pointerType||0===b.button)b.stopPropagation(),b.preventDefault(),b.mapPoint&&this.loadBestImage(b.mapPoint)};this.handleSectorClick=
this.handleSectorClick.bind(this);this.loadViewer=this.loadViewer.bind(this);this.searchBestImage=this.searchBestImage.bind(this);this.transformAndPlotReferencePointOnImage=this.transformAndPlotReferencePointOnImage.bind(this);this.loadImageUrlOrRaster=this.loadImageUrlOrRaster.bind(this);this.updateSuitabilities=this.updateSuitabilities.bind(this);this.determineWorkflowForFeature=this.determineWorkflowForFeature.bind(this);this.updateCoverage=this.updateCoverage.bind(this);this.selectBestFeature=
this.selectBestFeature.bind(this);this.drawFootprint=this.drawFootprint.bind(this)}initialize(){this.addHandles([n.watch(()=>this.view?.map,(a,b)=>{b?.layers.remove(this._overlays);a?.layers.add(this._overlays)},n.initial),n.watch(()=>this.view?.map?.allLayers?.length,a=>{a&&this.view?.map?.layers.reorder(this._overlays,a-1)},n.initial),n.watch(()=>this.layer?.visible??!1,a=>{this._overlays.visible=a},n.initial),n.watch(()=>[this.state,this.mapImageConversionToolState],()=>{this.removeHandles("view-click");
"disabled"!==this.state&&null!=this.view&&this.addHandles(this.view.on("click",this.mapImageConversionToolState&&"image-loaded"===this.state?this._mapImageConversionToolViewClickHandler:this._viewClickHandler,la.ViewEventPriorities.WIDGET),"view-click")},n.initial),n.watch(()=>this.mapImageConversionToolState,()=>{this.removeHandles("image-click");this.imageLoaded&&this.mapImageConversionToolState&&this.addHandles(this._imageViewer.on("click",this._imageClickHandler),"image-click")}),n.watch(()=>
this.currentBestFeature,(a,b)=>{this.removeHandles("interaction-handles");this.determineWorkflowForFeature(a,b)},{sync:!0}),n.watch(()=>this.currentImageView,()=>{this.view&&this.drawFootprint()},{sync:!0}),n.when(()=>this.currentImageView?.attached&&this._imageViewer.ready,()=>{this.addHandles(n.watch(()=>this._imageViewer?.viewpoint,()=>{this._cancelCurrentCoverageUpdate();this.updateCoverage()}),"interaction-handles")})])}destroy(){this._cancelCurrentCoverageUpdate();this._cancelFetchingFeatures();
this.coverageFrustums.destroy();this.coveragePolygons.destroy();this.pointSources.destroy();this._additionalCoveragePolygons.destroy();this._additionalFeatureGraphics.destroy();this._currentImage=u.destroyMaybe(this._currentImage);this._imageViewer=u.destroyMaybe(this._imageViewer);this._initialCurrentCoveragePolygon=u.destroyMaybe(this._initialCurrentCoveragePolygon);this._currentCoveragePolygon=u.destroyMaybe(this._currentCoveragePolygon);this._crossSymbol=u.destroyMaybe(this._crossSymbol);this._referencePointOnGround=
u.destroyMaybe(this._referencePointOnGround);this._referencePointOnImage=u.destroyMaybe(this._referencePointOnImage);this._overlays&&this.view?.map.remove(this._overlays);this._overlays.destroy()}get activeLayer(){N.deprecatedProperty(H.getLogger(this),"activeLayer",{replacement:"layer"});return this.layer}set activeLayer(a){N.deprecatedProperty(H.getLogger(this),"activeLayer",{replacement:"layer"});this.layer=a}get imagePointsInView(){var a=this._imageViewer?.extent;const b=this._imageViewer?.rotation??
0;var c=this._currentImage?.fullExtent;if(!a||!c)return null;a=E.rotate(G.fromExtent(a),b);c=G.fromExtent(c);a=E.intersect(a,c);const {rings:d,spatialReference:k}=a;this._zoomedOut=E.equals(c,a);return d.flat().map(([l,f])=>new L({x:l,y:f,spatialReference:k}))}get brightness(){return this._get("brightness")??0}set brightness(a){this._set("brightness",K.clamp(a,-10,10))}get contrast(){return this._get("contrast")??0}set contrast(a){this._set("contrast",K.clamp(a,-10,10))}get currentImageView(){return this._imageViewer?.allLayerViews.find(a=>
a.layer===this._currentImage)}get featureCount(){return this.features?.length??0}get imageGalleryEnabled(){return F.isTifOrMrf(this.currentBestFeature?.attributes.imagePath.trim())}get imageLoaded(){return this._currentImage?.loaded??!1}get updating(){return"loading"===this._currentImage?.loadStatus||!!this._fetchFeaturesController}get referencePoint(){return this._referencePointOnGround?.geometry}get sharpness(){return this._get("sharpness")??0}set sharpness(a){this._set("sharpness",K.clamp(a,0,
1))}get sectorData(){const {_sectorData:a}=this;if(a)return y.sectorsInOrder.map(b=>a[b])}get state(){const {layer:a,view:b,_currentImage:c}=this;return this.disabled||!a||b&&!b.ready?"disabled":c?.loadStatus?`image-${c.loadStatus}`:"ready"}get thumbnails(){const {features:a}=this;return a?new A(a.map(({attributes:{imagePath:b,objectId:c}})=>{b=b.trim();return F.isTifOrMrf(b)?{url:b,objectId:c}:null}).filter(M.isSome)):null}set view(a){this._set("view",a)}clearImage(){this._imageViewer&&(this.displayMessage=
null,this._imageViewer.graphics.removeAll(),this._crossSymbol&&(this._imageViewer.graphics.remove(this._crossSymbol),this._crossSymbol.destroy()),this._imageViewer.overlay?.destroy(),this._currentImage&&(this._imageViewer.map.layers.includes(this._currentImage)&&this._imageViewer.map.layers.remove(this._currentImage),this._currentImage=u.destroyMaybe(this._currentImage)))}createPanConstraint(){const {_currentImage:a,_imageViewer:b}=this,c=d=>{if(!a||!b||!d.targetGeometry)return d;var {extent:k}=a.serviceRasterInfo;
const {constraints:l,rotation:f,width:m,height:p}=b;var {extent:q}=E.rotate(G.fromExtent(k),f);const {width:t,height:v}=q;k=d.targetGeometry.clone();const w=l.scaleToZoom(d.scale);var r=1/2**w;const C=m/p;let x=r*t;r*=v;w&&(t/m>v/p?r=x/C:x=r*C);q=q.clone();q.xmin+=x/2;q.xmax-=x/2;q.ymin+=r/2;q.ymax-=r/2;d.targetGeometry=E.nearestCoordinate(q,k).coordinate;return d};return{constrain:c,applyPanConstraint:c}}filterByFootprints(a,b){const c=[],d=[],k=[];a.forEach(l=>{const {layer:{coveragePercent:f},
attributes:m}=l;const {polygon:p,frustum:q}=I.createCoveragePolygon(l);var t=p;m.isInspection&&(t=I.computePolygonForInspection(m));f&&(t=I.resizePolygon(t,f));if(I.checkIfPolygonContainsSelectedPoint(t,b)){k.push(l);l=t.toJSON();t=q?.toJSON();const {cameraHeight:v,cameraHeading:w,location:r,objectId:C}=m,x=O.isSerializable(r)?r.toJSON():r;l.imageID=x.imageID=C;t&&(t.imageID=C);x.z=v;this.pointSources?.push(x);c.push(0<w?l:void 0);d.push(0<w?t:void 0)}});return{features:k,polygons:c,frustums:d}}getCurrentCoveragePolygon(){return this._currentCoveragePolygon}getCurrentBestFeaturePolygon(){return this._initialCurrentCoveragePolygon}handleSectorClick(a){isNaN(a)||
(a=this._sectorData?.[y.sectorsInOrder[a]],a?.length&&this._updateCurrentBestFeature(a.at(0)))}handleFeatureClick(a){const {sector:b,featureIndexInSector:c}=a;isNaN(c)||(a=this._sectorData?.[b],a?.length&&this._updateCurrentBestFeature(a.at(c)))}async loadBestImage(a){this.displayMessage=null;this.selectedPoint=a.spatialReference.isGeographic?Z.geographicToWebMercator(a):a.clone();this.features.removeAll();this.currentBestFeature=null;this.additionalFeatures.removeAll();this._additionalCoveragePolygons.removeAll();
this._additionalFeatureGraphics.removeAll();this._currentCoveragePolygon=u.destroyMaybe(this._currentCoveragePolygon);this._overlays?.removeAll();await this._fetchFeaturesWithController(a)}async loadImageUrlOrRaster(a,b){if(!this._imageViewer)return!1;this._loadOptions=b;({options:b}=b||{});this.clearImage();let c=null,d=null;"string"===typeof a?c=a:d=a;this._currentImage=new ba({ioConfig:{skipExtensions:["aux.xml","jgw"]},url:c,raster:d,options:b});this._imageViewer.map.layers.add(this._currentImage);
try{await this._currentImage.when(k=>{this._updateConstraint(k)},this.loadImageError)}catch(k){return this.loadImageError(k),!1}return!0}loadImageError(a){H.getLogger(this).error("oriented-imagery-viewer:load-image",a);this.setMessage("imageLoadError","error",a.message)}loadViewer(a){const b=new Map;this._imageViewer=new ja({container:a,map:b,spatialReference:T.WebMercator,constraints:{snapToZoom:!1,rotationEnabled:!1},ui:{components:["zoom"]}});n.once(()=>!0===this._imageViewer?.stationary).then(()=>
{this.setMessage("onLoadMessage","info")});this._imageViewer.addHandles([n.watch(()=>this.bestFeatureAngle,(c,d)=>{this.previousFeatureAngle=d??0},n.initial)])}async plotMapPoint(a){this.plotReferencePoint(a);return this.transformAndPlotReferencePointOnImage({feature:this.currentBestFeature,selectedLocation:a,options:{signal:this._transformController?.signal}})}plotReferencePointOnGround(a){this._referencePointOnGround&&(this._overlays?.remove(this._referencePointOnGround),this._referencePointOnGround.destroy());
null!=a&&(this._referencePointOnGround=new z({geometry:{type:"point",...a.toJSON()},symbol:B.diamondSymbol}),this.view?this._overlays?.add(this._referencePointOnGround):this.emit("plot-ground-point",{data:{point:this._referencePointOnGround?.geometry}}))}plotReferencePointOnImage(a){this._imageViewer&&(this._referencePointOnImage&&(this._imageViewer.graphics.remove(this._referencePointOnImage),this._referencePointOnImage.destroy()),this._referencePointOnImage=new z({geometry:{type:"point",...(O.isSerializable(a)?
a.toJSON():a)},symbol:B.diamondSymbol}),this._imageViewer.graphics.add(this._referencePointOnImage))}resetImage(){this._currentImage=u.destroyMaybe(this._currentImage);this.setMessage("onLoadMessage","info");this._cancelCurrentCoverageUpdate();this._cancelFetchingFeatures()}async searchBestImage(a,b){try{const c=await ca.searchImages(a,b);c&&await this._processFeatureResponse(c,{signal:b?.signal})}catch(c){this.setMessage("imageLoadError","error"),H.getLogger(this).error("error occurred while finding best image",
c)}}selectBestFeature(a){this.currentBestFeature=this.features?.find(({attributes:b})=>b.objectId===Number(a))}setAdditionalCameraLocationsVisibility(a){this._additionalFeatureGraphics.forEach(b=>{b.visible=a})}setAdditionalCoverageVisibility(a){this._additionalCoveragePolygons.forEach(b=>{b.visible=a})}setCurrentCoverageVisibility(a){this._currentCoveragePolygon&&(this._currentCoveragePolygon.visible=a);this._currentBestFeatureGraphic&&(this._currentBestFeatureGraphic.visible=a)}setMapImageConversionToolState(a){this.mapImageConversionToolState=
a}async transformAndPlotReferencePointOnImage(a){if(this._imageViewer&&this._currentImage){var {selectedLocation:b,options:c}=a;if(a=await this.transformPoint(b,c))return this.plotReferencePointOnImage(a),{x:a.x,y:a.y}}}updateSuitabilities(a){this._suitabilities=a.sort((b,c)=>b.suitability-c.suitability);a=this._suitabilities.map(b=>b.feature);this._updateFeatures(a);this._groupFeaturesBySectors();this._initialCurrentCoverageUpdate=!0}_cancelFetchingFeatures(a){const b=this._fetchFeaturesController;
b&&b.abort(a);this._fetchFeaturesController=null}_cancelCurrentCoverageUpdate(){const a=this._updateCoverageController;a&&a.abort("Multiple Coverage Updates: Aborting Current Coverage Update to sync image and coverage");this._updateCoverageController=null}async _fetchFeatures(a,b){if(this.view){var c=this.layer;if(c){var d={include:c};if(a=this.view.toScreen(a))d=await this.view.hitTest(a,d),this._processHitTestResults(c,d,b)}}}async _fetchFeaturesWithController(a){this._cancelFetchingFeatures();
const b=new AbortController,{signal:c}=b;this._fetchFeaturesController=b;try{await this._fetchFeatures(a,{signal:c}).finally(()=>{this._fetchFeaturesController=null})}catch(d){this.setMessage("imageLoadError","error"),H.getLogger(this).error("error occurred while fetching features",d)}}_groupFeaturesBySectors(){const {_suitabilities:a,additionalFeatures:b,currentBestFeature:c,features:d}=this;if(a&&b&&c&&d){this._sectorData={};for(var k of y.sectorsInOrder)this._sectorData[k]=new A;k=a.map((m,p)=>
({...m,featureIndex:p}));k.sort((m,p)=>m.trueSuitability-p.trueSuitability);var l=k.map(({distance:m})=>m),f=Math.max(...l);k.forEach(m=>{const {distance:p,angle:q,featureIndex:t}=m;var v=p/f*y.sectorsRadii[2],w=F.calculateSegment(p,f),r=F.calculateDirection(q);if(this._sectorData){m=y.sectorsRadii[3]+v*Math.sin(q*Math.PI/180);v=y.sectorsRadii[3]+v*Math.cos(q*Math.PI/180);var C=d.at(t),x=C===this.currentBestFeature,U=this.currentBestFeature?.attributes.cameraPitch&&5>this.currentBestFeature?.attributes.cameraPitch;
if(x&&U)var D=-90;else{D=m-y.sectorsRadii[3];const J=v-y.sectorsRadii[3];let V=180*Math.acos(J/Math.sqrt(D**2+J**2))/Math.PI;if(0>D&&0>J||0>D&&0<J)V*=-1;D=V}w=""===w?r:`${w}_${r}`;x&&(D===this.bestFeatureAngle?this.previousFeatureAngle=D:this.bestFeatureAngle=D,this.navigatorCurrentBestFeature=U?null:{x:m,y:v,direction:r});r=this._sectorData[w];r.add({angle:q,featureIndex:t,x:m,y:v,objectID:C.attributes.objectId,sector:w,featureIndexInSector:r.length})}})}else this._sectorData=null}async _processFeatureResponse(a,
b){const {selectedPoint:c}=this;if(c&&a&&a)if({features:a}=a,a.length){this.coveragePolygons.removeAll();this.coverageFrustums.removeAll();this.pointSources.removeAll();var {features:d,polygons:k,frustums:l}=this.filterByFootprints(a,c);this.coveragePolygons.addMany(k);this.coverageFrustums.addMany(l);a=this.coveragePolygons?.getItemAt(0);d.length?(d[0].attributes.elevationSource&&!c.z&&a&&(b=await Q.updateElevation([c],{feature:d[0],currentCoveragePolygon:new G(a),options:b}),b[0]&&(c.elevation=
b[0].z)),this._suitabilities=da.calculateSuitabilities({features:d,selectedPoint:c,camera:F.isSceneView(this.view)?this.view.camera:null,currentImage:this.currentBestFeature}),this.updateSuitabilities(this._suitabilities),this.currentBestFeature=this._suitabilities.map(f=>f.feature)[0]):this.setMessage("noImageError","error")}else this.setMessage("noImageError","error"),this.currentBestFeature=null}async _processHitTestResults(a,b,c){const {screenPoint:d,results:[k]}=b;b="graphic"===k?.type&&this.shouldShowSelectedImage;
const l=k?.mapPoint??this.view?.toMap(d);a={layerInstanceOrURL:a,point:l,queryParams:{maximumDistance:a.maximumDistance,objectIds:b?[k.graphic.getAttribute(a.objectIdField)]:void 0},queryFeatures:null};await this.searchBestImage(a,c)}_updateConstraint(a){this._imageViewer&&(this._imageViewer.extent=a.fullExtent,a.raster.rasterInfo.isPseudoSpatialReference&&(this._imageViewer.rotation=(this._loadOptions?.cameraRoll??0)+(this._loadOptions?.imageRotation??0)),this._panConstraint&&this._imageViewer.constraints.customConstraints.remove(this._panConstraint),
this._panConstraint=this.createPanConstraint(),this._imageViewer.constraints.customConstraints.addMany([this._panConstraint]),a.addHandles([n.watch(()=>[this.brightness,this.contrast,this.sharpness],([b,c,d])=>{a.loaded&&(a.effect=`contrast(${10*(c+10)}%) brightness(${10*(b+10)}%)`,this.sharpenImage(a,d))},n.initial),n.watch(()=>{if(this._imageViewer?.ready){var {extent:b}=a.serviceRasterInfo,{width:c,height:d,rotation:k}=this._imageViewer;({extent:b}=E.rotate(G.fromExtent(b),k));var {width:l,height:f}=
b;return Math.max(l/c,f/d)}},b=>{if(this._imageViewer&&null!=b){var {constraints:c,scale:d,spatialReference:k}=this._imageViewer,l=c.minScale,f=ka.getResolutionToScaleFactor(k),m=.25*f;f=b*=f;for(var p=[];f>m;)p.push(f),f/=2;p.push(f);({lods:m}=fa.create({scales:p}));c.set({lods:m,minScale:b});this._imageViewer.scale=1E-6>=Math.abs(d-l)?b:d}},n.syncAndInitial)]))}_updateFeatures(a){a.length?(this.features.removeAll(),this.features.addMany(a),this.currentBestFeature=a[0],1<a.length?this.additionalFeatures.addMany(a.slice(1)):
this.additionalFeatures.removeAll()):(this.currentBestFeature=null,this.additionalFeatures.removeAll())}_updatePointsAndPolygons(){const {coveragePolygons:a,pointSources:b,currentBestFeature:c,currentCoverageVisible:d,isAdditionalCoverageVisible:k,isAdditionalPointSourcesVisible:l}=this;if(a&&b&&c){this._additionalCoveragePolygons.removeAll();this._additionalFeatureGraphics.removeAll();this._currentCoveragePolygon&&(this._currentCoveragePolygon.destroy(),this._initialCurrentCoveragePolygon=this._currentCoveragePolygon=
null);for(const f of a)f?.imageID===c.attributes.objectId?this._initialCurrentCoveragePolygon=new z({attributes:{imageID:f?.imageID},geometry:{type:"polygon",...f},symbol:B.activePolygonSymbol,visible:!1}):this._additionalCoveragePolygons.push(new z({attributes:{imageID:f?.imageID},geometry:{type:"polygon",...f},symbol:B.polygonSymbol,visible:k}));for(const f of b)f.imageID===c.attributes.objectId?this._currentBestFeatureGraphic=new z({attributes:{imageID:f.imageID},geometry:{type:"point",...f},symbol:B.activeSourcePointSymbol,
visible:d}):this._additionalFeatureGraphics?.push(new z({attributes:{imageID:f.imageID},geometry:{type:"point",...f},symbol:B.sourcePointSymbol,visible:l}))}}_updateCurrentBestFeature(a){if(a){this.currentBestFeature=this.features?.at(a.featureIndex);var b=this.currentBestFeature?.attributes.cameraPitch&&5>this.currentBestFeature?.attributes.cameraPitch;if(b)var c=-90;else{c=a.x-y.sectorsRadii[3];const d=a.y-y.sectorsRadii[3];let k=180*Math.acos(d/Math.sqrt(c**2+d**2))/Math.PI;if(0>c&&0>d||0>c&&0<
d)k*=-1;c=k}c===this.bestFeatureAngle?this.previousFeatureAngle=c:this.bestFeatureAngle=c;this.navigatorCurrentBestFeature=b?null:{x:a.x,y:a.y,direction:a.sector.includes("_")?a.sector.split("_")[1]:a.sector}}}async loadImage(a,b){if(this._imageViewer){this._imageViewer.graphics.removeAll();var {cameraRoll:c,imageRotation:d}=a.attributes;this._currentImage&&this._imageViewer?.map.layers.includes(this._currentImage)&&(this._currentImage?.removeHandles("image-handles"),this._imageViewer?.map.layers.remove(this._currentImage),
this._currentImage?.destroy(),this._currentImage=null);if(a){var {horizontalFieldOfView:k,isSpherical:l}=a.attributes;if(360===k||l)this.setMessage("unsupportedPanoramicImageryError","error");else{var f=a.attributes.imagePath;this._referencePointOnGround&&(this._imageViewer?.graphics.remove(this._referencePointOnGround),this._referencePointOnGround.destroy());var m={skipExtensions:["aux.xml","jgw"]};if("FA"===f)if(f=new ia({objectIds:[a.attributes.objectId]}),f=(await a.layer.queryAttachments(f,b))[`${a.attributes.objectId}`],
f[0]?.url){if(a=f[0].contentType.split("/")[1]?.toUpperCase(),f=f[0]?.url,m=await ha.open({ioConfig:m,url:f,datasetFormat:a,...b}).catch(p=>{this.setMessage("imageLoadError","error",p.message);return null}))await this.loadImageUrlOrRaster(m,{cameraRoll:c,imageRotation:d,options:b}),await this.transformAndPlotSelectedLocation(b)}else this.setMessage("noAttachment","error");else await this.loadImageUrlOrRaster(f,{cameraRoll:c,imageRotation:d,options:b}),await this.transformAndPlotSelectedLocation(b)}}else this.setMessage("noImageError",
"error")}}plotReferencePoint(a){"mapPoint"in a?this.plotReferencePointOnGround(a.mapPoint):this.plotReferencePointOnGround(a)}setMessage(a,b,c){this.displayMessage={key:a,type:b,data:c}}sharpenImage(a,b){b=new ea({functionName:"Convolution",functionArguments:{type:S.convolutionKernel.userDefined,cols:3,rows:3,kernel:[0,-1*b,0,-1*b,4*b+1,-1*b,0,-1*b,0],convolutionType:S.convolutionKernel.userDefined}});a.renderer=null;a.rasterFunction=b}async transformAndPlotSelectedLocation(a){const {_currentImage:b,
currentBestFeature:c,selectedPoint:d}=this;d&&c&&b?.loaded&&(a=await this.transformPoint(d,a),this._crossSymbol=new z({geometry:L.fromJSON(a),symbol:B.crossSymbol}),this._imageViewer?.graphics.add(this._crossSymbol))}async transformPoint(a,b){if(this._currentImage&&this._imageViewer&&this.currentBestFeature){var c=this.currentBestFeature,{pixelSize:d,isPseudoSpatialReference:k,transform:l}=this._currentImage.serviceRasterInfo;a=await Q.transformPoints([a],{feature:c,imageProperties:this._currentImage.serviceRasterInfo,
currentCoveragePolygon:this.getCurrentBestFeaturePolygon(),options:b});if(a.length)return a=a[0],b=P.ensureType(Y,await ma.projectWithEngineOrService(this._currentImage.fullExtent,P.ensureType(T,this._imageViewer?.spatialReference),null,b?.signal)),k?(a.x=a.x*d.x+b.xmin,a.y=b.ymax-a.y*d.y,a.spatialReference=b.spatialReference):a=l.forwardTransform(new L(a)),a}}updateCurrentCoveragePolygon(a){if(this._initialCurrentCoverageUpdate)this._overlays?.removeAll(),this._initialCurrentCoverageUpdate=!1,a&&
(this._currentCoveragePolygon&&this._currentCoveragePolygon.destroy(),a.visible=this.currentCoverageVisible,this._currentCoveragePolygon=a),this.view&&(a=this.selectedPoint?new z({geometry:this.selectedPoint.clone(),symbol:B.crossSymbol,attributes:{imageID:this.currentBestFeature?.attributes.objectId}}):null,this._overlays?.graphics.addMany([...this._additionalCoveragePolygons,...this._additionalFeatureGraphics,this._currentCoveragePolygon,this._currentBestFeatureGraphic,a].filter(F.isGraphic)));
else if(this.view){const b=this._currentCoveragePolygon&&this._overlays?this._overlays.graphics.indexOf(this._currentCoveragePolygon):-1;a&&(this._currentCoveragePolygon&&(this._overlays?.remove(this._currentCoveragePolygon),this._currentCoveragePolygon.destroy()),a.visible=this.currentCoverageVisible,this._currentCoveragePolygon=a,this._overlays?.graphics.add(this._currentCoveragePolygon,0<=b?b:void 0))}}async updateCoverage(){const {_currentImage:a,imagePointsInView:b,_imageViewer:c}=this;if(a?.loaded&&
c?.extent&&a.fullExtent&&b){var {pixelSize:d,extent:k}=a.serviceRasterInfo,l=[...b];for(const f of l)f.z=1,f.x=f.x*d.x+k.xmin,f.y=k.ymax-f.y*d.y;this._zoomedOut?this.drawFootprint():this.updateFootprint(l)}}};g.__decorate([h.property()],e.prototype,"activeLayer",null);g.__decorate([h.property()],e.prototype,"additionalFeatures",void 0);g.__decorate([h.property({json:{write:!1}})],e.prototype,"determineWorkflowForFeature",void 0);g.__decorate([h.property()],e.prototype,"drawFootprint",void 0);g.__decorate([h.property()],
e.prototype,"imagePointsInView",null);g.__decorate([h.property()],e.prototype,"layer",void 0);g.__decorate([h.property()],e.prototype,"shouldShowSelectedImage",void 0);g.__decorate([h.property({type:Number})],e.prototype,"brightness",null);g.__decorate([h.property({type:Number})],e.prototype,"contrast",null);g.__decorate([h.property()],e.prototype,"coverageFrustums",void 0);g.__decorate([h.property()],e.prototype,"coveragePolygons",void 0);g.__decorate([h.property()],e.prototype,"currentCoverageVisible",
void 0);g.__decorate([h.property({readOnly:!0})],e.prototype,"currentImageView",null);g.__decorate([h.property()],e.prototype,"disabled",void 0);g.__decorate([h.property()],e.prototype,"displayMessage",void 0);g.__decorate([h.property()],e.prototype,"pointSources",void 0);g.__decorate([h.property()],e.prototype,"previousFeatureAngle",void 0);g.__decorate([h.property()],e.prototype,"currentBestFeature",void 0);g.__decorate([h.property()],e.prototype,"bestFeatureAngle",void 0);g.__decorate([h.property()],
e.prototype,"selectedPoint",void 0);g.__decorate([h.property({readOnly:!0})],e.prototype,"featureCount",null);g.__decorate([h.property()],e.prototype,"features",void 0);g.__decorate([h.property({readOnly:!0})],e.prototype,"imageGalleryEnabled",null);g.__decorate([h.property({readOnly:!0})],e.prototype,"imageLoaded",null);g.__decorate([h.property()],e.prototype,"isAdditionalCoverageVisible",void 0);g.__decorate([h.property()],e.prototype,"isAdditionalPointSourcesVisible",void 0);g.__decorate([h.property({type:Number})],
e.prototype,"localPort",void 0);g.__decorate([h.property()],e.prototype,"mapImageConversionToolState",void 0);g.__decorate([h.property()],e.prototype,"navigatorCurrentBestFeature",void 0);g.__decorate([h.property({readOnly:!0})],e.prototype,"updating",null);g.__decorate([h.property()],e.prototype,"referencePoint",null);g.__decorate([h.property({type:Number})],e.prototype,"sharpness",null);g.__decorate([h.property({readOnly:!0})],e.prototype,"sectorData",null);g.__decorate([h.property({readOnly:!0})],
e.prototype,"state",null);g.__decorate([h.property({readOnly:!0})],e.prototype,"thumbnails",null);g.__decorate([h.property()],e.prototype,"updateFootprint",void 0);g.__decorate([h.property({value:null})],e.prototype,"view",null);g.__decorate([h.property()],e.prototype,"_additionalCoveragePolygons",void 0);g.__decorate([h.property()],e.prototype,"_additionalFeatureGraphics",void 0);g.__decorate([h.property()],e.prototype,"_currentCoveragePolygon",void 0);g.__decorate([h.property()],e.prototype,"_currentImage",
void 0);g.__decorate([h.property()],e.prototype,"_fetchFeaturesController",void 0);g.__decorate([h.property()],e.prototype,"_imageViewer",void 0);g.__decorate([h.property()],e.prototype,"_initialCurrentCoveragePolygon",void 0);g.__decorate([h.property()],e.prototype,"_initialCurrentCoverageUpdate",void 0);g.__decorate([h.property()],e.prototype,"_overlays",void 0);g.__decorate([h.property()],e.prototype,"_referencePointOnGround",void 0);g.__decorate([h.property()],e.prototype,"_referencePointOnImage",
void 0);g.__decorate([h.property()],e.prototype,"_currentBestFeatureGraphic",void 0);g.__decorate([h.property()],e.prototype,"_sectorData",void 0);g.__decorate([h.property()],e.prototype,"_zoomedOut",void 0);return e=g.__decorate([X.subclass("esri.widgets.OrientedImageryViewer.OrientedImageryViewerViewModel")],e)});